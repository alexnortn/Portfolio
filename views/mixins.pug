//- 

    Alex Norton
    a^N 
    http://alexnortn.com

    Pug Mixins for Modular Implementation


//-  Test ~ Hello Mixin ~
mixin users2(users, colour)
    ul
    each user in users
        li(class=colour)= user


//-  Case-Study Preview
    Requires: <data> <index> 
        + route <scr/string>
        + name-preview <string>
        + project-type <string>
        + project-name <string>
        + project-description <string>
        + project-image-preview <src>

mixin caseStudyPreview(data, index)
    .case-study.case-study-window.item.case-study-item&attributes( {'data-inproject': false}, {'data-projectIndex': index}, {'data-project': data.route},  {'id': data.preview} )
        .case-study-overview
            .description
                .description-wrapper
                    h3=data.project_type
                    h2=data.name
                    hr
                    p=data.description.brief
            .hero-box
                .hero.img-load(style=`background-image: url(${data.image_hero})`)


//-  Project-Study Preview
    Requires: <data> <index>
        + route <scr/string>
        + name-preview <string>
        + project-name <string>
        + project-description <string>
        + project-image-preview <src>

mixin projectPreview(data, index)
    li.select-work-item.item.project-item&attributes( {'data-inproject': false}, {'data-projectIndex': index}, {'data-project': data.route}, {'id': data.preview} )
        .select-work-img-container
            .select-work-description
                p.tamer=data.description.brief
                hr
            .select-work-img.img-load(style=`background-image: url(${data.image_preview})`)
        h3 #{data.name}


//-  Endeavor Header
    Requires: <data>
        + route <scr/string>
        + name-preview <string>
        + project-name <string>
        + project-description <string>
        + project-image-preview <src>

mixin endeavorHeader(data)
    .endeavor-overview
        .description
            .description-wrapper
                h3=data.project_type
                h2=data.name
                hr
                p=data.description.brief
        .hero-box.hero-parallax.parallax__group
            .hero.parallax__layer--back.img-load(style=`background-image: url(${data.image_hero})`)


//-  Endeavor Main Description & Meta Info
    Requires: <data.description> <data.meta>
        + project-description <{string}>
        + project-meta <{string}>
            + Client
            + Year
            + Role
            + Team
            + Discipline
            + Medium
            + Technologies
            + Duration

mixin endeavorIntro(data)
    - var description = data.description
    - var meta = data.meta
    .endeavor-intro.cf
        .main-description 
            q=description.brief
            h4 Brief
            p.tamer=description.extensive
            h4 Process
            p.tamer=description.extensive
        .meta-data
            ul
                li Client
                li=meta.Client
            ul
                li Year
                li=meta.Year
            ul
                li Role
                li=meta.Role
            ul
                li Team
                li=meta.Team
            ul
                li Discipline
                li=meta.Discipline
            ul
                li Medium
                li=meta.Medium
            ul
                li Technologies
                li=meta.Technologies
            ul
                li Duration
                li=meta.Duration


//-  Endeavor Project | Full-Width Adaptive Image
    Requires: <datum.img.scr>
    Description: Full-Width Image Element

mixin endeavorImageFS(datum)
    - var image = datum.image
    img.endeavor-item.fsw(src=image.src)


//-  Endeavor Project | Full-Width Adaptive Image
    Requires: <datum.images[[>
    Description: Full-Width Image Elements Array

mixin endeavorImageFSList(data)
    - var images = data.images
    each image, index in images
        img.endeavor-item.fsw(src=image.src)


//-  Endeavor Project | Full-Width Adaptive Youtube Video
    Requires: <datum.src>
    Description: Full-Width Embed Video Element

mixin endeavorVideoFS(datum)
    - var video = datum.video
    iframe.endeavor-item.media-settings.media-frame.video-settings(src=video.src frameborder="0" allowfullscreen)


//-  Endeavor Project | Full-Width Adaptive Issuu Digital Publication
    Requires: <datum.src>
    Description: Full-Width Embeded Digital Publication

mixin endeavorPubFS(datum)
    - var pub = datum.pub
    iframe.endeavor-item.media-settings.media-frame.pub-settings(src=pub.src frameborder="0" allowfullscreen)


//-  Endeavor Project | End Pad
    Requires: {} --> Could extend for modularity (see <endeavor.styl)
    Description: empty div to provide padding

mixin endeavorEndPad()
    .end-pad.end-pad-100


//-  Endeavor Parallax Images Left
    Requires: <data.pullQuote> <data.image[0], data.image[1]>
    Description: Self-Containing parallax element with two left image and a flush-right pull quote

mixin endeavorTwoImageParallaxLeft(data)
    - var image1 = data.image1
    - var image2 = data.image2
    - var pullQuote = data.pullQuote
    .endeavor-para-box.parallax__group
        blockquote.left.parallax__layer.parallax__layer--fore=pullQuote
        .endeavor-image-box.endeavor-item-top.endeavor-item-bottom-small.img-load(style=`background-image: url(${image1.src})`)
        .endeavor-image-box.endeavor-item-bottom-big.img-load(style=`background-image: url(${image2.src})`)


//-  Endeavor Parallax Images Right
    Requires: <data.pullQuote> <data.image[0], data.image[1]>
    Description: Self-Containing parallax element with two left image and a flush-left pull quote

mixin endeavorTwoImageParallaxRight(data)
    - var image1 = data.image1
    - var image2 = data.image2
    - var pullQuote = data.pullQuote
    .endeavor-para-box.parallax__group   
        .endeavor-image-box.endeavor-item-top.endeavor-item-bottom-small.right.img-load(style=`background-image: url(${image1.src})`)
        .endeavor-image-box.right.endeavor-item-bottom-big.img-load(style=`background-image: url(${image2.src})`)
        blockquote.right.parallax__layer.parallax__layer--fore=pullQuote


//-  Endeavor Image Grid Iterator
    Requires: <data.images[]> <data.images_preview[]>
    Description: Self-Containing element for displaying up to [ 7 ] images in an interacive slider

mixin endeavorImageGridIterator(data)
    - var images = data.images
    .endeavor-item-big.grid.image-grid-wrapper
        .grid-slider.slider-transition
            each image, i in images
                    img.big-moment-3-color(src=`${image.src}`)
        each image, i in images
            .image-grid-container.bounce&attributes({'data-slide': i})
                .image-grid.img-load(style=`background-image: url(${image.src_preview})`)


//-  Endeavor Parallax Behind
    Requires: <datum.src>
    Description: Self-Containing element for a full-screen parallax behind effect. Note: margins won't work on this guy.

mixin endeavorParallaxBehind(datum)
    - var image = datum.image
    .endeavor-parallax-behind-fs.parallax__group
        .endeavor-parallax-behind-support.parallax__layer--back.img-load(style=`background-image: url(${image.src})`) 


//-  Endeavor Parallax Right + Caption Left
    Requires: <data.imageBig> <data.imageParallax> <data.caption>
    Description: Self-Containing element for a body-width background image, fixed caption + parallax image effect.

mixin endeavorParallaxCaptionRight(data)
    - var imageBig = data.imageBig
    - var imageParallax = data.imageParallax
    - var caption = data.caption
    .endeavor-item.fsw.endeavor-parallax-hybrid.parallax__group  
        .endeavor-parallax-hybrid-color.img-load(style=`background-image: url(${imageBig.src})`)
        .img-box.endeavor-parallax-hybrid-left-img-box.parallax__layer.parallax__layer--fore.img-load(style=`background-image: url(${imageParallax.src})`)
        p.endeavor-parallax-hybrid-left-caption.caption=caption


//-  Endeavor Parallax Left + Caption Right
    Requires: <data.imageBig> <data.imageParallax> <data.caption>
    Description: Self-Containing element for a body-width background image, fixed caption + parallax image effect.

mixin endeavorParallaxCaptionLeft(data)
    - var imageBig = data.imageBig
    - var imageParallax = data.imageParallax
    - var caption = data.caption
    .endeavor-item.fsw.endeavor-parallax-hybrid.parallax__group  
        .endeavor-parallax-hybrid-color.img-load(style=`background-image: url(${imageBig})`)
        .img-box.endeavor-parallax-hybrid-right-img-box.parallax__layer.parallax__layer--fore.img-load(style=`background-image: url(${imageParallax})`)
        p.endeavor-parallax-hybrid-right-caption.caption=caption


//-  Endeavor Image Centered + Caption
    Requires: <result.image> <result.caption>
    Description: Self-Containing element for centered image + caption

mixin endeavorImageCenterCaption(data)
    - var image = data.image
    - var caption = data.caption
    .endeavor-item.endeavor-para-box
        .image-box.image-box--center.img-load(style=`background-image: url(${image.src})`)
        p.caption.center-caption=caption


//-  Endeavor Swipable Image Slide
    Requires: <result.images[]>
    Description: Self-Containing element for centered swipable image carousel

mixin endeavorImageSlider(data)
    - var images = data.images
    .endeavor-item.endeavor-image-slider
        each image, i in images
            img.endeavor-image-slider-color.fsw(src = `${images[i].src}`)











