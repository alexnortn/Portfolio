//- 

    Alex Norton
    a^N 
    http://alexnortn.com

    Pug Mixins for Modular Implementation


//-  Test ~ Hello Mixin ~
mixin users2(users, colour)
    ul
    each user in users
        li(class=colour)= user


//-  Case-Study Preview
    Requires: <result> <index> 
        + route <scr/string>
        + name-preview <string>
        + project-type <string>
        + project-name <string>
        + project-description <string>
        + project-image-preview <src>

mixin caseStudyPreview(result, index)
    .case-study.case-study-window.item.case-study-item&attributes( {'data-inproject': false}, {'data-projectIndex': index}, {'data-project': result.route},  {'id': result.preview} )
        .case-study-overview
            .description
                .description-wrapper
                    h3=result.project_type
                    h2=result.name
                    hr
                    p=result.description.brief
            .hero-box
                .hero.img-load(style=`background-image: url(${result.hero})`)


//-  Project-Study Preview
    Requires: <result> <index>
        + route <scr/string>
        + name-preview <string>
        + project-name <string>
        + project-description <string>
        + project-image-preview <src>

mixin projectPreview(result, index)
    li.select-work-item.item.project-item&attributes( {'data-inproject': false}, {'data-projectIndex': index}, {'data-project': result.route}, {'id': result.preview} )
        .select-work-img-container
            .select-work-description
                p.tamer=result.description.brief
                hr
            .select-work-img.img-load(style=`background-image: url(${result.images[0].src})`)
        h3 #{result.name}


//-  Endeavor Header
    Requires: <result>
        + route <scr/string>
        + name-preview <string>
        + project-name <string>
        + project-description <string>
        + project-image-preview <src>

mixin endeavorHeader(result)
    .endeavor-overview
        .description
            .description-wrapper
                h3=result.project_type
                h2=result.name
                hr
                p=result.description.brief
        .hero-box.hero-parallax.parallax__group
            .hero.parallax__layer--back.img-load(style=`background-image: url(${result.hero})`)


//-  Endeavor Main Description & Meta Info
    Requires: <result.description> <result.meta>
        + project-description <{string}>
        + project-meta <{string}>
            + Client
            + Year
            + Role
            + Team
            + Discipline
            + Medium
            + Technologies
            + Duration

mixin endeavorIntro(description, meta)
    .endeavor-intro.cf
        .main-description 
            q=description.brief
            h4 Brief
            p.tamer=description.extensive
            h4 Process
            p.tamer=description.extensive
        .meta-data
            ul
                li Client
                li=meta.Client
            ul
                li Year
                li=meta.Year
            ul
                li Role
                li=meta.Role
            ul
                li Team
                li=meta.Team
            ul
                li Discipline
                li=meta.Discipline
            ul
                li Medium
                li=meta.Medium
            ul
                li Technologies
                li=meta.Technologies
            ul
                li Duration
                li=meta.Duration


//-  Endeavor Project | Full-Width Adaptive Image
    Requires: <result.img.scr>
    Description: Full-Width Image Element

mixin endeavorImageFS(src)
    img.endeavor-item.fsw(src=src)


//-  Endeavor Project | Full-Width Adaptive Youtube Video
    Requires: <result.img.scr>
    Description: Full-Width Embed Video Element

mixin endeavorVideoFS(src)
    iframe.endeavor-item.video-settings(src=src frameborder="0" allowfullscreen)


//-  Endeavor Project | End Pad
    Requires: {} --> Could extend for modularity (see <endeavor.styl)
    Description: empty div to provide padding

mixin endeavorEndPad()
    .end-pad.end-pad-50


//-  Endeavor Parallax Images Left
    Requires: <result.pullQuote> <result.image[0], result.image[1]>
    Description: Self-Containing parallax element with two left image and a flush-right pull quote

mixin endeavorTwoImageParallaxLeft(imageSrc1, imageSrc2, pullQuote)
    .endeavor-para-box.parallax__group
        blockquote.left.parallax__layer.parallax__layer--fore=result.pull_quotes[0]
        .endeavor-image-box.endeavor-item-top.endeavor-item-bottom-small.img-load(style=`background-image: url(${imageSrc1})`)
        .endeavor-image-box.endeavor-item-bottom-big.img-load(style=`background-image: url(${imageSrc2})`)


//-  Endeavor Parallax Images Right
    Requires: <result.pullQuote> <result.image[0], result.image[1]>
    Description: Self-Containing parallax element with two left image and a flush-left pull quote

mixin endeavorTwoImageParallaxRight(imageSrc1, imageSrc2, pullQuote)
    .endeavor-para-box.parallax__group   
        .endeavor-image-box.endeavor-item-top.endeavor-item-bottom-small.right.img-load(style=`background-image: url(${imageSrc1})`)
        .endeavor-image-box.right.endeavor-item-bottom-big.img-load(style=`background-image: url(${imageSrc2})`)
        blockquote.right.parallax__layer.parallax__layer--fore=result.pull_quotes[0]


//-  Endeavor Image Grid Iterator
    Requires: <result.images[]> <result.images_preview[], result.image[1]>
    Description: Self-Containing element for displaying up to [ 7 ] images in an interacive slider

mixin endeavorImageGridIterator(images, images_preview)
    .endeavor-item-big.grid.image-grid-wrapper
        .grid-slider.slider-transition
            each image, i in images
                    img.big-moment-3-color(src=`${images[i].src}`)
        each image, i in images_preview
            .image-grid-container.bounce&attributes({'data-slide': i})
                .image-grid.img-load(style=`background-image: url(${images_preview[i].src})`)



//-  Endeavor Parallax Behind
    Requires: <result.image.src>
    Description: Self-Containing element for a full-screen parallax behind effect. Note: margins won't work on this guy.

mixin endeavorParallaxBehind(src)
    .endeavor-parallax-behind-fs.parallax__group
        .endeavor-parallax-behind-support.parallax__layer--back.img-load(style=`background-image: url(${src})`) 


//-  Endeavor Parallax Right + Caption Left
    Requires: <result.image.src> <result.caption>
    Description: Self-Containing element for a body-width background image, fixed caption + parallax image effect.

mixin endeavorParallaxCaptionRight(imageBig, imageParallax, caption)
    .endeavor-item.fsw.endeavor-parallax-hybrid.parallax__group  
        .endeavor-parallax-hybrid-color.img-load(style=`background-image: url(${imageBig})`)
        .img-box.endeavor-parallax-hybrid-left-img-box.parallax__layer.parallax__layer--fore.img-load(style=`background-image: url(${imageParallax})`)
        p.endeavor-parallax-hybrid-left-caption.caption=caption


//-  Endeavor Parallax Left + Caption Right
    Requires: <result.image.src> <result.caption>
    Description: Self-Containing element for a body-width background image, fixed caption + parallax image effect.

mixin endeavorParallaxCaptionLeft(imageBig, imageParallax, caption)
    .endeavor-item.fsw.endeavor-parallax-hybrid.parallax__group  
        .endeavor-parallax-hybrid-color.img-load(style=`background-image: url(${imageBig})`)
        .img-box.endeavor-parallax-hybrid-right-img-box.parallax__layer.parallax__layer--fore.img-load(style=`background-image: url(${imageParallax})`)
        p.endeavor-parallax-hybrid-right-caption.caption=caption


//-  Endeavor Image Centered + Caption
    Requires: <result.image.src> <result.caption>
    Description: Self-Containing element for centered image + caption

mixin endeavorImageCenterCaption(image, caption)
    .endeavor-item.endeavor-para-box
        .image-box.image-box--center.img-load(style=`background-image: url(${image})`)
        p.caption.center-caption=caption











