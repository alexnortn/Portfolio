(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var $ = require('jquery');
var velocity = require('velocity-animate'),
    velocity_ui = require('velocity-ui-pack');

// Navigate with velocity  
module.exports.scrollToVelocity = function (_sectionCurrent) {
    var nav = "#" + _sectionCurrent;
    // Scroll navigate, call setHash when finished moving
    $(nav).velocity("scroll", { duration: 750, easing: "ease-in-out" });
};

},{"jquery":18,"velocity-animate":189,"velocity-ui-pack":190}],2:[function(require,module,exports){
module.exports={
    "case_studies" : [
        {
            "route" :"travel-project",
            "name" : "Google Travel",
            "project_type" : "Case Study",
            "preview" :"travel-preview",
            "year" : "2020",    
            "medium": [
                "Responsive, Web Application"
            ],
            "technique": [
                "Product Design",
                "Design Research",
                "Machine Learning",
                "Branding"
            ],
            "description" : {
                "quote": "Be the trusted place where travelers go for the most useful information to make fast, effortless decisions.",
                "brief": "Since joining Google, I’ve had the privilege to build products in the service of hundreds of millions. Most notably, I led the unification of the Google Travel products under a single brand and navigation structure.",
                "challenge": "This entailed inspiring and motivating a coalition of executive sponsors who were skeptical of a cohesive offering. I believe the lasting partnerships I formed and the credibility I gained were a function of diligence in my preparedness, on-the-fly adaptability, and the time I committed to over-communicate key toggle points in our strategy. To realize the new brand identity, we partnered with the external agency Wolf Ollins."
            },
            "meta" : {
                "Client" : "Google",
                "Year" : 2020,
                "Role" : "Product Designer",
                "Team" : "Google Travel",
                "Discipline" : "Product Designer",
                "Medium" : "Web Application",
                "Technologies": "Machine Learning",
                "Duration" : "3 years"
            },
            "image_hero": "images/projects/travel/hi-res/travel-hero.jpg",
            "image_preview": "images/projects/travel/hi-res/travel-hero.jpg",
            "sections" : [
                {
                    "name" : "endeavorVideoFS",
                    "data" : {
                        "class" : "endeavor-item-top-125 endeavor-width-100-prcnt endeavor-border-32-responsive endeavor-pos-rel",
                        "loop": "",
                        "muted": "",
                        "autoplay": "true",
                        "src" : {
                            "webm" : "images/projects/travel/videos/google-travel.webm",
                            "mp4" : "images/projects/travel/videos/google-travel.mp4",
                            "poster" : "images/projects/travel/videos/google-travel.png"
                        }
                    }
                },
                {
                    "name" : "endeavorVideoFS",
                    "data" : {
                        "class" : "endeavor-item-top-125 endeavor-width-100-prcnt endeavor-border-32-responsive endeavor-pos-rel",
                        "loop": "",
                        "muted": "",
                        "autoplay": "true",
                        "src" : {
                            "webm" : "images/projects/travel/videos/google-trip.webm",
                            "mp4" : "images/projects/travel/videos/google-trip.mp4",
                            "poster" : "images/projects/travel/videos/google-trip.png"
                        }
                    }
                },
                {
                    "name" : "endeavorVideoFS",
                    "data" : {
                        "class" : "endeavor-item-top-125 endeavor-width-100vw endeavor-pos-rel",
                        "loop": "",
                        "muted": "",
                        "autoplay": "true",
                        "src" : {
                            "webm" : "images/projects/travel/videos/travel-brand.webm",
                            "mp4" : "images/projects/travel/videos/travel-brand.mp4",
                            "poster" : "images/projects/travel/videos/travel-brand.png"
                        }
                    }
                },
                {
                    "name" : "endeavorVideoFS",
                    "data" : {
                        "class" : "endeavor-item-none endeavor-width-100vw endeavor-pos-rel",
                        "loop": "",
                        "muted": "",
                        "autoplay": "true",
                        "src" : {
                            "webm" : "images/projects/travel/videos/travel-brand-2.webm",
                            "mp4" : "images/projects/travel/videos/travel-brand-2.mp4",
                            "poster" : "images/projects/travel/videos/travel-brand-2.png"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-25-responsive",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Google Travel",
                            "src": "images/projects/travel/standard/travel-1.png",
                            "src_standard": "images/projects/travel/standard/travel-1.png",
                            "src_retina": "images/projects/travel/retina/travel-1.png",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/travel/hi-res/travel-1.png",
                            "src_preview": "images/projects/travel/hi-res/travel-1.png",
                            "caption": "Google Travel"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-25-responsive",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Google Travel",
                            "src": "images/projects/travel/standard/travel-2.gif",
                            "src_standard": "images/projects/travel/standard/travel-2.gif",
                            "src_retina": "images/projects/travel/retina/travel-2.gif",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/travel/hi-res/travel-2.gif",
                            "src_preview": "images/projects/travel/hi-res/travel-2.gif",
                            "caption": "Google Travel"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-25-responsive",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Google Travel",
                            "src": "images/projects/travel/standard/travel-5.png",
                            "src_standard": "images/projects/travel/standard/travel-5.png",
                            "src_retina": "images/projects/travel/retina/travel-5.png",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/travel/hi-res/travel-5.png",
                            "src_preview": "images/projects/travel/hi-res/travel-5.png",
                            "caption": "Google Travel"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-25-responsive",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Google Travel",
                            "src": "images/projects/travel/standard/travel-6.png",
                            "src_standard": "images/projects/travel/standard/travel-6.png",
                            "src_retina": "images/projects/travel/retina/travel-6.png",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/travel/hi-res/travel-6.png",
                            "src_preview": "images/projects/travel/hi-res/travel-6.png",
                            "caption": "Google Travel"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-25-responsive",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Google Travel",
                            "src": "images/projects/travel/standard/travel-7.png",
                            "src_standard": "images/projects/travel/standard/travel-7.png",
                            "src_retina": "images/projects/travel/retina/travel-7.png",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/travel/hi-res/travel-7.png",
                            "src_preview": "images/projects/travel/hi-res/travel-7.png",
                            "caption": "Google Travel"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-25-responsive",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Google Travel",
                            "src": "images/projects/travel/standard/travel-8.png",
                            "src_standard": "images/projects/travel/standard/travel-8.png",
                            "src_retina": "images/projects/travel/retina/travel-8.png",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/travel/hi-res/travel-8.png",
                            "src_preview": "images/projects/travel/hi-res/travel-8.png",
                            "caption": "Google Travel"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-25-responsive endeavor-item-bottom-125-responsive",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Google Travel",
                            "src": "images/projects/travel/standard/travel-9.png",
                            "src_standard": "images/projects/travel/standard/travel-9.png",
                            "src_retina": "images/projects/travel/retina/travel-9.png",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/travel/hi-res/travel-9.png",
                            "src_preview": "images/projects/travel/hi-res/travel-9.png",
                            "caption": "Google Travel"
                        }
                    }
                }
            ]
        }
    ],
    "projects" : [
        {
            "route" :"pair-project",
            "name" : "People + AI Guidebook",
            "project_type" : "Project",
            "preview" :"pair-preview",
            "year" : "2019",    
            "medium": [
                "Guidebook, I/O Presentation, Machine Intelligence"
            ],
            "technique": [
                "Product Design",
                "Design Research",
                "Machine Learning",
                "Human-centered"
            ],
            "description" : {
                "quote": "The People + AI Guidebook was written to help user experience (UX) professionals and product managers follow a human-centered approach to AI.",
                "brief": "While building products by day, I embarked on an ambitious grassroots journey by night. Together, a fellowship of five Googlers and I recognized a gap in the principles and processes by which AI-powered features were being conceived and developed. Over the course of a year, we synthesized data and insights from internal product teams, industry experts, and academic research. From our insights, we crafted the People + AI Guidebook, an open source resource advocating for a more human-centered approach to AI.",
                "challenge": "Working on the People + AI Guidebook has been a life changing endeavor for me. Fiercely advocating for even stronger human sensibility and values within machine intelligence has stretched and deepened my own design philosophy. Working alongside passionate teammates filled me with bottomless energy and I loved the process of distilling opaque academic theory into concrete and actionable recommendations."
            },
            "meta" : {
                "Client" : "Google",
                "Year" : 2019,
                "Role" : "Product Designer",
                "Team" : "Google People + AI Research",
                "Discipline" : "Product Designer",
                "Medium" : "AI Guidebook",
                "Technologies": "Machine Learning",
                "Duration" : "2 years"
            },
            "image_hero": "images/projects/pair/hi-res/pair-hero.jpg",
            "image_preview": "images/projects/pair/hi-res/pair-2.jpg",
            "sections" : [
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-25-responsive",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "People + AI Guidebook",
                            "src": "images/projects/pair/standard/pair-1.jpg",
                            "src_standard": "images/projects/pair/standard/pair-1.jpg",
                            "src_retina": "images/projects/pair/retina/pair-1.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/pair/hi-res/pair-1.jpg",
                            "src_preview": "images/projects/pair/hi-res/pair-1.jpg",
                            "caption": "People + AI Guidebook"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-25-responsive",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "People + AI Guidebook",
                            "src": "images/projects/pair/standard/pair-2.jpg",
                            "src_standard": "images/projects/pair/standard/pair-2.jpg",
                            "src_retina": "images/projects/pair/retina/pair-2.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/pair/hi-res/pair-2.jpg",
                            "src_preview": "images/projects/pair/hi-res/pair-2.jpg",
                            "caption": "People + AI Guidebook"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-25-responsive",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "People + AI Guidebook",
                            "src": "images/projects/pair/standard/pair-3.jpg",
                            "src_standard": "images/projects/pair/standard/pair-3.jpg",
                            "src_retina": "images/projects/pair/retina/pair-3.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/pair/hi-res/pair-3.jpg",
                            "src_preview": "images/projects/pair/hi-res/pair-3.jpg",
                            "caption": "People + AI Guidebook"
                        }
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "class" : "endeavor-item-top-125 endeavor-width-100-prcnt endeavor-border-32-responsive endeavor-pos-rel",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "People + AI Guidebook",
                            "src": "images/projects/pair/standard/pair-4.jpg",
                            "src_standard": "images/projects/pair/standard/pair-4.jpg",
                            "src_retina": "images/projects/pair/retina/pair-4.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/pair/hi-res/pair-4.jpg",
                            "src_preview": "images/projects/pair/hi-res/pair-4.jpg",
                            "caption": "People + AI Guidebook"
                        }
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "class" : "endeavor-item-top-125 endeavor-width-100-prcnt endeavor-border-32-responsive endeavor-pos-rel",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "People + AI Guidebook",
                            "src": "images/projects/pair/standard/pair-5.jpg",
                            "src_standard": "images/projects/pair/standard/pair-5.jpg",
                            "src_retina": "images/projects/pair/retina/pair-5.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/pair/hi-res/pair-5.jpg",
                            "src_preview": "images/projects/pair/hi-res/pair-5.jpg",
                            "caption": "People + AI Guidebook"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "People + AI Guidebook",
                            "src": "images/projects/pair/standard/pair-6.jpg",
                            "src_standard": "images/projects/pair/standard/pair-6.jpg",
                            "src_retina": "images/projects/pair/retina/pair-6.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/pair/hi-res/pair-6.jpg",
                            "src_preview": "images/projects/pair/hi-res/pair-6.jpg",
                            "caption": "People + AI Guidebook"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-25-responsive",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "People + AI Guidebook",
                            "src": "images/projects/pair/standard/pair-7.jpg",
                            "src_standard": "images/projects/pair/standard/pair-7.jpg",
                            "src_retina": "images/projects/pair/retina/pair-7.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/pair/hi-res/pair-7.jpg",
                            "src_preview": "images/projects/pair/hi-res/pair-7.jpg",
                            "caption": "People + AI Guidebook"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-25-responsive",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "People + AI Guidebook",
                            "src": "images/projects/pair/standard/pair-8.jpg",
                            "src_standard": "images/projects/pair/standard/pair-8.jpg",
                            "src_retina": "images/projects/pair/retina/pair-8.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/pair/hi-res/pair-8.jpg",
                            "src_preview": "images/projects/pair/hi-res/pair-8.jpg",
                            "caption": "People + AI Guidebook"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-25-responsive",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "People + AI Guidebook",
                            "src": "images/projects/pair/standard/pair-9.jpg",
                            "src_standard": "images/projects/pair/standard/pair-9.jpg",
                            "src_retina": "images/projects/pair/retina/pair-9.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/pair/hi-res/pair-9.jpg",
                            "src_preview": "images/projects/pair/hi-res/pair-9.jpg",
                            "caption": "People + AI Guidebook"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-25-responsive",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "People + AI Guidebook",
                            "src": "images/projects/pair/standard/pair-10.jpg",
                            "src_standard": "images/projects/pair/standard/pair-10.jpg",
                            "src_retina": "images/projects/pair/retina/pair-10.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/pair/hi-res/pair-10.jpg",
                            "src_preview": "images/projects/pair/hi-res/pair-10.jpg",
                            "caption": "People + AI Guidebook"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-25-responsive",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "People + AI Guidebook",
                            "src": "images/projects/pair/standard/pair-11.jpg",
                            "src_standard": "images/projects/pair/standard/pair-11.jpg",
                            "src_retina": "images/projects/pair/retina/pair-11.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/pair/hi-res/pair-11.jpg",
                            "src_preview": "images/projects/pair/hi-res/pair-11.jpg",
                            "caption": "People + AI Guidebook"
                        }
                    }
                },
                {
                    "name" : "endeavorParagraph",
                    "data" : {
                        "header" : "Learn more",
                        "class" : "endeavor-item-top-125",
                        "bgColor" : "",
                        "description" : ""
                    }
                },
                {
                    "name" : "endeavorGhostButtonURL",
                    "data" : {
                        "class" : "endeavor-item-bottom-125 endeavor-text-left",
                        "text" : "Send It",
                        "align" : "",
                        "id" : "museum-live",
                        "url" : "https://pair.withgoogle.com/guidebook/",
                        "textColor" : "#1a1a1a"
                    }
                },
                {
                    "name" : "endeavorPad",
                    "data" : {
                        "class" : "endeavor-height-200px-responsive endeavor-item-no-margin endeavor-height-10vw"
                    }
                }
            ]
        },
        {
            "route" :"tedx-project",
            "name" : "TEDxBeaconStreet",
            "project_type" : "Project",
            "preview" :"tedx-preview",
            "year" : "2017",    
            "medium": [
                "Art direction, Experience design"
            ],
            "technique": [
                "Art Direction",
                "Experience Design",
                "Design Research",
                "Computational Design"
            ],
            "description" : {
                "quote": "Volunteering as design director to create a distinct and memorable brand for a Boston TEDx chapter.",
                "brief": "Growing up, TED talks were an indispensable source of inspiration for me. Through TED talks I was afforded access to a world full of ideas and possibility. One talk in particular by Kevin Slavin titled “How algorithms shape our world” had a profound impact in shaping my own world. To this day I am in awe of his delivery, pacing, and the way he weaved together just the right metaphors to convey his message in a memorable way. I never could have imagined that years later, I’d be collaborating with him directly, at MIT Media Lab.",
                "challenge": "Volunteering to be the design director for TEDxBeaconStreet was the first time I was able to use my professional skills to give back to a community that profoundly shaped me. TEDxBeaconStreet is funded by a non-profit organization. So I deployed my background in computational design to develop data-driven branding techniques, and multimedia installations at a fraction of the cost."
            },
            "meta" : {
                "Client" : "Ideas in Action",
                "Year" : 2017,
                "Role" : "Design Director",
                "Team" : "Annie Zeng",
                "Discipline" : "Art direction",
                "Medium" : "Digital design",
                "Technologies": "Visual design, computational design",
                "Duration" : "6 Months"
            },
            "image_hero": "images/projects/tedx/hi-res/tedx-hero.jpg",
            "image_preview": "images/projects/tedx/hi-res/tedx-hero.jpg",
            "sections" : [
                {
                    "name" : "endeavorVideoFS",
                    "data" : {
                        "class" : "endeavor-item-none endeavor-width-100vw endeavor-pos-rel",
                        "loop": "",
                        "muted": "",
                        "autoplay": "true",
                        "src" : {
                            "webm" : "images/projects/tedx/videos/tedx-1.webm",
                            "mp4" : "images/projects/tedx/videos/tedx-1.mp4",
                            "poster" : "images/projects/tedx/videos/tedx-1.jpg"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-25-responsive",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "TEDxBeaconStreet",
                            "src": "images/projects/tedx/standard/tedx-2.jpg",
                            "src_standard": "images/projects/tedx/standard/tedx-2.jpg",
                            "src_retina": "images/projects/tedx/retina/tedx-2.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/tedx/hi-res/tedx-2.jpg",
                            "src_preview": "images/projects/tedx/hi-res/tedx-2.jpg",
                            "caption": "TEDxBeaconStreet"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-25-responsive",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "TEDxBeaconStreet",
                            "src": "images/projects/tedx/standard/tedx-3.jpg",
                            "src_standard": "images/projects/tedx/standard/tedx-3.jpg",
                            "src_retina": "images/projects/tedx/retina/tedx-3.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/tedx/hi-res/tedx-3.jpg",
                            "src_preview": "images/projects/tedx/hi-res/tedx-3.jpg",
                            "caption": "TEDxBeaconStreet"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-25-responsive",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "TEDxBeaconStreet",
                            "src": "images/projects/tedx/standard/tedx-4.jpg",
                            "src_standard": "images/projects/tedx/standard/tedx-4.jpg",
                            "src_retina": "images/projects/tedx/retina/tedx-4.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/tedx/hi-res/tedx-4.jpg",
                            "src_preview": "images/projects/tedx/hi-res/tedx-4.jpg",
                            "caption": "TEDxBeaconStreet"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-25-responsive",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "TEDxBeaconStreet",
                            "src": "images/projects/tedx/standard/tedx-5.jpg",
                            "src_standard": "images/projects/tedx/standard/tedx-5.jpg",
                            "src_retina": "images/projects/tedx/retina/tedx-5.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/tedx/hi-res/tedx-5.jpg",
                            "src_preview": "images/projects/tedx/hi-res/tedx-5.jpg",
                            "caption": "TEDxBeaconStreet"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-25-responsive",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "TEDxBeaconStreet",
                            "src": "images/projects/tedx/standard/tedx-6.jpg",
                            "src_standard": "images/projects/tedx/standard/tedx-6.jpg",
                            "src_retina": "images/projects/tedx/retina/tedx-6.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/tedx/hi-res/tedx-6.jpg",
                            "src_preview": "images/projects/tedx/hi-res/tedx-6.jpg",
                            "caption": "TEDxBeaconStreet"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-25-responsive",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "TEDxBeaconStreet",
                            "src": "images/projects/tedx/standard/tedx-7.jpg",
                            "src_standard": "images/projects/tedx/standard/tedx-7.jpg",
                            "src_retina": "images/projects/tedx/retina/tedx-7.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/tedx/hi-res/tedx-7.jpg",
                            "src_preview": "images/projects/tedx/hi-res/tedx-7.jpg",
                            "caption": "TEDxBeaconStreet"
                        }
                    }
                },
                {
                    "name" : "endeavorVideoFS",
                    "data" : {
                        "class" : "endeavor-item-none endeavor-width-100vw endeavor-pos-rel",
                        "loop": "",
                        "muted": "",
                        "autoplay": "true",
                        "src" : {
                            "webm" : "images/projects/tedx/videos/tedx-8.webm",
                            "mp4" : "images/projects/tedx/videos/tedx-8.mp4",
                            "poster" : "images/projects/tedx/videos/tedx-8.png"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-25-responsive",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "TEDxBeaconStreet",
                            "src": "images/projects/tedx/standard/tedx-9.jpg",
                            "src_standard": "images/projects/tedx/standard/tedx-9.jpg",
                            "src_retina": "images/projects/tedx/retina/tedx-9.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/tedx/hi-res/tedx-9.jpg",
                            "src_preview": "images/projects/tedx/hi-res/tedx-9.jpg",
                            "caption": "TEDxBeaconStreet"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-25-responsive",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "TEDxBeaconStreet",
                            "src": "images/projects/tedx/standard/tedx-10.jpg",
                            "src_standard": "images/projects/tedx/standard/tedx-10.jpg",
                            "src_retina": "images/projects/tedx/retina/tedx-10.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/tedx/hi-res/tedx-10.jpg",
                            "src_preview": "images/projects/tedx/hi-res/tedx-10.jpg",
                            "caption": "TEDxBeaconStreet"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-25-responsive",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "TEDxBeaconStreet",
                            "src": "images/projects/tedx/standard/tedx-11.jpg",
                            "src_standard": "images/projects/tedx/standard/tedx-11.jpg",
                            "src_retina": "images/projects/tedx/retina/tedx-11.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/tedx/hi-res/tedx-11.jpg",
                            "src_preview": "images/projects/tedx/hi-res/tedx-11.jpg",
                            "caption": "TEDxBeaconStreet"
                        }
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "class" : "endeavor-item-top-125 endeavor-width-100-prcnt endeavor-border-32-responsive endeavor-pos-rel",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "TEDxBeaconStreet",
                            "src": "images/projects/tedx/standard/tedx-12.jpg",
                            "src_standard": "images/projects/tedx/standard/tedx-12.jpg",
                            "src_retina": "images/projects/tedx/retina/tedx-12.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/tedx/hi-res/tedx-12.jpg",
                            "src_preview": "images/projects/tedx/hi-res/tedx-12.jpg",
                            "caption": "TEDxBeaconStreet"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "TEDxBeaconStreet",
                            "src": "images/projects/tedx/standard/tedx-13.jpg",
                            "src_standard": "images/projects/tedx/standard/tedx-13.jpg",
                            "src_retina": "images/projects/tedx/retina/tedx-13.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/tedx/hi-res/tedx-13.jpg",
                            "src_preview": "images/projects/tedx/hi-res/tedx-13.jpg",
                            "caption": "TEDxBeaconStreet"
                        }
                    }
                },
                {
                    "name" : "endeavorPad",
                    "data" : {
                        "class" : "endeavor-height-200px-responsive endeavor-item-no-margin endeavor-height-10vw"
                    }
                }
            ]
        },
        {
            "route" :"brainvr-project",
            "name" : "BrainVR",
            "project_type" : "Project",
            "preview" :"brainvr-preview",
            "year" : "2016",    
            "medium": [
                "Virtual Reality, Neuroscience, Brain Mapping"
            ],
            "technique": [
                "Experience Design",
                "Design Research",
                "Machine Learning",
                "Virtual Reality"
            ],
            "description" : {
                "quote": "How does a brain make a mind? Experience the wonder in virtual reality at Tribeca Film Festival.",
                "brief": "Thanks to cutting edge artificial intelligence, nanoscale resolution imaging, seriously powerful computers, high resolution portable displays and unprecedented international collaboration, Eyewire and the Fluid Interfaces Group at MIT Media Lab brought a never-before-seen interactive immersive neuroscience visualization to Tribeca Film Festival on April 18, 2016. In Virtual Reality, visitors were able to teleport into a foreign yet familiar world to explore a new pathway of narrative - the electrophysical connections among neurons. They ventured into a freshly discovered circuit of cells responsible in part for the brain’s ability to perceive motion - the very ebb and flow of story itself.",
                "challenge": "Working on the People + AI Guidebook has been a life changing endeavor for me. Fiercely advocating for even stronger human sensibility and values within machine intelligence has stretched and deepened my own design philosophy. Working alongside passionate teammates filled me with bottomless energy and I loved the process of distilling opaque academic theory into concrete and actionable recommendations."
            },
            "meta" : {
                "Client" : "Eyewire + MIT Media Lab",
                "Year" : 2016,
                "Role" : "Experience Designer",
                "Team" : "Amy Sterling, Scott Greenwald, Daniel Citron",
                "Discipline" : "Experience Designer",
                "Medium" : "Virtual Reality",
                "Technologies": "Machine Learning, VR, Neuroscience",
                "Duration" : "6 Months"
            },
            "image_hero": "images/projects/brainvr/hi-res/brainvr-hero.jpg",
            "image_preview": "images/projects/brainvr/hi-res/brainvr-hero.jpg",
            "sections" : [
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-25-responsive",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "BrainVR",
                            "src": "images/projects/brainvr/standard/brainvr-1.gif",
                            "src_standard": "images/projects/brainvr/standard/brainvr-1.gif",
                            "src_retina": "images/projects/brainvr/retina/brainvr-1.gif",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/brainvr/hi-res/brainvr-1.gif",
                            "src_preview": "images/projects/brainvr/hi-res/brainvr-1.gif",
                            "caption": "BrainVR"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-25-responsive",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "BrainVR",
                            "src": "images/projects/brainvr/standard/brainvr-2.gif",
                            "src_standard": "images/projects/brainvr/standard/brainvr-2.gif",
                            "src_retina": "images/projects/brainvr/retina/brainvr-2.gif",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/brainvr/hi-res/brainvr-2.gif",
                            "src_preview": "images/projects/brainvr/hi-res/brainvr-2.gif",
                            "caption": "BrainVR"
                        }
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "class" : "endeavor-item-top-125 endeavor-width-100-prcnt endeavor-border-32-responsive endeavor-pos-rel",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "BrainVR",
                            "src": "images/projects/brainvr/standard/brainvr-3.gif",
                            "src_standard": "images/projects/brainvr/standard/brainvr-3.gif",
                            "src_retina": "images/projects/brainvr/retina/brainvr-3.gif",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/brainvr/hi-res/brainvr-3.gif",
                            "src_preview": "images/projects/brainvr/hi-res/brainvr-3.gif",
                            "caption": "BrainVR"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "BrainVR",
                            "src": "images/projects/brainvr/standard/brainvr-4.gif",
                            "src_standard": "images/projects/brainvr/standard/brainvr-4.gif",
                            "src_retina": "images/projects/brainvr/retina/brainvr-4.gif",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/brainvr/hi-res/brainvr-4.gif",
                            "src_preview": "images/projects/brainvr/hi-res/brainvr-4.gif",
                            "caption": "BrainVR"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-25-responsive",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "BrainVR",
                            "src": "images/projects/brainvr/standard/brainvr-5.gif",
                            "src_standard": "images/projects/brainvr/standard/brainvr-5.gif",
                            "src_retina": "images/projects/brainvr/retina/brainvr-5.gif",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/brainvr/hi-res/brainvr-5.gif",
                            "src_preview": "images/projects/brainvr/hi-res/brainvr-5.gif",
                            "caption": "BrainVR"
                        }
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "class" : "endeavor-item-top-125 endeavor-width-100-prcnt endeavor-border-32-responsive endeavor-pos-rel",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "BrainVR",
                            "src": "images/projects/brainvr/standard/brainvr-6.jpg",
                            "src_standard": "images/projects/brainvr/standard/brainvr-6.jpg",
                            "src_retina": "images/projects/brainvr/retina/brainvr-6.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/brainvr/hi-res/brainvr-6.jpg",
                            "src_preview": "images/projects/brainvr/hi-res/brainvr-6.jpg",
                            "caption": "BrainVR"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "BrainVR",
                            "src": "images/projects/brainvr/standard/brainvr-7.jpg",
                            "src_standard": "images/projects/brainvr/standard/brainvr-7.jpg",
                            "src_retina": "images/projects/brainvr/retina/brainvr-7.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/brainvr/hi-res/brainvr-7.jpg",
                            "src_preview": "images/projects/brainvr/hi-res/brainvr-7.jpg",
                            "caption": "BrainVR"
                        }
                    }
                },
                {
                    "name" : "endeavorPad",
                    "data" : {
                        "class" : "endeavor-height-200px-responsive endeavor-item-no-margin endeavor-height-10vw"
                    }
                }
            ]
        },
        {
            "route" :"museum-project",
            "name"  : "Museum",
            "project_type"  : "Case Study",
            "preview" :"museum-preview",
            "year"  : "2016",
            "medium": [
                "Responsive, Web Application"
            ],
            "technique": [
                "Data Visualization",
                "UX/UI Design",
                "Design Research",
                "Programing"
            ],
            "description" : {
                "quote": "Accelerating neuroscience research and discovery by open sourcing a collaborative, online platform.",
                "brief": "At SeungLab scientists study Connectomics, a specialty in the domain of Neuroscience which seeks to understand brain structure and function by constructing comprehensive maps of the connections between neurons. Traditionally, Connectomics is a tedious and time consuming process performed by manually tracing through a volume of micrographs like a 3D coloring book. To glean meaningful information from biological neural networks, many thousands of neurons must be reconstructed. Researchers at SeungLab specialize in volumetric neuron reconstruction and employ sophisticated Machine Learning + Computer Vision techniques in collaboration with expert tracers to rapidly accelerate this process.",
                "challenge": "To catalogue the complexity of the human brain, researchers at Seunglab are working towards an automated pipeline for gathering and processing experimental data. However, neuroscience has a data problem and Seunglab is no exception. Researchers have an excess of data and a lack of investigative power. The scale of today’s scientific challenges demand cross–disciplinary collaboration. Collaboration presents an opportunity for teams to leverage each others specialties to move faster and tackle larger and more important problems. Collaboration necessitates sharing of knowledge, time, ideas, skills, and increasingly data. How can researchers at Seunglab benefit from collaboration?"
            },
            "meta" : {
                "Client" : "SeungLab, Princeton University",
                "Year" : 2016,
                "Role" : "Designer / Developer",
                "Team" : "William Silversmith, Ignacio Tartavull, Nico Kemnitz, Mio Akasako, Jack Hudson",
                "Discipline" : "Interaction Design, Data Visualization, Research",
                "Medium" : "Web Application",
                "Technologies" : "AngularJs, Material Design, threeJs, D3, OpenCTM, Sketch",
                "Duration" : "2 Months"
            },
            "image_hero": "images/projects/museum/hi-res/museum-hero.jpg",
            "image_preview": "images/projects/museum/hi-res/museum-hero.jpg",
            "sections" : [
                {
                    "name" : "endeavorDesignProcess",
                    "data" : {
                        "class" : "endeavor-item-no-margin",
                        "process" : "Deliverable",
                        "text" : "",
                        "number" : "00/06",
                        "bgColor" : "#e6e6e6",
                        "textColor" : "#bfbfbf",
                        "textColor2" : "#d9d9d9"
                    }
                },
                {
                    "name" : "endeavorVideoFS",
                    "data" : {
                        "class" : "endeavor-item-no-margin endeavor-width-100vw endeavor-pos-rel",
                        "loop": "",
                        "muted": "",
                        "autoplay": "true",
                        "src" : {
                            "webm" : "images/projects/museum/videos/interaction.webm",
                            "mp4" : "images/projects/museum/videos/interaction.mp4",
                            "poster" : "images/projects/museum/videos/interaction.jpg"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-no-margin",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Museum Devices",
                            "src": "images/projects/museum/standard/museum-mocks.jpg",
                            "src_standard": "images/projects/museum/standard/museum-mocks.jpg",
                            "src_retina": "images/projects/museum/retina/museum-mocks.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/museum/hi-res/museum-mocks.jpg",
                            "src_preview": "images/projects/museum/hi-res/museum-mocks.jpg",
                            "caption": "Museum Devices"
                        }
                    }
                },
                {
                    "name" : "endeavorChecklist",
                    "data" : {
                        "header" : "Key Features",
                        "class" : "endeavor-item-top endeavor-item-bottom-15",
                        "class2" : "",
                        "class3" : "",
                        "class4" : "checklist-simple",
                        "icon" : "fa-hand-o-right",
                        "bgColor" : "",
                        "description" : "",
                        "contents" : [
                            {
                                "header" : "Open Source",
                                "description" : ""
                            },
                            {
                                "header" : "Neuroscience",
                                "description" : ""
                            },
                            {
                                "header" : "Free to Use",
                                "description" : ""
                            },
                            {
                                "header" : "Responsive",
                                "description" : ""
                            },
                            {
                                "header" : "Web Application",
                                "description" : ""
                            },
                            {
                                "header" : "Interactive Graphs",
                                "description" : ""
                            },
                            {
                                "header" : "Figure Generator",
                                "description" : ""
                            },
                            {
                                "header" : "Persistant URLs (permalinks)",
                                "description" : ""
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Museum Views 1",
                            "src": "images/projects/museum/standard/museum-views-1.1.jpg",
                            "src_standard": "images/projects/museum/standard/museum-views-1.1.jpg",
                            "src_retina": "images/projects/museum/retina/museum-views-1.1.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/museum/hi-res/museum-views-1.1.jpg",
                            "src_preview": "images/projects/museum/hi-res/museum-views-1.1.jpg",
                            "caption": "Museum Views 1"
                        }
                    }
                },
                {
                    "name" : "endeavorParagraphPoints",
                    "data" : {
                        "class" : "endeavor-item",
                        "bgColor" : "",
                        "header" : "Solution",
                        "contents": [
                            {
                                "header": "Collaboration",
                                "description" : "We partnered with Seunglab to design, develop, and deploy a responsive, open source, web application targeted towards neuroscientists with the goal of assisting researchers in the classification of new neuron typologies."
                            },
                            {
                                "header": "Iterative Development",
                                "description" : "Using Google’s Material Design library as basis for interaction patterns, we rapidly deployed a beta version and began extensive prototyping while seeking usability feedback from a host of researchers and designers. We continued prototyping for two months–refining touch points, tweaking the usability and functionality of charts, improving mesh loading performance, and adding features like auto-complete search to name a few."
                            },
                            {
                                "header": "Looking Forward",
                                "description" : "After the push to production, we handed off our design + development guidelines to the team at Seunglab where researchers continue to grow the platform with feedback from the scientific community."
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Museum About",
                            "src": "images/projects/museum/standard/museum-about-2.jpg",
                            "src_standard": "images/projects/museum/standard/museum-about-2.jpg",
                            "src_retina": "images/projects/museum/retina/museum-about-2.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/museum/hi-res/museum-about-2.jpg",
                            "src_preview": "images/projects/museum/hi-res/museum-about-2.jpg",
                            "caption": "Museum About"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Museum Pinky Neurons",
                            "src": "images/projects/museum/standard/museum-pinky.jpg",
                            "src_standard": "images/projects/museum/standard/museum-pinky.jpg",
                            "src_retina": "images/projects/museum/retina/museum-pinky.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/museum/hi-res/museum-pinky.jpg",
                            "src_preview": "images/projects/museum/hi-res/museum-pinky.jpg",
                            "caption": "Museum Pinky Neurons"
                        }
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Museum Views Grid 1",
                            "src": "images/projects/museum/standard/museum-views-3.jpg",
                            "src_standard": "images/projects/museum/standard/museum-views-3.jpg",
                            "src_retina": "images/projects/museum/retina/museum-views-3.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/museum/hi-res/museum-views-3.jpg",
                            "src_preview": "images/projects/museum/hi-res/museum-views-3.jpg",
                            "caption": "Museum Views Grid 1"
                        }
                    }
                },
                {
                    "name" : "endeavorCaptionFS",
                    "data" : {

                        "caption" : "The Museum provides scientists access to thousands of neuron reconstructions. When viewed individually each cell is rendered in white to shift focus towards the unique formal characteristics."
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Museum Views Grid 2",
                            "src": "images/projects/museum/standard/museum-views-4.jpg",
                            "src_standard": "images/projects/museum/standard/museum-views-4.jpg",
                            "src_retina": "images/projects/museum/retina/museum-views-4.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/museum/hi-res/museum-views-4.jpg",
                            "src_preview": "images/projects/museum/hi-res/museum-views-4.jpg",
                            "caption": "Museum Views Grid 1"
                        }
                    }
                },
                {
                    "name" : "endeavorVideoFS",
                    "data" : {
                        "class" : "endeavor-item-no-margin endeavor-width-100vw endeavor-pos-rel",
                        "loop": "",
                        "muted": "",
                        "autoplay": "true",
                        "src" : {
                            "webm" : "images/projects/museum/videos/museum-laptop.webm",
                            "mp4" : "images/projects/museum/videos/museum-laptop.mp4",
                            "poster" : "images/projects/museum/videos/museum-laptop.jpg"
                        }
                    }
                },
                {
                    "name" : "endeavorParagraph",
                    "data" : {
                        "header" : "Explore Live",
                        "class" : "endeavor-item-top-125",
                        "bgColor" : "",
                        "description" : ""
                    }
                },
                {
                    "name" : "endeavorGhostButtonURL",
                    "data" : {
                        "class" : "endeavor-item-bottom-125 endeavor-text-left",
                        "text" : "Send It",
                        "align" : "",
                        "id" : "museum-live",
                        "url" : "http://museum.eyewire.org/",
                        "textColor" : "#1a1a1a"
                    }
                },
                {
                    "name" : "endeavorDesignProcess",
                    "data" : {
                        "class" : "endeavor-item-no-margin",
                        "process" : "Discover",
                        "text" : "The Discover phase aims to know your client, their brand and their customers while gaining a full understanding of the project. This is essential to allow the design team to understand the task, develop a feel for the client’s business or interest, become familiar with the user and empathize with the brand.",
                        "number" : "01/06",
                        "bgColor" : "#e6e6e6",
                        "textColor" : "#bfbfbf",
                        "textColor2" : "#d9d9d9"
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-no-margin",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Sebastian TED",
                            "src": "images/projects/museum/standard/museum-ted.jpg",
                            "src_standard": "images/projects/museum/standard/museum-ted.jpg",
                            "src_retina": "images/projects/museum/retina/museum-ted.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/museum/hi-res/museum-ted.jpg",
                            "src_preview": "images/projects/museum/hi-res/museum-ted.jpg",
                            "caption": "Sebastian TED"
                        }
                    }
                },
                {
                    "name" : "endeavorCaptionFS",
                    "data" : {
                        "class" : "endeavor-item",
                        "textColor" : "#1a1a1a",
                        "caption" : "Sebastian Seung (pictured above) is a leader in the new field of connectomics, currently the hottest space in neuroscience, which studies, in once-impossible detail, the wiring of the brain."
                    }
                },
                {
                    "name" : "endeavorModuleMachine",
                    "data" : {
                        "bgColor" : "",
                        "class" : "endeavor-item-no-margin",
                        "modules" : [
                            {
                                "name" : "endeavorIntroFS",
                                "data" : {
                                    "margin" : "endeavor-item-250",
                                    "header" : "Hello, Seunglab",
                                    "subtext" : "At Seunglab scientists study Connectomics, a specialty in the domain of Neuroscience which seeks to understand brain structure and function by constructing comprehensive maps of the connections between neurons.",
                                    "bgColor" : "",
                                    "class" : "",
                                    "textColor" : "#1a1a1a"
                                }
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Seunglab Personel",
                            "src": "images/projects/museum/standard/museum-seunglab.jpg",
                            "src_standard": "images/projects/museum/standard/museum-seunglab.jpg",
                            "src_retina": "images/projects/museum/retina/museum-seunglab.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/museum/hi-res/museum-seunglab.jpg",
                            "src_preview": "images/projects/museum/hi-res/museum-seunglab.jpg",
                            "caption": "Seunglab Personel"
                        }
                    }
                },
                {
                    "name" : "endeavorCaptionHeaderGrid",
                    "data" : {
                        "textColor" : "#1a1a1a",
                        "contents" : [ 
                            {
                                "header" : "Traditional Connectomics",
                                "caption" : "Traditionally, Connectomics is a tedious and time consuming process performed by manually tracing through a volume of micrographs like a 3D coloring book."
                            },
                            {
                                "header" : "Scaling Up",
                                "caption" : "To glean meaningful information from biological neural networks, many thousands of neurons must be reconstructed."
                            },
                            {
                                "header" : "Volumetric Reconstruction + ML",
                                "caption" : "Researchers at SeungLab specialize in volumetric neuron reconstruction and employ sophisticated Machine Learning + Computer Vision techniques in collaboration with expert tracers to rapidly accelerate this process."
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-no-margin",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Museum Connectome",
                            "src": "images/projects/museum/standard/museum-connectome-3.png",
                            "src_standard": "images/projects/museum/standard/museum-connectome-3.png",
                            "src_retina": "images/projects/museum/retina/museum-connectome-3.png",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/museum/hi-res/museum-connectome-3.png",
                            "src_preview": "images/projects/museum/hi-res/museum-connectome-3.png",
                            "caption": "Museum Connectome"
                        }
                    }
                },
                {
                    "name" : "endeavorIntroFS",
                    "data" : {
                        "margin" : "endeavor-item-top-250 endeavor-item",
                        "header" : "Connectomics",
                        "subtext" : "The production and study of connectomes, may range in scale from a detailed map of the full set of neurons and synapses within part or all of the nervous system of an organism to a macro scale description of the functional and structural connectivity.",
                        "bgColor" : "",
                        "textColor" : "#1a1a1a"
                    }
                },
                {
                    "name" : "endeavorGhostButton",
                    "data" : {
                        "class" : "endeavor-item-bottom-250",
                        "text" : "Look Closer",
                        "id" : "ghost-connectomics",
                        "textColor" : "#1a1a1a"
                    }
                },
                {
                    "name" : "endeavorAnalysisComparision3",
                    "data" : {
                        "class" : "endeavor-item-250 endeavor-reveal",
                        "id" : "ghost-connectomics-affect",
                        "bgColor" : "",
                        "process" : [
                            {
                                "header" : "Physiology",
                                "contents" : [
                                    {
                                        "header" : "Description",
                                        "description" : "Record functional neural activity from living organism."
                                    },
                                    {
                                        "header" : "Discipline",
                                        "description" : "Biology"
                                    },
                                    {
                                        "header" : "Process",
                                        "description" : "Calcium imaging, probes, experiment."
                                    },
                                    {
                                        "header" : "Automatable",
                                        "description" : "No"
                                    }
                                ]
                            },
                            {
                                "header" : "Preparation",
                                "contents" : [
                                    {
                                        "header" : "Description",
                                        "description" : "Prepare brain sample for imaging."
                                    },
                                    {
                                        "header" : "Discipline",
                                        "description" : "Biology"
                                    },
                                    {
                                        "header" : "Process",
                                        "description" : "Manual disection + surgery of specimen."
                                    },
                                    {
                                        "header" : "Automatable",
                                        "description" : "No"
                                    }
                                ]
                            },
                            {
                                "header" : "Slice",
                                "contents" : [
                                    {
                                        "header" : "Description",
                                        "description" : "After the brain has been carefully disected, scientists must slice the brain into waffer thin samples as thin as 14 nanometers."
                                    },
                                    {
                                        "header" : "Discipline",
                                        "description" : "Biology"
                                    },
                                    {
                                        "header" : "Process",
                                        "description" : "Microtome vs other methods"
                                    },
                                    {
                                        "header" : "Automatable",
                                        "description" : "Yes"
                                    }
                                ]
                            },
                            {
                                "header" : "Image",
                                "contents" : [
                                    {
                                        "header" : "Description",
                                        "description" : "In order to capture the fine structure of the brain scientists use powerful electron microscopes."
                                    },
                                    {
                                        "header" : "Discipline",
                                        "description" : "Biology"
                                    },
                                    {
                                        "header" : "Process",
                                        "description" : "Image brain tissue slices, capture to digital spaces."
                                    },
                                    {
                                        "header" : "Automatable",
                                        "description" : "Yes"
                                    }
                                ]
                            },
                            {
                                "header" : "Align Images",
                                "contents" : [
                                    {
                                        "header" : "Description",
                                        "description" : "Align micrographs into a three dimensional volume"
                                    },
                                    {
                                        "header" : "Discipline",
                                        "description" : "Biology / Computer Science"
                                    },
                                    {
                                        "header" : "Process",
                                        "description" : "Use advanced image processing techniques to remove distortion introduced to the tissue samples during the preparation + imaging process."
                                    },
                                    {
                                        "header" : "Automatable",
                                        "description" : "Yes"
                                    }
                                ]
                            },
                            {
                                "header" : "Generate Segmentation",
                                "contents" : [
                                    {
                                        "header" : "Description",
                                        "description" : "Segment dataset, create semantic coloring in two-dimensional space."
                                    },
                                    {
                                        "header" : "Discipline",
                                        "description" : "Computer Science"
                                    },
                                    {
                                        "header" : "Process",
                                        "description" : "Trace through image stacks following neural structures like a coloring book."
                                    },
                                    {
                                        "header" : "Automatable",
                                        "description" : "Maybe"
                                    }
                                ]
                            },
                            {
                                "header" : "Extract Neurons",
                                "contents" : [
                                    {
                                        "header" : "Description",
                                        "description" : "Join together data from segmentation into three-dimensional volumes."
                                    },
                                    {
                                        "header" : "Discipline",
                                        "description" : "Computer Science"
                                    },
                                    {
                                        "header" : "Process",
                                        "description" : "Generate 3D volumetric meshes from stacks of 2D area representations."
                                    },
                                    {
                                        "header" : "Automatable",
                                        "description" : "Maybe"
                                    }
                                ]
                            },
                            {
                                "header" : "Find Connections",
                                "contents" : [
                                    {
                                        "header" : "Description",
                                        "description" : "Sift through neuron branches in search of synaptic connections."
                                    },
                                    {
                                        "header" : "Discipline",
                                        "description" : "Computer Science / Neuroscience"
                                    },
                                    {
                                        "header" : "Process",
                                        "description" : "Look for places where neurons intersect or synaptic clefts where cells exchange information."
                                    },
                                    {
                                        "header" : "Automatable",
                                        "description" : "Maybe"
                                    }
                                ]
                            },
                            {
                                "header" : "Analyze Network",
                                "contents" : [
                                    {
                                        "header" : "Description",
                                        "description" : "Create models to understand how connections within the network add up to the overall behavior captured during the Physiology section."
                                    },
                                    {
                                        "header" : "Discipline",
                                        "description" : "Neuroscience"
                                    },
                                    {
                                        "header" : "Process",
                                        "description" : "Utilize complex mathmatical models and statistics to find patterns within network connectivity."
                                    },
                                    {
                                        "header" : "Automatable",
                                        "description" : "Probably Not"
                                    }
                                ]
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorModuleMachine",
                    "data" : {
                        "bgColor" : "#e6e6e6",
                        "class" : "endeavor-item-no-margin",
                        "modules" : [
                            {
                                "name" : "endeavorPad",
                                "data" : {
                                    "class" : "endeavor-height-200px-responsive endeavor-item-no-margin endeavor-height-10vw"
                                }
                            },
                            {
                                "name" : "endeavorNestedImageFS",
                                "data" : {
                                    "margin" : "-10vw",
                                    "placeholder" : {
                                        "name" : "",
                                        "src" : "",
                                        "src" : "",
                                        "src_mobile" : "",
                                        "src_preview" : "",
                                        "caption" : ""
                                    },
                                    "image" : {
                                        "name": "C. Elegans Connectome",
                                        "src": "images/projects/museum/standard/museum-connectome-graph.jpg",
                                        "src_standard": "images/projects/museum/standard/museum-connectome-graph.jpg",
                                        "src_retina": "images/projects/museum/retina/museum-connectome-graph.jpg",
                                        "src_low": "images/empty.gif",
                                        "src_mobile": "images/projects/museum/hi-res/museum-connectome-graph.jpg",
                                        "src_preview": "images/projects/museum/hi-res/museum-connectome-graph.jpg",
                                        "caption": "C. Elegans Connectome"
                                    },
                                    "image2" : {
                                        "name": "C. Elegans Worm",
                                        "src": "images/projects/museum/standard/museum-worm.gif",
                                        "src_standard": "images/projects/museum/standard/museum-worm.gif",
                                        "src_retina": "images/projects/museum/retina/museum-worm.gif",
                                        "src_low": "images/empty.gif",
                                        "src_mobile": "images/projects/museum/hi-res/museum-worm.gif",
                                        "src_preview": "images/projects/museum/hi-res/museum-worm.gif",
                                        "caption": "C. Elegans Worm"
                                    }
                                }
                            },
                            {
                                "name" : "endeavorPullheaderCaptionFS",
                                "data" : {
                                    "textColor" : "#1a1a1a",
                                    "subheader" : "C. Elegans",
                                    "caption" : "So far, C. elegans is the only organism that boasts a complete connectome. Researchers are also working on connectomes for the fruit fly nervous system and the mouse brain."
                                }
                            },
                            {
                                "name" : "endeavorPad",
                                "data" : {
                                    "class" : "endeavor-height-200px-responsive endeavor-item-no-margin endeavor-height-100px"
                                }
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorParagraphChecklist",
                    "data" : {
                        "header" : "Market Research",
                        "id" : "ghost-market-research-affect",
                        "class" : "endeavor-item-125 endeavor-item-bottom-15",
                        "class2" : "endeavor-reveal",
                        "bgColor" : "",
                        "description" : "Given the academic nature of the Museum, we viewed Market Reaserch as an oppertunity to learn from peer successes and failures—essentially compile a list of best practices for engaging with data and the scientific community at large.",
                        "contents" : [
                            {
                                "header" : "Do's",
                                "icon" : "fa-thumbs-o-up",
                                "bullets" : [
                                    "Projects generally include a wealth of data along with supporting methods, empiracle results, and sometimes publications.",
                                    "Most data + figures support permalink option for robust citations.",
                                    "Good tools for filtering and exploring the data.",
                                    "Projects may include SDK + API packages for building custom applications from data."
                                ]
                            },
                            {
                                "header" : "Dont's",
                                "icon" : "fa-thumbs-o-down",
                                "bullets" : [
                                    "Information design could benifit from a designers touch. Complex jargon can inhibit glanceability for all but seasoned experts.",
                                    "Repository generally not responsive, useful only on desktop.",
                                    "Information architecture mostly flat, could benifit from chunking, progressive disclosure. Lack of onboarding.",
                                    "Navigation often ambiguous at best."
                                ]
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorGhostButton",
                    "data" : {
                        "class" : "endeavor-item-bottom-125 endeavor-text-left",
                        "text" : "Look Closer",
                        "align" : "",
                        "id" : "ghost-market-research",
                        "textColor" : "#1a1a1a"
                    }
                },
                {
                    "name" : "endeavorParagraphUsers",
                    "data" : {
                        "header" : "User Stories",
                        "id" : "ghost-user-stories-affect",
                        "class" : "endeavor-item-125 endeavor-item-bottom-15",
                        "class2" : "endeavor-reveal",
                        "bgColor" : "",
                        "description" : "Before comensing with design and development, we conducted interviews, site visits, and other forms of ethnographic research to gain insight into the lives of our potential users.",
                        "contents" : [
                            {
                                "header" : "Stakeholders",
                                "icon" : "fa-institution",
                                "bullets" : [
                                    {
                                        "header" : "SeungLab",
                                        "description" : "Researchers at SeungLab are highly skilled at gathering, managing data and thus have an excess of it but a lack of investigative power."
                                    }
                                ]
                            },
                            {
                                "header" : "Individuals",
                                "icon" : "fa-user",
                                "bullets" : [
                                    {
                                        "header" : "Neuroscientist",
                                        "description" : "Has hypotheses that may require additional data for substantiation. Needs general information about cell typologies."
                                    },
                                    {
                                        "header" : "Neuroanatomist",
                                        "description" : "Has hypotheses that may require additional data for substantiation. Needs specific information about cell morphology and physiology."
                                    },
                                    {
                                        "header" : "Student: Undergrad",
                                        "description" : "The brain is the most complex system in the known universe, learning by interacting with real cells + data leads to deeper processing and increased retention."
                                    },
                                    {
                                        "header" : "Student: Graduate",
                                        "description" : "Graduate students in search of a first publication can explore the museum in search of supporting evidence."
                                    },
                                    {
                                        "header" : "Gamer: Eyewire",
                                        "description" : "The museum functions as a repository of all the cells mapped by gamers on Eyewire. Here, players can come explore their work and marvel at the complex beauty of the cells."
                                    },
                                    {
                                        "header" : "Curious Surfer",
                                        "description" : "Neuroscience and the brain are at once beautiful and mysterious. Why not spend a few hours browsing through the basis of thought?"
                                    }
                                ]
                            },
                            {
                                "header" : "Organization",
                                "icon" : "fa-users",
                                "bullets" : [
                                    {
                                        "header" : "Lab",
                                        "description" : "Research labs all have unique specializations. The museum may be contain just the data necessary for their next paper."
                                    },
                                    {
                                        "header" : "University",
                                        "description" : "Professors often balance an active research practice alongside their teaching careers. The museum offers another aid for explaining the brain at the cellular level."
                                    },
                                    {
                                        "header" : "Eyewire",
                                        "description" : "As a leading citizen science project, Eyewire is tasked with sharing the beauty and complexity of the brain with non-experts."
                                    }
                                ]
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorGhostButton",
                    "data" : {
                        "class" : "endeavor-item-bottom-125 endeavor-text-left",
                        "text" : "Look Closer",
                        "align" : "",
                        "id" : "ghost-user-stories",
                        "textColor" : "#1a1a1a"
                    }
                },
                {
                    "name" : "endeavorChecklistHidden",
                    "data" : {
                        "header" : "Observations",
                        "id" : "ghost-observations-affect",
                        "class" : "endeavor-item-125 endeavor-item-bottom-15",
                        "class2" : "endeavor-reveal",
                        "class3" : "endeavor-border-top",
                        "icon" : "fa-hand-o-right",
                        "bgColor" : "",
                        "description" : "We conclude the Discover stage by focusing the values, needs, and challenges of our subjects.",
                        "contents" : [
                            {
                                "header" : "Publish or Perish",
                                "description" : "Researchers have an excess of data and a lack of investigative power."
                            },
                            {
                                "header" : "Scale = Collaboration",
                                "description" : "The scale of todays scientific challenges demand cross–disciplinary collaboration."
                            },
                            {
                                "header" : "Go Big or Go Home",
                                "description" : "Collaboration presents the opportunity for teams to leverage each others specialties to move faster and tackle larger and more important problems."
                            },
                            {
                                "header" : "Sharing = Caring",
                                "description" : "Collaboration necessitates sharing, of knowledge, time, ideas,  skills, and increasingly data."
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorGhostButton",
                    "data" : {
                        "class" : "endeavor-item-bottom-125 endeavor-text-left",
                        "text" : "Look Closer",
                        "align" : "",
                        "id" : "ghost-observations",
                        "textColor" : "#1a1a1a"
                    }
                },
                {
                    "name" : "endeavorDesignProcess",
                    "data" : {
                        "class" : "endeavor-item-top-125",
                        "process" : "Define",
                        "text" : "The strategic decisions make in the Define phase will determine the success or failure of the project. Based on the business goals, a communication strategy for the chosen digital touch points must now be developed. Based on the brand goals, we will create the design principles. With the help of user insights, we will develop guidelines for the user experience. Based on all the goals and requirements, we will define metrics for measuring success.",
                        "number" : "02/06",
                        "bgColor" : "#e6e6e6",
                        "textColor" : "#bfbfbf",
                        "textColor2" : "#d9d9d9"
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-no-margin",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Image segmentation",
                            "src": "images/projects/museum/standard/museum-project-specs.jpg",
                            "src_standard": "images/projects/museum/standard/museum-project-specs.jpg",
                            "src_retina": "images/projects/museum/retina/museum-project-specs.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/museum/hi-res/museum-project-specs.jpg",
                            "src_preview": "images/projects/museum/hi-res/museum-project-specs.jpg",
                            "caption": "Image segmentation"
                        }
                    }
                },
                {
                    "name" : "endeavorChecklistHidden",
                    "data" : {
                        "header" : "Framing our Challenge",
                        "id" : "ghost-design-questions-affect",
                        "class" : "endeavor-item-125 endeavor-item-bottom-15",
                        "class2" : "endeavor-reveal",
                        "class3" : "endeavor-border-top",
                        "icon" : "fa-hand-o-right",
                        "bgColor" : "",
                        "description" :"During the Discover phase we go super wide to understand the problem space and gain perspective from the point of view of our users. The Define phase presents an oppertunity to focus our research and frame our challenge through a series of simple internal questions.",
                        "contents" : [
                            {
                                "header" : "What is the problem you're trying to solve?",
                                "description" : "Researchers have an excess of data and a lack of investigative power."
                            },
                            {
                                "header" : "What is the ultimate impact that you're trying to have?",
                                "description" : "Enable more people, both expert and non-experts, to engage with neuroscience."
                            },
                            {
                                "header" : "What are some possible solutions to your problem?",
                                "description" : "Given the ease of scalability and potential for rapid development, creating a web-based application seems to be the most feasible option."
                            },
                            {
                                "header" : "What are some of the constraints + context?",
                                "description" : "We have a small team for both design, research, and development, and shorter than expected schedule for launching a usable product."
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorGhostButton",
                    "data" : {
                        "class" : "endeavor-item-bottom-125 endeavor-text-left",
                        "text" : "Look Closer",
                        "align" : "",
                        "id" : "ghost-design-questions",
                        "textColor" : "#1a1a1a"
                    }
                },
                {
                    "name" : "endeavorModuleMachine",
                    "data" : {
                        "bgColor" : "#e6e6e6",
                        "class" : "endeavor-item-top-125",
                        "modules" : [
                            {
                                "name" : "endeavorIntroFS",
                                "data" : {
                                    "margin" : "endeavor-item-250",
                                    "header" : "Hello, User",
                                    "subtext" : "Our research concluded that we should focus our efforts on designing a product for neuroscientists, as they are the demographic that aligns most closely with our available data and (after students) the most numerable.",
                                    "bgColor" : "",
                                    "class" : "",
                                    "textColor" : "#1a1a1a"
                                }
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorParagraphUsers",
                    "data" : {
                        "header" : "Project Requirements",
                        "id" : "ghost-project-requirements-affect",
                        "class" : "endeavor-item-125 endeavor-item-bottom-15",
                        "class2" : "endeavor-reveal",
                        "bgColor" : "",
                        "description" : "The Museum will function as an open repository for connectomic neuron reconstructions of neruons from Seung Lab. Below is an overview of the design and development considerations.",
                        "contents" : [
                            {
                                "header" : "Context",
                                "icon" : " fa-info",
                                "bullets" : [
                                    {
                                        "header" : "Application",
                                        "description" : "Create a responsive web application for visualizing and exploring connectomic data powered by a leading framework."
                                    }
                                ]
                            },
                            {
                                "header" : "Data Access",
                                "icon" : "fa-database",
                                "bullets" : [
                                    {
                                        "header" : "Mesh Delivery",
                                        "description" : "An efficient pipeline for delivering and displaying 3D neuron meshes."
                                    },
                                    {
                                        "header" : "Data Delivery",
                                        "description" : "A system for delivering supplementary connectomic data for neuron meshes."
                                    },
                                    {
                                        "header" : "Citation",
                                        "description" : "A system for generating semantic and persistant publication–quality citations."
                                    }
                                ]
                            },
                            {
                                "header" : "Visualization",
                                "icon" : "fa-pie-chart",
                                "bullets" : [
                                    {
                                        "header" : "Onboarding Diagrams",
                                        "description" : "Create an introudction to the project, data and Museum interation model."
                                    },
                                    {
                                        "header" : "3D Viewer",
                                        "description" : "A 3D environment capable of accurately displaying neuron meshes and supporting annotations."
                                    },
                                    {
                                        "header" : "Skeleton Density",
                                        "description" : "An interactive graph displaying stratification density information for neuron meshes."
                                    },
                                    {
                                        "header" : "Directional Response",
                                        "description" : "An interactive graph displaying directional response information for neuron meshes."
                                    },
                                    {
                                        "header" : "Temporal Response",
                                        "description" : "An interactive graph displaying temporal density information for neuron meshes."
                                    },
                                    {
                                        "header" : "Supporting Meta–Data",
                                        "description" : "Context relavant information supporting both 2D and 3D visuals."
                                    }
                                ]
                            },
                            {
                                "header" : "Interaction",
                                "icon" : "fa-dot-circle-o",
                                "bullets" : [
                                    {
                                        "header" : "Browse Data",
                                        "description" : "Progressively disclose infomration for users engagement."
                                    },
                                    {
                                        "header" : "Filter Data",
                                        "description" : "Dynamically filter through connectomic dataset with respect to classification system."
                                    },
                                    {
                                        "header" : "Search Data",
                                        "description" : "Auto-complete search throught connectomic data—by same categories available in filter."
                                    },
                                    {
                                        "header" : "Compare Data",
                                        "description" : "Overlay connectomic information to see trends in both 2D and 3D contexts"
                                    },
                                    {
                                        "header" : "Explore Data",
                                        "description" : "Freely engage with connectomic data in both 2D and 3D contexts."
                                    },
                                    {
                                        "header" : "Manipulate Data",
                                        "description" : "Quickly toggle, overlay, browse, filter, and search through connectomic information."
                                    },
                                    {
                                        "header" : "3D Navigation",
                                        "description" : "Freely manipulate neuron meshes in 3D context using familiar interaction models."
                                    },
                                    {
                                        "header" : "Learn More (Context)",
                                        "description" : "Where possible, provide additional context through user interaction or external links."
                                    },
                                    {
                                        "header" : "Share Views",
                                        "description" : "Figure generator for quickly sharing publication–quality scientific figures."
                                    }
                                ]
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorGhostButton",
                    "data" : {
                        "class" : "endeavor-item-bottom-125 endeavor-text-left",
                        "text" : "Look Closer",
                        "align" : "",
                        "id" : "ghost-project-requirements",
                        "textColor" : "#1a1a1a"
                    }
                },
                {
                    "name" : "endeavorParagraphImages",
                    "data" : {
                        "header" : "Application Overview",
                        "id" : "ghost-app-overview-affect",
                        "class" : "endeavor-item-125 endeavor-item-bottom-15",
                        "class2" : "endeavor-reveal",
                        "bgColor" : "",
                        "description" : "Perhaps these stories could be prefaced by a quick paragraph stating the importance of User Stories and their particular relevance to this project. Following could be a figure to summarize the relative knowledge + complexity of user needs / features most likely to engage with.",
                        "images" : [
                            {
                                "name": "museum-app-overview",
                                "src": "images/projects/museum/standard/museum-app-overview.png",
                                "src_standard": "images/projects/museum/standard/museum-app-overview.png",
                                "src_retina": "images/projects/museum/retina/museum-app-overview.png",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/museum/hi-res/museum-app-overview.png",
                                "src_preview": "images/projects/museum/hi-res/museum-app-overview.png",
                                "caption": "Museum app overview"
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorGhostButton",
                    "data" : {
                        "class" : "endeavor-item-bottom-125 endeavor-text-left",
                        "text" : "Look Closer",
                        "align" : "",
                        "id" : "ghost-app-overview",
                        "textColor" : "#1a1a1a"
                    }
                },
                {
                    "name" : "endeavorDesignProcess",
                    "data" : {
                        "class" : "endeavor-item-top-125",
                        "process" : "Design",
                        "text" : "",
                        "number" : "03/06",
                        "bgColor" : "#e6e6e6",
                        "textColor" : "#bfbfbf",
                        "textColor2" : "#d9d9d9"
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-no-margin",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Museum Styleguide Overview",
                            "src": "images/projects/museum/standard/museum-styleguide-overview.jpg",
                            "src_standard": "images/projects/museum/standard/museum-styleguide-overview.jpg",
                            "src_retina": "images/projects/museum/retina/museum-styleguide-overview.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/museum/hi-res/museum-styleguide-overview.jpg",
                            "src_preview": "images/projects/museum/hi-res/museum-styleguide-overview.jpg",
                            "caption": "Museum Styleguide Overview"
                        }
                    }
                },
                {
                    "name" : "endeavorParagraph",
                    "data" : {
                        "header" : "Styleguide",
                        "class" : "endeavor-item-125",
                        "bgColor" : "",
                        "description" : "To ensure consistency across application elements and devices we created a set of standards ranging from idenity to typography, to color and interation models. We organized our styleguide into 6 progressive sections: Identity, Elements, Components, Compositions, Layout, and Views."
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-no-margin",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Museum Styleguide Compile",
                            "src": "images/projects/museum/standard/museum-styleguide-compile.jpg",
                            "src_standard": "images/projects/museum/standard/museum-styleguide-compile.jpg",
                            "src_retina": "images/projects/museum/retina/museum-styleguide-compile.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/museum/hi-res/museum-styleguide-compile.jpg",
                            "src_preview": "images/projects/museum/hi-res/museum-styleguide-compile.jpg",
                            "caption": "Museum Styleguide Compile"
                        }
                    }
                },
                {
                    "name" : "endeavorCaptionFS",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "caption" : "An excerpt from the Identity section of the styleguide. We formatted each section to be modular to enable rapid iteration cycles between design and development. Below, the Color section utilizes a decidedly conflicting pallet to promote uniqueness across many data streams."
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "class" : "endeavor-item-bottom-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Museum Styleguide Color Data",
                            "src": "images/projects/museum/standard/museum-styleguide-color-data-export.jpg",
                            "src_standard": "images/projects/museum/standard/museum-styleguide-color-data-export.jpg",
                            "src_retina": "images/projects/museum/retina/museum-styleguide-color-data-export.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/museum/hi-res/museum-styleguide-color-data-export.jpg",
                            "src_preview": "images/projects/museum/hi-res/museum-styleguide-color-data-export.jpg",
                            "caption": "Museum Styleguide Color Data"
                        }
                    }
                },
                {
                    "name" : "endeavorModuleMachine",
                    "data" : {
                        "bgColor" : "#f7f7f7",
                        "class" : "endeavor-item-no-margin",
                        "modules" : [
                            {
                                "name" : "endeavorParagraph",
                                "data" : {
                                    "header" : "User Journey",
                                    "class" : "endeavor-item-top-125",
                                    "bgColor" : "",
                                    "description" : "We focused our user journey map on the experience of a first time neuroscientist user. While extensive, the map is not meant to include all possible touch points of the Museum, rather it serves to detail the flow of a single user from their perspective."
                                }
                            },
                            {
                                "name" : "endeavorGhostButtonURL",
                                "data" : {
                                    "class" : "endeavor-item-bottom-125 endeavor-text-left",
                                    "text" : "Hi-Res",
                                    "align" : "",
                                    "id" : "museum-user-journey-pdf",
                                    "url" : "images/projects/museum/hi-res/museum-user-journey.pdf",
                                    "textColor" : "#1a1a1a"
                                }
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-no-margin",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Image segmentation",
                            "src": "images/projects/museum/standard/museum-user-journey.jpg",
                            "src_standard": "images/projects/museum/standard/museum-user-journey.jpg",
                            "src_retina": "images/projects/museum/retina/museum-user-journey.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/museum/hi-res/museum-user-journey.jpg",
                            "src_preview": "images/projects/museum/hi-res/museum-user-journey.jpg",
                            "caption": "Image segmentation"
                        }
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "class" : "endeavor-item-125 endeavor-shadow-paper",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Museum Sketch Landing",
                            "src": "images/projects/museum/standard/museum-sketch-landing.jpg",
                            "src_standard": "images/projects/museum/standard/museum-sketch-landing.jpg",
                            "src_retina": "images/projects/museum/retina/museum-sketch-landing.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/museum/hi-res/museum-sketch-landing.jpg",
                            "src_preview": "images/projects/museum/hi-res/museum-sketch-landing.jpg",
                            "caption": "Museum Sketch Landing"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-no-margin",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Museum Sitemap",
                            "src": "images/projects/museum/standard/museum-sitemap.jpg",
                            "src_standard": "images/projects/museum/standard/museum-sitemap.jpg",
                            "src_retina": "images/projects/museum/retina/museum-sitemap.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/museum/hi-res/museum-sitemap.jpg",
                            "src_preview": "images/projects/museum/hi-res/museum-sitemap.jpg",
                            "caption": "Museum Sitemap"
                        }
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "class" : "endeavor-item-125 endeavor-shadow-paper",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Museum Sketch Elements",
                            "src": "images/projects/museum/standard/museum-sketch-2.jpg",
                            "src_standard": "images/projects/museum/standard/museum-sketch-2.jpg",
                            "src_retina": "images/projects/museum/retina/museum-sketch-2.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/museum/hi-res/museum-sketch-2.jpg",
                            "src_preview": "images/projects/museum/hi-res/museum-sketch-2.jpg",
                            "caption": "Museum Sketch Elements"
                        }
                    }
                },
                {
                    "name" : "endeavorModuleMachine",
                    "data" : {
                        "bgColor" : "#FFFFFF",
                        "class" : "endeavor-item-no-margin endeavor-padding-bottom-125",
                        "modules" : [
                            {
                                "name" : "endeavorImageFS",
                                "data" : {
                                    "placeholder" : {
                                        "name" : "",
                                        "src" : "",
                                        "src" : "",
                                        "src_mobile" : "",
                                        "src_preview" : "",
                                        "caption" : ""
                                    },
                                    "image" : {
                                        "name": "Museum Wireframe Desktop Menus",
                                        "src": "images/projects/museum/standard/museum-desktop-menus.jpg",
                                        "src_standard": "images/projects/museum/standard/museum-desktop-menus.jpg",
                                        "src_retina": "images/projects/museum/retina/museum-desktop-menus.jpg",
                                        "src_low": "images/empty.gif",
                                        "src_mobile": "images/projects/museum/hi-res/museum-desktop-menus.jpg",
                                        "src_preview": "images/projects/museum/hi-res/museum-desktop-menus.jpg",
                                        "caption": "Museum Wireframe Desktop Menus"
                                    }
                                }
                            },
                            {
                                "name" : "endeavorImageFS",
                                "data" : {
                                    "placeholder" : {
                                        "name" : "",
                                        "src" : "",
                                        "src" : "",
                                        "src_mobile" : "",
                                        "src_preview" : "",
                                        "caption" : ""
                                    },
                                    "image" : {
                                        "name": "Museum Wireframe Tablet Menus",
                                        "src": "images/projects/museum/standard/museum-tablet-views.gif",
                                        "src_standard": "images/projects/museum/standard/museum-tablet-views.gif",
                                        "src_retina": "images/projects/museum/retina/museum-tablet-views.gif",
                                        "src_low": "images/empty.gif",
                                        "src_mobile": "images/projects/museum/hi-res/museum-tablet-views.gif",
                                        "src_preview": "images/projects/museum/hi-res/museum-tablet-views.gif",
                                        "caption": "Museum Wireframe Tablet Menus"
                                    }
                                }
                            },
                            {
                                "name" : "endeavorImageFS",
                                "data" : {
                                    "placeholder" : {
                                        "name" : "",
                                        "src" : "",
                                        "src" : "",
                                        "src_mobile" : "",
                                        "src_preview" : "",
                                        "caption" : ""
                                    },
                                    "image" : {
                                        "name": "Museum Wireframe Mobile Menus",
                                        "src": "images/projects/museum/standard/museum-mobile-menus.jpg",
                                        "src_standard": "images/projects/museum/standard/museum-mobile-menus.jpg",
                                        "src_retina": "images/projects/museum/retina/museum-mobile-menus.jpg",
                                        "src_low": "images/empty.gif",
                                        "src_mobile": "images/projects/museum/hi-res/museum-mobile-menus.jpg",
                                        "src_preview": "images/projects/museum/hi-res/museum-mobile-menus.jpg",
                                        "caption": "Museum Wireframe Mobile Menus"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-bottom-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Museum Grid System",
                            "src": "images/projects/museum/standard/museum-grid.jpg",
                            "src_standard": "images/projects/museum/standard/museum-grid.jpg",
                            "src_retina": "images/projects/museum/retina/museum-grid.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/museum/hi-res/museum-grid.jpg",
                            "src_preview": "images/projects/museum/hi-res/museum-grid.jpg",
                            "caption": "Museum Grid System"
                        }
                    }
                },
                {
                    "name" : "endeavorParagraph",
                    "data" : {
                        "header" : "Grid System",
                        "class" : "endeavor-item-top endeavor-item-bottom",
                        "bgColor" : "",
                        "description" : "By this point in the process we had established Angular as our a front-end framework. This motivated an increasingly modular design language of nested + encapsualted components. Written content on the Museum consists of mostly static descriptions and labels. Without having to account for dynamically generated CMS content, the grid was able to remain in a relatively simple 8pt x 4pt system."
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Museum 3D Controls",
                            "src": "images/projects/museum/standard/museum-3d-controls-2.jpg",
                            "src_standard": "images/projects/museum/standard/museum-3d-controls-2.jpg",
                            "src_retina": "images/projects/museum/retina/museum-3d-controls-2.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/museum/hi-res/museum-3d-controls-2.jpg",
                            "src_preview": "images/projects/museum/hi-res/museum-3d-controls-2.jpg",
                            "caption": "Museum 3D Controls"
                        }
                    }
                },
                {
                    "name" : "endeavorParagraph",
                    "data" : {
                        "header" : "3D Controls",
                        "class" : "endeavor-item-top endeavor-item-bottom",
                        "bgColor" : "",
                        "description" : "3D navigation is complex. Our research revealed that most scientists are interested in viewing the neurons from just two specific orientations: top and side. The accuracy of these views is dramatically improved by implementing virtual cameras with othographic projection as an alternative to standard perpsective projection. To facilitate swift comparisions we created a set of 3D control buttons for quick snapping between views and projections."
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Museum Wires Devices",
                            "src": "images/projects/museum/standard/museum-wire-devices.jpg",
                            "src_standard": "images/projects/museum/standard/museum-wire-devices.jpg",
                            "src_retina": "images/projects/museum/retina/museum-wire-devices.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/museum/hi-res/museum-wire-devices.jpg",
                            "src_preview": "images/projects/museum/hi-res/museum-wire-devices.jpg",
                            "caption": "Museum Wires Devices"
                        }
                    }
                },
                {
                    "name" : "endeavorDesignProcess",
                    "data" : {
                        "class" : "endeavor-item-no-margin",
                        "process" : "Deploy",
                        "text" : "",
                        "number" : "04/06",
                        "bgColor" : "#e6e6e6",
                        "textColor" : "#bfbfbf",
                        "textColor2" : "#d9d9d9"
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-bottom-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Museum Testing Tablet",
                            "src": "images/projects/museum/standard/museum-ipad-video.jpg",
                            "src_standard": "images/projects/museum/standard/museum-ipad-video.jpg",
                            "src_retina": "images/projects/museum/retina/museum-ipad-video.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/museum/hi-res/museum-ipad-video.jpg",
                            "src_preview": "images/projects/museum/hi-res/museum-ipad-video.jpg",
                            "caption": "Museum Testing Tablet"
                        }
                    }
                },
                {
                    "name" : "endeavorParagraph",
                    "data" : {
                        "header" : "Real Data",
                        "class" : "endeavor-item-top endeavor-item-bottom",
                        "bgColor" : "",
                        "description" : "Having a solid understanding of content is critical when designing with technical materials. It turns out the end goal isn't to reduce the amount of complexity but rather to manage the level of it in a given view or interaction."
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Museum Science Figure Max",
                            "src": "images/projects/museum/standard/museum-science-figure-1.jpg",
                            "src_standard": "images/projects/museum/standard/museum-science-figure-1.jpg",
                            "src_retina": "images/projects/museum/retina/museum-science-figure-1.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/museum/hi-res/museum-science-figure-1.jpg",
                            "src_preview": "images/projects/museum/hi-res/museum-science-figure-1.jpg",
                            "caption": "Museum Science Figure Max"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-bottom",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Museum Science Figure Split",
                            "src": "images/projects/museum/standard/museum-science-figure-4.jpg",
                            "src_standard": "images/projects/museum/standard/museum-science-figure-4.jpg",
                            "src_retina": "images/projects/museum/retina/museum-science-figure-4.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/museum/hi-res/museum-science-figure-4.jpg",
                            "src_preview": "images/projects/museum/hi-res/museum-science-figure-4.jpg",
                            "caption": "Museum Science Figure Split"
                        }
                    }
                },
                {
                    "name" : "endeavorParagraph",
                    "data" : {
                        "header" : "Data Driven Design",
                        "class" : "endeavor-item-top endeavor-item-bottom",
                        "bgColor" : "",
                        "description" : "In the context of the Museum, data driven design means approaching the design of graphs and resulting information architecture through the lens of a scientist. We asked what data are most important and what is the best format for communication Our iteration process moved from digesting raw data to a cycle of sketching, implementing, user testing and refining through interative prototypes."
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Museum Chart Process",
                            "src": "images/projects/museum/standard/museum-chart-process.jpg",
                            "src_standard": "images/projects/museum/standard/museum-chart-process.jpg",
                            "src_retina": "images/projects/museum/retina/museum-chart-process.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/museum/hi-res/museum-chart-process.jpg",
                            "src_preview": "images/projects/museum/hi-res/museum-chart-process.jpg",
                            "caption": "Museum Chart Process"
                        }
                    }
                },
                {
                    "name" : "endeavorModuleMachine",
                    "data" : {
                        "bgColor" : "#e6e6e6",
                        "class" : "endeavor-item-no-margin endeavor-padding-vertical-125",
                        "modules" : [
                            {
                                "name" : "endeavorParagraph",
                                "data" : {
                                    "header" : "Closure Cards",
                                    "class" : "endeavor-item-no-margin",
                                    "bgColor" : "",
                                    "description" : "Elements that are close together are perceived to be more related than elements that are farther apart. We used the pricnple of proximity to design a card system to encapsulate information and interative elements within relavant components."
                                }
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorVideoFS",
                    "data" : {
                        "class" : "endeavor-item-no-margin endeavor-width-100vw endeavor-pos-rel",
                        "loop": "",
                        "muted": "",
                        "autoplay": "true",
                        "src" : {
                            "webm" : "images/projects/museum/videos/museum-chart.webm",
                            "mp4" : "images/projects/museum/videos/museum-chart.mp4",
                            "poster" : "images/projects/museum/videos/museum-chart.jpg"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item endeavor-item-top-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Museum Charts 1",
                            "src": "images/projects/museum/standard/museum-charts-1.1.jpg",
                            "src_standard": "images/projects/museum/standard/museum-charts-1.1.jpg",
                            "src_retina": "images/projects/museum/retina/museum-charts-1.1.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/museum/hi-res/museum-charts-1.1.jpg",
                            "src_preview": "images/projects/museum/hi-res/museum-charts-1.1.jpg",
                            "caption": "Museum Charts 1"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Museum Temporal Gif",
                            "src": "images/projects/museum/standard/museum-temporal-1.gif",
                            "src_standard": "images/projects/museum/standard/museum-temporal-1.gif",
                            "src_retina": "images/projects/museum/retina/museum-temporal-1.gif",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/museum/hi-res/museum-temporal-1.gif",
                            "src_preview": "images/projects/museum/hi-res/museum-temporal-1.gif",
                            "caption": "Museum Temporal Gif"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-bottom-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Museum Charts 1",
                            "src": "images/projects/museum/standard/museum-charts-2.1.jpg",
                            "src_standard": "images/projects/museum/standard/museum-charts-2.1.jpg",
                            "src_retina": "images/projects/museum/retina/museum-charts-2.1.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/museum/hi-res/museum-charts-2.1.jpg",
                            "src_preview": "images/projects/museum/hi-res/museum-charts-2.1.jpg",
                            "caption": "Museum Charts 1"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-no-margin",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Museum Sidebar",
                            "src": "images/projects/museum/standard/museum-sidebar.jpg",
                            "src_standard": "images/projects/museum/standard/museum-sidebar.jpg",
                            "src_retina": "images/projects/museum/retina/museum-sidebar.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/museum/hi-res/museum-sidebar.jpg",
                            "src_preview": "images/projects/museum/hi-res/museum-sidebar.jpg",
                            "caption": "Museum Sidebar"
                        }
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Museum Legend",
                            "src": "images/projects/museum/standard/museum-legend.jpg",
                            "src_standard": "images/projects/museum/standard/museum-legend.jpg",
                            "src_retina": "images/projects/museum/retina/museum-legend.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/museum/hi-res/museum-legend.jpg",
                            "src_preview": "images/projects/museum/hi-res/museum-legend.jpg",
                            "caption": "Museum Legend"
                        }
                    }
                },
                {
                    "name" : "endeavorVideoFS",
                    "data" : {
                        "class" : "endeavor-item-top-125 endeavor-width-100vw endeavor-pos-rel",
                        "loop": "",
                        "muted": "",
                        "autoplay": "true",
                        "src" : {
                            "webm" : "images/projects/museum/videos/museum-autocomplete.webm",
                            "mp4" : "images/projects/museum/videos/museum-autocomplete.mp4",
                            "poster" : "images/projects/museum/videos/museum-autocomplete.jpg"
                        }
                    }
                },
                {
                    "name" : "endeavorParagraph",
                    "data" : {
                        "header" : "Auto Complete",
                        "class" : "endeavor-item-125",
                        "bgColor" : "",
                        "description" : "The problem of search in the Museum is knotty. Most classification categories are barely human-readible and cell names are stored as five or six digit strings. Searching can start from a place of uncertainty. A simple implementation of auto–complete text entry offers attractive advantages in both speed and usability."
                    }
                },
                {
                    "name" : "endeavorDesignProcess",
                    "data" : {
                        "class" : "endeavor-item-top-125",
                        "process" : "Discussion",
                        "text" : "",
                        "number" : "05/06",
                        "bgColor" : "#e6e6e6",
                        "textColor" : "#bfbfbf",
                        "textColor2" : "#d9d9d9"
                    }
                },
                {
                    "name" : "endeavorParagraphChecklist",
                    "data" : {
                        "header" : "Reflecting",
                        "id" : "ghost-reflecting-affect",
                        "class" : "endeavor-item-125 endeavor-item-bottom-15",
                        "class2" : "endeavor-reveal",
                        "bgColor" : "",
                        "description" : "The Museum was a perfect storm of a project. Extensive ethnographic research paved the way for a truly human-centered design process. Our team was able to match user needs with stakeholder expectations and deliver a fully functional product ahead of schedule. We tackled a complex problem with an iterative development cycle. Not every proposed feature made it to the current release but an extensive styleguide and robust development framework allow for extendability by a skeleton team of ressearchers at SeungLab.",
                        "contents" : [
                            {
                                "header" : "Do's",
                                "icon" : "fa-thumbs-o-up",
                                "bullets" : [
                                    "Front-end frameworks are powerful ways to think about both the development and design cycles for web applications",
                                    "Sharing design prototypes early on with both stakeholders and users helps to keep the project grounded.",
                                    "Leveraging existing design systems like Google's Material Design Lite accelerate both design and development.",
                                    "Thinking small to go big helped to keep feature creep to a minimum."
                                ]
                            },
                            {
                                "header" : "Dont's",
                                "icon" : "fa-thumbs-o-down",
                                "bullets" : [
                                    "You are not your user. Don't make the mistake of thinking you (as a designer) know best when it comes to prioritizing features.",
                                    "You don't have to go it alone. Don't be afraid to ask for input from team members when diving in to the dev space, making a relable and readible code is what counts."
                                ]
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorGhostButton",
                    "data" : {
                        "class" : "endeavor-item-bottom-125 endeavor-text-left",
                        "text" : "Look Closer",
                        "align" : "",
                        "id" : "ghost-reflecting",
                        "textColor" : "#1a1a1a"
                    }
                },
                {
                    "name" : "endeavorParagraphPoints",
                    "data" : {
                        "class" : "endeavor-item",
                        "bgColor" : "",
                        "header" : "",
                        "contents": [
                            {
                                "header": "Collaboration",
                                "description" : "We partnered with Seunglab to design, develop, and deploy a responsive, open source, web application targeted towards neuroscientists with the goal of assisting researchers in the classification of new neuron typologies."
                            },
                            {
                                "header": "Iterative Development",
                                "description" : "Using Google’s Material Design library as basis for interaction patterns, we rapidly deployed a beta version and began extensive prototyping while seeking usability feedback from a host of researchers and designers. We continued prototyping for two months–refining touch points, tweaking the usability and functionality of charts, improving mesh loading performance, and adding features like auto-complete search to name a few."
                            },
                            {
                                "header": "Looking Forward",
                                "description" : "After the push to production, we handed off our design + development guidelines to the team at Seunglab where researchers continue to grow the platform with feedback from the scientific community."
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorParagraph",
                    "data" : {
                        "header" : "Explore Live",
                        "class" : "endeavor-item-top-125",
                        "bgColor" : "",
                        "description" : ""
                    }
                },
                {
                    "name" : "endeavorGhostButtonURL",
                    "data" : {
                        "class" : "endeavor-item-bottom-125 endeavor-text-left",
                        "text" : "Send It",
                        "align" : "",
                        "id" : "museum-live",
                        "url" : "http://museum.eyewire.org/",
                        "textColor" : "#1a1a1a"
                    }
                },
                {
                    "name" : "endeavorPad",
                    "data" : {
                        "class" : "endeavor-height-200px-responsive endeavor-item-no-margin endeavor-height-10vw"
                    }
                }
            ]
        },
        {
            "route" :"synapse-project",
            "name"  : "Synapse",
            "project_type"  : "Project",
            "year"  : "2016",
            "preview" :"synapse-preview",
            "medium": [
                "Prototype",
                "Digital",
                "Web"
            ],
            "technique": [
                "Sketch",
                "FramerJs",
                "Chromium"
            ],
            "description" : {
                "quote": "Prototyping a possible future for the worlds smartest citizen science project.",
                "brief": "Eyewire is a game to map the brain in collaboration with the Seung Lab at Princeton. Anyone can play and you need no scientific background—over 200,000 people from 145 countries already do. Together they are mapping the 3D structure of neurons; advancing the quest to understand ourselves. To achieve viral and sustained growth, Eyewire will need to invest in improved user experience design. UX design is the process of enhancing user satisfaction and loyalty by improving the usability, ease of use, and pleasure provided in the interaction between the user and the product.",
                "challenge": "What would the future of Eyewire look like? How would it behave? Shrugging aside current browser limitations, I set to work designing and prototyping my vision for the future of Eyewire. This prototype uses elements from a new design language I've been developing, it's built using a combination of Sketch, FramerJs and threejs."
            },
            "meta" : {
                "Client" : "Eyewire",
                "Year" : "2016++",
                "Role" : "Designer/Developer",
                "Team" : "-",
                "Discipline" : "Interaction Design, Design Research, Prototyping",
                "Medium" : "Responsive Web Application",
                "Technologies" : "Dropbox Paper, Sketch, Craft, Sublime Text, FramerJs, threejs, openCTM",
                "Duration" : "One Month"
            },
            "image_hero": "images/projects/synapse/hi-res/synapse-hero.jpg",
            "image_preview": "images/projects/synapse/hi-res/synapse-preview.jpg",
            "sections" : [
                {
                    "name" : "endeavorVideoFS",
                    "data" : {
                        "class" : "endeavor-item-no-margin endeavor-width-100vw endeavor-pos-rel",
                        "loop": "",
                        "muted": "",
                        "autoplay": "true",
                        "src" : {
                            "webm" : "images/projects/synapse/videos/synapse-framer.webm",
                            "mp4" : "images/projects/synapse/videos/synapse-framer.mp4",
                            "poster" : "images/projects/synapse/videos/synapse-framer.jpg"
                        }
                    }
                },
                {
                    "name" : "endeavorModuleMachine",
                    "data" : {
                        "bgColor" : "#ececec",
                        "class" : "endeavor-item-bottom-250",
                        "modules" : [
                            {
                                "name" : "endeavorImageFS",
                                "data" : {
                                    "class" : "endeavor-item-125",
                                    "placeholder" : {
                                        "name" : "",
                                        "src" : "",
                                        "src" : "",
                                        "src_mobile" : "",
                                        "src_preview" : "",
                                        "caption" : ""
                                    },
                                    "image" : {
                                        "name": "Syanpse Sponsors",
                                        "src": "images/projects/synapse/standard/synapse-sponsors-3.png",
                                        "src_standard": "images/projects/synapse/standard/synapse-sponsors-3.png",
                                        "src_retina": "images/projects/synapse/retina/synapse-sponsors-3.png",
                                        "src_low": "images/empty.gif",
                                        "src_mobile": "images/projects/synapse/hi-res/synapse-sponsors-3.png",
                                        "src_preview": "images/projects/synapse/hi-res/synapse-sponsors-3.png",
                                        "caption": "Syanpse Sponsors"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorChecklist",
                    "data" : {
                        "header" : "Key Features",
                        "class" : "endeavor-item-125",
                        "class2" : "",
                        "class3" : "",
                        "class4" : "checklist-simple",
                        "icon" : "fa-hand-o-right",
                        "bgColor" : "",
                        "description" : "",
                        "contents" : [
                            {
                                "header" : "Atomic Design System",
                                "description" : ""
                            },
                            {
                                "header" : "Framer Prototype",
                                "description" : ""
                            },
                            {
                                "header" : "Notification System",
                                "description" : ""
                            },
                            {
                                "header" : "8pt Grid System",
                                "description" : ""
                            },
                            {
                                "header" : "Blur–Behind Style",
                                "description" : ""
                            },
                            {
                                "header" : "Iterative Design Cycle",
                                "description" : ""
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item endeavor-item-top-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Synapse Overview",
                            "src": "images/projects/synapse/standard/synapse-hero.jpg",
                            "src_standard": "images/projects/synapse/standard/synapse-hero.jpg",
                            "src_retina": "images/projects/synapse/retina/synapse-hero.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/synapse/hi-res/synapse-hero.jpg",
                            "src_preview": "images/projects/synapse/hi-res/synapse-hero.jpg",
                            "caption": "Synapse Overview"
                        }
                    }
                },
                {
                    "name" : "endeavorCaptionFS",
                    "data" : {
                        "class" : "endeavor-item-bottom-125",
                        "caption" : "(Above) Synapse was designed as a vision. Free of cross-browser limitations, I explored formal and stylistic possibilities usually reserved for native applications. I found that the blur–behind effect (currently only available in Webkit–based browsers) was quite useful in preserving 3D content, while providing a futuristic aesthetic. It also complimented the dark-UI, shifting the users focus to the 3D neuron."
                    }
                },
                {
                    "name" : "endeavorParagraph",
                    "data" : {
                        "header" : "Try it Live",
                        "class" : "endeavor-item-top-125",
                        "bgColor" : "",
                        "description" : ""
                    }
                },
                {
                    "name" : "endeavorGhostButtonURL",
                    "data" : {
                        "class" : "endeavor-item-bottom-125 endeavor-text-left",
                        "text" : "Go For It",
                        "align" : "",
                        "id" : "museum-live",
                        "url" : "https://framer.cloud/TRSiM",
                        "textColor" : "#1a1a1a"
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Synapse Announcements",
                            "src": "images/projects/synapse/standard/synapse-announcements.jpg",
                            "src_standard": "images/projects/synapse/standard/synapse-announcements.jpg",
                            "src_retina": "images/projects/synapse/retina/synapse-announcements.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/synapse/hi-res/synapse-announcements.jpg",
                            "src_preview": "images/projects/synapse/hi-res/synapse-announcements.jpg",
                            "caption": "Synapse Announcements"
                        }
                    }
                },
                {
                    "name" : "endeavorParagraphUsers",
                    "data" : {
                        "header" : "Notification System",
                        "id" : "ghost-notification-system-affect",
                        "class" : "endeavor-item-125 endeavor-item-bottom-15",
                        "class2" : "endeavor-reveal",
                        "bgColor" : "",
                        "description" : "The primary motivation for this project was to prototype a new in-game notification system. We began this process with a series of brainstorming sessions where we listed and categorized all the possible game states in Eyewire. From there we chose to pursue announcement notifications for our initial MVP. Announcement notifications are notifications that appear when a new game state has been reached. They come in three flavors: Individual, Targeted, and Global.",
                        "contents" : [
                            {
                                "header" : "Individual Examples (Personalized messages to individual players)",
                                "icon" : "fa-cube",
                                "bullets" : [
                                    {
                                        "header" : "Success",
                                        "description" : "You completed 10x growth with project Neo!"
                                    },
                                    {
                                        "header" : "Top Player of Day",
                                        "description" : "You were yesterday’s top player of the day with xxxxx points!"
                                    },
                                    {
                                        "header" : "Top Ten Monthly",
                                        "description" : "You were in the top 10 players for this month at #7!"
                                    },
                                    {
                                        "header" : "Promotion",
                                        "description" : "You were promoted to the role of Scout."
                                    }
                                ]
                            },
                            {
                                "header" : "Targeted Examples (Personalized messages to targeted player groups)",
                                "icon" : "fa-cog",
                                "bullets" : [
                                    {
                                        "header" : "Competition",
                                        "description" : "The competition ends in 30 mins!  Time to make your move."
                                    },
                                    {
                                        "header" : "Competition",
                                        "description" : "The competition has ended.  Check the leaderboard for final scores."
                                    },
                                    {
                                        "header" : "Competition (Candy World)",
                                        "description" : "On 12/17 get catapulted into a tooth-achingly sweet world(link to blog)."
                                    },
                                    {
                                        "header" : "Challenge (Mergamatic)",
                                        "description" : "Find a merger in the current overview cell."
                                    }
                                ]
                            },
                            {
                                "header" : "Global Examples (General messages intended for the entire player base)",
                                "icon" : "fa-cogs",
                                "bullets" : [
                                    {
                                        "header" : "Big News",
                                        "description" : "Eyewire just published a paper on xyz (link)."
                                    },
                                    {
                                        "header" : "Big News",
                                        "description" : "We just completed sector 5 in The Dig (link)."
                                    },
                                    {
                                        "header" : "Telegram",
                                        "description" : "We need some players to help us finish cell xxxxxxx."
                                    },
                                    {
                                        "header" : "Tech Fail",
                                        "description" : "Grim’s stuck in the servers again!  Try panda cam while you wait (link)."
                                    }
                                ]
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorGhostButton",
                    "data" : {
                        "class" : "endeavor-item-bottom-125 endeavor-text-left",
                        "text" : "Read More",
                        "align" : "",
                        "id" : "ghost-notification-system",
                        "textColor" : "#1a1a1a"
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Synapse Notifications",
                            "src": "images/projects/synapse/standard/synapse-notification.jpg",
                            "src_standard": "images/projects/synapse/standard/synapse-notification.jpg",
                            "src_retina": "images/projects/synapse/retina/synapse-notification.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/synapse/hi-res/synapse-notification.jpg",
                            "src_preview": "images/projects/synapse/hi-res/synapse-notification.jpg",
                            "caption": "Synapse Notifications"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Synapse Symbols",
                            "src": "images/projects/synapse/standard/synapse-symbols-grid.jpg",
                            "src_standard": "images/projects/synapse/standard/synapse-symbols-grid.jpg",
                            "src_retina": "images/projects/synapse/retina/synapse-symbols-grid.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/synapse/hi-res/synapse-symbols-grid.jpg",
                            "src_preview": "images/projects/synapse/hi-res/synapse-symbols-grid.jpg",
                            "caption": "Synapse Symbols"
                        }
                    }
                },
                {
                    "name" : "endeavorChecklistHidden",
                    "data" : {
                        "header" : "Atomic Design",
                        "id" : "ghost-atomic-design-affect",
                        "class" : "endeavor-item-125 endeavor-item-bottom-15",
                        "class2" : "endeavor-reveal",
                        "class3" : "endeavor-border-top",
                        "icon" : "fa-hand-spock-o",
                        "bgColor" : "",
                        "description" :"Iterative design + development strategy demands the systematic organization of project assets. I have found the principles of Atomic Design conducive to this process. Inspired by physics of the natural world and possibly the divide and conquer algorithms of computer science space, Atomic Design reduces project asset clutter into six unique types: Identity, Elements, Components, Compositions, Layout, and Views.",
                        "contents" : [
                            {
                                "header" : "Identity",
                                "description" : "Styles: Typefaces, Typography, Color, Brand Assets"
                            },
                            {
                                "header" : "Elements",
                                "description" : "The simplest reusable items: Buttons, Drop–Downs, Nav–Bars, Footers, Switches, Toggles, etc"
                            },
                            {
                                "header" : "Components",
                                "description" : "Reusable combinations of elements: Cards, Dialogs, Forms, Prompts, etc"
                            },
                            {
                                "header" : "Compositions",
                                "description" : "Reusable collections of Components: Sidebars, Pop-Ups, etc "
                            },
                            {
                                "header" : "Layout",
                                "description" : "Grid System: I make use of two grids, one for local layout (8pt x 4pt) and another for global organization (8-12 responsive columns)."
                            },
                            {
                                "header" : "Views",
                                "description" : "Collections of Compositions, Components, and Elements: Overview, In-Cube, Scouts' Log, etc"
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorGhostButton",
                    "data" : {
                        "class" : "endeavor-item-bottom-125 endeavor-text-left",
                        "text" : "Read More",
                        "align" : "",
                        "id" : "ghost-atomic-design",
                        "textColor" : "#1a1a1a"
                    }
                },
                {
                    "name" : "endeavorImageSlider",
                    "data" : {
                        "meta" : "Algorithmic",
                        "images" : [
                            {
                                "name": "Synapse Sketch 1",
                                "src": "images/projects/synapse/standard/synapse-sketch-1.jpg",
                                "src_standard": "images/projects/synapse/standard/synapse-sketch-1.jpg",
                                "src_retina": "images/projects/synapse/retina/synapse-sketch-1.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/synapse/hi-res/synapse-sketch-1.jpg",
                                "src_preview": "images/projects/synapse/hi-res/synapse-sketch-1.jpg",
                                "caption": "Dig gif image"   
                            },
                            {
                                "name": "Synapse Sketch 2",
                                "src": "images/projects/synapse/standard/synapse-sketch-2.jpg",
                                "src_standard": "images/projects/synapse/standard/synapse-sketch-2.jpg",
                                "src_retina": "images/projects/synapse/retina/synapse-sketch-2.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/synapse/hi-res/synapse-sketch-2.jpg",
                                "src_preview": "images/projects/synapse/hi-res/synapse-sketch-2.jpg",
                                "caption": "Dig gif image"   
                            },
                            {
                                "name": "Synapse Sketch 3",
                                "src": "images/projects/synapse/standard/synapse-sketch-3.jpg",
                                "src_standard": "images/projects/synapse/standard/synapse-sketch-3.jpg",
                                "src_retina": "images/projects/synapse/retina/synapse-sketch-3.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/synapse/hi-res/synapse-sketch-3.jpg",
                                "src_preview": "images/projects/synapse/hi-res/synapse-sketch-3.jpg",
                                "caption": "Dig gif image"   
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item endeavor-item-top-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Synapse Overview",
                            "src": "images/projects/synapse/standard/synapse-sketch-system.jpg",
                            "src_standard": "images/projects/synapse/standard/synapse-sketch-system.jpg",
                            "src_retina": "images/projects/synapse/retina/synapse-sketch-system.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/synapse/hi-res/synapse-sketch-system.jpg",
                            "src_preview": "images/projects/synapse/hi-res/synapse-sketch-system.jpg",
                            "caption": "Synapse Overview"
                        }
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "class" : "endeavor-item",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Synapse Announcements",
                            "src": "images/projects/synapse/standard/synapse-composition-grid.jpg",
                            "src_standard": "images/projects/synapse/standard/synapse-composition-grid.jpg",
                            "src_retina": "images/projects/synapse/retina/synapse-composition-grid.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/synapse/hi-res/synapse-composition-grid.jpg",
                            "src_preview": "images/projects/synapse/hi-res/synapse-composition-grid.jpg",
                            "caption": "Synapse Announcements"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Synapse Overview",
                            "src": "images/projects/synapse/standard/synapse-chart.gif",
                            "src_standard": "images/projects/synapse/standard/synapse-chart.gif",
                            "src_retina": "images/projects/synapse/retina/synapse-chart.gif",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/synapse/hi-res/synapse-chart.gif",
                            "src_preview": "images/projects/synapse/hi-res/synapse-chart.gif",
                            "caption": "Synapse Overview"
                        }
                    }
                },
                {
                    "name" : "endeavorParagraphChecklist",
                    "data" : {
                        "header" : "Reflecting",
                        "id" : "ghost-reflecting-affect",
                        "class" : "endeavor-item-250",
                        "class2" : "endeavor-reveal",
                        "bgColor" : "",
                        "description" : "I started this project by interviewing Eyewire players and stakeholders. I then quickly worked alongside game admins and our game dev team to generate rough specifications for an MVP notification system. After a lot of initial sketching I moved to building out a solid file structure in preparation for an iterative design cycle between static assets in Sketch and the dynamic world of Framer. The Synapse prototype has been my first experience heavily integrating Framer into my design process. Though Framer has a significantly higher learning curve than something like Invision or Flinto, the potential is incredible. Having a strong foundation in programing, I find that Framer simplifies the development cycle for a number of common interaction design challenges like tuning microinteractions, designing with real data, and testing application behavior + feedback loops. Framer integrates super well with Sketch symbols speeding the refinement process for design language towards a sort of parametric system like many CAD software packages (Solid Works, 3ds Max, etc). I'm looking forward to working more with Framer.",
                        "contents": ""
                    }
                },
                {
                    "name" : "endeavorPad",
                    "data" : {
                        "class" : "endeavor-height-200px-responsive endeavor-item-no-margin endeavor-height-10vw"
                    }
                }
            ]
        },
        {
            "route" :"explore-project",
            "name"  : "Eyewire Explore",
            "project_type"  : "Project",
            "year"  : "2015-2016",
            "preview" :"explore-preview",
            "medium": [
                "Digital",
                "Web Application"
            ],
            "technique": [
                "User Experience",
                "Interaction Design",
                "Creative Coding",
                "Writing"
            ],
            "description" : {
                "quote": "Refreshing Eyewire’s landing page with the addition of an interactive narrative-driven explore section.",
                "brief": "Eyewire is a game to map the brain in collaboration with the Seung Lab at Princeton. Anyone can play and you need no scientific background—over 200,000 people from 145 countries already do. Together they are mapping the 3D structure of neurons; advancing the quest to understand ourselves. To achieve viral and sustained growth, Eyewire will need to invest in improved user experience design. UX design is the process of enhancing user satisfaction and loyalty by improving the usability, ease of use, and pleasure provided in the interaction between the user and the product.",
                "challenge": "I challenged my team to design a mobile friendly solution for connecting prospective Eyewire players to the science and the story behind the citizen science project. Better UX through interative narrative will result in increased conversion and retension rates. I proposed a refresh to Eyewire’s current landing page and the addition of an explore section featuring complete support for mobile, tablet, and desktop devices. The increased context will allow prospective players to engage with Eyewire before entering the tutorial leading to substaintially increased conversion rates."
            },
            "meta" : {
                "Client" : "Eyewire",
                "Year" : "2015-2016",
                "Role" : "Designer / Developer",
                "Team" : "Eyewire: Amy Robinson, William Silversmith, Chris Jordan, Hyuna Choi",
                "Discipline" : "Interaction Design, Creative Coding, Story–Telling",
                "Medium" : "Web Application · Experience",
                "Technologies" : "Custom Web Application Framework, p5.js, Processing",
                "Duration" : "Six Months"
            },
            "image_hero": "images/projects/explore/hi-res/explore-hero.jpg",
            "image_preview": "images/projects/explore/hi-res/explore-preview.jpg",
            "sections" : [
                {
                    "name" : "endeavorDesignProcess",
                    "data" : {
                        "class" : "endeavor-item-no-margin",
                        "process" : "Deliverable",
                        "text" : "",
                        "number" : "01/06",
                        "bgColor" : "#e6e6e6",
                        "textColor" : "#bfbfbf",
                        "textColor2" : "#d9d9d9"
                    }
                },
                {
                    "name" : "endeavorVideoFS",
                    "data" : {
                        "class" : "endeavor-item-no-margin endeavor-width-100vw endeavor-pos-rel",
                        "loop": "",
                        "muted": "",
                        "autoplay": "true",
                        "src" : {
                            "webm" : "images/projects/explore/videos/explore-walkthrough-window-loop.webm",
                            "mp4" : "images/projects/explore/videos/explore-walkthrough-window-loop.mp4",
                            "poster" : "images/projects/explore/videos/explore-walkthrough-window-loop.jpg"
                        }
                    }
                },
                {
                    "name" : "endeavorChecklist",
                    "data" : {
                        "header" : "Key Features",
                        "class" : "endeavor-item-125",
                        "class2" : "",
                        "class3" : "",
                        "class4" : "checklist-simple",
                        "icon" : "fa-hand-o-right",
                        "bgColor" : "",
                        "description" : "",
                        "contents" : [
                            {
                                "header" : "Generative Design",
                                "description" : ""
                            },
                            {
                                "header" : "Interactive Narrative",
                                "description" : ""
                            },
                            {
                                "header" : "Responsive",
                                "description" : ""
                            },
                            {
                                "header" : "Creative Code Prototyping",
                                "description" : ""
                            },
                            {
                                "header" : "Custom Front-End Framework",
                                "description" : ""
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Explore Views Angle",
                            "src": "images/projects/explore/standard/explore-views-angle.jpg",
                            "src_standard": "images/projects/explore/standard/explore-views-angle.jpg",
                            "src_retina": "images/projects/explore/retina/explore-views-angle.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/explore/hi-res/explore-views-angle.jpg",
                            "src_preview": "images/projects/explore/hi-res/explore-views-angle.jpg",
                            "caption": "Explore Views Angle"
                        }
                    }
                },
                {
                    "name" : "endeavorParagraphPoints",
                    "data" : {
                        "class" : "endeavor-item",
                        "bgColor" : "",
                        "header" : "Solution",
                        "contents": [
                            {
                                "header": "Story–Telling",
                                "description" : "Eyewire is a citizen science project founded in Sebastian Seung's neuroscience lab at MIT. The project aims to gamify the process of assisting advanced machine learning algorithms in the reconstruction of 3D neurons from microscope images. This endeavor is unprecedented, even the elevator pitch for this game is a mouthful. Could we connect players more deeply to the science and vision of the lab with an interative experience?"
                            },
                            {
                                "header": "Creative Coding",
                                "description" : "This project was my first attempt to align my passion for programming with my professional design practice. I worked primarily with Processing for prototyping and its Js cousin p5 for the final implementation. Early prototyping with Processing was swift and revealed lots of possible visual and behaviorial directions for the simulations. I learned a lot of hard lessons converting my native Processing code to work in the browser. Performance considerations across devices and inconsistencies across browswers lead to many hours of perfomance tuning and code reviews with our devlopers to help make the vision a reality."
                            },
                            {
                                "header": "Experiments",
                                "description" : "The explore page was sort of an experiment in browser-based narrative. We asked ourselves, what is the fastest, most lightweight way to deliver a message? In response, we explored a variety of story–telling techniques including generative design, infinite looping gifs and embeded video."
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorVideoFS",
                    "data" : {
                        "class" : "endeavor-item-125 endeavor-width-100vw endeavor-pos-rel",
                        "loop": "",
                        "muted": "",
                        "autoplay": "true",
                        "src" : {
                            "webm" : "images/projects/explore/videos/explore-narrative-experiments.webm",
                            "mp4" : "images/projects/explore/videos/explore-narrative-experiments.mp4",
                            "poster" : "images/projects/explore/videos/explore-narrative-experiments.jpg"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Explore Views Angle",
                            "src": "images/projects/explore/standard/explore-views-neuron-stack.jpg",
                            "src_standard": "images/projects/explore/standard/explore-views-neuron-stack.jpg",
                            "src_retina": "images/projects/explore/retina/explore-views-neuron-stack.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/explore/hi-res/explore-views-neuron-stack.jpg",
                            "src_preview": "images/projects/explore/hi-res/explore-views-neuron-stack.jpg",
                            "caption": "Explore Views Angle"
                        }
                    }
                },
                {
                    "name" : "endeavorVideoFS",
                    "data" : {
                        "class" : "endeavor-item-no-margin endeavor-width-100vw endeavor-pos-rel",
                        "loop": "",
                        "muted": "",
                        "autoplay": "true",
                        "src" : {
                            "webm" : "images/projects/explore/videos/explore-responsive.webm",
                            "mp4" : "images/projects/explore/videos/explore-responsive.mp4",
                            "poster" : "images/projects/explore/videos/explore-responsive.jpg"
                        }
                    }
                },
                {
                    "name" : "endeavorParagraphPoints",
                    "data" : {
                        "class" : "endeavor-item",
                        "bgColor" : "",
                        "header" : "",
                        "contents": [
                            {
                                "header": "Responsive Design",
                                "description" : "Applying simple CSS transitions to responsive content can have delightful side effects like bringing heroes of neuroscience to life!"
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorDesignProcess",
                    "data" : {
                        "class" : "endeavor-item-top-250",
                        "process" : "Narrative",
                        "text" : "",
                        "number" : "02/06",
                        "bgColor" : "#e6e6e6",
                        "textColor" : "#bfbfbf",
                        "textColor2" : "#d9d9d9"
                    }
                },
                {
                    "name" : "endeavorParagraphHidden",
                    "data" : {
                        "id" : "ghost-explore-story-affect",
                        "class" : "endeavor-item-no-margin",
                        "class2" : "endeavor-reveal",
                        "bgColor" : "",
                        "header" : "Explore Story",
                        "description" : "",
                        "contents": [
                            {
                                "header": "Part I",
                                "description" : "Your brain makes you amazing / it allows you to learn intricate skills/ dream fantastic dreams / even laugh at goofy cat videos. But how?"
                            },
                            {
                                "header": "Part II",
                                "description" : "This question has puzzled scientists for centuries. Your brain contains 80 billion neurons / connected through 100 milliion synapses. Working together, these cells make you, you. However, most of their circuits are still uncharted. When Galileo first peered through a telescope, it began a revolution in the way we see the world around us. Today, neuroscience is revolutionizing how we see the world within us. We're calling on gamers to help connect the dots by creating a visual 3D map of the brain."
                            },
                            {
                                "header": "Part III",
                                "description" : "We are wonderers."
                            },
                            {
                                "header": "Part IV",
                                "description" : "Eyewire is the first of its kind / its a 3D puzzle game / as you solve puzzles / you're mapping the brain."
                            },
                            {
                                "header": "Part V",
                                "description" : "Collaborate and compete for science!"
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorGhostButton",
                    "data" : {
                        "class" : "endeavor-item-bottom-125 endeavor-text-left",
                        "text" : "Read More",
                        "align" : "",
                        "id" : "ghost-explore-story",
                        "textColor" : "#1a1a1a"
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Explore Sketch 2",
                            "src": "images/projects/explore/standard/explore-sketch-2.jpg",
                            "src_standard": "images/projects/explore/standard/explore-sketch-2.jpg",
                            "src_retina": "images/projects/explore/retina/explore-sketch-2.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/explore/hi-res/explore-sketch-2.jpg",
                            "src_preview": "images/projects/explore/hi-res/explore-sketch-2.jpg",
                            "caption": "Explore Sketch 2"
                        }
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "class" : "endeavor-item",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Explore Narrative Whiteboard 1",
                            "src": "images/projects/explore/standard/explore-process-whiteboard-1.jpg",
                            "src_standard": "images/projects/explore/standard/explore-process-whiteboard-1.jpg",
                            "src_retina": "images/projects/explore/retina/explore-process-whiteboard-1.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/explore/hi-res/explore-process-whiteboard-1.jpg",
                            "src_preview": "images/projects/explore/hi-res/explore-process-whiteboard-1.jpg",
                            "caption": "Explore Narrative Whiteboard 1"
                        }
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "class" : "endeavor-item",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Explore Story 1",
                            "src": "images/projects/explore/standard/explore-story-1.jpg",
                            "src_standard": "images/projects/explore/standard/explore-story-1.jpg",
                            "src_retina": "images/projects/explore/retina/explore-story-1.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/explore/hi-res/explore-story-1.jpg",
                            "src_preview": "images/projects/explore/hi-res/explore-story-1.jpg",
                            "caption": "Explore Story 1"
                        }
                    }
                },
                {
                    "name" : "endeavorCaptionFS",
                    "data" : {
                        "class" : "endeavor-item-bottom-125",
                        "caption" : "(above) Storyboarding narrative content components and animation architecture."
                    }
                },
                {
                    "name" : "endeavorDesignProcess",
                    "data" : {
                        "class" : "endeavor-item-top-250",
                        "process" : "Styles",
                        "text" : "",
                        "number" : "03/06",
                        "bgColor" : "#e6e6e6",
                        "textColor" : "#bfbfbf",
                        "textColor2" : "#d9d9d9"
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-bottom-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Explore Style",
                            "src": "images/projects/explore/standard/explore-style.jpg",
                            "src_standard": "images/projects/explore/standard/explore-style.jpg",
                            "src_retina": "images/projects/explore/retina/explore-style.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/explore/hi-res/explore-style.jpg",
                            "src_preview": "images/projects/explore/hi-res/explore-style.jpg",
                            "caption": "Explore Style"
                        }
                    }
                },
                {
                    "name" : "endeavorDesignProcess",
                    "data" : {
                        "class" : "endeavor-item-top-125",
                        "process" : "Illustration",
                        "text" : "",
                        "number" : "04/06",
                        "bgColor" : "#e6e6e6",
                        "textColor" : "#bfbfbf",
                        "textColor2" : "#d9d9d9"
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item endeavor-item-top-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Explore Illustration",
                            "src": "images/projects/explore/standard/explore-animation-wonderers.jpg",
                            "src_standard": "images/projects/explore/standard/explore-animation-wonderers.jpg",
                            "src_retina": "images/projects/explore/retina/explore-animation-wonderers.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/explore/hi-res/explore-animation-wonderers.jpg",
                            "src_preview": "images/projects/explore/hi-res/explore-animation-wonderers.jpg",
                            "caption": "Explore Illustration"
                        }
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "class" : "endeavor-item",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Explore Illustration Wonderers",
                            "src": "images/projects/explore/standard/explore-animation-lineup.jpg",
                            "src_standard": "images/projects/explore/standard/explore-animation-lineup.jpg",
                            "src_retina": "images/projects/explore/retina/explore-animation-lineup.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/explore/hi-res/explore-animation-lineup.jpg",
                            "src_preview": "images/projects/explore/hi-res/explore-animation-lineup.jpg",
                            "caption": "Explore Neuron Views"
                        }
                    }
                },
                {
                    "name" : "endeavorCaptionFS",
                    "data" : {
                        "class" : "endeavor-item-bottom-125",
                        "caption" : "(above) I provided creative direction for an amazing illustrator + animator, Hyuna Choi. Together, we were able to create a cohesive color system and  consistent visual style that captured the playful curiosity of the brand."
                    }
                },
                {
                    "name" : "endeavorDesignProcess",
                    "data" : {
                        "class" : "endeavor-item-top-250",
                        "process" : "Generative",
                        "text" : "",
                        "number" : "05/06",
                        "bgColor" : "#e6e6e6",
                        "textColor" : "#bfbfbf",
                        "textColor2" : "#d9d9d9"
                    }
                },
                {
                    "name" : "endeavorModuleMachine",
                    "data" : {
                        "bgColor" : "#191919",
                        "class" : "endeavor-item-no-margin",
                        "modules" : [
                            {
                                "name" : "endeavorPad",
                                "data" : {
                                    "class" : "endeavor-height-200px-responsive endeavor-item-no-margin endeavor-height-10vw"
                                }
                            },
                            {
                                "name" : "endeavorImageFS",
                                "data" : {
                                    "placeholder" : {
                                        "name" : "",
                                        "src" : "",
                                        "src" : "",
                                        "src_mobile" : "",
                                        "src_preview" : "",
                                        "caption" : ""
                                    },
                                    "image" : {
                                        "name": "Explore NNN",
                                        "src": "images/projects/explore/standard/explore-nnn.jpg",
                                        "src_standard": "images/projects/explore/standard/explore-nnn.jpg",
                                        "src_retina": "images/projects/explore/retina/explore-nnn.jpg",
                                        "src_low": "images/empty.gif",
                                        "src_mobile": "images/projects/explore/hi-res/explore-nnn.jpg",
                                        "src_preview": "images/projects/explore/hi-res/explore-nnn.jpg",
                                        "caption": "Explore NNN"
                                    }
                                }
                            },
                            {
                                "name" : "endeavorPad",
                                "data" : {
                                    "class" : "endeavor-height-200px-responsive endeavor-item-no-margin endeavor-height-10vw"
                                }
                            }
                        ]
                    }
                }, 
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "class" : "endeavor-item-top-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Explore Neuron SAC",
                            "src": "images/projects/explore/standard/explore-neuron-sac.jpg",
                            "src_standard": "images/projects/explore/standard/explore-neuron-sac.jpg",
                            "src_retina": "images/projects/explore/retina/explore-neuron-sac.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/explore/hi-res/explore-neuron-sac.jpg",
                            "src_preview": "images/projects/explore/hi-res/explore-neuron-sac.jpg",
                            "caption": "Explore Neuron SAC"
                        }
                    }
                },
                {
                    "name" : "endeavorCaptionFS",
                    "data" : {
                        "class" : "endeavor-item",
                        "caption" : "(above) One of the most common cell types found in Eyewire, the Starburst Amacrine Cell (SAC) is a retinal neuron that assists in motion detection. Its symetrical, circular branching pattern and flat profile make it a good candidate for 2D generative design."
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item endeavor-item-top-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Explore L-Systems",
                            "src": "images/projects/explore/standard/explore-l-systems.jpg",
                            "src_standard": "images/projects/explore/standard/explore-l-systems.jpg",
                            "src_retina": "images/projects/explore/retina/explore-l-systems.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/explore/hi-res/explore-l-systems.jpg",
                            "src_preview": "images/projects/explore/hi-res/explore-l-systems.jpg",
                            "caption": "Explore L-Systems"
                        }
                    }
                },
                {
                    "name" : "endeavorCaptionFS",
                    "data" : {
                        "class" : "endeavor-item-bottom-125",
                        "caption" : "(above) First eight iteration cycles of an experiment using l-systems to grow a SAC neuron. Initial results tended towards bushy trees."
                    }
                },
                {
                    "name" : "endeavorParagraphHidden",
                    "data" : {
                        "id" : "ghost-developmental-system-affect",
                        "class" : "endeavor-item-bottom-25 endeavor-item-top-125",
                        "class2" : "endeavor-reveal",
                        "bgColor" : "",
                        "header" : "Developmental System",
                        "description" : "My first strategy for growing life-like neurons was to use a developmental approach inspired by cellular division.",
                        "contents": [
                            {
                                "header": "L-Systems",
                                "description" : "An L-system or Lindenmayer system is a parallel rewriting system and a type of formal grammar. An L-system consists of an alphabet of symbols that can be used to make strings, a collection of production rules that expand each symbol into some larger string of symbols, an initial axiom string from which to begin construction, and a mechanism for translating the generated strings into geometric structures (source Wikipedia)."
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorGhostButton",
                    "data" : {
                        "class" : "endeavor-item-bottom-125 endeavor-text-left",
                        "text" : "Read More",
                        "align" : "",
                        "id" : "ghost-developmental-system",
                        "textColor" : "#1a1a1a"
                    }
                },
                {
                    "name" : "endeavorVideoFS",
                    "data" : {
                        "class" : "endeavor-item endeavor-item-top-250 endeavor-width-100vw endeavor-pos-rel",
                        "loop": "",
                        "muted": "",
                        "autoplay": "true",
                        "src" : {
                            "webm" : "images/projects/explore/videos/sprout.webm",
                            "mp4" : "images/projects/explore/videos/sprout.mp4",
                            "poster" : "images/projects/explore/videos/sprout.jpg"
                        }
                    }
                },
                {
                    "name" : "endeavorCaptionFS",
                    "data" : {
                        "class" : "endeavor-item-bottom-125",
                        "caption" : "(above) Inspired by techiniques in Daniel Shiffmans 'The Nature of Code,' the next Processing prototype used my own version of a traditional flocking algorithm."
                    }
                },
                {
                    "name" : "endeavorParagraphHidden",
                    "data" : {
                        "id" : "ghost-physical-system-affect",
                        "class" : "endeavor-item-bottom-25 endeavor-item-top-125",
                        "class2" : "endeavor-reveal",
                        "bgColor" : "",
                        "header" : "Physical System",
                        "description" : "During development, neurons extend their branches by following chemical gradients through diverse tissues. I attempted to simulate this behavior with a swarm of autonomous agents governed by a physical system in Processing. This emergent behavior can be described by a surprisingly simple set of rules.",
                        "contents": [
                            {
                                "header": "Cohesion",
                                "description" : "Steer towards average position of neighbors (long range attraction)"
                            },
                            {
                                "header": "Separation",
                                "description" : "Avoid crowding neighbors (short range repulsion)"
                            },
                            {
                                "header": "Alignment",
                                "description" : "Steer towards average heading of neighbors"
                            },
                            {
                                "header": "Wander",
                                "description" : "Randomly change heading by a small amount each update step."
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorGhostButton",
                    "data" : {
                        "class" : "endeavor-item-bottom-125 endeavor-text-left",
                        "text" : "Read More",
                        "align" : "",
                        "id" : "ghost-physical-system",
                        "textColor" : "#1a1a1a"
                    }
                },
                {
                    "name" : "endeavorVideoFS",
                    "data" : {
                        "class" : "endeavor-item-125 endeavor-width-100vw endeavor-pos-rel",
                        "loop": "",
                        "muted": "",
                        "autoplay": "true",
                        "src" : {
                            "webm" : "images/projects/explore/videos/explore-poisson-disc.webm",
                            "mp4" : "images/projects/explore/videos/explore-poisson-disc.mp4",
                            "poster" : "images/projects/explore/videos/explore-poisson-disc.jpg"
                        }
                    }
                },
                {
                    "name" : "endeavorParagraph",
                    "data" : {
                        "header" : "Poisson Disc Sampling",
                        "class" : "endeavor-item-top-125",
                        "bgColor" : "",
                        "description" : "(Below) The human retina has a beautiful solution to sampling in its placement of photoreceptor cells. The cells cover the retina densely and evenly and yet the cells’ relative positions are irregular. This is called a Poisson-disc distribution because it maintains a minimum distance between cells, avoiding occlusion and thus wasted photoreceptors. (source: Mike Bostock, Visualizing Algorithms)"
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "class" : "endeavor-item",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Explore Retinal Mosaic",
                            "src": "images/projects/explore/standard/explore-retinal-mosaic.jpg",
                            "src_standard": "images/projects/explore/standard/explore-retinal-mosaic.jpg",
                            "src_retina": "images/projects/explore/retina/explore-retinal-mosaic.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/explore/hi-res/explore-retinal-mosaic.jpg",
                            "src_preview": "images/projects/explore/hi-res/explore-retinal-mosaic.jpg",
                            "caption": "Explore Retinal Mosaic"
                        }
                    }
                },
                {
                    "name" : "endeavorVideoFS",
                    "data" : {
                        "class" : "endeavor-item-no-margin endeavor-width-100vw endeavor-pos-rel",
                        "loop": "",
                        "muted": "",
                        "autoplay": "true",
                        "src" : {
                            "webm" : "images/projects/explore/videos/explore-neuron-propogate.webm",
                            "mp4" : "images/projects/explore/videos/explore-neuron-propogate.mp4",
                            "poster" : "images/projects/explore/videos/explore-neuron-propogate.jpg"
                        }
                    }
                },
                {
                    "name" : "endeavorParagraph",
                    "data" : {
                        "header" : "Signal Propogation",
                        "class" : "endeavor-item-top-125",
                        "bgColor" : "",
                        "description" : "To facilitate neural transmission-like activity in the simulated neurons, I studied up on various graph traversal algorithms, Dijkstra, depth first search (DFS), and breadth first search (BFS). I settled on something in the realm of a BFS which is visualized below. Red dots are representative of signal transmission and green lines correspond to the current branch segment."
                    }
                },
                {
                    "name" : "endeavorVideoFS",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "loop": "",
                        "muted": "",
                        "autoplay": "true",
                        "src" : {
                            "webm" : "images/projects/explore/videos/explore-propogate.webm",
                            "mp4" : "images/projects/explore/videos/explore-propogate.mp4",
                            "poster" : "images/projects/explore/videos/explore-propogate.jpg"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Explore Animation Controller",
                            "src": "images/projects/explore/standard/explore-animation-controller.jpg",
                            "src_standard": "images/projects/explore/standard/explore-animation-controller.jpg",
                            "src_retina": "images/projects/explore/retina/explore-animation-controller.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/explore/hi-res/explore-animation-controller.jpg",
                            "src_preview": "images/projects/explore/hi-res/explore-animation-controller.jpg",
                            "caption": "Explore Animation Controller"
                        }
                    }
                },
                {
                    "name" : "endeavorParagraphUsers",
                    "data" : {
                        "header" : "Animation Controller",
                        "id" : "ghost-animation-controller-affect",
                        "class" : "endeavor-item-125 endeavor-item-bottom-15",
                        "class2" : "endeavor-reveal",
                        "bgColor" : "",
                        "description" : "Intergrating the neuron simulation with the rest of the explore page pushed my development skills to a new level. I learned new programing patterns and ways of thinking. The animation controller is composed of a series of small interconnected programs and supporting algorithms which coordinate the network of cells and mediate state with the rest of the experience.",
                        "contents" : [
                            {
                                "header" : "Enivornment",
                                "icon" : "fa-cube",
                                "bullets" : [
                                    {
                                        "header" : "Explore Page",
                                        "description" : "We designed a custom front-end framework, duely named 'Synapse' which synchronizes the different animation modules using a global 'T' time."
                                    }
                                ]
                            },
                            {
                                "header" : "Support Program",
                                "icon" : "fa-cog",
                                "bullets" : [
                                    {
                                        "header" : "Neuron Coordinator",
                                        "description" : "Neuron Coordinator is the main controller for the neural network. It synchronizes neuron-time with global 'T' time to ensure the experience stays in sync."
                                    },
                                    {
                                        "header" : "Neurostate",
                                        "description" : "Each animation sequence within the neural network has a unique neuostate which governs the networks behavior with respect to 'T' time."
                                    },
                                    {
                                        "header" : "Neurotransmitter",
                                        "description" : "Each Neurostate has an associated Neurotransmitter which monitors the networks state."
                                    }
                                ]
                            },
                            {
                                "header" : "Neural Network",
                                "icon" : "fa-cogs",
                                "bullets" : [
                                    {
                                        "header" : "NNN",
                                        "description" : "NNN, (short for Nortons Neural Network) is a super–class wich directly controls each of the neuron class objects."
                                    },
                                    {
                                        "header" : "Neuron",
                                        "description" : "Neurons are controlled by the NNN class but exhibit control over both Node and Bouton classes."
                                    },
                                    {
                                        "header" : "Node",
                                        "description" : "Nodes are controlled directly the Neuron class and operate as autonomous agents in the context of each Neuron."
                                    },
                                    {
                                        "header" : "Bouton",
                                        "description" : "The Bouton class is controlled by the Neuron class and is responsible for two specific actions. First, Boutons are displayed at the tips of branches to mark the neuron growth process complete. Second, Boutons may move along the neuron branch to simulate signal propogation."
                                    }
                                ]
                            },
                            {
                                "header" : "Utility Algorithms",
                                "icon" : "fa-code",
                                "bullets" : [
                                    {
                                        "header" : "Poisson-Disc",
                                        "description" : "A sampling algorithm which nicely mirrors the spatial distribution of photoreceptors in our retinas. This algorithm is used to create the initial distribution of the neurons."
                                    },
                                    {
                                        "header" : "Kruskal-MST",
                                        "description" : "A Javascript implementation of a classic minimum spanning tree (MST) algorithm used to pass signals around from neuron to neuron in the network."
                                    },
                                    {
                                        "header" : "Parse-SVG",
                                        "description" : "A simple SVG parser to convert vector graphics into usable data format for animation in p5js."
                                    }
                                ]
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorGhostButton",
                    "data" : {
                        "class" : "endeavor-item-bottom-125 endeavor-text-left",
                        "text" : "Look Closer",
                        "align" : "",
                        "id" : "ghost-animation-controller",
                        "textColor" : "#1a1a1a"
                    }
                },
                {
                    "name" : "endeavorDesignProcess",
                    "data" : {
                        "class" : "endeavor-item-top-250",
                        "process" : "Discussion",
                        "text" : "",
                        "number" : "06/06",
                        "bgColor" : "#e6e6e6",
                        "textColor" : "#bfbfbf",
                        "textColor2" : "#d9d9d9"
                    }
                },
                {
                    "name" : "endeavorVideoFS",
                    "data" : {
                        "class" : "endeavor-item-no-margin endeavor-width-100vw endeavor-pos-rel",
                        "loop": "",
                        "muted": "",
                        "autoplay": "true",
                        "src" : {
                            "webm" : "images/projects/explore/videos/explore-walkthrough-window.webm",
                            "mp4" : "images/projects/explore/videos/explore-walkthrough-window.mp4",
                            "poster" : "images/projects/explore/videos/explore-walkthrough-window.jpg"
                        }
                    }
                },
                {
                    "name" : "endeavorCaptionFS",
                    "data" : {
                        "class" : "endeavor-item-bottom-125",
                        "caption" : "(above) Complete explore page experience, as viewed on desktop."
                    }
                },
                {
                    "name" : "endeavorParagraphChecklist",
                    "data" : {
                        "header" : "Reflecting",
                        "id" : "ghost-reflecting-affect",
                        "class" : "endeavor-item-bottom-125 endeavor-item-bottom-15",
                        "class2" : "endeavor-reveal",
                        "bgColor" : "",
                        "description" : "This is usually the part of a project where I invite you two engage with the experience in real life—the explore page is a little different. Though the experience is fully functional, it was never pushed to production. Performance issues and inconsistencies plagued the neuron animation system. If I were to critic myself, I would admit that I bit off a whole lot more than I could handle. I designed + developed the Explore Page for close to six months but there is a point of diminishing returns where a design becomes more of a personal endeavor than one of service. I'm thankful for the many lessons learned, in the future I will seek to iteratively improve up on good design—rather than aim for a pillar of perfection.",
                        "contents": ""
                    }
                },
                {
                    "name" : "endeavorParagraphPoints",
                    "data" : {
                        "class" : "endeavor-item",
                        "bgColor" : "",
                        "header" : "",
                        "contents": [
                            {
                                "header": "Story–Telling",
                                "description" : "Eyewire is a citizen science project founded in Sebastian Sueng's neuroscience lab at MIT. The project aims to gamify the process of assisting advanced machine learning algorithms in the reconstruction of 3D neurons from microscope images. This endeavor is unprecedented, even the elevator pitch for this game is a mouthful. Could we connect players more deeply to the science and vision of the lab with an interative experience?"
                            },
                            {
                                "header": "Creative Coding",
                                "description" : "This project was my first attempt to align my passion for programming with my professional design practice. I worked primarily with Processing for prototyping and its Js cousin p5 for the final implementation. Early prototyping with Processing was swift and revealed lots of possible visual and behaviorial directions for the simulations. I learned a lot of hard lessons converting my native Processing code to work in the browser. Performance considerations across devices and inconsistencies across browswers lead to many hours of perfomance tuning and code reviews with our devlopers to help make the vision a reality."
                            },
                            {
                                "header": "Experiments",
                                "description" : "The explore page was sort of an experiment in browser-based narrative. We asked ourselves, what is the fastest, most lightweight way to deliver a message? In response, we explored a variety of story–telling techniques including generative design, infinite looping gifs and embeded video."
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorPad",
                    "data" : {
                        "class" : "endeavor-height-200px-responsive endeavor-item-no-margin endeavor-height-10vw"
                    }
                }
            ]
        },
        {
            "route" :"msty-project",
            "name"  : "MSTY VR",
            "project_type"  : "Project",
            "year"  : "2014",
            "preview" :"msty-preview",
            "medium": [
                "Virtual Reality",
                "Unity",
                "Immersive Experience"
            ],
            "technique": [
                "VR",
                "3D Animation",
                "Programing"
            ],
            "description" : {
                "quote": "Bringing the future of neuroscience exploration and education to virtual realms using the Oculus Rift.",
                "brief": "In October of 2016, president Barrack Obama called upon a coalition of pioneering researchers, designers, technologists, and diplomats to gather at Carnegie Mellon University to demonstrate the very leading frontiers of technology. We were invited to this White House Frontiers conference to present our latest virtual reality experience: MSTY. The three pound organ sitting behind y our eyes is nothing short of extraordinary. Symphonic activity among billions of neurons gives rise to thoughts, feelings, and ultimately, the perspective and personality that turn a brain into a mind. Thanks to cutting edge AI, nanoscale resolution imaging, and the help of a quarter million gamers from around the world, crowdsources neuroscience sets the pace for a new wave of discovery. The creators of Eyewire reveal the first glimpse of Neo a cortical game coming 2017 that will invite gamers to solve the puzzles of perception.",
                "challenge": "MSTY VR is our most recent virtual reality experience. It features a knotty entanglement of neuron reconstructions from cortex—the outer most layer of brain tissue responsible for perception. MSTY, so named for the particular flavor of AI involved in the reconstruction process, was intended to be a mostly passive safari-type experience. The user would be accompanied by a friendly, derpy, but exceedingly capable AI companion—MSTY. Inspired by Google's early ImageNet dataset and success in training neural networks to recognize cats in Youtube videos, we conceived MSTY as a hovering cat–like robot with paw–like arms. The experience lasted approximately 5 minutes, during which MSTY intelligently and naturally navigates toward areas of interest acting as a sort of subliminal tour guide."
            },
            "meta" : {
                "Client" : "Whitehouse Frontiers",
                "Year" : 2016,
                "Role" : "Designer/Developer/Animator",
                "Team" : "Jordi Valladaras",
                "Discipline" : "Game Design, Interaction Design, Character Animation, Game Development Neuroscience",
                "Medium" : "Virtual Reality",
                "Technologies" : "Unity, HTC Vive, Oculus Rift",
                "Duration" : "One Month"
            },
            "image_hero": "images/projects/msty/hi-res/msty-hero-2.jpg",
            "image_preview": "images/projects/msty/hi-res/msty-preview.jpg",
            "sections" : [
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-no-margin",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "MSTY Oculus",
                            "src": "images/projects/msty/standard/msty-oculus.jpg",
                            "src_standard": "images/projects/msty/standard/msty-oculus.jpg",
                            "src_retina": "images/projects/msty/retina/msty-oculus.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/msty/hi-res/msty-oculus.jpg",
                            "src_preview": "images/projects/msty/hi-res/msty-oculus.jpg",
                            "caption": "MSTY Oculus"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-no-margin",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "MSTY Pow",
                            "src": "images/projects/msty/standard/msty-pow.jpg",
                            "src_standard": "images/projects/msty/standard/msty-pow.jpg",
                            "src_retina": "images/projects/msty/retina/msty-pow.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/msty/hi-res/msty-pow.jpg",
                            "src_preview": "images/projects/msty/hi-res/msty-pow.jpg",
                            "caption": "MSTY Pow"
                        }
                    }
                },
                {
                    "name" : "endeavorVideoFS",
                    "data" : {
                        "class" : "endeavor-item-no-margin endeavor-width-100vw endeavor-pos-rel",
                        "loop": "",
                        "muted": "",
                        "autoplay": "true",
                        "src" : {
                            "webm" : "images/projects/msty/videos/msty.webm",
                            "mp4" : "images/projects/msty/videos/msty.mp4",
                            "poster" : "images/projects/msty/videos/msty.jpg"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-no-margin",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "MSTY Intro",
                            "src": "images/projects/msty/standard/msty-intro-1.jpg",
                            "src_standard": "images/projects/msty/standard/msty-intro-1.jpg",
                            "src_retina": "images/projects/msty/retina/msty-intro-1.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/msty/hi-res/msty-intro-1.jpg",
                            "src_preview": "images/projects/msty/hi-res/msty-intro-1.jpg",
                            "caption": "MSTY Intro"
                        }
                    }
                },
                {
                    "name" : "endeavorVideoFS",
                    "data" : {
                        "class" : "endeavor-width-100vw endeavor-pos-rel",
                        "loop": "",
                        "muted": "",
                        "autoplay": "true",
                        "src" : {
                            "webm" : "images/projects/msty/videos/msty_idle.webm",
                            "mp4" : "images/projects/msty/videos/msty_idle.mp4",
                            "poster" : "images/projects/msty/videos/msty_idle.jpg"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-no-margin",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "MSTY Intro",
                            "src": "images/projects/msty/standard/msty-intro-2.jpg",
                            "src_standard": "images/projects/msty/standard/msty-intro-2.jpg",
                            "src_retina": "images/projects/msty/retina/msty-intro-2.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/msty/hi-res/msty-intro-2.jpg",
                            "src_preview": "images/projects/msty/hi-res/msty-intro-2.jpg",
                            "caption": "MSTY Intro"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-no-margin",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "MSTY Intro",
                            "src": "images/projects/msty/standard/msty-intro-3.jpg",
                            "src_standard": "images/projects/msty/standard/msty-intro-3.jpg",
                            "src_retina": "images/projects/msty/retina/msty-intro-3.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/msty/hi-res/msty-intro-3.jpg",
                            "src_preview": "images/projects/msty/hi-res/msty-intro-3.jpg",
                            "caption": "MSTY Intro"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-no-margin",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "MSTY Expressions",
                            "src": "images/projects/msty/standard/msty-many.jpg",
                            "src_standard": "images/projects/msty/standard/msty-many.jpg",
                            "src_retina": "images/projects/msty/retina/msty-many.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/msty/hi-res/msty-many.jpg",
                            "src_preview": "images/projects/msty/hi-res/msty-many.jpg",
                            "caption": "MSTY Expressions"
                        }
                    }
                },
                {
                    "name" : "endeavorVideoFS",
                    "data" : {
                        "class" : "endeavor-item-bottom-125 endeavor-width-100vw endeavor-pos-rel",
                        "loop": "",
                        "muted": "",
                        "autoplay": "true",
                        "src" : {
                            "webm" : "images/projects/msty/videos/msty_awesome.webm",
                            "mp4" : "images/projects/msty/videos/msty_awesome.mp4",
                            "poster" : "images/projects/msty/videos/msty_awesome.jpg"
                        }
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "MSTY Lineup",
                            "src": "images/projects/msty/standard/msty-lineup.jpg",
                            "src_standard": "images/projects/msty/standard/msty-lineup.jpg",
                            "src_retina": "images/projects/msty/retina/msty-lineup.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/msty/hi-res/msty-lineup.jpg",
                            "src_preview": "images/projects/msty/hi-res/msty-lineup.jpg",
                            "caption": "MSTY Lineup"
                        }
                    }
                },
                {
                    "name" : "endeavorVideoFS",
                    "data" : {
                        "class" : "endeavor-item-125 endeavor-width-100vw endeavor-pos-rel",
                        "loop": "",
                        "muted": "",
                        "autoplay": "true",
                        "src" : {
                            "webm" : "images/projects/msty/videos/msty_fly.webm",
                            "mp4" : "images/projects/msty/videos/msty_fly.mp4",
                            "poster" : "images/projects/msty/videos/msty_fly.jpg"
                        }
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "class" : "endeavor-item-top-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "MSTY State Machine",
                            "src": "images/projects/msty/standard/msty-fsm.jpg",
                            "src_standard": "images/projects/msty/standard/msty-fsm.jpg",
                            "src_retina": "images/projects/msty/retina/msty-fsm.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/msty/hi-res/msty-fsm.jpg",
                            "src_preview": "images/projects/msty/hi-res/msty-fsm.jpg",
                            "caption": "MSTY State Machine"
                        }
                    }
                },
                {
                    "name" : "endeavorCaptionFS",
                    "data" : {
                        "class" : "endeavor-item endeavor-item-bottom-125",
                        "caption" : "(above) MSTY's brain, or a finite state machine created to naturally transition between all of MSTY's facial expressions and movement states. The particular state machine shown above included states for MSTY's location and interaction patterns."
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-no-margin",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "MSTY Navigation System",
                            "src": "images/projects/msty/standard/msty-navigation.jpg",
                            "src_standard": "images/projects/msty/standard/msty-navigation.jpg",
                            "src_retina": "images/projects/msty/retina/msty-navigation.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/msty/hi-res/msty-navigation.jpg",
                            "src_preview": "images/projects/msty/hi-res/msty-navigation.jpg",
                            "caption": "MSTY Navigation System"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-no-margin",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "MSTY Neuroscience",
                            "src": "images/projects/msty/standard/msty-meshes.jpg",
                            "src_standard": "images/projects/msty/standard/msty-meshes.jpg",
                            "src_retina": "images/projects/msty/retina/msty-meshes.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/msty/hi-res/msty-meshes.jpg",
                            "src_preview": "images/projects/msty/hi-res/msty-meshes.jpg",
                            "caption": "MSTY Neuroscience"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-no-margin",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "MSTY Spatial Design",
                            "src": "images/projects/msty/standard/msty-space.jpg",
                            "src_standard": "images/projects/msty/standard/msty-space.jpg",
                            "src_retina": "images/projects/msty/retina/msty-space.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/msty/hi-res/msty-space.jpg",
                            "src_preview": "images/projects/msty/hi-res/msty-space.jpg",
                            "caption": "MSTY Spatial Design"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-no-margin",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "MSTY Dynamic Depth of Field",
                            "src": "images/projects/msty/standard/msty-dynamic-dof-1.jpg",
                            "src_standard": "images/projects/msty/standard/msty-dynamic-dof-1.jpg",
                            "src_retina": "images/projects/msty/retina/msty-dynamic-dof-1.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/msty/hi-res/msty-dynamic-dof-1.jpg",
                            "src_preview": "images/projects/msty/hi-res/msty-dynamic-dof-1.jpg",
                            "caption": "MSTY Dynamic Depth of Field"
                        }
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "class" : "endeavor-item-top-125 endeavor-item-bottom-50",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "MSTY Dynamic Depth of Field",
                            "src": "images/projects/msty/standard/msty-dynamic-dof-2.jpg",
                            "src_standard": "images/projects/msty/standard/msty-dynamic-dof-2.jpg",
                            "src_retina": "images/projects/msty/retina/msty-dynamic-dof-2.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/msty/hi-res/msty-dynamic-dof-2.jpg",
                            "src_preview": "images/projects/msty/hi-res/msty-dynamic-dof-2.jpg",
                            "caption": "MSTY Dynamic Depth of Field"
                        }
                    }
                },
                {
                    "name" : "endeavorParagraphPoints",
                    "data" : {
                        "class" : "endeavor-item-bottom",
                        "bgColor" : "",
                        "header" : "",
                        "contents": [
                            {
                                "header": "Dynamic Depth of Field",
                                "description" : "Visualizing dynamic depth of field. A depth–mapped image where darker shades of gray represent sharper focus."
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorVideoFS",
                    "data" : {
                        "class" : "endeavor-item-no-margin endeavor-width-100vw endeavor-pos-rel",
                        "loop": "",
                        "muted": "",
                        "autoplay": "true",
                        "src" : {
                            "webm" : "images/projects/msty/videos/msty_dof.webm",
                            "mp4" : "images/projects/msty/videos/msty_dof.mp4",
                            "poster" : "images/projects/msty/videos/msty_dof.jpg"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-no-margin",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "MSTY Exhibition",
                            "src": "images/projects/msty/standard/msty-exhibition.jpg",
                            "src_standard": "images/projects/msty/standard/msty-exhibition.jpg",
                            "src_retina": "images/projects/msty/retina/msty-exhibition.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/msty/hi-res/msty-exhibition.jpg",
                            "src_preview": "images/projects/msty/hi-res/msty-exhibition.jpg",
                            "caption": "MSTY Exhibition"
                        }
                    }
                },
                {
                    "name" : "endeavorPad",
                    "data" : {
                        "class" : "endeavor-height-200px-responsive endeavor-item-no-margin endeavor-height-10vw"
                    }
                }
            ]
        },
        {
            "route" :"dig-project",
            "name"  : "The DiG",
            "project_type"  : "Project",
            "year"  : "2014",
            "preview" :"dig-preview",
            "medium": [
                "Graphic Design",
                "Identity Systems",
                "Digital"
            ],
            "technique": [
                "Processing",
                "Cellular Automata",
                "Generative Design"
            ],
            "description" : {
                "quote": "Journey into the depths of the retina with the Dig, Eyewire's next big Adventure.",
                "brief": "Eyewire is a game to map the brain that originated at Sebastian Seung's Lab at MIT. This citizen science human-based computation game challenges players to map 3D neurons in a retina. Eyewire was officially launched on December 10, 2012 and has since grown to over 200,000 players from 150 countries. Eyewire gameplay advances neuroscience by helping researchers discover how neurons connect to process visual information. Anyone, anywhere can help neuroscientists develop advanced artificial intelligence and computational technologies for mapping the connectome. In Eyewire, gamers solve 3D puzzles. As they solve the puzzles, they are actually reconstructing 3D models of neurons at nanoscale resolution from electron microscopy images. Eyewire requires no scientific background to play and works best on high speed internet.",
                "challenge": "I was tasked with directing and developing the identity system, supporting brand materials, and promotional assets for 'The DiG', Eyewire's next big Adventure. Based on the nature of the game and a potential throwback to pychedelic rock anthem, we framed the challenge as a 'Journey into the depths of the retina'. The formal language was inspired by digital aspects of the neuron reconstruction, while the asset behavior was inspired by the computational processes of active neurons and cellular automata. The wordmark is composed of sixteen individual squares relating to the sixteen sectors of the scientific endeavor."
            },
            "pull_quotes": [
                " The lamp seeks to explore our relationship with dynamic data, for this instance weather.",
                "This is the second big quote",
                "This is the third big quote"
            ],
            "meta" : {
                "Client" : "Eyewire, Princeton Neuroscience Institute",
                "Year" : 2016,
                "Role" : "Designer / Developer",
                "Team" : "Eyewire, Karl Catubig",
                "Discipline" : "Graphic Design / Computational Design",
                "Medium" : "Digital / Print",
                "Technologies" : "Processing / Pencils",
                "Duration" : "Three Months"
            },
            "image_hero": "images/projects/dig/hi-res/dig-hero.jpg",
            "image_preview": "images/projects/dig/hi-res/dig-preview.jpg",
            "sections" : [
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "dig-logo-black",
                            "src": "images/projects/dig/standard/dig-logo-black.gif",
                            "src_standard": "images/projects/dig/standard/dig-logo-black.gif",
                            "src_retina": "images/projects/dig/retina/dig-logo-black.gif",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/dig/hi-res/dig-logo-black.gif",
                            "src_preview": "images/projects/dig/hi-res/dig-logo-black.gif",
                            "caption": "Dig gif image"
                        }
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "dig-gif",
                            "src": "images/projects/dig/standard/dig-gif.gif",
                            "src_standard": "images/projects/dig/standard/dig-gif.gif",
                            "src_retina": "images/projects/dig/retina/dig-gif.gif",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/dig/hi-res/dig-gif.gif",
                            "src_preview": "images/projects/dig/hi-res/dig-gif.gif",
                            "caption": "Dig gif image"   
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "dig-logo-white",
                            "src": "images/projects/dig/standard/dig-logo-white.gif",
                            "src_standard": "images/projects/dig/standard/dig-logo-white.gif",
                            "src_retina": "images/projects/dig/retina/dig-logo-white.gif",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/dig/hi-res/dig-logo-white.gif",
                            "src_preview": "images/projects/dig/hi-res/dig-logo-white.gif",
                            "caption": "Dig gif image" 
                        }
                    }
                },
                {
                    "name" : "endeavorImageFSList",
                    "data" : {
                        "meta" : "Branding",
                        "images" : [
                            {
                                "name": "dig-grid",
                                "src": "images/projects/dig/standard/dig-grid.jpg",
                                "src_standard": "images/projects/dig/standard/dig-grid.jpg",
                                "src_retina": "images/projects/dig/retina/dig-grid.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/dig/hi-res/dig-grid.jpg",
                                "src_preview": "images/projects/dig/hi-res/dig-grid.jpg",
                                "caption": "Dig gif image"   
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorImage100vwList",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "class2" : "endeavor-item-no-margin",
                        "meta" : "BrandBook",
                        "images" : [
                            {
                                "name": "dig-brandbook-cover",
                                "src": "images/projects/dig/standard/dig-brandbook-cover.jpg",
                                "src_standard": "images/projects/dig/standard/dig-brandbook-cover.jpg",
                                "src_retina": "images/projects/dig/retina/dig-brandbook-cover.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/dig/hi-res/dig-brandbook-cover.jpg",
                                "src_preview": "images/projects/dig/hi-res/dig-brandbook-cover.jpg",
                                "caption": "Dig gif image"   
                            },
                            {
                                "name": "dig-brandbook-sections-1",
                                "src": "images/projects/dig/standard/dig-brandbook-sections-1.jpg",
                                "src_standard": "images/projects/dig/standard/dig-brandbook-sections-1.jpg",
                                "src_retina": "images/projects/dig/retina/dig-brandbook-sections-1.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/dig/hi-res/dig-brandbook-sections-1.jpg",
                                "src_preview": "images/projects/dig/hi-res/dig-brandbook-sections-1.jpg",
                                "caption": "Dig gif image"   
                            },
                            {
                                "name": "dig-brandbook-0",
                                "src": "images/projects/dig/standard/dig-brandbook-0.jpg",
                                "src_standard": "images/projects/dig/standard/dig-brandbook-0.jpg",
                                "src_retina": "images/projects/dig/retina/dig-brandbook-0.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/dig/hi-res/dig-brandbook-0.jpg",
                                "src_preview": "images/projects/dig/hi-res/dig-brandbook-0.jpg",
                                "caption": "Dig gif image"   
                            },
                            {
                                "name": "dig-brandbook-1",
                                "src": "images/projects/dig/standard/dig-brandbook-1.jpg",
                                "src_standard": "images/projects/dig/standard/dig-brandbook-1.jpg",
                                "src_retina": "images/projects/dig/retina/dig-brandbook-1.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/dig/hi-res/dig-brandbook-1.jpg",
                                "src_preview": "images/projects/dig/hi-res/dig-brandbook-1.jpg",
                                "caption": "Dig gif image"   
                            },
                            {
                                "name": "dig-brandbook-2",
                                "src": "images/projects/dig/standard/dig-brandbook-2.jpg",
                                "src_standard": "images/projects/dig/standard/dig-brandbook-2.jpg",
                                "src_retina": "images/projects/dig/retina/dig-brandbook-2.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/dig/hi-res/dig-brandbook-2.jpg",
                                "src_preview": "images/projects/dig/hi-res/dig-brandbook-2.jpg",
                                "caption": "Dig gif image"   
                            },
                            {
                                "name": "dig-brandbook-3",
                                "src": "images/projects/dig/standard/dig-brandbook-3.jpg",
                                "src_standard": "images/projects/dig/standard/dig-brandbook-3.jpg",
                                "src_retina": "images/projects/dig/retina/dig-brandbook-3.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/dig/hi-res/dig-brandbook-3.jpg",
                                "src_preview": "images/projects/dig/hi-res/dig-brandbook-3.jpg",
                                "caption": "Dig gif image"   
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorPubFS",
                    "data" : {
                        "pub" : {
                            "name" : "DigBrandBook",
                            "src" : "//e.issuu.com/embed.html#22891629/40051135",
                            "caption" : "Alex Norton DiG Brand Book." 
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "dig-poster-sem-1",
                            "src": "images/projects/dig/standard/dig-poster-sem-1.jpg",
                            "src_standard": "images/projects/dig/standard/dig-poster-sem-1.jpg",
                            "src_retina": "images/projects/dig/retina/dig-poster-sem-1.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/dig/hi-res/dig-poster-sem-1.jpg",
                            "src_preview": "images/projects/dig/hi-res/dig-poster-sem-1.jpg",
                            "caption": "Dig Poster"
                        }
                    }
                },
                {
                    "name" : "endeavorImageSlider75",
                    "data" : {
                        "meta" : "Branding",
                        "images" : [
                            {
                                "name": "dig-poster-1.0",
                                "src": "images/projects/dig/standard/dig-poster-1.0.jpg",
                                "src_standard": "images/projects/dig/standard/dig-poster-1.0.jpg",
                                "src_retina": "images/projects/dig/retina/dig-poster-1.0.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/dig/hi-res/dig-poster-1.0.jpg",
                                "src_preview": "images/projects/dig/hi-res/dig-poster-1.0.jpg",
                                "caption": "Dig Poster"   
                            },
                            {
                                "name": "dig-poster-1.1",
                                "src": "images/projects/dig/standard/dig-poster-1.1.jpg",
                                "src_standard": "images/projects/dig/standard/dig-poster-1.1.jpg",
                                "src_retina": "images/projects/dig/retina/dig-poster-1.1.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/dig/hi-res/dig-poster-1.1.jpg",
                                "src_preview": "images/projects/dig/hi-res/dig-poster-1.1.jpg",
                                "caption": "Dig Poster"   
                            },
                            {
                                "name": "dig-poster-1.2",
                                "src": "images/projects/dig/standard/dig-poster-1.2.jpg",
                                "src_standard": "images/projects/dig/standard/dig-poster-1.2.jpg",
                                "src_retina": "images/projects/dig/retina/dig-poster-1.2.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/dig/hi-res/dig-poster-1.2.jpg",
                                "src_preview": "images/projects/dig/hi-res/dig-poster-1.2.jpg",
                                "caption": "Dig Poster"   
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "dig-poster-sem-2",
                            "src": "images/projects/dig/standard/dig-poster-sem-2.jpg",
                            "src_standard": "images/projects/dig/standard/dig-poster-sem-2.jpg",
                            "src_retina": "images/projects/dig/retina/dig-poster-sem-2.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/dig/hi-res/dig-poster-sem-2.jpg",
                            "src_preview": "images/projects/dig/hi-res/dig-poster-sem-2.jpg",
                            "caption": "Dig Poster"  
                        }
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "dig-poster-2-application-1",
                            "src": "images/projects/dig/standard/dig-poster-2-application-1.jpg",
                            "src_standard": "images/projects/dig/standard/dig-poster-2-application-1.jpg",
                            "src_retina": "images/projects/dig/retina/dig-poster-2-application-1.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/dig/hi-res/dig-poster-2-application-1.jpg",
                            "src_preview": "images/projects/dig/hi-res/dig-poster-2-application-1.jpg",
                            "caption": "Dig Poster"  
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "dig-poster-2-application-2",
                            "src": "images/projects/dig/standard/dig-poster-2-application-2.jpg",
                            "src_standard": "images/projects/dig/standard/dig-poster-2-application-2.jpg",
                            "src_retina": "images/projects/dig/retina/dig-poster-2-application-2.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/dig/hi-res/dig-poster-2-application-2.jpg",
                            "src_preview": "images/projects/dig/hi-res/dig-poster-2-application-2.jpg",
                            "caption": "Dig Poster"   
                        }
                    }
                },
                {
                    "name" : "endeavorCaptionFS",
                    "data" : {
                        "caption" : "(above) Posters were printed and distributed across many Boston universities for a special local competition pitting students head-to-head for science! (below) The Dig consists of sixteen sectors, we created a count-up graphic to visualize player progress."
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "dig-sector-1",
                            "src": "images/projects/dig/standard/dig-sector-1.jpg",
                            "src_standard": "images/projects/dig/standard/dig-sector-1.jpg",
                            "src_retina": "images/projects/dig/retina/dig-sector-1.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/dig/hi-res/dig-sector-1.jpg",
                            "src_preview": "images/projects/dig/hi-res/dig-sector-1.jpg",
                            "caption": "Dig gif image"  
                        }
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "dig-sector-gif",
                            "src": "images/projects/dig/standard/dig-sector-gif.gif",
                            "src_standard": "images/projects/dig/standard/dig-sector-gif.gif",
                            "src_retina": "images/projects/dig/retina/dig-sector-gif.gif",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/dig/hi-res/dig-sector-gif.gif",
                            "src_preview": "images/projects/dig/hi-res/dig-sector-gif.gif",
                            "caption": "Dig gif image"  
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "dig-sector-2",
                            "src": "images/projects/dig/standard/dig-sector-2.jpg",
                            "src_standard": "images/projects/dig/standard/dig-sector-2.jpg",
                            "src_retina": "images/projects/dig/retina/dig-sector-2.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/dig/hi-res/dig-sector-2.jpg",
                            "src_preview": "images/projects/dig/hi-res/dig-sector-2.jpg",
                            "caption": "Dig gif image"  
                        }
                    }
                },
                {
                    "name" : "endeavorParagraph",
                    "data" : {
                        "header" : "Algorithms + Process",
                        "class" : "endeavor-item-125",
                        "bgColor" : "",
                        "description" : "We developed a dynamic, generative, identity system with behavior inspired by the neuron reconstruction process and cellular automata. The algorithm afforded a nearly infinite range of original content for social media outlets. The denisity of black squares was designed to be related to the progress of the Dig."
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "dig-algo-0.2",
                            "src": "images/projects/dig/standard/dig-algo-0.2.jpg",
                            "src_standard": "images/projects/dig/standard/dig-algo-0.2.jpg",
                            "src_retina": "images/projects/dig/retina/dig-algo-0.2.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/dig/hi-res/dig-algo-0.2.jpg",
                            "src_preview": "images/projects/dig/hi-res/dig-algo-0.2.jpg",
                            "caption": "Dig gif image"   
                        }
                    }
                },
                {
                    "name" : "endeavorVideoFS",
                    "data" : {
                        "class" : "endeavor-item-125 endeavor-width-100vw endeavor-pos-rel",
                        "loop": "",
                        "muted": "",
                        "autoplay": "true",
                        "src" : {
                            "webm" : "images/projects/dig/videos/dig.webm",
                            "mp4" : "images/projects/dig/videos/dig.mp4",
                            "poster" : "images/projects/dig/videos/dig.jpg"
                        }
                    }
                },
                {
                    "name" : "endeavorImageSlider",
                    "data" : {
                        "meta" : "Algorithmic",
                        "images" : [
                            {
                                "name": "dig-algo-1",
                                "src": "images/projects/dig/standard/dig-algo-1.jpg",
                                "src_standard": "images/projects/dig/standard/dig-algo-1.jpg",
                                "src_retina": "images/projects/dig/retina/dig-algo-1.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/dig/hi-res/dig-algo-1.jpg",
                                "src_preview": "images/projects/dig/hi-res/dig-algo-1.jpg",
                                "caption": "Dig gif image"   
                            },
                            {
                                "name": "dig-algo-2",
                                "src": "images/projects/dig/standard/dig-algo-2.jpg",
                                "src_standard": "images/projects/dig/standard/dig-algo-2.jpg",
                                "src_retina": "images/projects/dig/retina/dig-algo-2.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/dig/hi-res/dig-algo-2.jpg",
                                "src_preview": "images/projects/dig/hi-res/dig-algo-2.jpg",
                                "caption": "Dig gif image"   
                            },
                            {
                                "name": "dig-algo-3",
                                "src": "images/projects/dig/standard/dig-algo-3.jpg",
                                "src_standard": "images/projects/dig/standard/dig-algo-3.jpg",
                                "src_retina": "images/projects/dig/retina/dig-algo-3.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/dig/hi-res/dig-algo-3.jpg",
                                "src_preview": "images/projects/dig/hi-res/dig-algo-3.jpg",
                                "caption": "Dig gif image"   
                            },
                            {
                                "name": "dig-algo-4",
                                "src": "images/projects/dig/standard/dig-algo-4.jpg",
                                "src_standard": "images/projects/dig/standard/dig-algo-4.jpg",
                                "src_retina": "images/projects/dig/retina/dig-algo-4.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/dig/hi-res/dig-algo-4.jpg",
                                "src_preview": "images/projects/dig/hi-res/dig-algo-4.jpg",
                                "caption": "Dig gif image"   
                            },
                            {
                                "name": "dig-algo-5",
                                "src": "images/projects/dig/standard/dig-algo-5.jpg",
                                "src_standard": "images/projects/dig/standard/dig-algo-5.jpg",
                                "src_retina": "images/projects/dig/retina/dig-algo-5.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/dig/hi-res/dig-algo-5.jpg",
                                "src_preview": "images/projects/dig/hi-res/dig-algo-5.jpg",
                                "caption": "Dig gif image"   
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorPad",
                    "data" : {
                        "class" : "endeavor-height-200px-responsive endeavor-item-no-margin endeavor-height-10vw"
                    }
                }
            ]
        },
        {
            "route" :"das-project",
            "name"  : "DAS",
            "project_type"  : "Project",
            "year"  : "2015",
            "preview" :"das-preview",
            "medium": [
                "Magazing",
                "Digital Publication",
                "Interactive"
            ],
            "technique": [
                "Typesetting",
                "Layout",
                "Graphic Design",
                "User Experience Design"
            ],
            "description" : {
                "quote": "Design is not a discipline, but a way of looking at the world.",
                "brief": "Real-world challenges require, perhaps more than ever, a deep, but interdisciplinary skill set combined with an ability to operate across multiple scales with creativity. Inspired by Neri Oxman's + Meejin Yoon's 'Design Across Scales' MIT Media Lab course, and naturally, Charles and Ray Eames’ canonical Powers of Ten, DAS explores the relationship between science and engineering through the lens of Design. It examines how transformations in science and technology have influenced design thinking, and vice versa. It explores interdisciplinary tools and methods to represent, model, design and fabricate objects, machines, and systems. DAS is organized by scale, topics ranging from the macro to micro are investigated across multiple problem contexts to demonstrate that design is not a discipline, but a way of looking at the world; one that promotes the synthesis of interdisciplinary knowledge across scales in order to create objects and systems for the greater good.",
                "challenge": "Create a concept and deliverable for a minimalist quarterly publication operating at the intersection of design, technology, and people. Design the layout system, develop the brand and identity system, and assemble all of the content. And make it affordable—make it monochromatic. Can you design something people will actually want—imagine a journal for creative frontiers, a journal for the anti-discpliplinary, a journal for design across scales and problem contexts."
            },
            "meta" : {
                "Client" : "MassArt",
                "Year" : 2015,
                "Role" : "Designer / Editor",
                "Team" : "—",
                "Discipline" : "Graphic Design / UX Design",
                "Medium" : "Physical Publication / Digital Publication",
                "Technologies" : "—",
                "Duration" : "Two Months"
            },
            "image_hero": "images/projects/das/hi-res/das-hero-2.jpg",
            "image_preview": "images/projects/das/hi-res/das-preview.jpg",
            "sections" : [
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                                "name": "DAS Intro",
                                "src": "images/projects/das/standard/das-pub-0.jpg",
                                "src_standard": "images/projects/das/standard/das-pub-0.jpg",
                                "src_retina": "images/projects/das/retina/das-pub-0.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/das/hi-res/das-pub-0.jpg",
                                "src_preview": "images/projects/das/hi-res/das-pub-0.jpg",
                                "caption": "DAS Cover"  
                        }
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "DAS Contents",
                            "src": "images/projects/das/standard/das-pub-1.jpg",
                            "src_standard": "images/projects/das/standard/das-pub-1.jpg",
                            "src_retina": "images/projects/das/retina/das-pub-1.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/das/hi-res/das-pub-1.jpg",
                            "src_preview": "images/projects/das/hi-res/das-pub-1.jpg",
                            "caption": "DAS Contents"   
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                                "name": "DAS Intro",
                                "src": "images/projects/das/standard/das-pub-2.jpg",
                                "src_standard": "images/projects/das/standard/das-pub-2.jpg",
                                "src_retina": "images/projects/das/retina/das-pub-2.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/das/hi-res/das-pub-2.jpg",
                                "src_preview": "images/projects/das/hi-res/das-pub-2.jpg",
                                "caption": "DAS Contents"  
                        }
                    }
                },
                {
                    "name" : "endeavorCaptionFS",
                    "data" : {
                        "caption" : "DAS Quarterly is organized both by content and by scale. This affords a new reading experience offering the reader another context to engage with the content. A system of minimalist icons were developed to accompany each major section."
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "DAS Computation Intro",
                            "src": "images/projects/das/standard/das-pub-3.jpg",
                            "src_standard": "images/projects/das/standard/das-pub-3.jpg",
                            "src_retina": "images/projects/das/retina/das-pub-3.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/das/hi-res/das-pub-3",
                            "src_preview": "images/projects/das/hi-res/das-pub-3",
                            "caption": "DAS Computation Intro"
                        }
                    }
                },
                {
                    "name" : "endeavorImageSlider",
                    "data" : {
                        "images" : [
                            {
                                "name": "DAS Computation 0",
                                "src": "images/projects/das/standard/das-pub-4.jpg",
                                "src_standard": "images/projects/das/standard/das-pub-4.jpg",
                                "src_retina": "images/projects/das/retina/das-pub-4.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/das/hi-res/das-pub-4.jpg",
                                "src_preview": "images/projects/das/hi-res/das-pub-4.jpg",
                                "caption": "DAS Computation 0"   
                            },
                            {
                                "name": "DAS Computation 1",
                                "src": "images/projects/das/standard/das-pub-5.jpg",
                                "src_standard": "images/projects/das/standard/das-pub-5.jpg",
                                "src_retina": "images/projects/das/retina/das-pub-5.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/das/hi-res/das-pub-5.jpg",
                                "src_preview": "images/projects/das/hi-res/das-pub-5.jpg",
                                "caption": "DAS Computation 1"   
                            },
                            {
                                "name": "DAS Computation 2",
                                "src": "images/projects/das/standard/das-pub-6.jpg",
                                "src_standard": "images/projects/das/standard/das-pub-6.jpg",
                                "src_retina": "images/projects/das/retina/das-pub-6.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/das/hi-res/das-pub-6.jpg",
                                "src_preview": "images/projects/das/hi-res/das-pub-6.jpg",
                                "caption": "DAS Computation 2"   
                            },
                            {
                                "name": "DAS Computation 3",
                                "src": "images/projects/das/standard/das-pub-7.jpg",
                                "src_standard": "images/projects/das/standard/das-pub-7.jpg",
                                "src_retina": "images/projects/das/retina/das-pub-7.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/das/hi-res/das-pub-7.jpg",
                                "src_preview": "images/projects/das/hi-res/das-pub-7.jpg",
                                "caption": "DAS Computation 3"   
                            },
                            {
                                "name": "DAS Computation 4",
                                "src": "images/projects/das/standard/das-pub-8.jpg",
                                "src_standard": "images/projects/das/standard/das-pub-8.jpg",
                                "src_retina": "images/projects/das/retina/das-pub-8.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/das/hi-res/das-pub-8.jpg",
                                "src_preview": "images/projects/das/hi-res/das-pub-8.jpg",
                                "caption": "DAS Computation 4"   
                            },
                            {
                                "name": "DAS Computation 5",
                                "src": "images/projects/das/standard/das-pub-9.jpg",
                                "src_standard": "images/projects/das/standard/das-pub-9.jpg",
                                "src_retina": "images/projects/das/retina/das-pub-9.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/das/hi-res/das-pub-9.jpg",
                                "src_preview": "images/projects/das/hi-res/das-pub-9.jpg",
                                "caption": "DAS Computation 5"   
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "DAS Computation CU 2",
                            "src": "images/projects/das/standard/das-pub-10.jpg",
                            "src_standard": "images/projects/das/standard/das-pub-10.jpg",
                            "src_retina": "images/projects/das/retina/das-pub-10.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/das/hi-res/das-pub-10.jpg",
                            "src_preview": "images/projects/das/hi-res/das-pub-10.jpg",
                            "caption": "DAS Computation CU 2"   
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "DAS Computation 3D",
                            "src": "images/projects/das/standard/das-pub-11.jpg",
                            "src_standard": "images/projects/das/standard/das-pub-11.jpg",
                            "src_retina": "images/projects/das/retina/das-pub-11.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/das/hi-res/das-pub-11.jpg",
                            "src_preview": "images/projects/das/hi-res/das-pub-11.jpg",
                            "caption": "DAS Computation 3D"   
                        }
                    }
                },
                {
                    "name" : "endeavorCaptionFS",
                    "data" : {
                        "caption" : "Playful, yet subtle typographic annomolies offer an entry point for lengthy compositions while the use of bold, artful photography empowers subject matter—even in black + white."
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "DAS Computation 6",
                            "src": "images/projects/das/standard/das-pub-12.jpg",
                            "src_standard": "images/projects/das/standard/das-pub-12.jpg",
                            "src_retina": "images/projects/das/retina/das-pub-12.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/das/hi-res/das-pub-12.jpg",
                            "src_preview": "images/projects/das/hi-res/das-pub-12.jpg",
                            "caption": "DAS Computation 6"   
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-no-margin",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "DAS Computation 7",
                            "src": "images/projects/das/standard/das-pub-13.jpg",
                            "src_standard": "images/projects/das/standard/das-pub-13.jpg",
                            "src_retina": "images/projects/das/retina/das-pub-13.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/das/hi-res/das-pub-13.jpg",
                            "src_preview": "images/projects/das/hi-res/das-pub-13.jpg",
                            "caption": "DAS Computation 7"  
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-bottom-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "DAS Computation 8",
                            "src": "images/projects/das/standard/das-pub-14.jpg",
                            "src_standard": "images/projects/das/standard/das-pub-14.jpg",
                            "src_retina": "images/projects/das/retina/das-pub-14.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/das/hi-res/das-pub-14.jpg",
                            "src_preview": "images/projects/das/hi-res/das-pub-14.jpg",
                            "caption": "DAS Computation 8"  
                        }
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "DAS Computation 9",
                            "src": "images/projects/das/standard/das-pub-15.jpg",
                            "src_standard": "images/projects/das/standard/das-pub-15.jpg",
                            "src_retina": "images/projects/das/retina/das-pub-15.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/das/hi-res/das-pub-15.jpg",
                            "src_preview": "images/projects/das/hi-res/das-pub-15.jpg",
                            "caption": "DAS Computation 9"  
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "DAS Computation 10",
                            "src": "images/projects/das/standard/das-pub-16.jpg",
                            "src_standard": "images/projects/das/standard/das-pub-16.jpg",
                            "src_retina": "images/projects/das/retina/das-pub-16.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/das/hi-res/das-pub-16.jpg",
                            "src_preview": "images/projects/das/hi-res/das-pub-16.jpg",
                            "caption": "DAS Computation 10"   
                        }
                    }
                },
                {
                    "name" : "endeavorPubFS",
                    "data" : {
                        "pub" : {
                            "name" : "DAS_Quaterly",
                            "src" : "//e.issuu.com/embed.html#22891629/32844009",
                            "caption" : "Alex Norton DAS DAS_Quaterly." 
                        }
                    }
                },
                {
                    "name" : "endeavorPad",
                    "data" : {
                        "class" : "endeavor-height-200px-responsive endeavor-item-no-margin endeavor-height-10vw"
                    }
                }
            ]
        },
        {
            "route" :"muwu-project",
            "name"  : "MuWu",
            "project_type"  : "Project",
            "year"  : "2014",
            "preview" :"muwu-preview",
            "medium": [
                "Bookbinding",
                "Reaserch+Development",
                "Creative Coding"
            ],
            "technique": [
                "Book Binding",
                "Typesetting",
                "Creative Coding"
            ],
            "description" : {
                "quote": "How would algorithms mediate a conversation with the late composer, John Cage?",
                "brief": "MuWu is a collection of the thoughts and the experience of John Cage. Inspired by the classic text, I Ching, MuWu is intended to ask questions. How is a book composed? What is language and how does it flow? After a single trip to China, John Cage was converted to a Taoist believer. He incorporated chance operations, found in the I Ching, into most of his artworks for the rest of his life. Letting go of intention and embracing the natural flow of tao led Cage to create some of the 20th century's most influential artworks. MuWu pays homaged to to late John Cage by continuing where he left off. The book uses a computational approach to to story telling to fill up exactly 64 body pages with unique content from the compilation, Conversing with Cage. The length was chosen in response to the 64 hexagrams of the I Ching. MuWu attempts to assemble completely new and unique thoughts from the any dialogues found in Conversing with Cage. This approach shifts creative control from the designer towards the algorithm.",
                "challenge": "MuWu was concieved as a student project during my junior year of university. At the time, I was still quite new to programing and just getting my feet wet with the possibilities of design mediated computation. It was a serious risk to take on a full book publication using an unfamiliar technology and ambitious concept. Through the patience of my professors, many, many late evenings debugging, researching, and most importantly a marked propensity for experimentation MuWu came into existance. The final deliverable consisted of a set of eight hand-printed and hard-cover, hand-bound books of exceptional quality. When you leaf through MuWu, you feel none of the struggle, only a clear and simple concept and formal delivery."
            },
            "meta" : {
                "Client" : "University",
                "Year" : 2015,
                "Role" : "Designer/Editor",
                "Team" : "—",
                "Discipline" : "Book Design, Creative Coding, Editing",
                "Medium" : "Graphic Design, Book Design",
                "Technologies" : "Bookbinding, Processing",
                "Duration" : "Two Months"
            },
            "image_hero": "images/projects/muwu/hi-res/muwu-hero-3.jpg",
            "image_preview": "images/projects/muwu/hi-res/muwu-preview-2.jpg",
            "sections" : [
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "muwu-intro",
                            "src": "images/projects/muwu/standard/muwu-intro.jpg",
                            "src_standard": "images/projects/muwu/standard/muwu-intro.jpg",
                            "src_retina": "images/projects/muwu/retina/muwu-intro.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/muwu/hi-res/muwu-intro.jpg",
                            "src_preview": "images/projects/muwu/hi-res/muwu-intro.jpg",
                            "caption": "Muwu Intro"
                        }
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "class" : "endeavor-item-top-125 endeavor-item-bottom",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "muwu-book-10",
                            "src": "images/projects/muwu/standard/muwu-book-10.jpg",
                            "src_standard": "images/projects/muwu/standard/muwu-book-10.jpg",
                            "src_retina": "images/projects/muwu/retina/muwu-book-10.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/muwu/hi-res/muwu-book-10.jpg",
                            "src_preview": "images/projects/muwu/hi-res/muwu-book-10.jpg",
                            "caption": "Muwu Book 10"
                        }
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "class" : "endeavor-item-bottom-125 endeavor-item-top",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "muwu-book-12",
                            "src": "images/projects/muwu/standard/muwu-book-12.jpg",
                            "src_standard": "images/projects/muwu/standard/muwu-book-12.jpg",
                            "src_retina": "images/projects/muwu/retina/muwu-book-12.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/muwu/hi-res/muwu-book-12.jpg",
                            "src_preview": "images/projects/muwu/hi-res/muwu-book-12.jpg",
                            "caption": "Muwu Book 12"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "muwu-book-11",
                            "src": "images/projects/muwu/standard/muwu-book-11.jpg",
                            "src_standard": "images/projects/muwu/standard/muwu-book-11.jpg",
                            "src_retina": "images/projects/muwu/retina/muwu-book-11.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/muwu/hi-res/muwu-book-11.jpg",
                            "src_preview": "images/projects/muwu/hi-res/muwu-book-11.jpg",
                            "caption": "Muwu Book 11"   
                        }
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "muwu-book-7",
                            "src": "images/projects/muwu/standard/muwu-book-7.jpg",
                            "src_standard": "images/projects/muwu/standard/muwu-book-7.jpg",
                            "src_retina": "images/projects/muwu/retina/muwu-book-7.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/muwu/hi-res/muwu-book-7.jpg",
                            "src_preview": "images/projects/muwu/hi-res/muwu-book-7.jpg",
                            "caption": "Muwu Book 7"
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "muwu-empty-2",
                            "src": "images/projects/muwu/standard/muwu-empty-4.jpg",
                            "src_standard": "images/projects/muwu/standard/muwu-empty-4.jpg",
                            "src_retina": "images/projects/muwu/retina/muwu-empty-4.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/muwu/hi-res/muwu-empty-4.jpg",
                            "src_preview": "images/projects/muwu/hi-res/muwu-empty-4.jpg",
                            "caption": "Muwu Empty Poster" 
                        }
                    }
                },
                {
                    "name" : "endeavorImageFSList",
                    "data" : {
                        "meta" : "Muwu Book",
                        "images" : [
                            {
                                "name": "muwu-book-13",
                                "src": "images/projects/muwu/standard/muwu-book-13.jpg",
                                "src_standard": "images/projects/muwu/standard/muwu-book-13.jpg",
                                "src_retina": "images/projects/muwu/retina/muwu-book-13.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/muwu/hi-res/muwu-book-13.jpg",
                                "src_preview": "images/projects/muwu/hi-res/muwu-book-13.jpg",
                                "caption": "Muwu Book 13"   
                            },
                            {
                                "name": "muwu-book-6",
                                "src": "images/projects/muwu/standard/muwu-book-6.jpg",
                                "src_standard": "images/projects/muwu/standard/muwu-book-6.jpg",
                                "src_retina": "images/projects/muwu/retina/muwu-book-6.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/muwu/hi-res/muwu-book-6.jpg",
                                "src_preview": "images/projects/muwu/hi-res/muwu-book-6.jpg",
                                "caption": "Muwu Book 6"   
                            },
                            {
                                "name": "muwu-book-5",
                                "src": "images/projects/muwu/standard/muwu-book-5.jpg",
                                "src_standard": "images/projects/muwu/standard/muwu-book-5.jpg",
                                "src_retina": "images/projects/muwu/retina/muwu-book-5.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/muwu/hi-res/muwu-book-5.jpg",
                                "src_preview": "images/projects/muwu/hi-res/muwu-book-5.jpg",
                                "caption": "Muwu Book 5"  
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "muwu-book-4",
                            "src": "images/projects/muwu/standard/muwu-book-4.jpg",
                            "src_standard": "images/projects/muwu/standard/muwu-book-4.jpg",
                            "src_retina": "images/projects/muwu/retina/muwu-book-4.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/muwu/hi-res/muwu-book-4.jpg",
                            "src_preview": "images/projects/muwu/hi-res/muwu-book-4.jpg",
                            "caption": "Muwu Book 4"
                        }
                    }
                },
                {
                    "name" : "endeavorImageSlider",
                    "data" : {
                        "meta" : "MuWu Close Up",
                        "images" : [
                            {
                                "name": "muwu-book-18",
                                "src": "images/projects/muwu/standard/muwu-book-18.jpg",
                                "src_standard": "images/projects/muwu/standard/muwu-book-18.jpg",
                                "src_retina": "images/projects/muwu/retina/muwu-book-18.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/muwu/hi-res/muwu-book-18.jpg",
                                "src_preview": "images/projects/muwu/hi-res/muwu-book-18.jpg",
                                "caption": "Muwu Book 18"   
                            },
                            {
                                "name": "muwu-book-17",
                                "src": "images/projects/muwu/standard/muwu-book-17.jpg",
                                "src_standard": "images/projects/muwu/standard/muwu-book-17.jpg",
                                "src_retina": "images/projects/muwu/retina/muwu-book-17.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/muwu/hi-res/muwu-book-17.jpg",
                                "src_preview": "images/projects/muwu/hi-res/muwu-book-17.jpg",
                                "caption": "Muwu Book 17"   
                            },
                            {
                                "name": "muwu-book-16",
                                "src": "images/projects/muwu/standard/muwu-book-16.jpg",
                                "src_standard": "images/projects/muwu/standard/muwu-book-16.jpg",
                                "src_retina": "images/projects/muwu/retina/muwu-book-16.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/muwu/hi-res/muwu-book-16.jpg",
                                "src_preview": "images/projects/muwu/hi-res/muwu-book-16.jpg",
                                "caption": "Muwu Book 16"   
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorVideoFS",
                    "data" : {
                        "class" : "endeavor-item-125 endeavor-width-100vw endeavor-pos-rel",
                        "loop": "",
                        "muted": "",
                        "audio_toggle" : "true",
                        "autoplay": "true",
                        "src" : {
                            "webm" : "images/projects/muwu/videos/muwu_music_of_changes.webm#t=120",
                            "mp4" : "images/projects/muwu/videos/muwu_music_of_changes.mp4#t=120",
                            "poster" : "images/projects/muwu/videos/muwu_music_of_changes.jpg#t=120"
                        }
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "muwu-book-3",
                            "src": "images/projects/muwu/standard/muwu-book-3.jpg",
                            "src_standard": "images/projects/muwu/standard/muwu-book-3.jpg",
                            "src_retina": "images/projects/muwu/retina/muwu-book-3.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/muwu/hi-res/muwu-book-3.jpg",
                            "src_preview": "images/projects/muwu/hi-res/muwu-book-3.jpg",
                            "caption": "Muwu Processing"
                        }
                    }
                },
                {
                    "name" : "endeavorVideoFS",
                    "data" : {
                        "class" : "endeavor-item-125 endeavor-width-100vw endeavor-pos-rel",
                        "loop": "",
                        "muted": "",
                        "audio_toggle" : "true",
                        "autoplay": "true",
                        "src" : {
                            "webm" : "images/projects/muwu/videos/muwu_dreams.webm#t=120",
                            "mp4" : "images/projects/muwu/videos/muwu_dreams.mp4#t=120",
                            "poster" : "images/projects/muwu/videos/muwu_dreams.jpg#t=120"
                        }
                    }
                },
                {
                    "name" : "endeavorImageFSList",
                    "data" : {
                        "meta" : "Muwu Book II",
                        "images" : [
                            {
                                "name": "muwu-book-14",
                                "src": "images/projects/muwu/standard/muwu-book-14.jpg",
                                "src_standard": "images/projects/muwu/standard/muwu-book-14.jpg",
                                "src_retina": "images/projects/muwu/retina/muwu-book-14.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/muwu/hi-res/muwu-book-14.jpg",
                                "src_preview": "images/projects/muwu/hi-res/muwu-book-14.jpg",
                                "caption": "Muwu Book 14"   
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorPubFS",
                    "data" : {
                        "pub" : {
                            "name" : "Muwu",
                            "src" : "//e.issuu.com/embed.html#22891629/40340093",
                            "caption" : "Alex Norton MuWu." 
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "muwu-research-2",
                            "src": "images/projects/muwu/standard/muwu-research-2.jpg",
                            "src_standard": "images/projects/muwu/standard/muwu-research-2.jpg",
                            "src_retina": "images/projects/muwu/retina/muwu-research-2.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/muwu/hi-res/muwu-research-2.jpg",
                            "src_preview": "images/projects/muwu/hi-res/muwu-research-2.jpg",
                            "caption": "Muwu Research"
                        }
                    }
                },
                {
                    "name" : "endeavorParagraph",
                    "data" : {
                        "header" : "Research",
                        "class" : "endeavor-item-no-margin",
                        "bgColor" : "",
                        "description" : "I found myself drawn towards the I Ching. It's system of trigrams and hexagrams felt like a sort of analog-computer. I designed a series of posters to better appreciate both the mechanisms and expanse of the divination system. Would it be possible to map these Taoist symbols into a robust and meaningful layout system?"
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-no-margin",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "muwu-layout-system-expanded",
                            "src": "images/projects/muwu/standard/muwu-layout-system-expanded.jpg",
                            "src_standard": "images/projects/muwu/standard/muwu-layout-system-expanded.jpg",
                            "src_retina": "images/projects/muwu/retina/muwu-layout-system-expanded.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/muwu/hi-res/muwu-layout-system-expanded.jpg",
                            "src_preview": "images/projects/muwu/hi-res/muwu-layout-system-expanded.jpg",
                            "caption": "Muwu Layout System"
                        }
                    }
                },
                {
                    "name" : "endeavorParagraph",
                    "data" : {
                        "header" : "Methods",
                        "class" : "endeavor-item-125",
                        "bgColor" : "",
                        "description" : "Mu is the East Asian word descibing literally 'nothing', or 'un'. It is very curious that this is nearly the same meaning as the Greek letter 'μ' pronounced 'mu' which in modern academia is reference to a very small measurement. The title is appropriate as this text seeks to distance the design from the final outcome. Both the content and layout of the MuWu are algorithmically sampled. MuWu was sort of my introduction to the possibilities of generative design."
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-no-margin",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "muwu-methods",
                            "src": "images/projects/muwu/standard/muwu-methods-2.jpg",
                            "src_standard": "images/projects/muwu/standard/muwu-methods-2.jpg",
                            "src_retina": "images/projects/muwu/retina/muwu-methods-2.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/muwu/hi-res/muwu-methods-2.jpg",
                            "src_preview": "images/projects/muwu/hi-res/muwu-methods-2.jpg",
                            "caption": "Muwu Methods"  
                        }
                    }
                },
                {
                    "name" : "endeavorImageSlider",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "meta" : "Muwu Methods Iterator",
                        "images" : [
                            {
                                "name": "muwu-method-1",
                                "src": "images/projects/muwu/standard/muwu-method-1.jpg",
                                "src_standard": "images/projects/muwu/standard/muwu-method-1.jpg",
                                "src_retina": "images/projects/muwu/retina/muwu-method-1.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/muwu/hi-res/muwu-method-1.jpg",
                                "src_preview": "images/projects/muwu/hi-res/muwu-method-1.jpg",
                                "caption": "Muwu Method"   
                            },
                            {
                                "name": "muwu-method-2",
                                "src": "images/projects/muwu/standard/muwu-method-2.jpg",
                                "src_standard": "images/projects/muwu/standard/muwu-method-2.jpg",
                                "src_retina": "images/projects/muwu/retina/muwu-method-2.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/muwu/hi-res/muwu-method-2.jpg",
                                "src_preview": "images/projects/muwu/hi-res/muwu-method-2.jpg",
                                "caption": "Muwu Method"   
                            },
                            {
                                "name": "muwu-method-3",
                                "src": "images/projects/muwu/standard/muwu-method-3.jpg",
                                "src_standard": "images/projects/muwu/standard/muwu-method-3.jpg",
                                "src_retina": "images/projects/muwu/retina/muwu-method-3.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/muwu/hi-res/muwu-method-3.jpg",
                                "src_preview": "images/projects/muwu/hi-res/muwu-method-3.jpg",
                                "caption": "Muwu Method"   
                            },
                            {
                                "name": "muwu-method-4",
                                "src": "images/projects/muwu/standard/muwu-method-4.jpg",
                                "src_standard": "images/projects/muwu/standard/muwu-method-4.jpg",
                                "src_retina": "images/projects/muwu/retina/muwu-method-4.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/muwu/hi-res/muwu-method-4.jpg",
                                "src_preview": "images/projects/muwu/hi-res/muwu-method-4.jpg",
                                "caption": "Muwu Method"   
                            },
                            {
                                "name": "muwu-method-5",
                                "src": "images/projects/muwu/standard/muwu-method-5.jpg",
                                "src_standard": "images/projects/muwu/standard/muwu-method-5.jpg",
                                "src_retina": "images/projects/muwu/retina/muwu-method-5.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/muwu/hi-res/muwu-method-5.jpg",
                                "src_preview": "images/projects/muwu/hi-res/muwu-method-5.jpg",
                                "caption": "Muwu Method"   
                            },
                            {
                                "name": "muwu-method-6",
                                "src": "images/projects/muwu/standard/muwu-method-6.jpg",
                                "src_standard": "images/projects/muwu/standard/muwu-method-6.jpg",
                                "src_retina": "images/projects/muwu/retina/muwu-method-6.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/muwu/hi-res/muwu-method-6.jpg",
                                "src_preview": "images/projects/muwu/hi-res/muwu-method-6.jpg",
                                "caption": "Muwu Method"   
                            },
                            {
                                "name": "muwu-method-7",
                                "src": "images/projects/muwu/standard/muwu-method-7.jpg",
                                "src_standard": "images/projects/muwu/standard/muwu-method-7.jpg",
                                "src_retina": "images/projects/muwu/retina/muwu-method-7.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/muwu/hi-res/muwu-method-7.jpg",
                                "src_preview": "images/projects/muwu/hi-res/muwu-method-7.jpg",
                                "caption": "Muwu Method"   
                            },
                            {
                                "name": "muwu-method-8",
                                "src": "images/projects/muwu/standard/muwu-method-8.jpg",
                                "src_standard": "images/projects/muwu/standard/muwu-method-8.jpg",
                                "src_retina": "images/projects/muwu/retina/muwu-method-8.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/muwu/hi-res/muwu-method-8.jpg",
                                "src_preview": "images/projects/muwu/hi-res/muwu-method-8.jpg",
                                "caption": "Muwu Method"   
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorParagraph",
                    "data" : {
                        "header" : "Layout Machine",
                        "class" : "endeavor-item-top-250",
                        "bgColor" : "",
                        "description" : "Layout Machine was developed to create book layout based on a predefined set of probabilities. It operates as a specialized, automated I Ching which John Cage used to create chance operations and indeterminate series for much of his work. Layout machine computes general, systematic layouts; it specifies the type of layout for a given page but not necessarily how it should be designed. "
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-no-margin",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "muwu-layout-machine-expanded",
                            "src": "images/projects/muwu/standard/muwu-layout-machine-expanded-5.jpg",
                            "src_standard": "images/projects/muwu/standard/muwu-layout-machine-expanded-5.jpg",
                            "src_retina": "images/projects/muwu/retina/muwu-layout-machine-expanded-5.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/muwu/hi-res/muwu-layout-machine-expanded-5.jpg",
                            "src_preview": "images/projects/muwu/hi-res/muwu-layout-machine-expanded-5.jpg",
                            "caption": "Muwu Layout Machine"
                        }
                    }
                },
                {
                    "name" : "endeavorParagraph",
                    "data" : {
                        "header" : "Layout Synthesis",
                        "class" : "endeavor-item-125",
                        "bgColor" : "",
                        "description" : "I created a series of posters to visualize the output of Layout Machine and it's supporting algorithms. It's interesting to examine the form and continuity across the algorithmically generated designs."
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "muwu-layout-synthesis",
                            "src": "images/projects/muwu/standard/muwu-layout-synthesis-1.jpg",
                            "src_standard": "images/projects/muwu/standard/muwu-layout-synthesis-1.jpg",
                            "src_retina": "images/projects/muwu/retina/muwu-layout-synthesis-1.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/muwu/hi-res/muwu-layout-synthesis-1.jpg",
                            "src_preview": "images/projects/muwu/hi-res/muwu-layout-synthesis-1.jpg",
                            "caption": "Muwu Layout Synthesis"
                        }
                    }
                },
                {
                    "name" : "endeavorParagraph",
                    "data" : {
                        "header" : "Generative Algorithms",
                        "class" : "endeavor-item-125",
                        "bgColor" : "",
                        "description" : "Muwu was my first project that leveraged the power and potential of generative design. Though highly conceptual, the project proved a gateway to many new ways of thinking and doing. The speed and flexibility of a new parametric graphic design became immediately clear, instead of pushing pixels and setting control points, I was pushing data, and controlling process flow. I used Processing, a language developed for creative coding to generate the content and much of the layout for Muwu."
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "muwu-code",
                            "src": "images/projects/muwu/standard/muwu-code.jpg",
                            "src_standard": "images/projects/muwu/standard/muwu-code.jpg",
                            "src_retina": "images/projects/muwu/retina/muwu-code.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/muwu/hi-res/muwu-code.jpg",
                            "src_preview": "images/projects/muwu/hi-res/muwu-code.jpg",
                            "caption": "Muwu Processing"
                        }
                    }
                },
                {
                    "name" : "endeavorVideoFS",
                    "data" : {
                        "class" : "endeavor-item-125 endeavor-width-100vw endeavor-pos-rel",
                        "loop": "",
                        "muted": "",
                        "autoplay": "true",
                        "src" : {
                            "webm" : "images/projects/muwu/videos/muwu_experiment_126.webm",
                            "mp4" : "images/projects/muwu/videos/muwu_experiment_126.mp4",
                            "poster" : "images/projects/muwu/videos/muwu_experiment_126.jpg"
                        }
                    }
                },
                {
                    "name" : "endeavorVideoFS",
                    "data" : {
                        "class" : "endeavor-item-125 endeavor-width-100vw endeavor-pos-rel",
                        "loop": "",
                        "muted": "",
                        "autoplay": "true",
                        "src" : {
                            "webm" : "images/projects/muwu/videos/muwu_experiment_1522.webm",
                            "mp4" : "images/projects/muwu/videos/muwu_experiment_1522.mp4",
                            "poster" : "images/projects/muwu/videos/muwu_experiment_1522.jpg"
                        }
                    }
                },
                {
                    "name" : "endeavorVideoFS",
                    "data" : {
                        "class" : "endeavor-item-125 endeavor-width-100vw endeavor-pos-rel",
                        "loop": "",
                        "muted": "",
                        "autoplay": "true",
                        "src" : {
                            "webm" : "images/projects/muwu/videos/muwu_experiment_342.webm",
                            "mp4" : "images/projects/muwu/videos/muwu_experiment_342.mp4",
                            "poster" : "images/projects/muwu/videos/muwu_experiment_342.jpg"
                        }
                    }
                },
                {
                    "name" : "endeavorImageSlider",
                    "data" : {
                        "meta" : "MuWu Algorithmic Experiments",
                        "images" : [
                            {
                                "name": "muwu-algo-0",
                                "src": "images/projects/muwu/standard/muwu-algo-0.jpg",
                                "src_standard": "images/projects/muwu/standard/muwu-algo-0.jpg",
                                "src_retina": "images/projects/muwu/retina/muwu-algo-0.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/muwu/hi-res/muwu-algo-0.jpg",
                                "src_preview": "images/projects/muwu/hi-res/muwu-algo-0.jpg",
                                "caption": "MuWu Algorithmic Experiment"   
                            },
                            {
                                "name": "muwu-algo-1",
                                "src": "images/projects/muwu/standard/muwu-algo-1.jpg",
                                "src_standard": "images/projects/muwu/standard/muwu-algo-1.jpg",
                                "src_retina": "images/projects/muwu/retina/muwu-algo-1.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/muwu/hi-res/muwu-algo-1.jpg",
                                "src_preview": "images/projects/muwu/hi-res/muwu-algo-1.jpg",
                                "caption": "MuWu Algorithmic Experiment"   
                            },
                            {
                                "name": "muwu-algo-2",
                                "src": "images/projects/muwu/standard/muwu-algo-2.jpg",
                                "src_standard": "images/projects/muwu/standard/muwu-algo-2.jpg",
                                "src_retina": "images/projects/muwu/retina/muwu-algo-2.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/muwu/hi-res/muwu-algo-2.jpg",
                                "src_preview": "images/projects/muwu/hi-res/muwu-algo-2.jpg",
                                "caption": "MuWu Algorithmic Experiment"   
                            },
                            {
                                "name": "muwu-algo-3",
                                "src": "images/projects/muwu/standard/muwu-algo-3.jpg",
                                "src_standard": "images/projects/muwu/standard/muwu-algo-3.jpg",
                                "src_retina": "images/projects/muwu/retina/muwu-algo-3.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/muwu/hi-res/muwu-algo-3.jpg",
                                "src_preview": "images/projects/muwu/hi-res/muwu-algo-3.jpg",
                                "caption": "MuWu Algorithmic Experiment"   
                            },
                            {
                                "name": "muwu-algo-4",
                                "src": "images/projects/muwu/standard/muwu-algo-4.jpg",
                                "src_standard": "images/projects/muwu/standard/muwu-algo-4.jpg",
                                "src_retina": "images/projects/muwu/retina/muwu-algo-4.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/muwu/hi-res/muwu-algo-4.jpg",
                                "src_preview": "images/projects/muwu/hi-res/muwu-algo-4.jpg",
                                "caption": "MuWu Algorithmic Experiment"   
                            },
                            {
                                "name": "muwu-algo-5",
                                "src": "images/projects/muwu/standard/muwu-algo-5.jpg",
                                "src_standard": "images/projects/muwu/standard/muwu-algo-5.jpg",
                                "src_retina": "images/projects/muwu/retina/muwu-algo-5.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/muwu/hi-res/muwu-algo-5.jpg",
                                "src_preview": "images/projects/muwu/hi-res/muwu-algo-5.jpg",
                                "caption": "MuWu Algorithmic Experiment"   
                            },
                            {
                                "name": "muwu-algo-6",
                                "src": "images/projects/muwu/standard/muwu-algo-6.jpg",
                                "src_standard": "images/projects/muwu/standard/muwu-algo-6.jpg",
                                "src_retina": "images/projects/muwu/retina/muwu-algo-6.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/muwu/hi-res/muwu-algo-6.jpg",
                                "src_preview": "images/projects/muwu/hi-res/muwu-algo-6.jpg",
                                "caption": "MuWu Algorithmic Experiment"   
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorPad",
                    "data" : {
                        "class" : "endeavor-height-200px-responsive endeavor-item-no-margin endeavor-height-10vw"
                    }
                }
                  
            ]
        },
        {
            "route" :"our-epigenomes-project",
            "name"  : "Our Epigenomes",
            "project_type"  : "Project",
            "year"  : "2015",
            "preview" :"our-epigenomes-preview",
            "medium": [
                "Photography",
                "Graphic Design",
                "Book Binding"
            ],
            "technique": [
                "Inkjet Printing",
                "DSLR",
                "Studio Photography",
                "Art Direction"
            ],
            "description" : {
                "quote": "A unisex collection informed by a careful investigation into genetic processes and  systems.",
                "brief": "Identical twins begin their lives in a very similar fashion, with nearly identical genomes inherited from their parents. The Our Epigenomes collection stems from a culmination of life experience. Although we are very close as identical twins and share much of the same genome, my sister and I couldn't be more unique. A lifetime of differing experiences has caused certain traits to develop, uniquely conditioning each of us to our respective environments. Epigenomes are trait differences not caused by DNA, epigenetic modification is occurs slowly, over a lifetime due to these differing experiences.",
                "challenge": "Our Epigenomes is the first in a series of ready-to-wear collections by Gloria Im. Gloria and I collaborated on the design and art direction for a series of photo-shoots resulting in a look-book. We combined a love for graphic formalism with the dimensionality of architecure to achieve a look and feel that embodied a monumental sensibility."
            },
            "meta" : {
                "Client" : "Gloria Im",
                "Year" : 2015,
                "Role" : "Designer / Photographer / Art Director",
                "Team" : "Gloria Im",
                "Discipline" : "Art Direction, Photography, Graphic Design",
                "Medium" : "Photography, Book Design",
                "Technologies" : "Studio Photography",
                "Duration" : "One Week"
            },
            "image_hero": "images/projects/our-epigenomes/hi-res/our-epigenomes-hero.jpg",
            "image_preview": "images/projects/our-epigenomes/hi-res/our-epigenomes-preview.jpg",
            "sections" : [
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Our Epigenomes Item",
                            "src": "images/projects/our-epigenomes/standard/our-epigenomes-0.jpg",
                            "src_standard": "images/projects/our-epigenomes/standard/our-epigenomes-0.jpg",
                            "src_retina": "images/projects/our-epigenomes/retina/our-epigenomes-0.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/our-epigenomes/hi-res/our-epigenomes-0.jpg",
                            "src_preview": "images/projects/our-epigenomes/hi-res/our-epigenomes-0.jpg",
                            "caption": "Our Epigenomes Item"  
                        }
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Our Epigenomes Item",
                            "src": "images/projects/our-epigenomes/standard/our-epigenomes-1.jpg",
                            "src_standard": "images/projects/our-epigenomes/standard/our-epigenomes-1.jpg",
                            "src_retina": "images/projects/our-epigenomes/retina/our-epigenomes-1.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/our-epigenomes/hi-res/our-epigenomes-1.jpg",
                            "src_preview": "images/projects/our-epigenomes/hi-res/our-epigenomes-1.jpg",
                            "caption": "Our Epigenomes Item"  
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Our Epigenomes Item",
                            "src": "images/projects/our-epigenomes/standard/our-epigenomes-2.jpg",
                            "src_standard": "images/projects/our-epigenomes/standard/our-epigenomes-2.jpg",
                            "src_retina": "images/projects/our-epigenomes/retina/our-epigenomes-2.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/our-epigenomes/hi-res/our-epigenomes-2.jpg",
                            "src_preview": "images/projects/our-epigenomes/hi-res/our-epigenomes-2.jpg",
                            "caption": "Our Epigenomes Item"
                        }
                    }
                },
                {
                    "name" : "endeavorImageFSList",
                    "data" : {
                        "class" : "",
                        "images" : [
                            {
                                "name": "Our Epigenomes Item",
                                "src": "images/projects/our-epigenomes/standard/our-epigenomes-3.jpg",
                                "src_standard": "images/projects/our-epigenomes/standard/our-epigenomes-3.jpg",
                                "src_retina": "images/projects/our-epigenomes/retina/our-epigenomes-3.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/our-epigenomes/hi-res/our-epigenomes-3.jpg",
                                "src_preview": "images/projects/our-epigenomes/hi-res/our-epigenomes-3.jpg",
                                "caption": "Our Epigenomes Item"   
                            },
                            {
                                "name": "Our Epigenomes Item",
                                "src": "images/projects/our-epigenomes/standard/our-epigenomes-4.jpg",
                                "src_standard": "images/projects/our-epigenomes/standard/our-epigenomes-4.jpg",
                                "src_retina": "images/projects/our-epigenomes/retina/our-epigenomes-4.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/our-epigenomes/hi-res/our-epigenomes-4.jpg",
                                "src_preview": "images/projects/our-epigenomes/hi-res/our-epigenomes-4.jpg",
                                "caption": "Our Epigenomes Item"   
                            },
                            {
                                "name": "Our Epigenomes Item",
                                "src": "images/projects/our-epigenomes/standard/our-epigenomes-5.jpg",
                                "src_standard": "images/projects/our-epigenomes/standard/our-epigenomes-5.jpg",
                                "src_retina": "images/projects/our-epigenomes/retina/our-epigenomes-5.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/our-epigenomes/hi-res/our-epigenomes-5.jpg",
                                "src_preview": "images/projects/our-epigenomes/hi-res/our-epigenomes-5.jpg",
                                "caption": "Our Epigenomes Item"   
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Our Epigenomes Item",
                            "src": "images/projects/our-epigenomes/standard/our-epigenomes-6.jpg",
                            "src_standard": "images/projects/our-epigenomes/standard/our-epigenomes-6.jpg",
                            "src_retina": "images/projects/our-epigenomes/retina/our-epigenomes-6.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/our-epigenomes/hi-res/our-epigenomes-6.jpg",
                            "src_preview": "images/projects/our-epigenomes/hi-res/our-epigenomes-6.jpg",
                            "caption": "Our Epigenomes Item"  
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-bottom-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Our Epigenomes Item",
                            "src": "images/projects/our-epigenomes/standard/our-epigenomes-7.jpg",
                            "src_standard": "images/projects/our-epigenomes/standard/our-epigenomes-7.jpg",
                            "src_retina": "images/projects/our-epigenomes/retina/our-epigenomes-7.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/our-epigenomes/hi-res/our-epigenomes-7.jpg",
                            "src_preview": "images/projects/our-epigenomes/hi-res/our-epigenomes-7.jpg",
                            "caption": "Our Epigenomes Item"  
                        }
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Our Epigenomes Item",
                            "src": "images/projects/our-epigenomes/standard/our-epigenomes-8.jpg",
                            "src_standard": "images/projects/our-epigenomes/standard/our-epigenomes-8.jpg",
                            "src_retina": "images/projects/our-epigenomes/retina/our-epigenomes-8.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/our-epigenomes/hi-res/our-epigenomes-8.jpg",
                            "src_preview": "images/projects/our-epigenomes/hi-res/our-epigenomes-8.jpg",
                            "caption": "Our Epigenomes Item" 
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Our Epigenomes Item",
                            "src": "images/projects/our-epigenomes/standard/our-epigenomes-9.jpg",
                            "src_standard": "images/projects/our-epigenomes/standard/our-epigenomes-9.jpg",
                            "src_retina": "images/projects/our-epigenomes/retina/our-epigenomes-9.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/our-epigenomes/hi-res/our-epigenomes-9.jpg",
                            "src_preview": "images/projects/our-epigenomes/hi-res/our-epigenomes-9.jpg",
                            "caption": "Our Epigenomes Item"
                        }
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Our Epigenomes Item",
                            "src": "images/projects/our-epigenomes/standard/our-epigenomes-10.jpg",
                            "src_standard": "images/projects/our-epigenomes/standard/our-epigenomes-10.jpg",
                            "src_retina": "images/projects/our-epigenomes/retina/our-epigenomes-10.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/our-epigenomes/hi-res/our-epigenomes-10.jpg",
                            "src_preview": "images/projects/our-epigenomes/hi-res/our-epigenomes-10.jpg",
                            "caption": "Our Epigenomes Item" 
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Our Epigenomes Item",
                            "src": "images/projects/our-epigenomes/standard/our-epigenomes-11.jpg",
                            "src_standard": "images/projects/our-epigenomes/standard/our-epigenomes-11.jpg",
                            "src_retina": "images/projects/our-epigenomes/retina/our-epigenomes-11.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/our-epigenomes/hi-res/our-epigenomes-11.jpg",
                            "src_preview": "images/projects/our-epigenomes/hi-res/our-epigenomes-11.jpg",
                            "caption": "Our Epigenomes Item"  
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-bottom-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Our Epigenomes Item",
                            "src": "images/projects/our-epigenomes/standard/our-epigenomes-12.jpg",
                            "src_standard": "images/projects/our-epigenomes/standard/our-epigenomes-12.jpg",
                            "src_retina": "images/projects/our-epigenomes/retina/our-epigenomes-12.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/our-epigenomes/hi-res/our-epigenomes-12.jpg",
                            "src_preview": "images/projects/our-epigenomes/hi-res/our-epigenomes-12.jpg",
                            "caption": "Our Epigenomes Item"  
                        }
                    }
                },
                {
                    "name" : "endeavorImageFSList",
                    "data" : {
                        "images" : [
                            {
                                "name": "Our Epigenomes Item",
                                "src": "images/projects/our-epigenomes/standard/our-epigenomes-13.jpg",
                                "src_standard": "images/projects/our-epigenomes/standard/our-epigenomes-13.jpg",
                                "src_retina": "images/projects/our-epigenomes/retina/our-epigenomes-13.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/our-epigenomes/hi-res/our-epigenomes-13.jpg",
                                "src_preview": "images/projects/our-epigenomes/hi-res/our-epigenomes-13.jpg",
                                "caption": "Our Epigenomes Item"   
                            },
                            {
                                "name": "Our Epigenomes Item",
                                "src": "images/projects/our-epigenomes/standard/our-epigenomes-14.jpg",
                                "src_standard": "images/projects/our-epigenomes/standard/our-epigenomes-14.jpg",
                                "src_retina": "images/projects/our-epigenomes/retina/our-epigenomes-14.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/our-epigenomes/hi-res/our-epigenomes-14.jpg",
                                "src_preview": "images/projects/our-epigenomes/hi-res/our-epigenomes-14.jpg",
                                "caption": "Our Epigenomes Item"   
                            },
                            {
                                "name": "Our Epigenomes Item",
                                "src": "images/projects/our-epigenomes/standard/our-epigenomes-15.jpg",
                                "src_standard": "images/projects/our-epigenomes/standard/our-epigenomes-15.jpg",
                                "src_retina": "images/projects/our-epigenomes/retina/our-epigenomes-15.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/our-epigenomes/hi-res/our-epigenomes-15.jpg",
                                "src_preview": "images/projects/our-epigenomes/hi-res/our-epigenomes-15.jpg",
                                "caption": "Our Epigenomes Item"   
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Our Epigenomes Item",
                            "src": "images/projects/our-epigenomes/standard/our-epigenomes-16.jpg",
                            "src_standard": "images/projects/our-epigenomes/standard/our-epigenomes-16.jpg",
                            "src_retina": "images/projects/our-epigenomes/retina/our-epigenomes-16.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/our-epigenomes/hi-res/our-epigenomes-16.jpg",
                            "src_preview": "images/projects/our-epigenomes/hi-res/our-epigenomes-16.jpg",
                            "caption": "Our Epigenomes Item"  
                        }
                    }
                },
                {
                    "name" : "endeavorPubFS",
                    "data" : {
                        "pub" : {
                            "name" : "DigBrandBook",
                            "src" : "//e.issuu.com/embed.html#22891629/32843107",
                            "caption" : "Alex Norton DiG Brand Book." 
                        }
                    }
                },
                {
                    "name" : "endeavorPad",
                    "data" : {
                        "class" : "endeavor-height-200px-responsive endeavor-item-no-margin endeavor-height-10vw"
                    }
                }
            ]
        },
        {
            "route" :"cards-project",
            "name"  : "Cabin Cards",
            "project_type"  : "Project",
            "year"  : "2015",
            "preview" :"cards-preview",
            "medium": [
                "Graphic Design"
            ],
            "technique": [
                "Inkjet Printing",
                "Illustration",
                "Laser Cutter"
            ],
            "description" : {
                "quote": "A greeting card protoype featuring a multi–dimensional identity system that stands on it's own.",
                "brief": "In the spring of 2015, I, along with twelve fellow classmates, was invited to travel to Japan on behalf of the Kakehashi Creators Project. The form of the project was a two-week exchange of Japanese and American students—the aim of the project was to promote cultural exchange and foster international collaboration. Although the exchange lasted only two-weeks, we spent months preparing, learning about the history, cultral norms, and common language-isms. The two-weeks spent traveling Japan have been some of the most moving and transformative of my life.",
                "challenge": "We were asked to design simple greeting-cards. The cards should include our name, discipline, and some form of contact information—the rest was up to us. At the time, I was taking traditional graphic design classes at MassArt while exploring the possibilities of design mediated computation at MIT. Most business cards are flat, and strictly information delivery vehicles—at best a business card could be memorable, maybe even novel. What if a business card were multi-dimensional? What if it invited interaction? Could a business card help to overcome a language barrier? I gave myself a single weekend to design, prototype, and fabricate 250 cards. This is the result. "
            },
            "meta" : {
                "Client" : "Self",
                "Year" : 2015,
                "Role" : "Designer",
                "Team" : "—",
                "Discipline" : "Graphic Design",
                "Medium" : "Physical",
                "Technologies" : "Laser Cutter",
                "Duration" : "Two Days"
            },
            "image_hero": "images/projects/cards/hi-res/cards-hero.jpg",
            "image_preview": "images/projects/cards/hi-res/cards-preview.jpg",
            "sections" : [
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Cabin Cards Item",
                            "src": "images/projects/cards/standard/cards-0.jpg",
                            "src_standard": "images/projects/cards/standard/cards-0.jpg",
                            "src_retina": "images/projects/cards/retina/cards-0.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/cards/hi-res/cards-0.jpg",
                            "src_preview": "images/projects/cards/hi-res/cards-0.jpg",
                            "caption": "Cabin Cards Item"
                        }
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Cabin Cards Item",
                            "src": "images/projects/cards/standard/cards-1.jpg",
                            "src_standard": "images/projects/cards/standard/cards-1.jpg",
                            "src_retina": "images/projects/cards/retina/cards-1.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/cards/hi-res/cards-1.jpg",
                            "src_preview": "images/projects/cards/hi-res/cards-1.jpg",
                            "caption": "Cabin Cards Item"   
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Cabin Cards Item",
                            "src": "images/projects/cards/standard/cards-2.jpg",
                            "src_standard": "images/projects/cards/standard/cards-2.jpg",
                            "src_retina": "images/projects/cards/retina/cards-2.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/cards/hi-res/cards-2.jpg",
                            "src_preview": "images/projects/cards/hi-res/cards-2.jpg",
                            "caption": "Cabin Cards Item"
                        }
                    }
                },
                {
                    "name" : "endeavorImageFSList",
                    "data" : {
                        "images" : [
                            {
                                "name": "Cabin Cards Item",
                                "src": "images/projects/cards/standard/cards-3.jpg",
                                "src_standard": "images/projects/cards/standard/cards-3.jpg",
                                "src_retina": "images/projects/cards/retina/cards-3.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/cards/hi-res/cards-3.jpg",
                                "src_preview": "images/projects/cards/hi-res/cards-3.jpg",
                                "caption": "Cabin Cards Item"   
                            },
                            {
                                "name": "Cabin Cards Item",
                                "src": "images/projects/cards/standard/cards-4.jpg",
                                "src_standard": "images/projects/cards/standard/cards-4.jpg",
                                "src_retina": "images/projects/cards/retina/cards-4.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/cards/hi-res/cards-4.jpg",
                                "src_preview": "images/projects/cards/hi-res/cards-4.jpg",
                                "caption": "Cabin Cards Item"   
                            },
                            {
                                "name": "Cabin Cards Item",
                                "src": "images/projects/cards/standard/cards-5.jpg",
                                "src_standard": "images/projects/cards/standard/cards-5.jpg",
                                "src_retina": "images/projects/cards/retina/cards-5.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/cards/hi-res/cards-5.jpg",
                                "src_preview": "images/projects/cards/hi-res/cards-5.jpg",
                                "caption": "Cabin Cards Item"   
                            },
                            {
                                "name": "Cabin Cards Item",
                                "src": "images/projects/cards/standard/cards-6.jpg",
                                "src_standard": "images/projects/cards/standard/cards-6.jpg",
                                "src_retina": "images/projects/cards/retina/cards-6.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/cards/hi-res/cards-6.jpg",
                                "src_preview": "images/projects/cards/hi-res/cards-6.jpg",
                                "caption": "Cabin Cards Item"   
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Cabin Cards Item",
                            "src": "images/projects/cards/standard/cards-7.jpg",
                            "src_standard": "images/projects/cards/standard/cards-7.jpg",
                            "src_retina": "images/projects/cards/retina/cards-7.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/cards/hi-res/cards-7.jpg",
                            "src_preview": "images/projects/cards/hi-res/cards-7.jpg",
                            "caption": "Cabin Cards Item"  
                        }
                    }
                },
                {
                    "name" : "endeavorPad",
                    "data" : {
                        "class" : "endeavor-height-200px-responsive endeavor-item-no-margin endeavor-height-10vw"
                    }
                }
            ]
        },
        {
            "route" :"jenga-project",
            "name"  : "Jenga Unchained",
            "project_type"  : "Project",
            "year"  : "2014",
            "preview" :"jenga-preview",
            "medium": [
                "Graphic Design",
                "Game Design",
                "Woodworking"
            ],
            "technique": [
                "CAD",
                "Woodworking",
                "Game Design"
            ],
            "description" : {
                "quote": "Compete or collaborate in a constructivist boardgame inspired by tetris and jenga.",
                "brief": "Jenga Unchained was concieved during to Neri Oxman's 'Design Across Scales' course at MIT Media Lab. The prompt was simple, create a response that embodies 'The design of play.'' Instead of trying to invent a new game from scratch we explored classic game design concepts by totally reversing the rules. If the game was played in 2D, how would it feel in 3D? If the game was about destruction, how would it feel being constructed? After loads of playful conversations and paper prototyes, we settled on a concept for a game that could be played either competitively or collaboratively. We called this game Jenga Unchained.",
                "challenge": "I worked on an interdiscplinary team including two architects and an economist. I found it super interesting learning about the motivations of my fellow teammates. Each of us had a different notion of the concept of play, so initial brainstorms were all over the place. What immediately felt like a hinderance led us to a successful melding of minds. The architects pushed for 3D forms with haptics, the economist wanted a system that could be exploited for value, and I was intrigued by the possibility given by modularity. The final game felt like the combination of our unique ideas.",
                "solution": ""
            },
            "meta" : {
                "Client" : "MIT Media Lab",
                "Year" : 2014,
                "Role" : "Designer",
                "Team" : "—",
                "Discipline" : "Game Design",
                "Medium" : "Physical / Wood",
                "Technologies" : "CAD / Woodworking",
                "Duration" : "Two Weeks"
            },
            "image_hero": "images/projects/jenga-unchained/hi-res/jenga-hero.jpg",
            "image_preview": "images/projects/jenga-unchained/hi-res/jenga-preview.jpg",
            "sections" : [
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125-top",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Jenga Unchained Item",
                            "src": "images/projects/jenga-unchained/standard/jenga-cu-3.jpg",
                            "src_standard": "images/projects/jenga-unchained/standard/jenga-cu-3.jpg",
                            "src_retina": "images/projects/jenga-unchained/retina/jenga-cu-3.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/jenga-unchained/hi-res/jenga-cu-3.jpg",
                            "src_preview": "images/projects/jenga-unchained/hi-res/jenga-cu-3.jpg",
                            "caption": "Jenga Unchained Item"   
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125-bottom",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Jenga Unchained Item",
                            "src": "images/projects/jenga-unchained/standard/jenga-cu-1.jpg",
                            "src_standard": "images/projects/jenga-unchained/standard/jenga-cu-1.jpg",
                            "src_retina": "images/projects/jenga-unchained/retina/jenga-cu-1.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/jenga-unchained/hi-res/jenga-cu-1.jpg",
                            "src_preview": "images/projects/jenga-unchained/hi-res/jenga-cu-1.jpg",
                            "caption": "Jenga Unchained Item"    
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125-bottom",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Jenga Unchained Item",
                            "src": "images/projects/jenga-unchained/standard/jenga-rules-1.jpg",
                            "src_standard": "images/projects/jenga-unchained/standard/jenga-rules-1.jpg",
                            "src_retina": "images/projects/jenga-unchained/retina/jenga-rules-1.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/jenga-unchained/hi-res/jenga-rules-1.jpg",
                            "src_preview": "images/projects/jenga-unchained/hi-res/jenga-rules-1.jpg",
                            "caption": "Jenga Unchained Item"    
                        }
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "class" : "endeavor-item-top endeavor-item-bottom-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Jenga Unchained Item",
                            "src": "images/projects/jenga-unchained/standard/jenga-cu-2.jpg",
                            "src_standard": "images/projects/jenga-unchained/standard/jenga-cu-2.jpg",
                            "src_retina": "images/projects/jenga-unchained/retina/jenga-cu-2.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/jenga-unchained/hi-res/jenga-cu-2.jpg",
                            "src_preview": "images/projects/jenga-unchained/hi-res/jenga-cu-2.jpg",
                            "caption": "Jenga Unchained Item"       
                        }
                    }
                },
                {
                    "name" : "endeavorVideoFS",
                    "data" : {
                        "class" : "endeavor-item-bottom-125 endeavor-width-100vw endeavor-pos-rel",
                        "loop": "",
                        "muted": "",
                        "audio_toggle" : "true",
                        "autoplay": "true",
                        "src" : {
                            "webm" : "images/projects/jenga-unchained/videos/jenga.webm",
                            "mp4" : "images/projects/jenga-unchained/videos/jenga.mp4",
                            "poster" : "images/projects/jenga-unchained/videos/jenga.jpg"
                        }
                    }
                },
                {
                    "name" : "endeavorImageFSList",
                    "data" : {
                        "images" : [
                            {
                                "name": "Jenga Unchained Item",
                                "src": "images/projects/jenga-unchained/standard/jenga-0.jpg",
                                "src_standard": "images/projects/jenga-unchained/standard/jenga-0.jpg",
                                "src_retina": "images/projects/jenga-unchained/retina/jenga-0.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/jenga-unchained/hi-res/jenga-0.jpg",
                                "src_preview": "images/projects/jenga-unchained/hi-res/jenga-0.jpg",
                                "caption": "Jenga Unchained Item"   
                            },
                            {
                                "name": "Jenga Unchained Item",
                                "src": "images/projects/jenga-unchained/standard/jenga-1.jpg",
                                "src_standard": "images/projects/jenga-unchained/standard/jenga-1.jpg",
                                "src_retina": "images/projects/jenga-unchained/retina/jenga-1.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/jenga-unchained/hi-res/jenga-1.jpg",
                                "src_preview": "images/projects/jenga-unchained/hi-res/jenga-1.jpg",
                                "caption": "Jenga Unchained Item"   
                            },
                            {
                                "name": "Jenga Unchained Item",
                                "src": "images/projects/jenga-unchained/standard/jenga-6.jpg",
                                "src_standard": "images/projects/jenga-unchained/standard/jenga-6.jpg",
                                "src_retina": "images/projects/jenga-unchained/retina/jenga-6.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/jenga-unchained/hi-res/jenga-6.jpg",
                                "src_preview": "images/projects/jenga-unchained/hi-res/jenga-6.jpg",
                                "caption": "Jenga Unchained Item"   
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-top-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Jenga Unchained Item",
                            "src": "images/projects/jenga-unchained/standard/jenga-3.jpg",
                            "src_standard": "images/projects/jenga-unchained/standard/jenga-3.jpg",
                            "src_retina": "images/projects/jenga-unchained/retina/jenga-3.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/jenga-unchained/hi-res/jenga-3.jpg",
                            "src_preview": "images/projects/jenga-unchained/hi-res/jenga-3.jpg",
                            "caption": "Jenga Unchained Item"     
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125-bottom",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Jenga Unchained Item",
                            "src": "images/projects/jenga-unchained/standard/jenga-5.jpg",
                            "src_standard": "images/projects/jenga-unchained/standard/jenga-5.jpg",
                            "src_retina": "images/projects/jenga-unchained/retina/jenga-5.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/jenga-unchained/hi-res/jenga-5.jpg",
                            "src_preview": "images/projects/jenga-unchained/hi-res/jenga-5.jpg",
                            "caption": "Jenga Unchained Item"      
                        }
                    }
                },
                {
                    "name" : "endeavorImageFS",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Jenga Unchained Item",
                            "src": "images/projects/jenga-unchained/standard/jenga-2.jpg",
                            "src_standard": "images/projects/jenga-unchained/standard/jenga-2.jpg",
                            "src_retina": "images/projects/jenga-unchained/retina/jenga-2.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/jenga-unchained/hi-res/jenga-2.jpg",
                            "src_preview": "images/projects/jenga-unchained/hi-res/jenga-2.jpg",
                            "caption": "Jenga Unchained Item"        
                        }
                    }
                },
                {
                    "name" : "endeavorImage100vw",
                    "data" : {
                        "class" : "endeavor-item-125",
                        "placeholder" : {
                            "name" : "",
                            "src" : "",
                            "src" : "",
                            "src_mobile" : "",
                            "src_preview" : "",
                            "caption" : ""
                        },
                        "image" : {
                            "name": "Jenga Unchained Item",
                            "src": "images/projects/jenga-unchained/standard/jenga-7.jpg",
                            "src_standard": "images/projects/jenga-unchained/standard/jenga-7.jpg",
                            "src_retina": "images/projects/jenga-unchained/retina/jenga-7.jpg",
                            "src_low": "images/empty.gif",
                            "src_mobile": "images/projects/jenga-unchained/hi-res/jenga-7.jpg",
                            "src_preview": "images/projects/jenga-unchained/hi-res/jenga-7.jpg",
                            "caption": "Jenga Unchained Item"      
                        }
                    }
                },
                {
                    "name" : "endeavorParagraph",
                    "data" : {
                        "header" : "CAD Designs",
                        "class" : "endeavor-item-125",
                        "bgColor" : "",
                        "description" : "Before moving to our final design phase, we prototyped a multiplicity of tetris-inspired stackable 3D shapes."
                    }
                },
                {
                    "name" : "endeavorImageSlider",
                    "data" : {
                        "images" : [
                            {
                                "name": "Jenga Unchained CAD",
                                "src": "images/projects/jenga-unchained/standard/jenga-cad-0.jpg",
                                "src_standard": "images/projects/jenga-unchained/standard/jenga-cad-0.jpg",
                                "src_retina": "images/projects/jenga-unchained/retina/jenga-cad-0.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/jenga-unchained/hi-res/jenga-cad-0.jpg",
                                "src_preview": "images/projects/jenga-unchained/hi-res/jenga-cad-0.jpg",
                                "caption": "Jenga Unchained CAD"   
                            },
                            {
                                "name": "Jenga Unchained CAD",
                                "src": "images/projects/jenga-unchained/standard/jenga-cad-1.jpg",
                                "src_standard": "images/projects/jenga-unchained/standard/jenga-cad-1.jpg",
                                "src_retina": "images/projects/jenga-unchained/retina/jenga-cad-1.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/jenga-unchained/hi-res/jenga-cad-1.jpg",
                                "src_preview": "images/projects/jenga-unchained/hi-res/jenga-cad-1.jpg",
                                "caption": "Jenga Unchained CAD"   
                            },
                            {
                                "name": "Jenga Unchained CAD",
                                "src": "images/projects/jenga-unchained/standard/jenga-cad-2.jpg",
                                "src_standard": "images/projects/jenga-unchained/standard/jenga-cad-2.jpg",
                                "src_retina": "images/projects/jenga-unchained/retina/jenga-cad-2.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/jenga-unchained/hi-res/jenga-cad-2.jpg",
                                "src_preview": "images/projects/jenga-unchained/hi-res/jenga-cad-2.jpg",
                                "caption": "Jenga Unchained CAD"   
                            },
                            {
                                "name": "Jenga Unchained CAD",
                                "src": "images/projects/jenga-unchained/standard/jenga-cad-3.jpg",
                                "src_standard": "images/projects/jenga-unchained/standard/jenga-cad-3.jpg",
                                "src_retina": "images/projects/jenga-unchained/retina/jenga-cad-3.jpg",
                                "src_low": "images/empty.gif",
                                "src_mobile": "images/projects/jenga-unchained/hi-res/jenga-cad-3.jpg",
                                "src_preview": "images/projects/jenga-unchained/hi-res/jenga-cad-3.jpg",
                                "caption": "Jenga Unchained CAD"   
                            }
                        ]
                    }
                },
                {
                    "name" : "endeavorPad",
                    "data" : {
                        "class" : "endeavor-height-200px-responsive endeavor-item-no-margin endeavor-height-10vw"
                    }
                }
            ]
        }
    ],
    "bios_text": {
        "title": "Product · Innovation · Strategy",
        "description_pull": "Hello, I'm a product designer building the future of travel planning at Google.",
        "description_short": "<br>Driven by a passion for innovation and cross disciplinary collaboration, I see the world through the lens of design. My work focuses on the intersection of people and technology, weaving lessons from natural systems into creative solutions, delightful interactions, and computational models.",
        "description_long" : "Alex is a Product Designer on Google Travel where he crafts assistive and accessible tools for travel planning. He is a contributor to Google’s People + AI Guidebook and has mentored startups on the intersection of business, AI, and design.<br><br>His visualizations have been featured at TED, Tribeca Film Festival, and in Times Square NYC. His work has appeared in Wired magazine, the New York Times, and in Nature and Cell scientific journals.<br><br>",
        "link_1": "bios",
        "link_2": "resume",
        "link_3": "works"
    },
    "feature": [
        {
            "feature": "MIT Media Lab",
            "project": "BrainVR",
            "logo": "images/media-lab-logo.png",
            "caption": "See the brain in new dimensions.",
            "link": "http://brainvr.media.mit.edu/"
        },
        {
            "feature": "MIT",
            "project": "Eyewire",
            "logo": "images/mit-logo.png",
            "caption": "Play a game to map the brain.",
            "link": "http://eyewire.org/explore"
        },
        {
            "feature": "TED",
            "project": "Neurons & Space",
            "logo": "images/ted-logo.png",
            "caption": "What if you could see ideas worth spreading?",
            "link": "http://blogs.microsoft.com/next/2014/03/19/at-ted-worldwide-telescope-uses-oculus-rift-to-let-attendees-experience-the-universe/#sm.0001jugbv418cqf6hyy9leuzw0r30"
        },
        {
            "feature": "Wired",
            "project": "Eyewire",
            "logo": "images/wired-logo.png",
            "caption": "A videogame that recruits players to map the brain.",
            "link": "http://www.wired.com/2013/08/a-video-game-that-lets-you-be-a-neuroscientist/"
        },
        {
            "feature": "NY Times",
            "project": "Eyewire",
            "logo": "images/nytimes-logo.png",
            "caption": "How the brain's wiring makes you, you.",
            "link": "https://www.nytimes.com/2014/05/27/science/all-circuits-are-busy.html"
        },
        {
            "feature": "Nature",
            "project": "Eyewire",
            "logo": "images/nature-logo.png",
            "caption": "Space–time wiring specificity supports direction selectivity in the retina.",
            "link": "http://www.nature.com/nature/journal/v509/n7500/full/nature13240.html"
        },
        {
            "feature": "FastCo Design",
            "project": "Neurons & Space",
            "logo": "images/fastco-design-logo.png",
            "caption": "Virtual reality is here, and brands of all stripes are embracing the tech.",
            "link": "http://www.fastcompany.com/3052125/innovation-agents/welcome-to-brain-sciences-next-frontier-virtual-reality"
        },
        {
            "feature": "Times Square Arts Allience",
            "project": "Scales of Complexity",
            "logo": "images/times-square-logo.png",
            "caption": "Eyewire takes over Times Square for an entire month",
            "link": "http://www.timessquarenyc.org/times-square-arts/media/press-releases/noah-hutton-brain-city/index.aspx"
        },
        {
            "feature": "Tribeca Film Festival",
            "project": "BrainVR",
            "logo": "images/tribeca-logo.png",
            "caption": "Explore the brain in new dimensions.",
            "link": "http://blog.eyewire.org/brainvr-at-tribeca/"
        },
        {
            "feature": "TEDx",
            "project": "A Game to Map the Brain",
            "logo": "images/tedx-logo.png",
            "project-thum": "images/tedx-logo.png",
            "caption": "Introducing a game to map the brain.",
            "link": "https://www.youtube.com/watch?v=bwcuhbj2rSI"
        },
        {
            "feature": "Fast Company",
            "project": "Eyewire",
            "logo": "images/fastco-logo.png",
            "project-thum": "images/fastco-logo.png",
            "caption": "VR is here and with it, scientific visualizations.",
            "link": "http://www.fastcompany.com/3052125/innovation-agents/welcome-to-brain-sciences-next-frontier-virtual-reality"
        },
        {
            "feature": "Forbes",
            "project": "BrainVR",
            "logo": "images/forbes-logo.png",
            "caption": "70,000 gamers are playing a game to map the brain.",
            "link": "http://www.forbes.com/sites/singularity/2013/08/19/70000-have-played-eyewire-game-that-trains-computers-to-map-the-brain/#7073a6f8ad9b"
        }
    ],
    "contact": {
        "shout_out": "Interested in working together or simply meeting up?",
        "shout_out_sub": "I love sharing adventures, discovering new design, and nerding out on emerging technology—especially VR + AI.",
        "cta": "Let's Talk.",
        "email": "alexnortn@gmail.com",
        "phone": "774 766 1179",
        "copywrite": "2021 Alex Norton"
    },
    "welcome_text": {
        "greeting_text": "I'm Alex Norton,",
        "discipline_text": "Product Designer",
        "greeting_morning": "Good Morning, ",
        "greeting_afternoon": "Good Afternoon, ",
        "greeting_evening": "Good Evening, "
    }
}
},{}],3:[function(require,module,exports){
/*
	By Osvaldas Valutis, www.osvaldas.info
	Available for use under the MIT License
*/

'use strict';

;(function ($, window, document, undefined) {
	var s = document.body || document.documentElement,
	    s = s.style,
	    prefixAnimation = '',
	    prefixTransition = '';

	if (s.WebkitAnimation == '') prefixAnimation = '-webkit-';
	if (s.MozAnimation == '') prefixAnimation = '-moz-';
	if (s.OAnimation == '') prefixAnimation = '-o-';

	if (s.WebkitTransition == '') prefixTransition = '-webkit-';
	if (s.MozTransition == '') prefixTransition = '-moz-';
	if (s.OTransition == '') prefixTransition = '-o-';

	$.fn.extend({
		onCSSAnimationEnd: function onCSSAnimationEnd(callback) {
			var $this = $(this).eq(0);
			$this.one('webkitAnimationEnd mozAnimationEnd oAnimationEnd oanimationend animationend', callback);
			if (prefixAnimation == '' && !('animation' in s) || $this.css(prefixAnimation + 'animation-duration') == '0s') callback();
			return this;
		},
		onCSSTransitionEnd: function onCSSTransitionEnd(callback) {
			var $this = $(this).eq(0);
			$this.one('webkitTransitionEnd mozTransitionEnd oTransitionEnd otransitionend transitionend', callback);
			if (prefixTransition == '' && !('transition' in s) || $this.css(prefixTransition + 'transition-duration') == '0s') callback();
			return this;
		}
	});
})(jQuery, window, document);

},{}],4:[function(require,module,exports){

"use strict";

var $ = require('jquery'),
    isMobile = require('ismobilejs');

window.jQuery = $; // Assign to global window object

// Node Modules
require('hammerjs');
require('jquery-hammerjs');

// Internal Scripts
require('./global.js');

var GLYPH = require('./p5/sketch.js');
var _mobile = false; // Boolean for mobile devices

// Activation Function
$(document).ready(function () {

	// Check mobile
	if (isMobile.tablet || isMobile.phone) {
		_mobile = true;
	}

	var phone = isMobile.phone ? true : false;

	var tablet = isMobile.tablet ? true : false;

	activateGlyph(_mobile, phone, tablet); // Save battery while testing
});

// Instantiate the Glyph simulation
function activateGlyph(mobile, phone, tablet) {

	GLYPH.init({
		mobile: mobile,
		phone: phone,
		tablet: tablet
	});

	GLYPH.canvas().done(function (canvas) {
		// _this.view.canvas = $(canvas);
		// _this.view.canvas.addClass('neural-network');
	});
}

},{"./global.js":5,"./p5/sketch.js":11,"hammerjs":13,"ismobilejs":15,"jquery":18,"jquery-hammerjs":16}],5:[function(require,module,exports){
/*

Alex Norton
a^N 
http://alexnortn.com

*/

"use strict";

// jQuery things
var $ = require('jquery');
require('./jquery.centerIn.js');
require('lazysizes');
require('lazysizes/plugins/unveilhooks/ls.unveilhooks.min.js');
require('is-in-viewport');
require('./cssTransitionEnd.js');

var _site_content = require('./content.json');

// Module Dependencies
var velocity = require('velocity-animate'),
    velocity_ui = require('velocity-ui-pack'),
    slick = require('slick-carousel'),
    hammertime = require('hammerjs'),
    Stickyfill = require('stickyfill'),
    isMobile = require('ismobilejs'),
    animation = require('./animation.js');

// Bower Dependencies
var bower_url = '../bower_components/';

// External Scripts
var ProgressBar = require('./progressBar.js');

// Userlist data array for filling in info box
var userListData = [],
    case_studies = undefined,
    projects = undefined,
    menu = false;

var _sections = $('.section'),
    _sectionCurrent = undefined,
    _$projectCurrentContents = null;

var stickyfill = Stickyfill();
// let widowtamer = WidowTamer();

var _mobile = undefined;

var _projectCurrentId = undefined,
    _hashChanged = false,
    _closeProject = undefined,
    _endeavor_routes = undefined,
    _videoHandler = undefined;

var _itemInteraction = undefined,
    _endeavorRouter = undefined;

var _state = {
    "sectionHeight": Infinity,
    "progressBar": "",
    "siteContent": _site_content
};

// Global for interacting with glyph
window._openProjectState = false,

// attachFastClick = require('fastclick');   

// DOM Ready =============================================================
$(document).ready(function () {
    if (isMobile.tablet || isMobile.phone) {
        _mobile = true;
    }

    setGreeting();

    // Parse Contents
    _endeavor_routes = {
        projects: [],
        case_studies: []
    };

    // Setup Case Studies
    _site_content.case_studies.forEach(function (item) {
        _endeavor_routes.case_studies.push(item.route);
    });

    // Setup Projects
    _site_content.projects.forEach(function (item) {
        _endeavor_routes.projects.push(item.route);
    });

    // Call pagination
    new Promise(function (resolve, reject) {
        pagination(_sections);
        resolve();
    }).then(function () {
        $('#pagination').alwaysCenterIn(window, { direction: 'vertical' });
        paginationUpdate(_sectionCurrent);
    }).then(function () {
        _endeavorRouter.initialRoute(window.location.pathname.slice(1)); // Initial Page Routing => No Animation
        hashChanged();
    }).then(function () {
        setTimeout(function () {
            // Intro loader
            $.Velocity.animate($('.loader'), "fadeOut", { duration: 1000 }).then(function (elements) {
                setTimeout(function () {
                    $('body').addClass('body-loaded');
                }, 0);
            })['catch'](function (error) {
                console.log("Rejected.");
            });
        }, 0);
    })['catch'](function (reason) {
        console.log('promise rejected for ' + reason);
    });

    window.addEventListener('popstate', function (event) {
        hashChanged();
        _endeavorRouter.route(event.state); // Event handler for History state change
    }, false);

    stickyUpdate();

    _closeProject = closeProject; // Set up close project global

    // Set dynamic media size + aspect ratio
    function setupMedia() {
        var $elem = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];

        if ($elem === null) {
            if (_$projectCurrentContents === null) {
                return;
            }

            $elem = _$projectCurrentContents;
        }

        var width = $elem.innerWidth(),
            height = width * 9 / 16;

        width = width + "px";
        height = height + "px";

        $('.media-frame').css('width', width).css('height', height);

        $('.media-settings').css('height', height);
    }

    // ------------------------------------------------------------------------
    // Event Handlers

    $(window).resize(function () {
        stickyUpdate();
        setupMedia();

        if (_mobile) {
            // Disable blur effect on mobile devices + tablets
            return;
        }

        var timer = undefined;

        clearTimeout(timer);

        // $('#wrapper').addClass('resize-window');

        // timer = setTimeout(function() {
        //     $('#wrapper').removeClass('resize-window');
        // }, 500);
    });

    window.addEventListener('scroll', function (e) {
        $('.scroll-arrow').velocity("fadeOut", { duration: 250 });
    }, { passive: true });

    // Bios Button
    $('#bios-button').click(function () {
        $(this).velocity("fadeOut", { duration: 500 });
        $('#long').velocity("fadeIn", { delay: 500, duration: 666 });
    });

    // Header navigation | JS Interaction
    $('#nav-trigger').click(function () {
        var e = document.getElementById("nav-trigger");
        $("body").toggleClass("nav-open");
    });

    // Close navigation overlay
    function closeNav() {
        document.getElementById("nav-trigger").checked = false;
    }

    // Get Event Target
    function getEventTarget(evt) {
        evt = evt || window.event;
        return evt.target || evt.srcElement;
    }

    // Navigation
    $('#web-lab-nav').click(function () {
        var target = getEventTarget(event);
        _sectionCurrent = target.getAttribute('data-nav');
        closeNav(); // Close Section

        closeProject();

        animation.scrollToVelocity(_sectionCurrent); // Navigate
    });

    // Video audio toggle
    $(".video-toggle").click(function () {
        $(this).siblings().prop('muted', !$(this).siblings().prop('muted'));

        if ($(this).find('.fa-volume-up').hasClass('hidden')) {
            $(this).find('.fa-volume-up').removeClass('hidden');
            $(this).find('.fa-volume-off').addClass('hidden');
        } else {
            $(this).find('.fa-volume-up').addClass('hidden');
            $(this).find('.fa-volume-off').removeClass('hidden');
        }
    });

    // Autoplay Videos
    _videoHandler = function (container) {
        $(container).find('video').each(function (item) {
            var _this = this;

            if (this === undefined) {
                return;
            }
            if (this.HAVE_ENOUGH_DATA === 4) {
                // Asset loaded
                videoControl(this);
            } else {
                new Promise(function (f, r) {
                    if (_this.HAVE_ENOUGH_DATA === 4) {
                        // Asset loaded
                        f(_this);
                    }
                }).then(function (elem) {
                    videoControl(elem);
                })['catch'](function (reason) {});
            }
        });

        function videoControl(elem) {
            if ($(elem).is(":in-viewport")) {
                $(elem)[0].play();
            } else {
                $(elem)[0].pause();
            }
        }
    };

    // Toggle project "reveal" sections
    // Important -> Naming schema:
    //  + effected element id -> "ghost-something-affect"
    //  + button class ->        "endeavor-button-reveal"
    //  + button id ->           "ghost-something"

    $('.endeavor-button-reveal').click(function (evt) {
        var affect_div = "#" + this.id + "-affect";
        $(affect_div).removeClass('endeavor-reveal');
        $(this).parent().velocity("fadeOut", { duration: 250 });
    });

    function createCircle(_cx, _cy) {
        var svgNS = "http://www.w3.org/2000/svg";
        var myCircle = document.createElementNS(svgNS, "circle");
        myCircle.setAttribute("class", "transition-svg");
        myCircle.setAttributeNS(null, "id", "mycircle");
        myCircle.setAttributeNS(null, "cx", _cx);
        myCircle.setAttributeNS(null, "cy", _cy);
        myCircle.setAttributeNS(null, "r", 0);
        myCircle.setAttributeNS(null, "stroke", "none");

        document.getElementById("svg-container").appendChild(myCircle);

        return $('.transition-svg');
    }

    function closeProject() {
        var transition = false;

        $('#fx-container').removeClass('opaque').onCSSTransitionEnd(function () {

            if (transition) {
                return;
            }

            // Remove ProgressBar
            if (_state.progressBar) {
                _state.progressBar.destroy();
                _state.progressBar = null;
            }

            $(this).addClass('passive');
            $('#content-wrapper').removeClass('visibility-hidden');

            $('.endeavor-container').removeClass('visible');

            setTimeout(function () {
                $('.endeavor-container').removeClass('flex-row');
            }, 1000);

            $('.arrow-container').removeClass('arrow-bottom disabled').addClass('transparent');

            $('body').removeClass('endeavor-open');

            $('#pagination').velocity("fadeIn", { duration: 500 });
            window._openProjectState = false;

            transition = true;

            // Internal URL Routing + Hashing
            _endeavorRouter.resetURL();
            _endeavorRouter.setHash("works");
        });
    }

    // Project Grid Handlers
    _itemInteraction = (function () {
        // For lexical scoping
        var current_index = 0,
            active = false,
            container = undefined,
            case_studies = $('.case-study-view').toArray(),
            projects = $('.project-view').toArray(),
            currents = [],
            scrollHandler = undefined,
            resizeHandler = undefined,
            project_id = undefined;

        var captureScrollHandler = function captureScrollHandler(evt) {
            evt.stopPropagation();
        };

        function updateCurrentProject(index, current_id) {
            var new_id = '#' + currents[index].id;
            var timer_height = undefined;
            updateProjectHandlers(current_id, new_id, timer_height);

            return new_id;
        }

        function resetProjectControls() {
            $('.arrow-container').removeClass('arrow-bottom');
        }

        function updateProjectHandlers(current_id, new_id, timer_height) {
            _state.sectionHeight = Infinity;

            if (scrollHandler) {
                $(current_id).off("scroll", scrollHandler);
            }

            if (resizeHandler) {
                $(window).off("resize", resizeHandler);
            }

            if (timer_height) {
                window.clearTimeout(timer_height);
            }

            if (_state.progressBar) {
                _state.progressBar.reset().then(function () {
                    _state.progressBar = new ProgressBar({
                        scrollContainer: new_id,
                        maxHeight: _state.sectionHeight
                    });
                });
            } else {
                _state.progressBar = new ProgressBar({
                    scrollContainer: new_id,
                    maxHeight: _state.sectionHeight
                });
            }

            timer_height = window.setTimeout(function () {
                calcSectionHeight();
            }, 1000);

            function calcSectionHeight() {
                var children = "." + $(new_id).children().attr("class") + " > *";
                _state.sectionHeight = 0; // Reset height

                $(new_id).find(children).each(function () {
                    _state.sectionHeight += $(this).outerHeight();
                });

                // Correct for viewport
                _state.sectionHeight -= window.innerHeight;

                if (_state.progressBar) {
                    _state.progressBar.updateOffset();
                }
            }

            scrollHandler = function () {
                if ($(new_id).scrollTop() > 0) {
                    $('.arrow-container').addClass('arrow-bottom');
                    $('.arrow-center').addClass('visible');
                    $('#prev').addClass('arrow-left-alt');

                    var value = $(new_id).scrollTop() / _state.sectionHeight;

                    // Toggle next-arrow open
                    if (value > 0.75 && !active && !_mobile) {
                        $('#next').addClass('next-active');
                        active = true;
                    } else if (value < 0.75) {
                        active = false;
                        $('#next').removeClass('next-active');
                    }

                    if (_state.progressBar.exist) {
                        _state.progressBar.update(value);
                    }
                } else {
                    $('.arrow-container').removeClass('arrow-bottom');
                    $('.arrow-center').removeClass('visible');
                    $('#prev').removeClass('arrow-left-alt');
                }
            };

            resizeHandler = function () {
                calcSectionHeight();
            };

            var timer = undefined,
                timer2 = undefined;
            $(new_id).scroll(function () {
                if (timer) {
                    window.clearTimeout(timer);
                }

                if (timer2) {
                    window.clearTimeout(timer2);
                }

                timer = window.setTimeout(function () {
                    scrollHandler();
                }, 10);

                timer2 = window.setTimeout(function () {
                    _videoHandler(new_id);
                }, 50);
            });

            $(window).resize(function () {
                resizeHandler();
            });
        }

        function updateArrow() {
            if (current_index >= currents.length - 1) {
                $('#next').addClass('disabled');
            } else {
                $('#next').removeClass('disabled');
            }

            if (current_index <= 0) {
                $('#prev').addClass('disabled');
            } else {
                $('#prev').removeClass('disabled');
            }
        }

        function _workItemInteraction(_project_id, evt) {
            var animate = arguments.length <= 2 || arguments[2] === undefined ? true : arguments[2];

            // Testing for touch || click
            var x_pos = undefined,
                y_pos = undefined;

            var $currentTarget = undefined;

            if (evt.type === "click") {
                x_pos = evt.clientX;
                y_pos = evt.clientY;

                $currentTarget = $(evt.currentTarget);
            } else if (evt.pointerType === "touch") {
                x_pos = evt.pointers[0].screenX;
                y_pos = evt.pointers[0].screenY;

                $currentTarget = $(evt.target.closest('.item'));
            } else if (evt instanceof jQuery) {
                // For URL Routing
                x_pos = window.innerWidth / 2;
                y_pos = window.innerHeight / 2;

                $currentTarget = evt;
            }

            project_id = _project_id;

            if (!$currentTarget) {
                return;
            }

            // Target list to iterate through
            if ($currentTarget.hasClass('case-study-item')) {
                currents = case_studies;
                container = $('.case-study-container');
            } else if ($currentTarget.hasClass('project-item')) {
                currents = projects;
                container = $('.project-container');
            }

            currents.forEach(function (project_item, index) {
                if (project_item.id === project_id) {
                    current_index = index;
                    updateCurrentProject(current_index, project_id);
                }
            });

            updateArrow();

            project_id = "#" + project_id;
            var opaque = false;

            // Setup Slick
            var bottomSlick = $(project_id).find('.endeavor-image-slider');
            if (!bottomSlick.hasClass('slick-initialized')) {
                bottomSlick.children().each(function () {
                    lazySizes.loader.unveil(this);
                });

                addSlick(bottomSlick, true);
                bottomSlick.slick('slickNext').slick('slickNext').slick('slickNext').slick('slickGoTo', 0, false).slick('slickGoTo', 1, false).slick('slickGoTo', 0, false);
            }

            $('#fx-container').removeClass('passive');
            $('#content-wrapper').addClass('visibility-hidden');

            var $transitionSVG = createCircle(x_pos, y_pos);

            var slide_duration = animate ? 750 : 1; // Flag for instantaneous animation

            $('#pagination').velocity("fadeOut", { duration: slide_duration * 0.75 });

            $.Velocity.animate($transitionSVG, { r: 2000 }, { duration: slide_duration }, "ease-out").then(function (elements) {
                $('body').addClass('endeavor-open');

                container.addClass('flex-row');

                $.Velocity.animate($(project_id), "scroll", { axis: "x", duration: slide_duration, container: container }).then(function (elems) {
                    $(project_id).scrollTop(0); // Reset project scroll            
                    container.addClass('visible');

                    $('#fx-container').addClass('opaque').onCSSTransitionEnd(function () {
                        if (opaque) {
                            return;
                        }

                        $.Velocity.animate($transitionSVG, "fadeOut", { duration: slide_duration * 0.75 }).then(function (elements) {
                            $('.arrow-container').removeClass('transparent');

                            _$projectCurrentContents = $(project_id).find('.contents');
                            setupMedia(_$projectCurrentContents); // Resize Video players

                            $transitionSVG.remove();
                        })['catch'](function (error) {
                            console.log("Rejected.");
                        });

                        opaque = true;
                    });
                })['catch'](function (error) {
                    console.log("Rejected.");
                });
            });

            window._openProjectState = true;

            // Lazysizes configuration
            window.lazySizesConfig = window.lazySizesConfig || {};
            window.lazySizesConfig.expand = 10; // Loading offset
            window.lazySizesConfig.expFactor = 10; // Loading offset
        }

        // --------------------------------------
        // Project Event Handlers

        $('.item').on('click', function (evt) {
            evt.stopPropagation();
            _workItemInteraction($(this).attr('data-project'), evt);
            _endeavorRouter.setURL($(this).attr('data-project')); // Internal URL Routing
        });

        $('.item').each(function () {
            var $this = $(this);

            var hammertime = new Hammer(this);
            hammertime.options.domEvents = true; // Support for event delegation
            hammertime.on("tap", function (evt) {
                evt.preventDefault();
                _workItemInteraction($(evt.target.closest('.item')).attr('data-project'), evt);
                _endeavorRouter.setURL($(evt.target.closest('.item')).attr('data-project')); // Internal URL Routing
                return false;
            });
        });

        // To previous project
        $('#prev').click(function (evt) {
            if (!window._openProjectState) {
                return;
            }

            if (current_index >= 1) {
                current_index--;
                project_id = updateCurrentProject(current_index, project_id);

                _endeavorRouter.setURL(project_id.substring(1)); // Internal URL Routing

                $('.arrow-container').removeClass('dip-to-white');
                // $('.project-container').removeClass('dip-to-white');

                resetProjectControls();

                $(project_id).scrollTop(0); // Reset project scroll                       
                $(project_id).velocity("scroll", { axis: "x", duration: 750, container: container, easing: 'ease-in-out' }); // Scroll to next project

                updateArrow();

                setTimeout(function () {
                    $('.arrow-container').addClass('dip-to-white');
                    // $('.project-container').addClass('dip-to-white');
                }, 0);
            }
        });

        // To next project
        $('#next').click(function (evt) {
            if (!window._openProjectState) {
                return;
            }

            if (current_index < currents.length - 1) {
                current_index++;
                project_id = updateCurrentProject(current_index, project_id);

                _endeavorRouter.setURL(project_id.substring(1)); // Internal URL Routing

                $('.arrow-container').removeClass('dip-to-white');
                // $('.project-container').removeClass('dip-to-white');

                resetProjectControls();

                $(project_id).scrollTop(0); // Reset project scroll            
                $(project_id).velocity("scroll", { axis: "x", duration: 750, container: container, easing: 'ease-in-out' }); // Scroll to next project

                updateArrow();

                setTimeout(function () {
                    $('.arrow-container').addClass('dip-to-white');
                    // $('.project-container').addClass('dip-to-white');
                }, 0);
            }
        });

        // Close project handler
        $('#close').click(function (evt) {
            if (window._openProjectState) {
                closeProject();
            }
        });

        // Resize
        $(window).resize(function (evt) {
            var timer = undefined;

            clearTimeout(timer);

            timer = setTimeout(function () {
                $(project_id).velocity("scroll", { axis: "x", duration: 0, container: container });
            }, 500);
        });

        return {
            workItemInteraction: function workItemInteraction(_project_id, evt, animate) {
                _workItemInteraction(_project_id, evt, animate);
            }
        };
    })();

    // --------------------------------------
    // Image-Grid Overlay

    $('.image-grid-container').click(function () {

        var $containerClass = $(this).parent(),
            $slickInitClass = $containerClass.find('.grid-slider'),
            slideIndex = $(this).data('slide');

        $(this).parent().find('.unveil').trigger('unveil'); // Trigger loading of slider

        $containerClass.children('.image-grid-container').removeClass("active-grid").addClass("bounce-sm");

        $(this).removeClass("bounce-sm").addClass("active-grid");

        if (!$slickInitClass.hasClass('slick-initialized')) {

            $containerClass.children('.image-grid-container').removeClass("bounce").addClass('bounce-sm shrink-grid');

            $slickInitClass.addClass('active-grid-slider');

            // Add Slick slider with current parent id
            addSlick($slickInitClass, false, false);
            $slickInitClass.removeClass('slider-transition');

            // Wait to calculate page offset until class transition ends
            setTimeout(function (evt) {

                var scrollInId = $('.case-study-view');

                $(this).velocity("scroll", {
                    container: scrollInId,
                    duration: 800,
                    delay: 0,
                    mobileHA: false
                });
            }, 500);

            $slickInitClass.slick('slickGoTo', slideIndex, true); // Do not animate to first position
        } else {
                $slickInitClass.slick('slickGoTo', slideIndex, false); // Once loaded, animate to new position
            }

        $slickInitClass.on('swipe', function (event) {

            $containerClass.children('.image-grid-container').removeClass("active-grid").addClass("bounce-sm");

            var currentSlide = $slickInitClass.slick('slickCurrentSlide');
            var activeSlide = $containerClass.find("[data-slide='" + currentSlide + "']");
            activeSlide.addClass("active-grid").removeClass("bounce-sm");
        });
    });

    // Pagination event listener
    $('.pagination').click(function () {

        _sectionCurrent = $(this).attr("data-sectionId");

        // Navigate
        animation.scrollToVelocity(_sectionCurrent);
    });

    // Header navigation --> Go Home (clicking 'a' sends the users to /#bios)
    $('.logo').click(function () {

        closeProject();
        closeNav();

        _sectionCurrent = "web-lab"; // Set #web-lab as current
        animation.scrollToVelocity(_sectionCurrent); // Navigate
    });

    $('.scroll-arrow').click(function () {
        _sectionCurrent = "bios"; // Set #bios as current
        animation.scrollToVelocity(_sectionCurrent); // Navigate
        $(this).velocity("fadeOut", { duration: 250 }); // Fade it out | They get it
    });

    // --------------------------------------
    // Widow Tamer

    // if (_mobile) {
    //     wt.fix({
    //         elements: '.tamer',
    //         chars: 14,
    //         method: 'letter-spacing',
    //         event: 'orientationchange'
    //     });
    // }
    // else if (window.innerWidth > 400) {
    //     wt.fix({
    //         elements: '.tamer',
    //         chars: 14,
    //         method: 'letter-spacing',
    //         event: 'resize'
    //     });
    // }

    // --------------------------------------
    // Sticky Elements

    function stickyUpdate() {
        var stickyElements = $('.sticky');

        stickyfill.kill(); // --> Reset

        if (_mobile || window.innerWidth < 1000) {
            stickyfill.kill();
            return;
        }

        for (var i = stickyElements.length - 1; i >= 0; i--) {
            stickyfill.add(stickyElements[i]);
        }

        stickyfill.rebuild();
    }

    // --------------------------------------
    // Mobile

    // Hide Web-Lab
    if (_mobile) {
        $('#web-lab').addClass('hidden');
    }

    /*
        Alternative check for mobile devices
         _mobile = window.mobilecheck = (function() {
            let check = false;
            (function(a){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4)))check = true})(navigator.userAgent||navigator.vendor||window.opera);
            
            return check;
        })(); // Call immediately
    */

    $('#bios-more').click(function () {
        $(this).velocity("fadeOut", { duration: 500 });
        $('#bios-about').velocity("fadeIn", { duration: 250 });
        $('#self-long').velocity("fadeIn", { duration: 500 });
    });

    $('#select-more').click(function () {
        $(this).velocity("fadeOut", { duration: 500 });
        $('#select-work li:nth-child(n+7)').velocity("fadeIn", { duration: 500 });
    });

    // Close Project
    $('.close').click(function () {
        closeCasestudy();
    });
});

// Functions =============================================================

// Page load routing + hashing
_endeavorRouter = (function () {

    // Set current url hash
    var loaded = undefined;
    var _sections = $('.section');

    function _route(state, animate) {

        // If the user requests the index page, redirect to #web-lab
        if (state === "home" || state === "") {
            // If the user requests the index page, redirect to #web-lab
            window.location.hash = "web-lab";
            _sectionCurrent = $(_sections).index($('#web-lab')); // Set #web-lab as current
            hashChanged('#web-lab');
            loaded = true;
        } else if (window.location.pathname === "/") {
            if (!window._openProjectState) {
                return;
            }

            $('.arrow-container').addClass('transparent');
            _closeProject(); // Exit project
            hashChanged('#web-lab');

            $('.arrow-container-main').addClass('transparent');

            setTimeout(function () {
                // Currently a hack for avoinding deferred Velocity Animation
                $('.arrow-container-main').removeClass('transparent');
                $('.arrow-container').addClass('transparent');
            }, 2000);

            _sectionCurrent = $(_sections).index($('#works')); // Set #works as current
        } else {
                var _loop = function (i) {
                    var item = _endeavor_routes.case_studies[i];

                    if (state === item) {
                        setTimeout(function () {
                            _itemInteraction.workItemInteraction(item, $('.case-study-item'), animate);
                        }, 0);

                        _sectionCurrent = $(_sections).index($('#works')); // Set #works as current
                        return {
                            v: undefined
                        };
                    }
                };

                // Check for Project Incoming Routing
                for (var i = 0; i < _endeavor_routes.case_studies.length; i++) {
                    var _ret = _loop(i);

                    if (typeof _ret === 'object') return _ret.v;
                }

                // Check for Case Study Incoming Routing

                var _loop2 = function (i) {
                    var item = _endeavor_routes.projects[i];

                    if (state === item) {
                        setTimeout(function () {
                            _itemInteraction.workItemInteraction(item, $('.project-item'), animate);
                        }, 0);

                        _sectionCurrent = $(_sections).index($('#works')); // Set #works as current
                        return {
                            v: undefined
                        };
                    }
                };

                for (var i = 0; i < _endeavor_routes.projects.length; i++) {
                    var _ret2 = _loop2(i);

                    if (typeof _ret2 === 'object') return _ret2.v;
                }

                // Find requested route
                var loc = window.location.hash;
                // Set current object to this route
                _sectionCurrent = $(_sections).index($(loc));
            }

        $(_sections).removeClass('currentSection');

        $(_sections[_sectionCurrent]).addClass('currentSection').velocity("scroll", { duration: 1 });
    }

    function _initialRoute(state) {
        _route(state, false); // animate flag for project transition
    }

    // Closure
    return {
        route: function route(state) {
            _route(state, true);
        },
        initialRoute: function initialRoute(state) {
            _initialRoute(state, false);
        },
        resetURL: function resetURL() {
            window.history.pushState('home', "", "/"); // Update browser state without refreshing the page
        },
        setHash: function setHash(hash) {
            window.location.hash = "#" + hash;
        },
        setURL: function setURL(URL) {
            if (URL) {
                window.history.pushState(URL, "", "/" + URL); // Update browser state without refreshing the page
            }
        }
    };
})();

// Dynamic page hash setting (anonymous fn)
(function () {
    // Find all top,bottom and Hash of each sections
    var section = $.map($("section"), function (e) {
        var $e = $(e);
        var pos = $e.position();
        return {
            top: pos.top - 100,
            bottom: pos.top - 100 + $e.height(),
            hash: $e.attr('id')
        };
    });
    // Checking scroll
    var top = null;
    var changed = false;
    var currentHash = null;

    $(document).scroll(function () {
        var newTop = $(document).scrollTop();

        changed = newTop != top;

        if (changed) {
            top = newTop;
        }
    });

    //Set Hash while start scroll | check only every 200ms
    function step() {
        if (!changed) {
            return setTimeout(step, 200);
        }

        var count = section.length,
            p = undefined;

        while (p = section[--count]) {
            if (p.top >= top || p.bottom <= top) {
                continue;
            }
            if (currentHash === p.hash) {
                break;
            }

            var _scrollTop = $(document).scrollTop();
            window.location.hash = currentHash = p.hash;

            _sectionCurrent = p.hash;

            // prevent browser to scroll
            $(document).scrollTop(_scrollTop);
        }

        setTimeout(step, 200);
    }

    setTimeout(step, 200);
})();

// Toggle visibility of main logo
function toggleLogo(loc) {
    var header = $('#header');

    if (loc === "#web-lab") {
        header.removeClass('header-open');
    } else {
        header.addClass('header-open');
    }
}

// Toggle visibility of Glyph Controls
function toggleGlyphControls(loc) {

    if (loc === "#web-lab") {
        $('.lab-options').velocity("fadeIn", { duration: 250, display: "flex" });
        $('.lab-what').velocity("fadeIn", { duration: 250, display: "flex" });
    } else {
        $('.lab-options').velocity("fadeOut", { duration: 250 });
        $('.lab-what').velocity("fadeOut", { duration: 250 });
    }
}

// Control Header or Anything else Hash related
function hashChanged() {
    var loc = window.location.hash;

    toggleLogo(loc); // Check the logo visibility
    toggleGlyphControls(loc); // Check weblab control visibility

    var sectionUpdate = String(loc).slice(1);

    // Affect pagination on navigation change
    paginationUpdate(sectionUpdate);
};

// Setup Pagination
function pagination(_sections) {

    $(_sections).each(function (i, obj) {

        var id = $(this).attr('id');

        // For each element with '_sections' class; append new pagination to dom.
        $('#pagination').append('<div class = "pagination"></div>');
        $('.pagination').eq(i).attr('data-sectionId', id);
        $('.pagination').eq(i).attr('data-content', id);
    });
}

// Update pagination active states
function paginationUpdate(sectionUpdate) {
    $('.pagination').removeClass('pagination-active');
    var active_section = $('#pagination').find("[data-sectionId='" + sectionUpdate + "']");
    active_section.addClass('pagination-active pagination-active-before');

    setTimeout(function () {
        active_section.removeClass('pagination-active-before');
    }, 2000);
}

// Setup for Slick slider plugin Grid #1
function addSlick($elem, _dotsBool) {
    var _autoplay = arguments.length <= 2 || arguments[2] === undefined ? true : arguments[2];

    $elem.slick({
        arrows: false,
        pauseOnHover: true,
        autoplay: _autoplay,
        dots: _dotsBool,
        lazyLoad: 'on-demand',
        adaptiveHeight: true
    });
}

function centerOffest(scrollInId, scrollToId) {

    var elementOffset = scrollToId.offset().top,
        distance = elementOffset - scrollTop,
        middle = distance - $(scrollInId).height() / 2;

    return middle;
}

// Set up Date Query
function setGreeting() {

    // Get current time
    var d = new Date(),
        n = d.getHours(),
        greeting = undefined;

    if (n < 11 && n > 4) {
        greeting = "Good Morning ";
    } else if (n < 18 && n > 10) {
        greeting = "Good Afternoon ";
    } else if (n > 17 || n < 5) {
        greeting = "Good Evening ";
    } else {
        greeting = "Hello ";
    }

    // Add the greeting to the very first interactive section*/
    $('#greeting p:first-child').html(greeting);
}

/*


Seperation of styling for complex page animations


*/

// Set up page-load animation

var $info = $("#info"),
    $navBurger = $('#nav-burger'),
    $pagination = $('#pagination'),
    $navFooter = $('.nav-footer');

var loadingSequence = [{
    e: $navBurger,
    p: {
        right: 50,
        opacity: 1
    },
    o: {
        duration: 500,
        easing: "easeInSine",
        sequenceQueue: false
    }
}, {
    e: $pagination,
    p: {
        right: 57
    },
    o: {
        duration: 500,
        easing: "easeInSine",
        sequenceQueue: false
    }
}, {
    e: $info,
    p: { opacity: 1 },
    o: {
        duration: 500,
        easing: "easeInSine",
        sequenceQueue: false
    }
}, {
    e: $navFooter,
    p: { bottom: 0 },
    o: {
        duration: 500,
        easing: "easeInSine",
        sequenceQueue: false
    }
}];

// jQuery Extentions =============================================================

$.fn.appendAttr = function (attrName, suffix) {
    this.attr(attrName, function (i, val) {
        return val + suffix;
    });
    return this;
};

// scrollTo

/* sigmoidFactory
*
* Generate an ease-in-out function with desired steepness.
* https://medium.com/analytic-animations/ease-in-out-the-sigmoid-factory-c5116d8abce9#.riq7ob6tj
* 
* Required:
*   k: (float != 0), sharpness of ease
*
* Return: f(t), t in 0..1
*/
function sigmoidFactory(k) {
    function base(t) {
        return 1 / (1 + Math.exp(-k * t)) - 0.5;
    }

    var correction = 0.5 / base(1);

    return function (t) {
        t = clamp(t, 0, 1);
        return correction * base(2 * t - 1) + 0.5;
    };
}

function clamp(val, lower, upper) {
    return Math.max(Math.min(val, upper), lower);
}

function Deferred(fn) {
    fn = fn || function () {};

    var res = void 0,
        rej = void 0;

    var p = new Promise(function (resolve, reject) {
        fn(resolve, reject);

        res = resolve;
        rej = reject;
    });

    p.resolve = res;
    p.reject = rej;

    return p;
}

/* scrollTo
 *
 * Smoothly scrolls to a particular element.
 *
 * Required:
 *   [0] target: The element to scroll to
 *
 * Optional:
 *     msec: defaults to 250 msec
 *     easing: defaults to ease-in-out-cubic
 *     offset: extra offset in pixels
 *
 * Return: void
 */
function scrollTo(container, target, options) {
    if (target === null) {
        target = container;
    }

    if (options === undefined || typeof options === 'function') {
        options = {};
    }

    var msec = options.msec || 250;
    var easing = options.easing || sigmoidFactory(6);
    var offset = options.offset || 0;

    var position_offset = target.offsetTop - container.offsetTop + offset;

    if (position_offset === 0) {
        return Promise.resolve();
    }

    var distance_traveled = 0;
    var start_pos = container.scrollTop;

    var req = undefined;

    var deferred = Deferred();

    deferred.then(function () {
        container.scrollTop = start_pos + position_offset;
    }, function () {
        if (req) {
            cancelAnimationFrame(req);
        }
    });

    var start_time = window.performance.now();

    function animate() {
        var now = window.performance.now();
        var t = (now - start_time) / msec;

        if (t >= 1) {
            deferred.resolve();
            return;
        }

        var proportion = easing(t);

        distance_traveled = proportion * position_offset;
        container.scrollTop = start_pos + distance_traveled;

        req = requestAnimationFrame(animate);
    }

    req = requestAnimationFrame(animate);

    return deferred;
};

},{"./animation.js":1,"./content.json":2,"./cssTransitionEnd.js":3,"./jquery.centerIn.js":6,"./progressBar.js":12,"hammerjs":13,"is-in-viewport":14,"ismobilejs":15,"jquery":18,"lazysizes":19,"lazysizes/plugins/unveilhooks/ls.unveilhooks.min.js":20,"slick-carousel":22,"stickyfill":23,"velocity-animate":189,"velocity-ui-pack":190}],6:[function(require,module,exports){
/* centerIn.js
 *
 * jQuery plugin that allows you to center an element within an element.
 *
 * e.g. 
 *
 * $(element).centerIn(); // centers horizontally and vertically in parent
 * $(element).centerIn(window); // centers horizontally and vertically in window
 * $(element).centerIn(window, { direction: 'vertical' }); // centers vertically in window
 * $(element).centerIn(window, { top: "-20%" }); // centers vertically in window offset upwards by 20%
 * $(element).alwaysCenterIn(window); // deals with resize events
 *
 * Author: William Silversmith
 * Affiliation: Seung Lab, Brain and Cognitive Sciences Dept., MIT
 * Date: August 2013 - February 2014
 */

'use strict';

;(function ($, undefined) {

    /* centerIn
     *
     * Centers the element with respect to
     * the first element of the given selector
     * both horizontally and vertically.
     *
     * Required:
     *   [0] selector: The element to center within
     *   [1] options or callback
     *   [2] callback (if [1] is options): Mostly useful for alwaysCenterIn
     *
     * Options:
     *   direction: 'horizontal', 'vertical', or 'both' (default)
     *   top: Additional offset in px
     *   left: Additional offset in px
     *
     * Returns: void
     */
    $.fn.centerIn = function (selector, options, callback) {
        var elements = this;
        options = options || {};

        if (typeof options === 'function') {
            callback = options;
            options = {};
        }

        var direction = options.direction || $.fn.centerIn.defaults.direction;
        var extraleft = options.left || 0;
        var extratop = options.top || 0;

        if (selector) {
            selector = $(selector).first();
        } else {
            selector = elements.first().parent();
        }

        try {
            if (!selector.css('position') || selector.css('position') === 'static') {
                selector.css('position', 'relative');
            }
        } catch (e) {
            // selector was something like window, document, html, or body
            // which doesn't have a position attribute
        }

        var horizontal = function horizontal(element) {
            var left = Math.round((selector.innerWidth() - element.outerWidth(false)) / 2);
            left += translateDisplacement(selector, extraleft, 'width');
            element.css('left', left + "px");
        };

        var vertical = function vertical(element) {
            var top = Math.round((selector.innerHeight() - element.outerHeight(false)) / 2);
            top += translateDisplacement(selector, extratop, 'height');
            element.css('top', top + "px");
        };

        var centerfn = constructCenterFn(horizontal, vertical, callback, direction);

        elements.each(function (index, element) {
            element = $(element);

            if (element.css("position") !== 'fixed') {
                element.css("position", 'absolute');
            }
            centerfn(element);
        });

        return this;
    };

    /* alwaysCenterIn
     * 
     * Maintains centering even on window resize.
     */
    $.fn.alwaysCenterIn = function () {
        var args = arguments || [];
        var selector = $(this);

        selector.centerIn.apply(selector, args);

        var evt = 'resize.centerIn';
        if (selector.attr('id')) {
            evt += '.' + selector.attr('id');
        }

        $(window).on(evt, function () {
            selector.centerIn.apply(selector, args);
        });

        return this;
    };

    /* Defaults */

    $.fn.centerIn.defaults = {
        direction: 'both'
    };

    /* translateDisplacement
     *
     * Translates dimensionless units, pixel measures, and percent
     * measures into px.
     *
     * Required: 
     *   [0] selector: Container, relevant for percent measures
     *   [1] value: Amount to displace. e.g. 5, "5px", or "5%"
     *   [2] direction: 'width' or 'height'
     * 
     * Returns: px
     */
    function translateDisplacement(selector, value, direction) {
        if (typeof value === 'number') {
            return value;
        } else if (/px$/i.test(value)) {
            return parseFloat(value.replace('px', ''), 10);
        } else if (/%$/.test(value)) {
            var total = direction === 'width' ? $(selector).innerWidth() : $(selector).innerHeight();

            value = parseFloat(value.replace('%', ''), 10);
            value /= 100;

            return value * total;
        }

        return parseFloat(value, 10);
    }

    /* constructCenterFn
     *
     * Constructs an appropriate centering function
     * that includes vertical, horizontal, and callback
     * functions as applicable.
     *
     * Returns: fn
     */
    function constructCenterFn(horizontal, vertical, callback, direction) {
        var fns = [];

        if (!direction || direction === 'both') {
            fns.push(vertical);
            fns.push(horizontal);
        } else if (direction === 'horizontal') {
            fns.push(horizontal);
        } else if (direction === 'vertical') {
            fns.push(vertical);
        }

        if (callback) {
            fns.push(callback);
        }

        return compose(fns);
    }

    /* compose
     *
     * Compose N functions into a single function call.
     *
     * Required: 
     *   [0-n] functions or arrays of functions
     * 
     * Returns: function
     */
    function compose() {
        var fns = flatten(arguments);

        return function () {
            for (var i = 0; i < fns.length; i++) {
                fns[i].apply(this, arguments);
            }
        };
    }

    /* flatten
     *
     * Take an array that potentially contains other arrays 
     * and return them as a single array.
     *
     * e.g. flatten([1, 2, [3, [4]], 5]) => [1,2,3,4,5]
     *
     * Required: 
     *   [0] array
     * 
     * Returns: array
     */
    function flatten(array) {
        array = array || [];

        var flat = [];

        var len = array.length;
        for (var i = 0; i < len; i++) {
            var item = array[i];

            if (typeof item === 'object' && Array.isArray(item)) {
                flat = flat.concat(flatten(item));
            } else {
                flat.push(item);
            }
        }

        return flat;
    }
})(jQuery);

/* The MIT License (MIT)

Copyright (c) 2014 Seung Lab, MIT

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
the Software, and to permit persons to whom the Software is furnished to do so,
subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

},{}],7:[function(require,module,exports){
// Fluid Glyph
// Alex Norton :: 2016
// https://github.com/alexnortn/Portfolio

// A Toxilibs class for implementing a Strange Attractor

"use strict";

var $ = require('jquery'),
    toxi = require('toxiclibsjs'),
    p5 = require('p5');

// Child class constructor
function Attractor() {
	var args = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	var p = args.p; // p5 instance
	var _this = this;

	this.physics = args.physics || new toxi.physics2d.VerletPhysics2D(0, 0); // Initialize the physics;
	this.position = args.position || 0;
	this.location = args.location || 0;
	this.range = args.range || 10;
	this.strength = args.strength || 1;
	this.locked = args.locked || false;

	toxi.physics2d.VerletParticle2D.call(_this, _this.position);

	this.attractForce = new toxi.physics2d.behaviors.AttractionBehavior(_this, _this.range, _this.strength);

	_this.physics.addParticle(_this);
	_this.physics.addBehavior(_this.attractForce);

	if (_this.locked) {
		_this.lock(); // Lock particle in place
	}

	// // Override the display method
	this.display = function () {
		var radius = p.abs(_this.strength * 200);
		var alpha = p.map(_this.strength, 0.05, -0.05, 0, 255); // 1/x | inversely proportional

		p.noStroke();
		p.fill(35, 35, 35, alpha);
		p.ellipse(_this.x, _this.y, radius, radius);
	};

	this.hover = function () {
		attractForce.setStrength(0.5);
	};

	this.away = function () {
		attractForce.setStrength(0.1);
	};

	this.press = function () {
		var newOpStrength = attractForce.getStrength() * -25;
		attractForce.setStrength(newOpStrength);
	};
}

// Inherit from the parent class
Attractor.prototype = Object.create(toxi.physics2d.VerletParticle2D.prototype);
Attractor.prototype.constructor = Attractor;

module.exports = Attractor;

},{"jquery":18,"p5":21,"toxiclibsjs":119}],8:[function(require,module,exports){
module.exports={
  "a_vertex":[
    {
      "x":369.45312,
      "y":-31.953125,
      "vertexType":"false",
      "isEnd":"false"
    },
    {
      "x":300.15625,
      "y":9.90625,
      "vertexType":"false",
      "isEnd":"false"
    },
    {
      "x":288.90625,
      "y":9.90625,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":270.90625,
      "y":2.703125,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":263.25,
      "y":-4.953125,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":250.65625,
      "y":-17.546875,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":245.70312,
      "y":-30.15625,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":242.09375,
      "y":-44.09375,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":206.54688,
      "y":-20.703125,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":166.95312,
      "y":9.90625,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":137.25,
      "y":9.90625,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":79.203125,
      "y":9.90625,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":36.90625,
      "y":-39.15625,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":36.90625,
      "y":-95.40625,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":36.90625,
      "y":-135.45312,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":59.40625,
      "y":-165.59375,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":108,
      "y":-180.45312,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":159.75,
      "y":-198,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":222.29688,
      "y":-222.29688,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":240.75,
      "y":-235.79688,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":240.75,
      "y":-247.95312,
      "vertexType":"false",
      "isEnd":"false"
    },
    {
      "x":240.75,
      "y":-310.95312,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":208.79688,
      "y":-346.04688,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":165.59375,
      "y":-346.04688,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":147.15625,
      "y":-346.04688,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":132.75,
      "y":-338.40625,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":124.65625,
      "y":-328.5,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":113.84375,
      "y":-315.90625,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":107.09375,
      "y":-299.25,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":98.546875,
      "y":-273.15625,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":96.296875,
      "y":-260.54688,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":86.84375,
      "y":-254.70312,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":74.25,
      "y":-254.70312,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":61.203125,
      "y":-254.70312,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":39.15625,
      "y":-270.90625,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":39.15625,
      "y":-290.70312,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":39.15625,
      "y":-303.29688,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":51.75,
      "y":-313.20312,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":67.5,
      "y":-324.90625,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":88.65625,
      "y":-341.09375,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":143.09375,
      "y":-374.40625,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":193.04688,
      "y":-384.29688,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":217.34375,
      "y":-384.29688,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":243.90625,
      "y":-376.65625,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":261.45312,
      "y":-360.90625,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":289.79688,
      "y":-336.59375,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":299.25,
      "y":-302.40625,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":299.25,
      "y":-259.20312,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":299.25,
      "y":-97.65625,
      "vertexType":"false",
      "isEnd":"false"
    },
    {
      "x":299.25,
      "y":-59.40625,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":313.20312,
      "y":-45.90625,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":329.40625,
      "y":-45.90625,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":339.29688,
      "y":-45.90625,
      "vertexType":"true",
      "isEnd":"true"
    },
    {
      "x":351.90625,
      "y":-51.75,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":360,
      "y":-55.796875,
      "vertexType":"true",
      "isEnd":"false"
    }],
  "counter_vertex":[
    {
      "x":240.75,
      "y":-74.25,
      "vertexType":"false",
      "isEnd":"false"
    },
    {
      "x":240.75,
      "y":-205.65625,
      "vertexType":"false",
      "isEnd":"false"
    },
    {
      "x":221.40625,
      "y":-196.20312,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":175.5,
      "y":-176.40625,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":156.15625,
      "y":-167.84375,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":121.046875,
      "y":-153,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":102.15625,
      "y":-136.34375,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":102.15625,
      "y":-104.40625,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":102.15625,
      "y":-61.65625,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":137.25,
      "y":-40.046875,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":165.59375,
      "y":-40.046875,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":189,
      "y":-40.046875,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":224.09375,
      "y":-59.40625,
      "vertexType":"true",
      "isEnd":"false"
    },
    {
      "x":240.75,
      "y":-74.25,
      "vertexType":"true",
      "isEnd":"true"
    }
],
  "n_vertex":[
    {
      "x":282.5,
      "y":600.0,
      "vertexType":"false",
      "isEnd":"false"
    },
    {
      "x":282.5,
      "y":300.0,
      "vertexType":"false",
      "isEnd":"false"
    },
    {
      "x":344.0,
      "y":300.0,
      "vertexType":"false",
      "isEnd":"false"
    },
    {
      "x":480.0,
      "y":472.5,
      "vertexType":"false",
      "isEnd":"false"
    },
    {
      "x":480.0,
      "y":300.0,
      "vertexType":"false",
      "isEnd":"false"
    },
    {
      "x":551.5,
      "y":300.0,
      "vertexType":"false",
      "isEnd":"false"
    },
    {
      "x":551.5,
      "y":600.0,
      "vertexType":"false",
      "isEnd":"false"
    },
    {
      "x":490.0,
      "y":600.0,
      "vertexType":"false",
      "isEnd":"false"
    },
    {
      "x":354.0,
      "y":427.5,
      "vertexType":"false",
      "isEnd":"false"
    },
    {
      "x":354.0,
      "y":600.0,
      "vertexType":"false",
      "isEnd":"false"
    }
]} 
},{}],9:[function(require,module,exports){
// Fluid Glyph
// Alex Norton :: 2016
// https://github.com/alexnortn/Portfolio

// A p5 class for implementing a custom button

"use strict";

var $ = require('jquery'),
    toxi = require('toxiclibsjs'),
    p5 = require('p5');

// Child class constructor
function MakeButton() {
	var args = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	var p = args.p;

	this.x = args.x || 0;
	this.y = args.y || 0;
	this.buttonWidth = args.buttonWidth || 10;

	var xPos = undefined;
	var yPos = undefined;
	var opacity = 0;

	var sizeOffset = this.buttonWidth / 2;

	this.display = function (_x, _y) {
		var x = _x;
		var y = _y;

		xPos = 50;
		yPos = y - y / 2; // Normalize for position

		// Center ellipse
		p.fill(0, 0, 0, opacity);
		p.ellipseMode(CENTER);
		p.ellipse(xPos, yPos, 25, 25);

		// Center Cross
		stroke(255, 255, 255);
		strokeWeight(2);
		line(xPos, yPos + 2.5, xPos, yPos - 2.5);
		line(xPos - 2.5, yPos, xPos + 2.5, yPos);

		// Dashed Borders
		/*
  p.fill(0,0,0);
  p.noStroke();
  let r = 1;
  let spaces = 30;
  let spacing = this.buttonWidth / spaces;
  for (let i = 0; i < spaces; i+= spacing) {
  	p.ellipse(((xPos - sizeOffset) + (i * spacing)), (yPos - sizeOffset), r, r);
  	p.ellipse(((xPos - sizeOffset) + (i * spacing)), (yPos + sizeOffset), r, r);
  	p.ellipse((xPos - sizeOffset), ((yPos + sizeOffset) - (i * spacing)), r, r);
  	p.ellipse((xPos + sizeOffset), ((yPos + sizeOffset) - (i * spacing)), r, r);
  }
  */
	};

	this.hover = function (_x, _y) {
		var x = _x,
		    y = _y;

		xPos = 50;
		yPos = y - y / 2; // Normalize for position

		// Center ellipse
		p.fill(0, 0, 0);
		p.ellipseMode(CENTER);
		p.ellipse(xPos, yPos, 25, 25);

		// Center Cross
		p.stroke(255, 255, 255);
		p.strokeWeight(2);
		p.line(xPos - 2.5, yPos, xPos + 2.5, yPos);
	};

	this.loc = function () {
		var loc = p.createVector(xPos, yPos);
		return loc;
	};

	this.opa = function (_opacity) {
		opacity = _opacity;
	};
}

MakeButton.prototype.constructor = MakeButton;

module.exports = MakeButton;

},{"jquery":18,"p5":21,"toxiclibsjs":119}],10:[function(require,module,exports){
// Fluid Glyph
// Alex Norton :: 2016
// https://github.com/alexnortn/Portfolio

// A Toxilibs class for implementing particles

"use strict";

var $ = require('jquery'),
    toxi = require('toxiclibsjs'),
    p5 = require('p5');

// Child class constructor
function Particle() {
	var args = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	// Private arguments from constructor
	var p = args.p;
	var _this = this;

	this.position = args.position || new toxi.geom.Vec2D(0, 0);

	toxi.physics2d.VerletParticle2D.call(this, _this.position);

	// Override the display method
	this.display = function () {
		p.fill(255, 0, 0);
		// p.stroke(200);
		// p.strokeWeight(2);
		p.noStroke();
		p.ellipse(this.x, this.y, 1, 1);
	};
}

// Inherit from the parent class
Particle.prototype = Object.create(toxi.physics2d.VerletParticle2D.prototype);
Particle.prototype.constructor = Particle;

module.exports = Particle;

},{"jquery":18,"p5":21,"toxiclibsjs":119}],11:[function(require,module,exports){
// Alex Norton
// a^N
// http://alexnortn.com

"use strict";

var toxi = require('toxiclibsjs'),
    p5 = require('p5'),
    $ = require('jquery'),
    Particle = require('./particle.js'),
    Attractor = require('./attractor.js'),
    MakeButton = require('./makeButton.js'),
    vertices = require('./data/verts.json');

// p5.dom
// let dom = require('../../node_modules/p5/lib/addons/p5.dom.js');

// Previous 2018 working line « note removed in 2021 due to library addition into principal p5 codebase
// require('p5/lib/addons/p5.dom');

var _options = {
	width: 100,
	height: 100,
	anchor: null,
	mobile: false,
	phone: false,
	tablet: false
};

var _canvas = $.Deferred(),
    _render = true;

// Running the sketch in instance mode, don't forget to preface all P5 methods with { p }
var glyph = function glyph(p) {

	// Reference to physics world
	var physics = undefined;

	// Canvas
	var canvas = undefined;

	var aLockVert = [],
	    aSpringVert = [],
	    aSpringArr = [],
	    aCounterLockVert = [],
	    aCounterSpringVert = [],
	    aCounterSpringArr = [],
	    nLockVert = [],
	    nSpringVert = [],
	    nSpringArr = [],
	    w = undefined,
	    h = undefined,
	    gravity = undefined,
	    gravityStrength = undefined,
	    xOff = undefined,
	    mousePos = undefined,
	    scaleFactor = undefined,
	    nScaleFactor = undefined,
	    center = undefined,
	    glyphCenter = undefined,
	    nOffset = undefined,
	    phi = undefined,
	    alphaOpa = undefined,
	    timeOut = undefined,
	    timeOut1 = undefined,
	    alphaOpa1 = undefined,
	    lineOp = undefined,
	    glyphOp = undefined,
	    tempSelection = undefined,
	    aCenterOffset = undefined,
	    clockBool = undefined,
	    bigGlyph = undefined,
	    aVerts = [],
	    aCounterVerts = [],
	    nVerts = [];

	// Global interaction states
	var _perlin = $.Deferred(),
	    _vertex = $.Deferred(),
	    _force = $.Deferred(),
	    _bounce = $.Deferred();

	var _slow = false,
	    _slowFn = undefined;

	var _renderMode = undefined,
	    _renderMan = undefined;

	var car = { type: "Fiat", model: "500", color: "white" };

	var glyph_obj = {
		img: [],
		x: 0,
		y: 0,
		x_offset: 0,
		y_offset: 0,
		dynamic: {},
		lock: {},
		spring: {},
		width: 100,
		height: 100
	};

	var nudgeAttractor = undefined;

	// Resolve before sketch runs
	p.preload = function () {
		glyph_obj.img = p.loadImage("../images/logo-main.png");
	};

	p.setup = function () {

		canvas = p.createCanvas(window.innerWidth, window.innerHeight);
		canvas.parent('web-lab');
		canvas.id('glyph');

		_canvas.resolve(canvas.elt); // --> Sneaky deferred shenanigans

		p.noStroke();

		phi = (1 + p.sqrt(5)) / 2;

		w = p.windowWidth;
		h = p.windowHeight;

		scaleFunc(w, h);

		mousePos = p.createVector();
		xOff = 0;
		alphaOpa = 0;
		alphaOpa1 = 0;
		glyphOp = 0;
		lineOp = 0;
		timeOut = 500;
		timeOut1 = 400;

		// Address N Scaling
		nScaleFactor = 0.3;
		nOffset = p.createVector(250, -500);

		// Centering functions
		center = p.createVector(w / 2, h / 2);
		glyphCenter = p.createVector();
		aCenterOffset = p.createVector();

		centerGlyph(vertices);
		findCenter();

		initPerformanceTest();

		// --------------------------------------
		// Mobile Glyph

		if (_options.mobile) {

			if (_options.phone) {
				// 10% height to offset element with respect to header
				glyph_obj.y_offset = p.height * 0.05;
			}

			if (_options.tablet) {}

			glyph_obj.height = p.height * 0.5;
			glyph_obj.width = glyph_obj.height;
			glyph_obj.x = (p.width - glyph_obj.width) / 2;
			glyph_obj.y = (p.height - glyph_obj.height) / 2 + glyph_obj.y_offset;

			physInitMobile(); // Initiate the physics world

			return;
		}

		loadArrays(vertices); // Load the arrays
		physInit(); // Initiate the physics world

		var nudgeStrength = 0.1;

		// Make our Attractor Object
		nudgeAttractor = new Attractor({
			physics: physics,
			position: new toxi.geom.Vec2D(p.width / 2, p.height / 2),
			radius: 24,
			range: p.width / 2,
			strength: nudgeStrength,
			p: p
		});

		// Setup interactive modules
		_perlin = flowField(100); // Turning up 2nite
		_perlin.reset();

		_renderMan = render(); // Default Fluid

		_bounce = scrollAccumulator();
	};

	p.draw = function () {

		// Only render if glyph is in view
		if (!_render || window._openProjectState) {
			return;
		}

		// Update the physics world
		physics.update();
		p.clear();

		if (_options.mobile) {
			mobile_physics();
			return; // No more, no more
		}

		// Draw the bezier Shapes
		drawBasicA();
		drawBasicN();

		// Set rendermode. Fluid | Perlin | Debug
		_renderMan.render(_renderMode);
	};

	// Check framerate interval
	function initPerformanceTest() {
		_slowFn = setInterval(testPerformance, 1000);
	}

	function testPerformance() {
		_slow = p.frameRate() < 20 ? true : false;
	}

	// --------------------------------------
	// Mobile + Tablet

	function mobile_physics() {

		/*
  	The following functions allow for fluid interactions on mobile.
  However, due to performace limitations, we'll keep the fluidity
  strictly to desktop.
  	setRotation();
  displayPhys();
  	*/

		setRotation(); // Handle Gyroscopic goodness

		// Glyph image related to physics sim
		var x_off = center.x - glyph_obj.dynamic.x,
		    y_off = center.y - glyph_obj.dynamic.y;

		// Debug Mobile Physics
		/*
  	p.strokeWeight(2);
  	p.stroke(0,0,0);
  	p.line(glyph_obj.lock.x, glyph_obj.lock.y, glyph_obj.dynamic.x, glyph_obj.dynamic.y);
  	p.fill(0,0,0);
  	p.ellipse(glyph_obj.lock.x, glyph_obj.lock.y,5,5);
  	p.ellipse(glyph_obj.dynamic.x, glyph_obj.dynamic.y,5,5);
  */

		p.image(glyph_obj.img, glyph_obj.x + x_off, glyph_obj.y + y_off, glyph_obj.width, glyph_obj.height);
	}

	// --------------------------------------
	// Desktop

	function windowResized() {
		if (_options.mobile) {
			return;
		}

		p.resizeCanvas(p.windowWidth, p.windowHeight);
		w = p.windowWidth;
		h = p.windowHeight;

		scaleFunc(w, h);
		physEmpty(); // Empty the Physics Sim
		findCenter();
		centerGlyph(vertices);
		loadArrays(vertices); // Reload the Arrays
		physInit(); // Initiate the physics array

		_perlin.resize(); // Resize Perlin sim
		_perlin.step(); // Setup Perlin sim
	}

	function drawBezier(vertices) {

		p.beginShape();
		for (var i = 0; i < vertices.a_vertex.length; i++) {
			if (vertices.a_vertex[i].vertexType == true) {
				p.p.bezierVertex(vertices.a_vertex[i].x, vertices.a_vertex[i].y, vertices.a_vertex[i++].x, vertices.a_vertex[i].y, vertices.a_vertex[i++].x, vertices.a_vertex[i].y);
			} else {
				p.vertex(vertices.a_vertex[i].x, vertices.a_vertex[i].y);
			}
		}
		p.endShape(p.CLOSE);
	}

	function drawBasicA() {
		var fadeSpeed = 2;
		if (glyphOp < 255) glyphOp += fadeSpeed;

		// If framerate is slow, draw outline, else fill glyph
		if (_slow) {
			p.noFill();
			p.strokeWeight(1);
			p.stroke(35, 35, 35, glyphOp);
		} else {
			p.noStroke();
			p.fill(35, 35, 35, glyphOp);
		}

		p.beginShape();
		p.vertex(aSpringVert[0].x, aSpringVert[0].y);
		p.vertex(aSpringVert[1].x, aSpringVert[1].y);
		p.bezierVertex(aSpringVert[2].x, aSpringVert[2].y, aSpringVert[3].x, aSpringVert[3].y, aSpringVert[4].x, aSpringVert[4].y);
		p.bezierVertex(aSpringVert[5].x, aSpringVert[5].y, aSpringVert[6].x, aSpringVert[6].y, aSpringVert[7].x, aSpringVert[7].y);
		p.bezierVertex(aSpringVert[8].x, aSpringVert[8].y, aSpringVert[9].x, aSpringVert[9].y, aSpringVert[10].x, aSpringVert[10].y);
		p.bezierVertex(aSpringVert[11].x, aSpringVert[11].y, aSpringVert[12].x, aSpringVert[12].y, aSpringVert[13].x, aSpringVert[13].y);
		p.bezierVertex(aSpringVert[14].x, aSpringVert[14].y, aSpringVert[15].x, aSpringVert[15].y, aSpringVert[16].x, aSpringVert[16].y);
		p.bezierVertex(aSpringVert[17].x, aSpringVert[17].y, aSpringVert[18].x, aSpringVert[18].y, aSpringVert[19].x, aSpringVert[19].y);
		p.vertex(aSpringVert[20].x, aSpringVert[20].y);
		p.bezierVertex(aSpringVert[21].x, aSpringVert[21].y, aSpringVert[22].x, aSpringVert[22].y, aSpringVert[23].x, aSpringVert[23].y);
		p.bezierVertex(aSpringVert[24].x, aSpringVert[24].y, aSpringVert[25].x, aSpringVert[25].y, aSpringVert[26].x, aSpringVert[26].y);
		p.bezierVertex(aSpringVert[27].x, aSpringVert[27].y, aSpringVert[28].x, aSpringVert[28].y, aSpringVert[29].x, aSpringVert[29].y);
		p.bezierVertex(aSpringVert[30].x, aSpringVert[30].y, aSpringVert[31].x, aSpringVert[31].y, aSpringVert[32].x, aSpringVert[32].y);
		p.bezierVertex(aSpringVert[33].x, aSpringVert[33].y, aSpringVert[34].x, aSpringVert[34].y, aSpringVert[35].x, aSpringVert[35].y);
		p.bezierVertex(aSpringVert[36].x, aSpringVert[36].y, aSpringVert[37].x, aSpringVert[37].y, aSpringVert[38].x, aSpringVert[38].y);
		p.bezierVertex(aSpringVert[39].x, aSpringVert[39].y, aSpringVert[40].x, aSpringVert[40].y, aSpringVert[41].x, aSpringVert[41].y);
		p.bezierVertex(aSpringVert[42].x, aSpringVert[42].y, aSpringVert[43].x, aSpringVert[43].y, aSpringVert[44].x, aSpringVert[44].y);
		p.bezierVertex(aSpringVert[45].x, aSpringVert[45].y, aSpringVert[46].x, aSpringVert[46].y, aSpringVert[47].x, aSpringVert[47].y);
		p.vertex(aSpringVert[48].x, aSpringVert[48].y);
		p.bezierVertex(aSpringVert[49].x, aSpringVert[49].y, aSpringVert[50].x, aSpringVert[50].y, aSpringVert[51].x, aSpringVert[51].y);
		p.bezierVertex(aSpringVert[52].x, aSpringVert[52].y, aSpringVert[53].x, aSpringVert[53].y, aSpringVert[54].x, aSpringVert[54].y);
		p.endShape(p.CLOSE);
		p.fill('#f4f4f4');
		p.beginShape();
		p.vertex(aCounterSpringVert[0].x, aCounterSpringVert[0].y);
		p.vertex(aCounterSpringVert[1].x, aCounterSpringVert[1].y);
		p.bezierVertex(aCounterSpringVert[2].x, aCounterSpringVert[2].y, aCounterSpringVert[3].x, aCounterSpringVert[3].y, aCounterSpringVert[4].x, aCounterSpringVert[4].y);
		p.bezierVertex(aCounterSpringVert[5].x, aCounterSpringVert[5].y, aCounterSpringVert[6].x, aCounterSpringVert[6].y, aCounterSpringVert[7].x, aCounterSpringVert[7].y);
		p.bezierVertex(aCounterSpringVert[8].x, aCounterSpringVert[8].y, aCounterSpringVert[9].x, aCounterSpringVert[9].y, aCounterSpringVert[10].x, aCounterSpringVert[10].y);
		p.bezierVertex(aCounterSpringVert[11].x, aCounterSpringVert[11].y, aCounterSpringVert[12].x, aCounterSpringVert[12].y, aCounterSpringVert[13].x, aCounterSpringVert[13].y);
		p.endShape(p.CLOSE);
	}

	function drawBasicN() {
		var fadeSpeed = 2;
		if (glyphOp < 255) glyphOp += fadeSpeed;

		// If framerate is slow, draw outline, else fill glyph
		if (_slow) {
			p.noFill();
			p.strokeWeight(1);
			p.stroke(35, 35, 35, glyphOp);
		} else {
			p.noStroke();
			p.fill(35, 35, 35, glyphOp);
		}

		p.beginShape();
		p.vertex(nSpringVert[0].x, nSpringVert[0].y);
		p.vertex(nSpringVert[1].x, nSpringVert[1].y);
		p.vertex(nSpringVert[2].x, nSpringVert[2].y);
		p.vertex(nSpringVert[3].x, nSpringVert[3].y);
		p.vertex(nSpringVert[4].x, nSpringVert[4].y);
		p.vertex(nSpringVert[5].x, nSpringVert[5].y);
		p.vertex(nSpringVert[6].x, nSpringVert[6].y);
		p.vertex(nSpringVert[7].x, nSpringVert[7].y);
		p.vertex(nSpringVert[8].x, nSpringVert[8].y);
		p.vertex(nSpringVert[9].x, nSpringVert[9].y);
		p.endShape(p.CLOSE);
	}

	function rayTest2() {
		var springVector = p.createVector(aSpringVert[5].x, aSpringVert[5].y);
		var lenOffset = springVector.dist(mouseVector);
		var lenMag = 150;
		var rayVector = p.createVector();
		rayVector.x = mouseVector.x + (mouseVector.x - springVector.x) / lenOffset * lenMag;
		rayVector.y = mouseVector.y + (mouseVector.y - springVector.y) / lenOffset * lenMag;

		p.ellipse(rayVector.x, rayVector.y, 10, 10);
		p.strokeWeight(1);
		p.stroke(0);
		p.line(springVector.x, springVector.y, rayVector.x, rayVector.y);
	}

	// Setup the dynamic arrays --> center them on the page
	function loadArrays(vertices) {
		// Always set the arrays to zero, in order to center properly
		aVerts.length = 0;
		aCounterVerts.length = 0;
		nVerts.length = 0;
		for (var i in vertices.a_vertex) {
			aVerts.push(p.createVector(vertices.a_vertex[i].x, vertices.a_vertex[i].y));
			aVerts[i].x *= scaleFactor;
			aVerts[i].x += glyphCenter.x;
			aVerts[i].y *= scaleFactor;
			aVerts[i].y += glyphCenter.y;
		}
		for (var j in vertices.counter_vertex) {
			aCounterVerts.push(p.createVector(vertices.counter_vertex[j].x, vertices.counter_vertex[j].y));
			aCounterVerts[j].x *= scaleFactor;
			aCounterVerts[j].x += glyphCenter.x;
			aCounterVerts[j].y *= scaleFactor;
			aCounterVerts[j].y += glyphCenter.y;
		}
		for (var k in vertices.n_vertex) {
			nVerts.push(p.createVector(vertices.n_vertex[k].x, vertices.n_vertex[k].y));
			nVerts[k].x *= nScaleFactor;
			nVerts[k].x += nOffset.x;
			nVerts[k].x *= scaleFactor;
			nVerts[k].x += glyphCenter.x;
			nVerts[k].y *= nScaleFactor;
			nVerts[k].y += nOffset.y;
			nVerts[k].y *= scaleFactor;
			nVerts[k].y += glyphCenter.y;
		}
	}

	function displayPhys() {
		for (var i in aVerts) {
			p.strokeWeight(scaleFactor);
			var aVertPos = p.createVector(aLockVert[i].x, aLockVert[i].y);
			var trans = p.map(aVertPos.dist(mousePos), 0, center.x / 2, 100, 0);
			var strokeCol = p.color(255, 0, 0, trans);
			p.fill(strokeCol);
			p.stroke(strokeCol);
			p.ellipse(aLockVert[i].x, aLockVert[i].y, scaleFactor, scaleFactor);
			p.line(aLockVert[i].x, aLockVert[i].y, aSpringVert[i].x, aSpringVert[i].y);
			aLockVert[i].display();
			aSpringVert[i].display();
		}
		// Display and draw line between the 'a counter' vertices
		for (var i in aCounterVerts) {
			p.strokeWeight(scaleFactor);
			var aVertPos = p.createVector(aCounterLockVert[i].x, aCounterLockVert[i].y);
			var trans = p.map(aVertPos.dist(mousePos), 0, center.x / 2, 100, 0);
			var strokeCol = p.color(255, 0, 0, trans);
			p.stroke(strokeCol);
			p.fill(strokeCol);
			p.ellipse(aCounterLockVert[i].x, aCounterLockVert[i].y, scaleFactor, scaleFactor);
			p.line(aCounterLockVert[i].x, aCounterLockVert[i].y, aCounterSpringVert[i].x, aCounterSpringVert[i].y);
			aCounterLockVert[i].display();
			aCounterSpringVert[i].display();
		}
		// Display and draw line between the 'N' vertices
		for (var i in nVerts) {
			p.strokeWeight(scaleFactor);
			var aVertPos = p.createVector(nLockVert[i].x, nLockVert[i].y);
			var trans = p.map(aVertPos.dist(mousePos), 0, center.x / 2, 100, 0);
			var strokeCol = p.color(255, 0, 0, trans);
			p.stroke(strokeCol);
			p.fill(strokeCol);
			p.ellipse(nLockVert[i].x, nLockVert[i].y, scaleFactor, scaleFactor);
			p.line(nLockVert[i].x, nLockVert[i].y, nSpringVert[i].x, nSpringVert[i].y);
			nLockVert[i].display();
			nSpringVert[i].display();
		}
	}

	function debugAttractors(loc, strength) {
		// Pass in location of attractor

		var maxDistance = p.width;
		var absStrength = p.abs(strength);
		var r = undefined,
		    g = undefined,
		    b = undefined; // color elements

		if (strength > 0) {
			// Blue -> Push | Red -> Pull
			r = 0;
			g = 0;
			b = 255;
		} else {
			r = 255;
			g = 0;
			b = 0;
		}

		for (var i in aVerts) {
			// 'a' Vertices
			var aVertPos = p.createVector(aLockVert[i].x, aLockVert[i].y);
			var opacity = p.map(absStrength, 0.015, 0.05, 0, 50); // Look to perlin for values
			var strokeCol = p.color(r, g, b, opacity);
			p.strokeWeight(p.map(aVertPos.dist(loc), 0, maxDistance, 1, 0));
			p.fill(strokeCol);
			p.stroke(strokeCol);
			p.line(loc.x, loc.y, aSpringVert[i].x, aSpringVert[i].y);
			aSpringVert[i].display();
		}

		for (var i in aCounterVerts) {
			// 'a-Counter' Vertices
			var aVertPos = p.createVector(aCounterLockVert[i].x, aCounterLockVert[i].y);
			var opacity = p.map(absStrength, 0.015, 0.05, 0, 50); // Look to perlin for values
			var strokeCol = p.color(r, g, b, opacity);
			p.strokeWeight(p.map(aVertPos.dist(loc), 0, maxDistance, 1, 0));
			p.stroke(strokeCol);
			p.fill(strokeCol);
			p.line(loc.x, loc.y, aCounterSpringVert[i].x, aCounterSpringVert[i].y);
			aCounterSpringVert[i].display();
		}

		for (var i in nVerts) {
			// 'N' vertices
			var aVertPos = p.createVector(nLockVert[i].x, nLockVert[i].y);
			var opacity = p.map(absStrength, 0.015, 0.05, 0, 50); // Look to perlin for values
			var strokeCol = p.color(r, g, b, opacity);
			p.strokeWeight(p.map(aVertPos.dist(loc), 0, maxDistance, 1, 0));
			p.stroke(strokeCol);
			p.fill(strokeCol);
			p.line(loc.x, loc.y, nSpringVert[i].x, nSpringVert[i].y);
			nSpringVert[i].display();
		}
	}

	function displayPhys1(x, y, alphaOpa1) {
		p.strokeWeight(scaleFactor);
		var locConverge = p.createVector(x, y);
		for (var i in aVerts) {
			var aVertPos = p.createVector(aSpringVert[i].x, aSpringVert[i].y);
			var trans = p.map(aVertPos.dist(locConverge), 0, center.x, 100, 0);
			var strokeCol = p.color(255, 0, 0, trans);
			p.fill(strokeCol);
			p.stroke(strokeCol);
			p.ellipse(aSpringVert[i].x, aSpringVert[i].y, scaleFactor, scaleFactor);
			p.line(aSpringVert[i].x, aSpringVert[i].y, locConverge.x, locConverge.y);
		}
		// Display and draw line between the 'a counter' vertices
		for (var i in aCounterVerts) {
			p.strokeWeight(scaleFactor);
			var aVertPos = p.createVector(aCounterSpringVert[i].x, aCounterSpringVert[i].y);
			var trans = p.map(aVertPos.dist(locConverge), 0, center.x, 100, 0);
			var strokeCol = p.color(255, 0, 0, trans);
			p.stroke(strokeCol);
			p.fill(strokeCol);
			p.ellipse(aCounterSpringVert[i].x, aCounterSpringVert[i].y, scaleFactor, scaleFactor);
			p.line(locConverge.x, locConverge.y, aCounterSpringVert[i].x, aCounterSpringVert[i].y);
		}
		// Display and draw line between the 'N' vertices
		for (var i in nVerts) {
			p.strokeWeight(scaleFactor);
			var aVertPos = p.createVector(nSpringVert[i].x, nSpringVert[i].y);
			var trans = p.map(aVertPos.dist(locConverge), 0, center.x, 100, 0);
			var strokeCol = p.color(255, 0, 0, trans);
			p.stroke(strokeCol);
			p.fill(strokeCol);
			p.ellipse(nSpringVert[i].x, nSpringVert[i].y, scaleFactor, scaleFactor);
			p.line(locConverge.x, locConverge.y, nSpringVert[i].x, nSpringVert[i].y);
		}
	}

	function physInit() {

		// Set up Physics environment
		physics = new toxi.physics2d.VerletPhysics2D(); // Initialize the physics
		physics.setDrag(0.01);
		gravityStrength = new toxi.geom.Vec2D(0, 0.5);
		gravity = new toxi.physics2d.behaviors.GravityBehavior(gravityStrength); // Set up Gravity
		physics.addBehavior(gravity);

		// Set the world's bounding box
		physics.setWorldBounds(new toxi.geom.Rect(0, 0, p.width * 1.25, p.height * 1.25));

		var springStrength = 0.00035,
		    springLength = 0.05;

		// Make our ToxiParticles for 'a'
		for (var i in aVerts) {
			aLockVert.push(new Particle({
				position: new toxi.geom.Vec2D(aVerts[i].x, aVerts[i].y),
				p: p
			}));
			aLockVert[i].lock();
			aSpringVert.push(new Particle({
				position: new toxi.geom.Vec2D(aVerts[i].x, aVerts[i].y),
				p: p
			}));
			aSpringArr.push(new toxi.physics2d.VerletSpring2D(aLockVert[i], aSpringVert[i], springLength, springStrength));

			physics.addParticle(aLockVert[i]);
			physics.addParticle(aSpringVert[i]);
			physics.addSpring(aSpringArr[i]);
		}

		// Make our ToxiParticles for 'a counter'
		for (var i in aCounterVerts) {
			aCounterLockVert.push(new Particle({
				position: new toxi.geom.Vec2D(aCounterVerts[i].x, aCounterVerts[i].y),
				p: p
			}));

			aCounterLockVert[i].lock();

			aCounterSpringVert.push(new Particle({
				position: new toxi.geom.Vec2D(aCounterVerts[i].x, aCounterVerts[i].y),
				p: p
			}));

			aCounterSpringArr.push(new toxi.physics2d.VerletSpring2D(aCounterLockVert[i], aCounterSpringVert[i], springLength, springStrength));

			physics.addParticle(aCounterLockVert[i]);
			physics.addParticle(aCounterSpringVert[i]);
			physics.addSpring(aCounterSpringArr[i]);
		}

		// Make our ToxiParticles for 'N'
		for (var i in nVerts) {
			nLockVert.push(new Particle({
				position: new toxi.geom.Vec2D(nVerts[i].x, nVerts[i].y),
				p: p
			}));

			nLockVert[i].lock();

			nSpringVert.push(new Particle({
				position: new toxi.geom.Vec2D(nVerts[i].x, nVerts[i].y),
				p: p
			}));

			nSpringArr.push(new toxi.physics2d.VerletSpring2D(nLockVert[i], nSpringVert[i], springLength, springStrength));

			physics.addParticle(nLockVert[i]);
			physics.addParticle(nSpringVert[i]);
			physics.addSpring(nSpringArr[i]);
		}
	}

	function physInitMobile() {

		// Set up Physics environment
		physics = new toxi.physics2d.VerletPhysics2D(); // Initialize the physics
		physics.setDrag(0.01);
		gravityStrength = new toxi.geom.Vec2D(0, 0.5);
		gravity = new toxi.physics2d.behaviors.GravityBehavior(gravityStrength); // Set up Gravity
		physics.addBehavior(gravity);

		// Set the world's bounding box
		physics.setWorldBounds(new toxi.geom.Rect(0, 0, p.width * 1.25, p.height * 1.25));

		var springStrength = 0.00035,
		    springLength = 0.05;

		// ToxiParticle: Centroid
		glyph_obj.lock = new Particle({
			position: new toxi.geom.Vec2D(center.x, center.y),
			p: p
		});

		glyph_obj.lock.lock();

		glyph_obj.dynamic = new Particle({
			position: new toxi.geom.Vec2D(center.x, center.y),
			p: p
		});

		glyph_obj.spring = new toxi.physics2d.VerletSpring2D(glyph_obj.lock, glyph_obj.dynamic, springLength, springStrength);

		physics.addParticle(glyph_obj.lock);
		physics.addParticle(glyph_obj.dynamic);
		physics.addSpring(glyph_obj.spring);
	}

	// Reset the physics simulation
	function physEmpty() {
		if (aSpringArr.length == aVerts.length) {
			for (var i in aSpringArr) {
				physics.removeSpringElements(aSpringArr[i]);
			}

			aSpringArr.length = 0;
			aLockVert.length = 0;
			aSpringVert.length = 0;
		}
		if (aCounterSpringArr.length == aCounterVerts.length) {
			for (var i in aCounterSpringArr) {
				physics.removeSpringElements(aCounterSpringArr[i]);
			}

			aCounterSpringArr.length = 0;
			aCounterLockVert.length = 0;
			aCounterSpringVert.length = 0;
		}

		if (nSpringArr.length == nVerts.length) {
			for (var i in nSpringArr) {
				physics.removeSpringElements(nSpringArr[i]);
			}

			nSpringArr.length = 0;
			nLockVert.length = 0;
			nSpringVert.length = 0;
		}
	}

	function findCenter() {
		w = p.windowWidth;
		h = p.windowHeight;

		w < 450 && _options.mobile ? center.set(w / 2, h / 1.5) : center.set(w / 2, h / 2);

		var glyphCenterX = center.x - aCenterOffset.x;
		var glyphCenterY = center.y + aCenterOffset.y - 25;
		glyphCenter.set(glyphCenterX, glyphCenterY);
	}

	function centerGlyph(vertices) {
		var xArray = [];
		var yArray = [];
		var xArrayN = [];
		var yArrayN = [];

		for (var i in vertices.a_vertex) {
			xArray.push(vertices.a_vertex[i].x * scaleFactor);
		}for (var i in vertices.a_vertex) {
			yArray.push(vertices.a_vertex[i].y * scaleFactor);
		}for (var i in vertices.n_vertex) {
			xArrayN.push(vertices.n_vertex[i].x * scaleFactor * nScaleFactor);
		}for (var i in vertices.n_vertex) {
			yArrayN.push(vertices.n_vertex[i].y * scaleFactor * nScaleFactor);
		}var xMin = arrayMin(xArray);
		var yMin = arrayMin(yArray);
		var xMax = arrayMax(xArray);
		var yMax = arrayMax(yArray);
		var xMinN = arrayMin(xArrayN);
		var yMinN = arrayMin(yArrayN);
		var xMaxN = arrayMax(xArrayN);
		var yMaxN = arrayMax(yArrayN);

		var xCenter = (xMaxN + xMax - (xMinN + xMin)) / 2;
		var yCenter = (yMaxN + yMax - (yMinN + yMin)) / 2 - 75;

		aCenterOffset.set(xCenter, yCenter);
		return aCenterOffset;
	}

	//  Calculation Min/Max of any array

	function arrayMin(arr) {
		return arr.reduce(function (p, v) {
			return p < v ? p : v;
		});
	}

	function arrayMax(arr) {
		return arr.reduce(function (p, v) {
			return p > v ? p : v;
		});
	}

	// Scaling function

	function scaleFunc(w, h) {
		var dynamicScale = undefined;
		var scalar = w > h ? h : w;

		if (scalar < 450 && _options.mobile) {
			dynamicScale = 3; // Mobile Screen			
		} else if (scalar < 1000) {
				dynamicScale = 1.75; // Small Screen
			} else {
					dynamicScale = 2; // Big Screen
				}

		scaleFactor = scalar / (1920 / dynamicScale);
	}

	// FlowField Attractors
	// 2D distribution of attractors exerting force on the glyph
	var flowField = function flowField(r) {
		var field = [],
		    cols = undefined,
		    rows = undefined,
		    area_x = undefined,
		    area_y = undefined,
		    resolution = undefined,
		    pos = p.createVector();

		var zoff = 0;

		resolution = r;

		_initialize(); // Set up the Flow Field | Call this immediately

		function _initialize() {
			// Private | Intialize the field of attractors

			area_x = p.width * 0.6; // 60% of windowWidth
			area_y = p.height * 0.6; // 60% of windowWidth

			// Determine the number of columns and rows based on width and height
			cols = p.round(area_x / resolution);
			rows = p.round(area_y / resolution);

			// Remove previous behaviours | attractors from simulation
			if (field.length > 0) {
				field.forEach(function (attractor) {
					attractor.physics.removeBehavior(attractor.attractForce);
					physics.removeParticle(attractor);
				});
			}

			reset(); // Wipe out the array references

			for (var i = 0; i < cols; i++) {
				// X grid
				for (var j = 0; j < rows; j++) {
					// Y grid

					pos.x = i * resolution + area_x / 2.5; // 60% of windowWidth, but centered ~ 30%
					pos.y = j * resolution + area_y / 2.5; // 60% of windowHeight, but centered ~ 25%

					// Make our Attractor Objects
					field.push(new Attractor({
						physics: physics,
						position: new toxi.geom.Vec2D(pos.x, pos.y),
						location: new p5.Vector(pos.x, pos.y),
						radius: 24,
						range: p.width / 2,
						strength: 0,
						locked: true,
						p: p
					}));
				}
			}
		}

		function _step() {
			// Private | Update the noise field
			var xoff = 0;
			var index = 0; // c:
			for (var i = 0; i < cols; i++) {
				var yoff = 0;
				for (var j = 0; j < rows; j++) {
					var strength = p.map(p.noise(xoff, yoff, zoff), 0, 1, -0.05, 0.05 // Attract => Repel
					);
					field[index].attractForce.setStrength(strength); // Set Attractor strength
					field[index].strength = strength;
					field[index].display();
					yoff += 0.1;

					index++;
				}

				xoff += 0.1;
			}

			zoff += 0.005; // Animate by changing 3rd dimension of noise every frame
		}

		function _debug() {
			// Private | Update the noise field
			var xoff = 0;
			var index = 0; // c:
			for (var i = 0; i < cols; i++) {
				var yoff = 0;
				for (var j = 0; j < rows; j++) {
					var strength = p.map(p.noise(xoff, yoff, zoff), 0, 1, -0.05, 0.05 // Attract => Repel
					);
					field[index].attractForce.setStrength(strength); // Set Attractor strength
					field[index].strength = strength;
					field[index].display();
					yoff += 0.1;

					if (strength > 0.015 || strength < -0.015) {
						debugAttractors(field[index].location, field[index].strength); // Display the Flow-Field
					}

					index++;
				}

				xoff += 0.1;
			}

			zoff += 0.005; // Animate by changing 3rd dimension of noise every frame
		}

		function reset() {
			// Private | Reset
			field.length = 0; // Empty existing array
		}

		function _update() {
			if (field.length > 0) {
				return true;
				_step(); // if we exist, we do | step forward in time
			} else {
					return false;
				}
		}

		function _update_debug() {
			if (field.length > 0) {
				return true;
				_debug(); // if we exist, we do | step forward in time
			} else {
					return false;
				}
		}

		// Method calls
		return {
			initialize: function initialize() {
				_initialize();
			},
			step: function step() {
				_step();
			},
			debug: function debug() {
				_debug();
			},
			reset: function reset() {
				field.forEach(function (attractor) {
					attractor.attractForce.setStrength(0);
				});
			},
			update: function update() {
				_update();
			},
			update_debug: function update_debug() {
				_update_debug();
			},
			resize: function resize() {
				_initialize(); // Set up the Flow Field | Call on window.Resize()
			}
		};
	};

	var render = function render() {
		function _fluid() {
			// Update the attractor position, both touch & mouse events
			p.touchIsDown ? mousePos.set(p.touchX, p.touchY) : mousePos.set(p.mouseX, p.mouseY);

			nudgeAttractor.set(mousePos.x, mousePos.y);
		}

		function perlin() {
			_perlin.step();
		}

		function debug() {
			_perlin.debug();
		}

		// Method Calls
		return {
			fluid: function fluid() {
				_fluid();
			},
			perlin: function perlin() {
				_perlin.step();
			},
			debug: function debug() {
				_perlin.debug();
			},
			render: function render(mode) {
				if (mode === "perlin") {
					return perlin();
				} else if (mode === "debug") {
					return debug();
				} else {
					return _fluid();
				}
			}
		};
	};

	// A little too much interaction, if you ask me! Might be useful later
	p.mouseClicked = function () {
		physics.removeBehavior(gravity);
		// Use perlin noise to achieve a similar* gravity vector
		// xOff += 0.5;
		// Horizontal + Vertical leaping may be too much...
		// gravityStrength.x = p.noise(xOff) * 0.75;
		gravityStrength.y *= -1;
		gravity = new toxi.physics2d.behaviors.GravityBehavior(gravityStrength); // Re-initialize gravity
		physics.addBehavior(gravity);
		// prevent default | Which also shuts down non-p5 handlers!
		// return false;
	};

	function setRotation() {
		// If mobile, set the relative orientation of the gravity vector
		if (p.frameCount % 5 === 0) {
			// For the sake of batteries
			physics.removeBehavior(gravity);

			gravityStrength.y = p.map(p.rotationX, -180, 180, -0.5, 0.5); // For some Reason they are reversed
			gravityStrength.x = p.map(p.rotationY, -90, 90, -0.5, 0.5);

			gravity = new toxi.physics2d.behaviors.GravityBehavior(gravityStrength); // Re-initialize gravity

			physics.addBehavior(gravity);
		}
	}

	function motionBlur() {
		p.push();
		p.fill(255, 100);
		p.rect(0, 0, width, height);
		p.pop();
	}

	/*
 		jQuery listeners
 	*/

	// Deal with resize events
	window.onresize = function () {
		if (_options.mobile) {
			return;
		}

		var timer = undefined;

		clearTimeout(timer);

		$("#glyph").width(window.innerWidth).height(window.innerHeight);

		glyphOp = 0; // Fade glyph in each resize to avoid jumpiness

		windowResized();

		timer = setTimeout(function () {
			windowResized();
		}, 250);
	};

	// Web Lab interation states	
	// Check Radio.. Transmission..
	$("#fluid-radio, #perlin-radio, #debug-radio").change(function (e) {

		e.stopPropagation();
		e.preventDefault();

		if ($("#fluid-radio").is(":checked")) {
			// Fluid
			_renderMode = "fluid";
		} else if ($("#perlin-radio").is(":checked")) {
			// Perlin
			_renderMode = "perlin";
		} else if ($("#debug-radio").is(":checked")) {
			// Debug
			_renderMode = "debug";
		}
	});

	// Calculate displacement during scroll events
	// Can we make this only applicable when p5 is on screen?
	var scrollAccumulator = function scrollAccumulator() {
		var delta = 0,
		    prev_delta = 0,
		    acceleration = 0;

		function _accelerator(dy) {
			prev_delta = delta;
			delta = dy;

			acceleration = (delta - prev_delta) / 2; // Consider uniform update, given by accumulation
		}

		function _force2() {
			// Calculate our offset force (may have to invert)
			return p.map(acceleration, -200, 200, -10, 10);
		}

		// Affect physics sim directly
		function _gravitation(strength) {
			physics.removeBehavior(gravity);
			gravityStrength.y = strength;
			gravity = new toxi.physics2d.behaviors.GravityBehavior(gravityStrength); // Re-initialize gravity
			physics.addBehavior(gravity);
		}

		function _bounceFactory(dy) {
			_accelerator(dy); // Calculate acceleration

			if (acceleration > 1) {
				_gravitation(_force2()); // Return gravity back to normal
			} else {
					_gravitation(0.5); // Return gravity back to normal
				}
		}

		return { // Overly verbose, why not
			force: function force() {
				return _force2();
			},
			accelerator: function accelerator(dy) {
				return _accelerator(dy);
			},
			gravitation: function gravitation() {
				return _gravitation();
			},
			bounceFactory: function bounceFactory(dy) {
				return _bounceFactory(dy);
			}
		};
	};

	// Scroll Accumulator
	$(window).scroll(function () {
		if (_options.mobile) {
			return;
		}

		var scroll_top = $(window).scrollTop();
		if (scroll_top < p.height) {
			// We only care if it's happening around p5 environment
			_bounce.bounceFactory(scroll_top);
			_render = true;
		} else {
			_render = false;
		}
	});
};

// --------------------------------------
// Module Exports

module.exports.init = function () {
	var args = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	_options.mobile = args.mobile;
	_options.phone = args.phone;
	_options.tablet = args.tablet;

	_canvas = $.Deferred();

	return new p5(glyph); // Instantiate the entire P5 sketch
};

module.exports.canvas = function () {
	return _canvas;
};

},{"./attractor.js":7,"./data/verts.json":8,"./makeButton.js":9,"./particle.js":10,"jquery":18,"p5":21,"toxiclibsjs":119}],12:[function(require,module,exports){
// Alex Norton 2017
// Progress Bar Class

"use strict";

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var $ = require('jquery'),
    hammertime = require('hammerjs'),
    velocity = require('velocity-animate'),
    velocity_ui = require('velocity-ui-pack'),
    animation = require('./animation.js');

var ProgressBar = (function () {
    function ProgressBar(args) {
        _classCallCheck(this, ProgressBar);

        args = args || {};

        this.components = {
            "capsule": {
                "id": "progress-capsule",
                classList: ["endeavor-flex", "endeavor-flex-nowrap", "endeavor-flex-between", "endeavor-width-75-prcnt", "endeavor-center", "endeavor-flex-center", "endeavor-height-100-prcnt"],
                tagName: "div"
            },
            "progress": {
                "id": "progress-bar",
                classList: ["progress", "medium-bg-1", "endeavor-left-0", "endeavor-pos-abs", "endeavor-push-1", "header-hover-grow"],
                tagName: "div"
            },
            "progress_bg": {
                "id": "progress-bar-bg",
                classList: ["progress_bg", "medium-bg-1", "endeavor-left-0", "fsw", "endeavor-pos-abs", "header-hover-grow"],
                tagName: "div"
            },
            "section": {
                classList: ["endeavor-pos-abs", "section-pagination", "endeavor-flex-column", "endeavor-flex-justify-center", "endeavor-push-2"],
                tagName: "div"
            },
            "section_name": {
                classList: ["endeavor-text-center", "medium-text-1", "endeavor-transition-ease-250"],
                tagName: "h5"
            },
            "section_node_hit": {
                classList: ["endeavor-flex", "endeavor-flex-center", "node_hit", "endeavor-flex-self-center"],
                tagName: "div"
            },
            "section_node": {
                classList: ["node", "endeavor-flex-self-center", "medium-bg-1", "endeavor-transition-ease-250"],
                tagName: "div"
            }
        };

        this.container = args.container || document.getElementById("header");
        this.scrollContainer = args.scrollContainer || document.window;
        this.sections = args.sections || $(this.scrollContainer).find('.endeavor-process');
        this._t = args.t || 0;

        this.exist = true;
        this.sectionState = [];
        this.currentSection = { "name": undefined, "offset": 0, "visted": false };

        var _this = this;

        // Create Self
        var promise = new Promise(function (resolve, reject) {
            ;
            _this.create();
            _this.updateOffset();
            resolve();
        });

        promise.then(function () {
            return _this.fadeIn();
        })['catch'](function (reason) {
            return console.log('Handle rejected promise (' + reason + ') here.');
        });
    }

    _createClass(ProgressBar, [{
        key: 'create',

        // Create progress bar, append to container
        value: function create() {
            var _this = this;
            var components = _this.components;

            // Set up sectionMap
            $(_this.scrollContainer).find('.endeavor-process').each(function (i, value) {
                _this.sectionState.push({ "name": this.dataset.process, "offset": 0, "visited": false });
            });

            // Create DOM elements
            _this.capsule = document.createElement(components.capsule.tagName);
            _this.capsule.id = components.capsule.id;
            for (var i in components.capsule.classList) {
                _this.capsule.classList.add(components.capsule.classList[i]);
            }

            _this.progress = document.createElement(components.progress.tagName);
            _this.progress.id = components.progress.id;
            for (var i in components.progress.classList) {
                _this.progress.classList.add(components.progress.classList[i]);
            }

            _this.progress_bg = document.createElement(components.progress_bg.tagName);
            _this.progress_bg.id = components.progress_bg.id;
            for (var i in components.progress_bg.classList) {
                _this.progress_bg.classList.add(components.progress_bg.classList[i]);
            }

            // Add elements to DOM
            _this.container.appendChild(_this.capsule);
            _this.capsule.appendChild(_this.progress);
            _this.capsule.appendChild(_this.progress_bg);

            if (!_this.sections.length) {
                return;
            }

            _this.sections.map(function (i, value) {
                var section = document.createElement(components.section.tagName);
                section.dataset.section = value.dataset.process;
                for (var _i in components.section.classList) {
                    section.classList.add(components.section.classList[_i]);
                }

                var section_name = document.createElement(components.section_name.tagName);
                section_name.innerHTML = value.dataset.process;
                for (var _i2 in components.section_name.classList) {
                    section_name.classList.add(components.section_name.classList[_i2]);
                }

                var section_node = document.createElement(components.section_node.tagName);
                for (var _i3 in components.section_node.classList) {
                    section_node.classList.add(components.section_node.classList[_i3]);
                }

                var section_node_hit = document.createElement(components.section_node_hit.tagName);
                section_node_hit.addEventListener('click', function () {
                    _this.scrollTo(value.dataset.process);
                }, false);
                section_node_hit.dataset.section = value.dataset.process;
                for (var _i4 in components.section_node_hit.classList) {
                    section_node_hit.classList.add(components.section_node_hit.classList[_i4]);
                }

                // Add elements to DOM
                section_node_hit.appendChild(section_name);
                section_node_hit.appendChild(section_node);
                section.appendChild(section_node_hit);

                _this.capsule.appendChild(section);

                return section;
            });
        }
    }, {
        key: 'updateOffset',
        value: function updateOffset() {
            var _this = this;
            var height = 0;

            $(_this.scrollContainer).find('.endeavor-element').each(function (i, value) {
                var _this2 = this;

                height += $(this).outerHeight(true); // Include margins
                if ($(this).hasClass('endeavor-process')) {
                    _this.sectionState.find(function (element) {
                        return element.name === _this2.dataset.process;
                    }).offset = height;
                }
            });

            _this.sectionState.forEach(function (item, i) {
                item.offset /= height;
                var left = item.offset * 100 + "%";
                $(_this.capsule).find('.section-pagination')[i].style.left = left;
            });
        }
    }, {
        key: 'scrollTo',
        value: function scrollTo(target) {
            var _this = this;
            var scrollTarget = $(_this.scrollContainer).find("[data-process='" + target + "']");
            $(_this.scrollContainer).scrollTop(0); // Reset scroll
            $(scrollTarget).velocity("scroll", { duration: 0, offset: 788, container: $(_this.scrollContainer), easing: 'ease-in-out' }); // Scroll to next section (788 calculate offset)
        }

        // Update pagination active states
        // How to detect active change? -> current !== this.current; placeholder variable
    }, {
        key: 'setActiveSection',
        value: function setActiveSection() {
            var _this = this;

            $(_this.capsule).children().children().removeClass('section-pagination-active');

            _this.activeSection = $(_this.capsule).children().find("[data-section='" + _this.currentSection.name + "']");
            _this.activeSection.addClass('section-pagination-active');
        }

        // Update progress bar position wrt scroll state
        // Call this from <ScrollHandler>
    }, {
        key: 'update',
        value: function update(t) {
            var _this = this;
            var currentSection = {};

            _this._t = Math.min(Math.max(t, 0), 1); // Clamp _t [0, 1]

            _this.sectionState.forEach(function (item, i) {
                if (item.offset < _this._t) {
                    item.visited = true;
                    currentSection = item;

                    if (i < _this.sectionState.length - 1) {
                        _this.nextSection = _this.sectionState[i + 1];
                    }
                } else {
                    item.visited = false;
                }
            });

            if (currentSection !== _this.currentSection) {
                _this.currentSection = currentSection;
                if (_this.currentSection.name !== undefined) {
                    // Feels sort of hacky..
                    _this.setActiveSection(); // Update active section
                }
            }

            _this._t *= 100;
            _this.progress.style.width = _this._t + "%";
        }

        // Animate bar progress -> 0
    }, {
        key: 'reset',
        value: function reset() {
            var _this = this;

            return $.Velocity.animate($("#" + _this.progress.id), { width: 0 }, { duration: 500 }, "easeInSine").then(function (el) {
                return _this.destroy();
            })['catch'](function (reason) {
                console.log("Rejected because " + reason);
            });
        }

        // Call before Destroy
    }, {
        key: 'fadeOut',
        value: function fadeOut() {
            var _this = this;
            $("#" + _this.capsule.id).velocity("fadeOut", { duration: 500 });
        }

        // Call before rendering to DOM
    }, {
        key: 'fadeIn',
        value: function fadeIn() {
            var _this = this;
            $("#" + _this.capsule.id).velocity("fadeIn", { duration: 500, display: "flex" });
        }

        // Remove this instance of class from DOM
    }, {
        key: 'destroy',
        value: function destroy() {
            var _this = this;

            return $.Velocity.animate($("#" + _this.capsule.id), "fadeOut", { duration: 500 }).then(function (el) {
                // Remove container from DOM
                $(el).remove();
                // Destroy self
                _this = null;
            })['catch'](function (reason) {
                console.log("Rejected because " + reason);
            });
        }
    }, {
        key: 't',
        get: function get() {
            return this._t;
        },
        set: function set(t) {
            if (t < 0 || t > 1) throw new Error("ProgressBar expects normalized T values");
            this._t = t;
        }
    }]);

    return ProgressBar;
})();

module.exports = ProgressBar;

},{"./animation.js":1,"hammerjs":13,"jquery":18,"velocity-animate":189,"velocity-ui-pack":190}],13:[function(require,module,exports){
/*! Hammer.JS - v2.0.7 - 2016-04-22
 * http://hammerjs.github.io/
 *
 * Copyright (c) 2016 Jorik Tangelder;
 * Licensed under the MIT license */
(function(window, document, exportName, undefined) {
  'use strict';

var VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];
var TEST_ELEMENT = document.createElement('div');

var TYPE_FUNCTION = 'function';

var round = Math.round;
var abs = Math.abs;
var now = Date.now;

/**
 * set a timeout with a given scope
 * @param {Function} fn
 * @param {Number} timeout
 * @param {Object} context
 * @returns {number}
 */
function setTimeoutContext(fn, timeout, context) {
    return setTimeout(bindFn(fn, context), timeout);
}

/**
 * if the argument is an array, we want to execute the fn on each entry
 * if it aint an array we don't want to do a thing.
 * this is used by all the methods that accept a single and array argument.
 * @param {*|Array} arg
 * @param {String} fn
 * @param {Object} [context]
 * @returns {Boolean}
 */
function invokeArrayArg(arg, fn, context) {
    if (Array.isArray(arg)) {
        each(arg, context[fn], context);
        return true;
    }
    return false;
}

/**
 * walk objects and arrays
 * @param {Object} obj
 * @param {Function} iterator
 * @param {Object} context
 */
function each(obj, iterator, context) {
    var i;

    if (!obj) {
        return;
    }

    if (obj.forEach) {
        obj.forEach(iterator, context);
    } else if (obj.length !== undefined) {
        i = 0;
        while (i < obj.length) {
            iterator.call(context, obj[i], i, obj);
            i++;
        }
    } else {
        for (i in obj) {
            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);
        }
    }
}

/**
 * wrap a method with a deprecation warning and stack trace
 * @param {Function} method
 * @param {String} name
 * @param {String} message
 * @returns {Function} A new function wrapping the supplied method.
 */
function deprecate(method, name, message) {
    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\n' + message + ' AT \n';
    return function() {
        var e = new Error('get-stack-trace');
        var stack = e && e.stack ? e.stack.replace(/^[^\(]+?[\n$]/gm, '')
            .replace(/^\s+at\s+/gm, '')
            .replace(/^Object.<anonymous>\s*\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';

        var log = window.console && (window.console.warn || window.console.log);
        if (log) {
            log.call(window.console, deprecationMessage, stack);
        }
        return method.apply(this, arguments);
    };
}

/**
 * extend object.
 * means that properties in dest will be overwritten by the ones in src.
 * @param {Object} target
 * @param {...Object} objects_to_assign
 * @returns {Object} target
 */
var assign;
if (typeof Object.assign !== 'function') {
    assign = function assign(target) {
        if (target === undefined || target === null) {
            throw new TypeError('Cannot convert undefined or null to object');
        }

        var output = Object(target);
        for (var index = 1; index < arguments.length; index++) {
            var source = arguments[index];
            if (source !== undefined && source !== null) {
                for (var nextKey in source) {
                    if (source.hasOwnProperty(nextKey)) {
                        output[nextKey] = source[nextKey];
                    }
                }
            }
        }
        return output;
    };
} else {
    assign = Object.assign;
}

/**
 * extend object.
 * means that properties in dest will be overwritten by the ones in src.
 * @param {Object} dest
 * @param {Object} src
 * @param {Boolean} [merge=false]
 * @returns {Object} dest
 */
var extend = deprecate(function extend(dest, src, merge) {
    var keys = Object.keys(src);
    var i = 0;
    while (i < keys.length) {
        if (!merge || (merge && dest[keys[i]] === undefined)) {
            dest[keys[i]] = src[keys[i]];
        }
        i++;
    }
    return dest;
}, 'extend', 'Use `assign`.');

/**
 * merge the values from src in the dest.
 * means that properties that exist in dest will not be overwritten by src
 * @param {Object} dest
 * @param {Object} src
 * @returns {Object} dest
 */
var merge = deprecate(function merge(dest, src) {
    return extend(dest, src, true);
}, 'merge', 'Use `assign`.');

/**
 * simple class inheritance
 * @param {Function} child
 * @param {Function} base
 * @param {Object} [properties]
 */
function inherit(child, base, properties) {
    var baseP = base.prototype,
        childP;

    childP = child.prototype = Object.create(baseP);
    childP.constructor = child;
    childP._super = baseP;

    if (properties) {
        assign(childP, properties);
    }
}

/**
 * simple function bind
 * @param {Function} fn
 * @param {Object} context
 * @returns {Function}
 */
function bindFn(fn, context) {
    return function boundFn() {
        return fn.apply(context, arguments);
    };
}

/**
 * let a boolean value also be a function that must return a boolean
 * this first item in args will be used as the context
 * @param {Boolean|Function} val
 * @param {Array} [args]
 * @returns {Boolean}
 */
function boolOrFn(val, args) {
    if (typeof val == TYPE_FUNCTION) {
        return val.apply(args ? args[0] || undefined : undefined, args);
    }
    return val;
}

/**
 * use the val2 when val1 is undefined
 * @param {*} val1
 * @param {*} val2
 * @returns {*}
 */
function ifUndefined(val1, val2) {
    return (val1 === undefined) ? val2 : val1;
}

/**
 * addEventListener with multiple events at once
 * @param {EventTarget} target
 * @param {String} types
 * @param {Function} handler
 */
function addEventListeners(target, types, handler) {
    each(splitStr(types), function(type) {
        target.addEventListener(type, handler, false);
    });
}

/**
 * removeEventListener with multiple events at once
 * @param {EventTarget} target
 * @param {String} types
 * @param {Function} handler
 */
function removeEventListeners(target, types, handler) {
    each(splitStr(types), function(type) {
        target.removeEventListener(type, handler, false);
    });
}

/**
 * find if a node is in the given parent
 * @method hasParent
 * @param {HTMLElement} node
 * @param {HTMLElement} parent
 * @return {Boolean} found
 */
function hasParent(node, parent) {
    while (node) {
        if (node == parent) {
            return true;
        }
        node = node.parentNode;
    }
    return false;
}

/**
 * small indexOf wrapper
 * @param {String} str
 * @param {String} find
 * @returns {Boolean} found
 */
function inStr(str, find) {
    return str.indexOf(find) > -1;
}

/**
 * split string on whitespace
 * @param {String} str
 * @returns {Array} words
 */
function splitStr(str) {
    return str.trim().split(/\s+/g);
}

/**
 * find if a array contains the object using indexOf or a simple polyFill
 * @param {Array} src
 * @param {String} find
 * @param {String} [findByKey]
 * @return {Boolean|Number} false when not found, or the index
 */
function inArray(src, find, findByKey) {
    if (src.indexOf && !findByKey) {
        return src.indexOf(find);
    } else {
        var i = 0;
        while (i < src.length) {
            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {
                return i;
            }
            i++;
        }
        return -1;
    }
}

/**
 * convert array-like objects to real arrays
 * @param {Object} obj
 * @returns {Array}
 */
function toArray(obj) {
    return Array.prototype.slice.call(obj, 0);
}

/**
 * unique array with objects based on a key (like 'id') or just by the array's value
 * @param {Array} src [{id:1},{id:2},{id:1}]
 * @param {String} [key]
 * @param {Boolean} [sort=False]
 * @returns {Array} [{id:1},{id:2}]
 */
function uniqueArray(src, key, sort) {
    var results = [];
    var values = [];
    var i = 0;

    while (i < src.length) {
        var val = key ? src[i][key] : src[i];
        if (inArray(values, val) < 0) {
            results.push(src[i]);
        }
        values[i] = val;
        i++;
    }

    if (sort) {
        if (!key) {
            results = results.sort();
        } else {
            results = results.sort(function sortUniqueArray(a, b) {
                return a[key] > b[key];
            });
        }
    }

    return results;
}

/**
 * get the prefixed property
 * @param {Object} obj
 * @param {String} property
 * @returns {String|Undefined} prefixed
 */
function prefixed(obj, property) {
    var prefix, prop;
    var camelProp = property[0].toUpperCase() + property.slice(1);

    var i = 0;
    while (i < VENDOR_PREFIXES.length) {
        prefix = VENDOR_PREFIXES[i];
        prop = (prefix) ? prefix + camelProp : property;

        if (prop in obj) {
            return prop;
        }
        i++;
    }
    return undefined;
}

/**
 * get a unique id
 * @returns {number} uniqueId
 */
var _uniqueId = 1;
function uniqueId() {
    return _uniqueId++;
}

/**
 * get the window object of an element
 * @param {HTMLElement} element
 * @returns {DocumentView|Window}
 */
function getWindowForElement(element) {
    var doc = element.ownerDocument || element;
    return (doc.defaultView || doc.parentWindow || window);
}

var MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;

var SUPPORT_TOUCH = ('ontouchstart' in window);
var SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;
var SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);

var INPUT_TYPE_TOUCH = 'touch';
var INPUT_TYPE_PEN = 'pen';
var INPUT_TYPE_MOUSE = 'mouse';
var INPUT_TYPE_KINECT = 'kinect';

var COMPUTE_INTERVAL = 25;

var INPUT_START = 1;
var INPUT_MOVE = 2;
var INPUT_END = 4;
var INPUT_CANCEL = 8;

var DIRECTION_NONE = 1;
var DIRECTION_LEFT = 2;
var DIRECTION_RIGHT = 4;
var DIRECTION_UP = 8;
var DIRECTION_DOWN = 16;

var DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;
var DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;
var DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;

var PROPS_XY = ['x', 'y'];
var PROPS_CLIENT_XY = ['clientX', 'clientY'];

/**
 * create new input type manager
 * @param {Manager} manager
 * @param {Function} callback
 * @returns {Input}
 * @constructor
 */
function Input(manager, callback) {
    var self = this;
    this.manager = manager;
    this.callback = callback;
    this.element = manager.element;
    this.target = manager.options.inputTarget;

    // smaller wrapper around the handler, for the scope and the enabled state of the manager,
    // so when disabled the input events are completely bypassed.
    this.domHandler = function(ev) {
        if (boolOrFn(manager.options.enable, [manager])) {
            self.handler(ev);
        }
    };

    this.init();

}

Input.prototype = {
    /**
     * should handle the inputEvent data and trigger the callback
     * @virtual
     */
    handler: function() { },

    /**
     * bind the events
     */
    init: function() {
        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);
        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);
        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);
    },

    /**
     * unbind the events
     */
    destroy: function() {
        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);
        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);
        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);
    }
};

/**
 * create new input type manager
 * called by the Manager constructor
 * @param {Hammer} manager
 * @returns {Input}
 */
function createInputInstance(manager) {
    var Type;
    var inputClass = manager.options.inputClass;

    if (inputClass) {
        Type = inputClass;
    } else if (SUPPORT_POINTER_EVENTS) {
        Type = PointerEventInput;
    } else if (SUPPORT_ONLY_TOUCH) {
        Type = TouchInput;
    } else if (!SUPPORT_TOUCH) {
        Type = MouseInput;
    } else {
        Type = TouchMouseInput;
    }
    return new (Type)(manager, inputHandler);
}

/**
 * handle input events
 * @param {Manager} manager
 * @param {String} eventType
 * @param {Object} input
 */
function inputHandler(manager, eventType, input) {
    var pointersLen = input.pointers.length;
    var changedPointersLen = input.changedPointers.length;
    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));
    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));

    input.isFirst = !!isFirst;
    input.isFinal = !!isFinal;

    if (isFirst) {
        manager.session = {};
    }

    // source event is the normalized value of the domEvents
    // like 'touchstart, mouseup, pointerdown'
    input.eventType = eventType;

    // compute scale, rotation etc
    computeInputData(manager, input);

    // emit secret event
    manager.emit('hammer.input', input);

    manager.recognize(input);
    manager.session.prevInput = input;
}

/**
 * extend the data with some usable properties like scale, rotate, velocity etc
 * @param {Object} manager
 * @param {Object} input
 */
function computeInputData(manager, input) {
    var session = manager.session;
    var pointers = input.pointers;
    var pointersLength = pointers.length;

    // store the first input to calculate the distance and direction
    if (!session.firstInput) {
        session.firstInput = simpleCloneInputData(input);
    }

    // to compute scale and rotation we need to store the multiple touches
    if (pointersLength > 1 && !session.firstMultiple) {
        session.firstMultiple = simpleCloneInputData(input);
    } else if (pointersLength === 1) {
        session.firstMultiple = false;
    }

    var firstInput = session.firstInput;
    var firstMultiple = session.firstMultiple;
    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;

    var center = input.center = getCenter(pointers);
    input.timeStamp = now();
    input.deltaTime = input.timeStamp - firstInput.timeStamp;

    input.angle = getAngle(offsetCenter, center);
    input.distance = getDistance(offsetCenter, center);

    computeDeltaXY(session, input);
    input.offsetDirection = getDirection(input.deltaX, input.deltaY);

    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);
    input.overallVelocityX = overallVelocity.x;
    input.overallVelocityY = overallVelocity.y;
    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;

    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;
    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;

    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >
        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);

    computeIntervalInputData(session, input);

    // find the correct target
    var target = manager.element;
    if (hasParent(input.srcEvent.target, target)) {
        target = input.srcEvent.target;
    }
    input.target = target;
}

function computeDeltaXY(session, input) {
    var center = input.center;
    var offset = session.offsetDelta || {};
    var prevDelta = session.prevDelta || {};
    var prevInput = session.prevInput || {};

    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {
        prevDelta = session.prevDelta = {
            x: prevInput.deltaX || 0,
            y: prevInput.deltaY || 0
        };

        offset = session.offsetDelta = {
            x: center.x,
            y: center.y
        };
    }

    input.deltaX = prevDelta.x + (center.x - offset.x);
    input.deltaY = prevDelta.y + (center.y - offset.y);
}

/**
 * velocity is calculated every x ms
 * @param {Object} session
 * @param {Object} input
 */
function computeIntervalInputData(session, input) {
    var last = session.lastInterval || input,
        deltaTime = input.timeStamp - last.timeStamp,
        velocity, velocityX, velocityY, direction;

    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {
        var deltaX = input.deltaX - last.deltaX;
        var deltaY = input.deltaY - last.deltaY;

        var v = getVelocity(deltaTime, deltaX, deltaY);
        velocityX = v.x;
        velocityY = v.y;
        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;
        direction = getDirection(deltaX, deltaY);

        session.lastInterval = input;
    } else {
        // use latest velocity info if it doesn't overtake a minimum period
        velocity = last.velocity;
        velocityX = last.velocityX;
        velocityY = last.velocityY;
        direction = last.direction;
    }

    input.velocity = velocity;
    input.velocityX = velocityX;
    input.velocityY = velocityY;
    input.direction = direction;
}

/**
 * create a simple clone from the input used for storage of firstInput and firstMultiple
 * @param {Object} input
 * @returns {Object} clonedInputData
 */
function simpleCloneInputData(input) {
    // make a simple copy of the pointers because we will get a reference if we don't
    // we only need clientXY for the calculations
    var pointers = [];
    var i = 0;
    while (i < input.pointers.length) {
        pointers[i] = {
            clientX: round(input.pointers[i].clientX),
            clientY: round(input.pointers[i].clientY)
        };
        i++;
    }

    return {
        timeStamp: now(),
        pointers: pointers,
        center: getCenter(pointers),
        deltaX: input.deltaX,
        deltaY: input.deltaY
    };
}

/**
 * get the center of all the pointers
 * @param {Array} pointers
 * @return {Object} center contains `x` and `y` properties
 */
function getCenter(pointers) {
    var pointersLength = pointers.length;

    // no need to loop when only one touch
    if (pointersLength === 1) {
        return {
            x: round(pointers[0].clientX),
            y: round(pointers[0].clientY)
        };
    }

    var x = 0, y = 0, i = 0;
    while (i < pointersLength) {
        x += pointers[i].clientX;
        y += pointers[i].clientY;
        i++;
    }

    return {
        x: round(x / pointersLength),
        y: round(y / pointersLength)
    };
}

/**
 * calculate the velocity between two points. unit is in px per ms.
 * @param {Number} deltaTime
 * @param {Number} x
 * @param {Number} y
 * @return {Object} velocity `x` and `y`
 */
function getVelocity(deltaTime, x, y) {
    return {
        x: x / deltaTime || 0,
        y: y / deltaTime || 0
    };
}

/**
 * get the direction between two points
 * @param {Number} x
 * @param {Number} y
 * @return {Number} direction
 */
function getDirection(x, y) {
    if (x === y) {
        return DIRECTION_NONE;
    }

    if (abs(x) >= abs(y)) {
        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;
    }
    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;
}

/**
 * calculate the absolute distance between two points
 * @param {Object} p1 {x, y}
 * @param {Object} p2 {x, y}
 * @param {Array} [props] containing x and y keys
 * @return {Number} distance
 */
function getDistance(p1, p2, props) {
    if (!props) {
        props = PROPS_XY;
    }
    var x = p2[props[0]] - p1[props[0]],
        y = p2[props[1]] - p1[props[1]];

    return Math.sqrt((x * x) + (y * y));
}

/**
 * calculate the angle between two coordinates
 * @param {Object} p1
 * @param {Object} p2
 * @param {Array} [props] containing x and y keys
 * @return {Number} angle
 */
function getAngle(p1, p2, props) {
    if (!props) {
        props = PROPS_XY;
    }
    var x = p2[props[0]] - p1[props[0]],
        y = p2[props[1]] - p1[props[1]];
    return Math.atan2(y, x) * 180 / Math.PI;
}

/**
 * calculate the rotation degrees between two pointersets
 * @param {Array} start array of pointers
 * @param {Array} end array of pointers
 * @return {Number} rotation
 */
function getRotation(start, end) {
    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);
}

/**
 * calculate the scale factor between two pointersets
 * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out
 * @param {Array} start array of pointers
 * @param {Array} end array of pointers
 * @return {Number} scale
 */
function getScale(start, end) {
    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);
}

var MOUSE_INPUT_MAP = {
    mousedown: INPUT_START,
    mousemove: INPUT_MOVE,
    mouseup: INPUT_END
};

var MOUSE_ELEMENT_EVENTS = 'mousedown';
var MOUSE_WINDOW_EVENTS = 'mousemove mouseup';

/**
 * Mouse events input
 * @constructor
 * @extends Input
 */
function MouseInput() {
    this.evEl = MOUSE_ELEMENT_EVENTS;
    this.evWin = MOUSE_WINDOW_EVENTS;

    this.pressed = false; // mousedown state

    Input.apply(this, arguments);
}

inherit(MouseInput, Input, {
    /**
     * handle mouse events
     * @param {Object} ev
     */
    handler: function MEhandler(ev) {
        var eventType = MOUSE_INPUT_MAP[ev.type];

        // on start we want to have the left mouse button down
        if (eventType & INPUT_START && ev.button === 0) {
            this.pressed = true;
        }

        if (eventType & INPUT_MOVE && ev.which !== 1) {
            eventType = INPUT_END;
        }

        // mouse must be down
        if (!this.pressed) {
            return;
        }

        if (eventType & INPUT_END) {
            this.pressed = false;
        }

        this.callback(this.manager, eventType, {
            pointers: [ev],
            changedPointers: [ev],
            pointerType: INPUT_TYPE_MOUSE,
            srcEvent: ev
        });
    }
});

var POINTER_INPUT_MAP = {
    pointerdown: INPUT_START,
    pointermove: INPUT_MOVE,
    pointerup: INPUT_END,
    pointercancel: INPUT_CANCEL,
    pointerout: INPUT_CANCEL
};

// in IE10 the pointer types is defined as an enum
var IE10_POINTER_TYPE_ENUM = {
    2: INPUT_TYPE_TOUCH,
    3: INPUT_TYPE_PEN,
    4: INPUT_TYPE_MOUSE,
    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816
};

var POINTER_ELEMENT_EVENTS = 'pointerdown';
var POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';

// IE10 has prefixed support, and case-sensitive
if (window.MSPointerEvent && !window.PointerEvent) {
    POINTER_ELEMENT_EVENTS = 'MSPointerDown';
    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';
}

/**
 * Pointer events input
 * @constructor
 * @extends Input
 */
function PointerEventInput() {
    this.evEl = POINTER_ELEMENT_EVENTS;
    this.evWin = POINTER_WINDOW_EVENTS;

    Input.apply(this, arguments);

    this.store = (this.manager.session.pointerEvents = []);
}

inherit(PointerEventInput, Input, {
    /**
     * handle mouse events
     * @param {Object} ev
     */
    handler: function PEhandler(ev) {
        var store = this.store;
        var removePointer = false;

        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');
        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];
        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;

        var isTouch = (pointerType == INPUT_TYPE_TOUCH);

        // get index of the event in the store
        var storeIndex = inArray(store, ev.pointerId, 'pointerId');

        // start and mouse must be down
        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {
            if (storeIndex < 0) {
                store.push(ev);
                storeIndex = store.length - 1;
            }
        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {
            removePointer = true;
        }

        // it not found, so the pointer hasn't been down (so it's probably a hover)
        if (storeIndex < 0) {
            return;
        }

        // update the event in the store
        store[storeIndex] = ev;

        this.callback(this.manager, eventType, {
            pointers: store,
            changedPointers: [ev],
            pointerType: pointerType,
            srcEvent: ev
        });

        if (removePointer) {
            // remove from the store
            store.splice(storeIndex, 1);
        }
    }
});

var SINGLE_TOUCH_INPUT_MAP = {
    touchstart: INPUT_START,
    touchmove: INPUT_MOVE,
    touchend: INPUT_END,
    touchcancel: INPUT_CANCEL
};

var SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';
var SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';

/**
 * Touch events input
 * @constructor
 * @extends Input
 */
function SingleTouchInput() {
    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;
    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;
    this.started = false;

    Input.apply(this, arguments);
}

inherit(SingleTouchInput, Input, {
    handler: function TEhandler(ev) {
        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];

        // should we handle the touch events?
        if (type === INPUT_START) {
            this.started = true;
        }

        if (!this.started) {
            return;
        }

        var touches = normalizeSingleTouches.call(this, ev, type);

        // when done, reset the started state
        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {
            this.started = false;
        }

        this.callback(this.manager, type, {
            pointers: touches[0],
            changedPointers: touches[1],
            pointerType: INPUT_TYPE_TOUCH,
            srcEvent: ev
        });
    }
});

/**
 * @this {TouchInput}
 * @param {Object} ev
 * @param {Number} type flag
 * @returns {undefined|Array} [all, changed]
 */
function normalizeSingleTouches(ev, type) {
    var all = toArray(ev.touches);
    var changed = toArray(ev.changedTouches);

    if (type & (INPUT_END | INPUT_CANCEL)) {
        all = uniqueArray(all.concat(changed), 'identifier', true);
    }

    return [all, changed];
}

var TOUCH_INPUT_MAP = {
    touchstart: INPUT_START,
    touchmove: INPUT_MOVE,
    touchend: INPUT_END,
    touchcancel: INPUT_CANCEL
};

var TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';

/**
 * Multi-user touch events input
 * @constructor
 * @extends Input
 */
function TouchInput() {
    this.evTarget = TOUCH_TARGET_EVENTS;
    this.targetIds = {};

    Input.apply(this, arguments);
}

inherit(TouchInput, Input, {
    handler: function MTEhandler(ev) {
        var type = TOUCH_INPUT_MAP[ev.type];
        var touches = getTouches.call(this, ev, type);
        if (!touches) {
            return;
        }

        this.callback(this.manager, type, {
            pointers: touches[0],
            changedPointers: touches[1],
            pointerType: INPUT_TYPE_TOUCH,
            srcEvent: ev
        });
    }
});

/**
 * @this {TouchInput}
 * @param {Object} ev
 * @param {Number} type flag
 * @returns {undefined|Array} [all, changed]
 */
function getTouches(ev, type) {
    var allTouches = toArray(ev.touches);
    var targetIds = this.targetIds;

    // when there is only one touch, the process can be simplified
    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {
        targetIds[allTouches[0].identifier] = true;
        return [allTouches, allTouches];
    }

    var i,
        targetTouches,
        changedTouches = toArray(ev.changedTouches),
        changedTargetTouches = [],
        target = this.target;

    // get target touches from touches
    targetTouches = allTouches.filter(function(touch) {
        return hasParent(touch.target, target);
    });

    // collect touches
    if (type === INPUT_START) {
        i = 0;
        while (i < targetTouches.length) {
            targetIds[targetTouches[i].identifier] = true;
            i++;
        }
    }

    // filter changed touches to only contain touches that exist in the collected target ids
    i = 0;
    while (i < changedTouches.length) {
        if (targetIds[changedTouches[i].identifier]) {
            changedTargetTouches.push(changedTouches[i]);
        }

        // cleanup removed touches
        if (type & (INPUT_END | INPUT_CANCEL)) {
            delete targetIds[changedTouches[i].identifier];
        }
        i++;
    }

    if (!changedTargetTouches.length) {
        return;
    }

    return [
        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'
        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),
        changedTargetTouches
    ];
}

/**
 * Combined touch and mouse input
 *
 * Touch has a higher priority then mouse, and while touching no mouse events are allowed.
 * This because touch devices also emit mouse events while doing a touch.
 *
 * @constructor
 * @extends Input
 */

var DEDUP_TIMEOUT = 2500;
var DEDUP_DISTANCE = 25;

function TouchMouseInput() {
    Input.apply(this, arguments);

    var handler = bindFn(this.handler, this);
    this.touch = new TouchInput(this.manager, handler);
    this.mouse = new MouseInput(this.manager, handler);

    this.primaryTouch = null;
    this.lastTouches = [];
}

inherit(TouchMouseInput, Input, {
    /**
     * handle mouse and touch events
     * @param {Hammer} manager
     * @param {String} inputEvent
     * @param {Object} inputData
     */
    handler: function TMEhandler(manager, inputEvent, inputData) {
        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),
            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);

        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {
            return;
        }

        // when we're in a touch event, record touches to  de-dupe synthetic mouse event
        if (isTouch) {
            recordTouches.call(this, inputEvent, inputData);
        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {
            return;
        }

        this.callback(manager, inputEvent, inputData);
    },

    /**
     * remove the event listeners
     */
    destroy: function destroy() {
        this.touch.destroy();
        this.mouse.destroy();
    }
});

function recordTouches(eventType, eventData) {
    if (eventType & INPUT_START) {
        this.primaryTouch = eventData.changedPointers[0].identifier;
        setLastTouch.call(this, eventData);
    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {
        setLastTouch.call(this, eventData);
    }
}

function setLastTouch(eventData) {
    var touch = eventData.changedPointers[0];

    if (touch.identifier === this.primaryTouch) {
        var lastTouch = {x: touch.clientX, y: touch.clientY};
        this.lastTouches.push(lastTouch);
        var lts = this.lastTouches;
        var removeLastTouch = function() {
            var i = lts.indexOf(lastTouch);
            if (i > -1) {
                lts.splice(i, 1);
            }
        };
        setTimeout(removeLastTouch, DEDUP_TIMEOUT);
    }
}

function isSyntheticEvent(eventData) {
    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;
    for (var i = 0; i < this.lastTouches.length; i++) {
        var t = this.lastTouches[i];
        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);
        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {
            return true;
        }
    }
    return false;
}

var PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');
var NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;

// magical touchAction value
var TOUCH_ACTION_COMPUTE = 'compute';
var TOUCH_ACTION_AUTO = 'auto';
var TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented
var TOUCH_ACTION_NONE = 'none';
var TOUCH_ACTION_PAN_X = 'pan-x';
var TOUCH_ACTION_PAN_Y = 'pan-y';
var TOUCH_ACTION_MAP = getTouchActionProps();

/**
 * Touch Action
 * sets the touchAction property or uses the js alternative
 * @param {Manager} manager
 * @param {String} value
 * @constructor
 */
function TouchAction(manager, value) {
    this.manager = manager;
    this.set(value);
}

TouchAction.prototype = {
    /**
     * set the touchAction value on the element or enable the polyfill
     * @param {String} value
     */
    set: function(value) {
        // find out the touch-action by the event handlers
        if (value == TOUCH_ACTION_COMPUTE) {
            value = this.compute();
        }

        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {
            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;
        }
        this.actions = value.toLowerCase().trim();
    },

    /**
     * just re-set the touchAction value
     */
    update: function() {
        this.set(this.manager.options.touchAction);
    },

    /**
     * compute the value for the touchAction property based on the recognizer's settings
     * @returns {String} value
     */
    compute: function() {
        var actions = [];
        each(this.manager.recognizers, function(recognizer) {
            if (boolOrFn(recognizer.options.enable, [recognizer])) {
                actions = actions.concat(recognizer.getTouchAction());
            }
        });
        return cleanTouchActions(actions.join(' '));
    },

    /**
     * this method is called on each input cycle and provides the preventing of the browser behavior
     * @param {Object} input
     */
    preventDefaults: function(input) {
        var srcEvent = input.srcEvent;
        var direction = input.offsetDirection;

        // if the touch action did prevented once this session
        if (this.manager.session.prevented) {
            srcEvent.preventDefault();
            return;
        }

        var actions = this.actions;
        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];
        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];
        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];

        if (hasNone) {
            //do not prevent defaults if this is a tap gesture

            var isTapPointer = input.pointers.length === 1;
            var isTapMovement = input.distance < 2;
            var isTapTouchTime = input.deltaTime < 250;

            if (isTapPointer && isTapMovement && isTapTouchTime) {
                return;
            }
        }

        if (hasPanX && hasPanY) {
            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent
            return;
        }

        if (hasNone ||
            (hasPanY && direction & DIRECTION_HORIZONTAL) ||
            (hasPanX && direction & DIRECTION_VERTICAL)) {
            return this.preventSrc(srcEvent);
        }
    },

    /**
     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)
     * @param {Object} srcEvent
     */
    preventSrc: function(srcEvent) {
        this.manager.session.prevented = true;
        srcEvent.preventDefault();
    }
};

/**
 * when the touchActions are collected they are not a valid value, so we need to clean things up. *
 * @param {String} actions
 * @returns {*}
 */
function cleanTouchActions(actions) {
    // none
    if (inStr(actions, TOUCH_ACTION_NONE)) {
        return TOUCH_ACTION_NONE;
    }

    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);
    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);

    // if both pan-x and pan-y are set (different recognizers
    // for different directions, e.g. horizontal pan but vertical swipe?)
    // we need none (as otherwise with pan-x pan-y combined none of these
    // recognizers will work, since the browser would handle all panning
    if (hasPanX && hasPanY) {
        return TOUCH_ACTION_NONE;
    }

    // pan-x OR pan-y
    if (hasPanX || hasPanY) {
        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;
    }

    // manipulation
    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {
        return TOUCH_ACTION_MANIPULATION;
    }

    return TOUCH_ACTION_AUTO;
}

function getTouchActionProps() {
    if (!NATIVE_TOUCH_ACTION) {
        return false;
    }
    var touchMap = {};
    var cssSupports = window.CSS && window.CSS.supports;
    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {

        // If css.supports is not supported but there is native touch-action assume it supports
        // all values. This is the case for IE 10 and 11.
        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;
    });
    return touchMap;
}

/**
 * Recognizer flow explained; *
 * All recognizers have the initial state of POSSIBLE when a input session starts.
 * The definition of a input session is from the first input until the last input, with all it's movement in it. *
 * Example session for mouse-input: mousedown -> mousemove -> mouseup
 *
 * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed
 * which determines with state it should be.
 *
 * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to
 * POSSIBLE to give it another change on the next cycle.
 *
 *               Possible
 *                  |
 *            +-----+---------------+
 *            |                     |
 *      +-----+-----+               |
 *      |           |               |
 *   Failed      Cancelled          |
 *                          +-------+------+
 *                          |              |
 *                      Recognized       Began
 *                                         |
 *                                      Changed
 *                                         |
 *                                  Ended/Recognized
 */
var STATE_POSSIBLE = 1;
var STATE_BEGAN = 2;
var STATE_CHANGED = 4;
var STATE_ENDED = 8;
var STATE_RECOGNIZED = STATE_ENDED;
var STATE_CANCELLED = 16;
var STATE_FAILED = 32;

/**
 * Recognizer
 * Every recognizer needs to extend from this class.
 * @constructor
 * @param {Object} options
 */
function Recognizer(options) {
    this.options = assign({}, this.defaults, options || {});

    this.id = uniqueId();

    this.manager = null;

    // default is enable true
    this.options.enable = ifUndefined(this.options.enable, true);

    this.state = STATE_POSSIBLE;

    this.simultaneous = {};
    this.requireFail = [];
}

Recognizer.prototype = {
    /**
     * @virtual
     * @type {Object}
     */
    defaults: {},

    /**
     * set options
     * @param {Object} options
     * @return {Recognizer}
     */
    set: function(options) {
        assign(this.options, options);

        // also update the touchAction, in case something changed about the directions/enabled state
        this.manager && this.manager.touchAction.update();
        return this;
    },

    /**
     * recognize simultaneous with an other recognizer.
     * @param {Recognizer} otherRecognizer
     * @returns {Recognizer} this
     */
    recognizeWith: function(otherRecognizer) {
        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {
            return this;
        }

        var simultaneous = this.simultaneous;
        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
        if (!simultaneous[otherRecognizer.id]) {
            simultaneous[otherRecognizer.id] = otherRecognizer;
            otherRecognizer.recognizeWith(this);
        }
        return this;
    },

    /**
     * drop the simultaneous link. it doesnt remove the link on the other recognizer.
     * @param {Recognizer} otherRecognizer
     * @returns {Recognizer} this
     */
    dropRecognizeWith: function(otherRecognizer) {
        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {
            return this;
        }

        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
        delete this.simultaneous[otherRecognizer.id];
        return this;
    },

    /**
     * recognizer can only run when an other is failing
     * @param {Recognizer} otherRecognizer
     * @returns {Recognizer} this
     */
    requireFailure: function(otherRecognizer) {
        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {
            return this;
        }

        var requireFail = this.requireFail;
        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
        if (inArray(requireFail, otherRecognizer) === -1) {
            requireFail.push(otherRecognizer);
            otherRecognizer.requireFailure(this);
        }
        return this;
    },

    /**
     * drop the requireFailure link. it does not remove the link on the other recognizer.
     * @param {Recognizer} otherRecognizer
     * @returns {Recognizer} this
     */
    dropRequireFailure: function(otherRecognizer) {
        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {
            return this;
        }

        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
        var index = inArray(this.requireFail, otherRecognizer);
        if (index > -1) {
            this.requireFail.splice(index, 1);
        }
        return this;
    },

    /**
     * has require failures boolean
     * @returns {boolean}
     */
    hasRequireFailures: function() {
        return this.requireFail.length > 0;
    },

    /**
     * if the recognizer can recognize simultaneous with an other recognizer
     * @param {Recognizer} otherRecognizer
     * @returns {Boolean}
     */
    canRecognizeWith: function(otherRecognizer) {
        return !!this.simultaneous[otherRecognizer.id];
    },

    /**
     * You should use `tryEmit` instead of `emit` directly to check
     * that all the needed recognizers has failed before emitting.
     * @param {Object} input
     */
    emit: function(input) {
        var self = this;
        var state = this.state;

        function emit(event) {
            self.manager.emit(event, input);
        }

        // 'panstart' and 'panmove'
        if (state < STATE_ENDED) {
            emit(self.options.event + stateStr(state));
        }

        emit(self.options.event); // simple 'eventName' events

        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)
            emit(input.additionalEvent);
        }

        // panend and pancancel
        if (state >= STATE_ENDED) {
            emit(self.options.event + stateStr(state));
        }
    },

    /**
     * Check that all the require failure recognizers has failed,
     * if true, it emits a gesture event,
     * otherwise, setup the state to FAILED.
     * @param {Object} input
     */
    tryEmit: function(input) {
        if (this.canEmit()) {
            return this.emit(input);
        }
        // it's failing anyway
        this.state = STATE_FAILED;
    },

    /**
     * can we emit?
     * @returns {boolean}
     */
    canEmit: function() {
        var i = 0;
        while (i < this.requireFail.length) {
            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {
                return false;
            }
            i++;
        }
        return true;
    },

    /**
     * update the recognizer
     * @param {Object} inputData
     */
    recognize: function(inputData) {
        // make a new copy of the inputData
        // so we can change the inputData without messing up the other recognizers
        var inputDataClone = assign({}, inputData);

        // is is enabled and allow recognizing?
        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {
            this.reset();
            this.state = STATE_FAILED;
            return;
        }

        // reset when we've reached the end
        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {
            this.state = STATE_POSSIBLE;
        }

        this.state = this.process(inputDataClone);

        // the recognizer has recognized a gesture
        // so trigger an event
        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {
            this.tryEmit(inputDataClone);
        }
    },

    /**
     * return the state of the recognizer
     * the actual recognizing happens in this method
     * @virtual
     * @param {Object} inputData
     * @returns {Const} STATE
     */
    process: function(inputData) { }, // jshint ignore:line

    /**
     * return the preferred touch-action
     * @virtual
     * @returns {Array}
     */
    getTouchAction: function() { },

    /**
     * called when the gesture isn't allowed to recognize
     * like when another is being recognized or it is disabled
     * @virtual
     */
    reset: function() { }
};

/**
 * get a usable string, used as event postfix
 * @param {Const} state
 * @returns {String} state
 */
function stateStr(state) {
    if (state & STATE_CANCELLED) {
        return 'cancel';
    } else if (state & STATE_ENDED) {
        return 'end';
    } else if (state & STATE_CHANGED) {
        return 'move';
    } else if (state & STATE_BEGAN) {
        return 'start';
    }
    return '';
}

/**
 * direction cons to string
 * @param {Const} direction
 * @returns {String}
 */
function directionStr(direction) {
    if (direction == DIRECTION_DOWN) {
        return 'down';
    } else if (direction == DIRECTION_UP) {
        return 'up';
    } else if (direction == DIRECTION_LEFT) {
        return 'left';
    } else if (direction == DIRECTION_RIGHT) {
        return 'right';
    }
    return '';
}

/**
 * get a recognizer by name if it is bound to a manager
 * @param {Recognizer|String} otherRecognizer
 * @param {Recognizer} recognizer
 * @returns {Recognizer}
 */
function getRecognizerByNameIfManager(otherRecognizer, recognizer) {
    var manager = recognizer.manager;
    if (manager) {
        return manager.get(otherRecognizer);
    }
    return otherRecognizer;
}

/**
 * This recognizer is just used as a base for the simple attribute recognizers.
 * @constructor
 * @extends Recognizer
 */
function AttrRecognizer() {
    Recognizer.apply(this, arguments);
}

inherit(AttrRecognizer, Recognizer, {
    /**
     * @namespace
     * @memberof AttrRecognizer
     */
    defaults: {
        /**
         * @type {Number}
         * @default 1
         */
        pointers: 1
    },

    /**
     * Used to check if it the recognizer receives valid input, like input.distance > 10.
     * @memberof AttrRecognizer
     * @param {Object} input
     * @returns {Boolean} recognized
     */
    attrTest: function(input) {
        var optionPointers = this.options.pointers;
        return optionPointers === 0 || input.pointers.length === optionPointers;
    },

    /**
     * Process the input and return the state for the recognizer
     * @memberof AttrRecognizer
     * @param {Object} input
     * @returns {*} State
     */
    process: function(input) {
        var state = this.state;
        var eventType = input.eventType;

        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);
        var isValid = this.attrTest(input);

        // on cancel input and we've recognized before, return STATE_CANCELLED
        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {
            return state | STATE_CANCELLED;
        } else if (isRecognized || isValid) {
            if (eventType & INPUT_END) {
                return state | STATE_ENDED;
            } else if (!(state & STATE_BEGAN)) {
                return STATE_BEGAN;
            }
            return state | STATE_CHANGED;
        }
        return STATE_FAILED;
    }
});

/**
 * Pan
 * Recognized when the pointer is down and moved in the allowed direction.
 * @constructor
 * @extends AttrRecognizer
 */
function PanRecognizer() {
    AttrRecognizer.apply(this, arguments);

    this.pX = null;
    this.pY = null;
}

inherit(PanRecognizer, AttrRecognizer, {
    /**
     * @namespace
     * @memberof PanRecognizer
     */
    defaults: {
        event: 'pan',
        threshold: 10,
        pointers: 1,
        direction: DIRECTION_ALL
    },

    getTouchAction: function() {
        var direction = this.options.direction;
        var actions = [];
        if (direction & DIRECTION_HORIZONTAL) {
            actions.push(TOUCH_ACTION_PAN_Y);
        }
        if (direction & DIRECTION_VERTICAL) {
            actions.push(TOUCH_ACTION_PAN_X);
        }
        return actions;
    },

    directionTest: function(input) {
        var options = this.options;
        var hasMoved = true;
        var distance = input.distance;
        var direction = input.direction;
        var x = input.deltaX;
        var y = input.deltaY;

        // lock to axis?
        if (!(direction & options.direction)) {
            if (options.direction & DIRECTION_HORIZONTAL) {
                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;
                hasMoved = x != this.pX;
                distance = Math.abs(input.deltaX);
            } else {
                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;
                hasMoved = y != this.pY;
                distance = Math.abs(input.deltaY);
            }
        }
        input.direction = direction;
        return hasMoved && distance > options.threshold && direction & options.direction;
    },

    attrTest: function(input) {
        return AttrRecognizer.prototype.attrTest.call(this, input) &&
            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));
    },

    emit: function(input) {

        this.pX = input.deltaX;
        this.pY = input.deltaY;

        var direction = directionStr(input.direction);

        if (direction) {
            input.additionalEvent = this.options.event + direction;
        }
        this._super.emit.call(this, input);
    }
});

/**
 * Pinch
 * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).
 * @constructor
 * @extends AttrRecognizer
 */
function PinchRecognizer() {
    AttrRecognizer.apply(this, arguments);
}

inherit(PinchRecognizer, AttrRecognizer, {
    /**
     * @namespace
     * @memberof PinchRecognizer
     */
    defaults: {
        event: 'pinch',
        threshold: 0,
        pointers: 2
    },

    getTouchAction: function() {
        return [TOUCH_ACTION_NONE];
    },

    attrTest: function(input) {
        return this._super.attrTest.call(this, input) &&
            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);
    },

    emit: function(input) {
        if (input.scale !== 1) {
            var inOut = input.scale < 1 ? 'in' : 'out';
            input.additionalEvent = this.options.event + inOut;
        }
        this._super.emit.call(this, input);
    }
});

/**
 * Press
 * Recognized when the pointer is down for x ms without any movement.
 * @constructor
 * @extends Recognizer
 */
function PressRecognizer() {
    Recognizer.apply(this, arguments);

    this._timer = null;
    this._input = null;
}

inherit(PressRecognizer, Recognizer, {
    /**
     * @namespace
     * @memberof PressRecognizer
     */
    defaults: {
        event: 'press',
        pointers: 1,
        time: 251, // minimal time of the pointer to be pressed
        threshold: 9 // a minimal movement is ok, but keep it low
    },

    getTouchAction: function() {
        return [TOUCH_ACTION_AUTO];
    },

    process: function(input) {
        var options = this.options;
        var validPointers = input.pointers.length === options.pointers;
        var validMovement = input.distance < options.threshold;
        var validTime = input.deltaTime > options.time;

        this._input = input;

        // we only allow little movement
        // and we've reached an end event, so a tap is possible
        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {
            this.reset();
        } else if (input.eventType & INPUT_START) {
            this.reset();
            this._timer = setTimeoutContext(function() {
                this.state = STATE_RECOGNIZED;
                this.tryEmit();
            }, options.time, this);
        } else if (input.eventType & INPUT_END) {
            return STATE_RECOGNIZED;
        }
        return STATE_FAILED;
    },

    reset: function() {
        clearTimeout(this._timer);
    },

    emit: function(input) {
        if (this.state !== STATE_RECOGNIZED) {
            return;
        }

        if (input && (input.eventType & INPUT_END)) {
            this.manager.emit(this.options.event + 'up', input);
        } else {
            this._input.timeStamp = now();
            this.manager.emit(this.options.event, this._input);
        }
    }
});

/**
 * Rotate
 * Recognized when two or more pointer are moving in a circular motion.
 * @constructor
 * @extends AttrRecognizer
 */
function RotateRecognizer() {
    AttrRecognizer.apply(this, arguments);
}

inherit(RotateRecognizer, AttrRecognizer, {
    /**
     * @namespace
     * @memberof RotateRecognizer
     */
    defaults: {
        event: 'rotate',
        threshold: 0,
        pointers: 2
    },

    getTouchAction: function() {
        return [TOUCH_ACTION_NONE];
    },

    attrTest: function(input) {
        return this._super.attrTest.call(this, input) &&
            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);
    }
});

/**
 * Swipe
 * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.
 * @constructor
 * @extends AttrRecognizer
 */
function SwipeRecognizer() {
    AttrRecognizer.apply(this, arguments);
}

inherit(SwipeRecognizer, AttrRecognizer, {
    /**
     * @namespace
     * @memberof SwipeRecognizer
     */
    defaults: {
        event: 'swipe',
        threshold: 10,
        velocity: 0.3,
        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,
        pointers: 1
    },

    getTouchAction: function() {
        return PanRecognizer.prototype.getTouchAction.call(this);
    },

    attrTest: function(input) {
        var direction = this.options.direction;
        var velocity;

        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {
            velocity = input.overallVelocity;
        } else if (direction & DIRECTION_HORIZONTAL) {
            velocity = input.overallVelocityX;
        } else if (direction & DIRECTION_VERTICAL) {
            velocity = input.overallVelocityY;
        }

        return this._super.attrTest.call(this, input) &&
            direction & input.offsetDirection &&
            input.distance > this.options.threshold &&
            input.maxPointers == this.options.pointers &&
            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;
    },

    emit: function(input) {
        var direction = directionStr(input.offsetDirection);
        if (direction) {
            this.manager.emit(this.options.event + direction, input);
        }

        this.manager.emit(this.options.event, input);
    }
});

/**
 * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur
 * between the given interval and position. The delay option can be used to recognize multi-taps without firing
 * a single tap.
 *
 * The eventData from the emitted event contains the property `tapCount`, which contains the amount of
 * multi-taps being recognized.
 * @constructor
 * @extends Recognizer
 */
function TapRecognizer() {
    Recognizer.apply(this, arguments);

    // previous time and center,
    // used for tap counting
    this.pTime = false;
    this.pCenter = false;

    this._timer = null;
    this._input = null;
    this.count = 0;
}

inherit(TapRecognizer, Recognizer, {
    /**
     * @namespace
     * @memberof PinchRecognizer
     */
    defaults: {
        event: 'tap',
        pointers: 1,
        taps: 1,
        interval: 300, // max time between the multi-tap taps
        time: 250, // max time of the pointer to be down (like finger on the screen)
        threshold: 9, // a minimal movement is ok, but keep it low
        posThreshold: 10 // a multi-tap can be a bit off the initial position
    },

    getTouchAction: function() {
        return [TOUCH_ACTION_MANIPULATION];
    },

    process: function(input) {
        var options = this.options;

        var validPointers = input.pointers.length === options.pointers;
        var validMovement = input.distance < options.threshold;
        var validTouchTime = input.deltaTime < options.time;

        this.reset();

        if ((input.eventType & INPUT_START) && (this.count === 0)) {
            return this.failTimeout();
        }

        // we only allow little movement
        // and we've reached an end event, so a tap is possible
        if (validMovement && validTouchTime && validPointers) {
            if (input.eventType != INPUT_END) {
                return this.failTimeout();
            }

            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;
            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;

            this.pTime = input.timeStamp;
            this.pCenter = input.center;

            if (!validMultiTap || !validInterval) {
                this.count = 1;
            } else {
                this.count += 1;
            }

            this._input = input;

            // if tap count matches we have recognized it,
            // else it has began recognizing...
            var tapCount = this.count % options.taps;
            if (tapCount === 0) {
                // no failing requirements, immediately trigger the tap event
                // or wait as long as the multitap interval to trigger
                if (!this.hasRequireFailures()) {
                    return STATE_RECOGNIZED;
                } else {
                    this._timer = setTimeoutContext(function() {
                        this.state = STATE_RECOGNIZED;
                        this.tryEmit();
                    }, options.interval, this);
                    return STATE_BEGAN;
                }
            }
        }
        return STATE_FAILED;
    },

    failTimeout: function() {
        this._timer = setTimeoutContext(function() {
            this.state = STATE_FAILED;
        }, this.options.interval, this);
        return STATE_FAILED;
    },

    reset: function() {
        clearTimeout(this._timer);
    },

    emit: function() {
        if (this.state == STATE_RECOGNIZED) {
            this._input.tapCount = this.count;
            this.manager.emit(this.options.event, this._input);
        }
    }
});

/**
 * Simple way to create a manager with a default set of recognizers.
 * @param {HTMLElement} element
 * @param {Object} [options]
 * @constructor
 */
function Hammer(element, options) {
    options = options || {};
    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);
    return new Manager(element, options);
}

/**
 * @const {string}
 */
Hammer.VERSION = '2.0.7';

/**
 * default settings
 * @namespace
 */
Hammer.defaults = {
    /**
     * set if DOM events are being triggered.
     * But this is slower and unused by simple implementations, so disabled by default.
     * @type {Boolean}
     * @default false
     */
    domEvents: false,

    /**
     * The value for the touchAction property/fallback.
     * When set to `compute` it will magically set the correct value based on the added recognizers.
     * @type {String}
     * @default compute
     */
    touchAction: TOUCH_ACTION_COMPUTE,

    /**
     * @type {Boolean}
     * @default true
     */
    enable: true,

    /**
     * EXPERIMENTAL FEATURE -- can be removed/changed
     * Change the parent input target element.
     * If Null, then it is being set the to main element.
     * @type {Null|EventTarget}
     * @default null
     */
    inputTarget: null,

    /**
     * force an input class
     * @type {Null|Function}
     * @default null
     */
    inputClass: null,

    /**
     * Default recognizer setup when calling `Hammer()`
     * When creating a new Manager these will be skipped.
     * @type {Array}
     */
    preset: [
        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]
        [RotateRecognizer, {enable: false}],
        [PinchRecognizer, {enable: false}, ['rotate']],
        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],
        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],
        [TapRecognizer],
        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],
        [PressRecognizer]
    ],

    /**
     * Some CSS properties can be used to improve the working of Hammer.
     * Add them to this method and they will be set when creating a new Manager.
     * @namespace
     */
    cssProps: {
        /**
         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.
         * @type {String}
         * @default 'none'
         */
        userSelect: 'none',

        /**
         * Disable the Windows Phone grippers when pressing an element.
         * @type {String}
         * @default 'none'
         */
        touchSelect: 'none',

        /**
         * Disables the default callout shown when you touch and hold a touch target.
         * On iOS, when you touch and hold a touch target such as a link, Safari displays
         * a callout containing information about the link. This property allows you to disable that callout.
         * @type {String}
         * @default 'none'
         */
        touchCallout: 'none',

        /**
         * Specifies whether zooming is enabled. Used by IE10>
         * @type {String}
         * @default 'none'
         */
        contentZooming: 'none',

        /**
         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.
         * @type {String}
         * @default 'none'
         */
        userDrag: 'none',

        /**
         * Overrides the highlight color shown when the user taps a link or a JavaScript
         * clickable element in iOS. This property obeys the alpha value, if specified.
         * @type {String}
         * @default 'rgba(0,0,0,0)'
         */
        tapHighlightColor: 'rgba(0,0,0,0)'
    }
};

var STOP = 1;
var FORCED_STOP = 2;

/**
 * Manager
 * @param {HTMLElement} element
 * @param {Object} [options]
 * @constructor
 */
function Manager(element, options) {
    this.options = assign({}, Hammer.defaults, options || {});

    this.options.inputTarget = this.options.inputTarget || element;

    this.handlers = {};
    this.session = {};
    this.recognizers = [];
    this.oldCssProps = {};

    this.element = element;
    this.input = createInputInstance(this);
    this.touchAction = new TouchAction(this, this.options.touchAction);

    toggleCssProps(this, true);

    each(this.options.recognizers, function(item) {
        var recognizer = this.add(new (item[0])(item[1]));
        item[2] && recognizer.recognizeWith(item[2]);
        item[3] && recognizer.requireFailure(item[3]);
    }, this);
}

Manager.prototype = {
    /**
     * set options
     * @param {Object} options
     * @returns {Manager}
     */
    set: function(options) {
        assign(this.options, options);

        // Options that need a little more setup
        if (options.touchAction) {
            this.touchAction.update();
        }
        if (options.inputTarget) {
            // Clean up existing event listeners and reinitialize
            this.input.destroy();
            this.input.target = options.inputTarget;
            this.input.init();
        }
        return this;
    },

    /**
     * stop recognizing for this session.
     * This session will be discarded, when a new [input]start event is fired.
     * When forced, the recognizer cycle is stopped immediately.
     * @param {Boolean} [force]
     */
    stop: function(force) {
        this.session.stopped = force ? FORCED_STOP : STOP;
    },

    /**
     * run the recognizers!
     * called by the inputHandler function on every movement of the pointers (touches)
     * it walks through all the recognizers and tries to detect the gesture that is being made
     * @param {Object} inputData
     */
    recognize: function(inputData) {
        var session = this.session;
        if (session.stopped) {
            return;
        }

        // run the touch-action polyfill
        this.touchAction.preventDefaults(inputData);

        var recognizer;
        var recognizers = this.recognizers;

        // this holds the recognizer that is being recognized.
        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED
        // if no recognizer is detecting a thing, it is set to `null`
        var curRecognizer = session.curRecognizer;

        // reset when the last recognizer is recognized
        // or when we're in a new session
        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {
            curRecognizer = session.curRecognizer = null;
        }

        var i = 0;
        while (i < recognizers.length) {
            recognizer = recognizers[i];

            // find out if we are allowed try to recognize the input for this one.
            // 1.   allow if the session is NOT forced stopped (see the .stop() method)
            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one
            //      that is being recognized.
            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.
            //      this can be setup with the `recognizeWith()` method on the recognizer.
            if (session.stopped !== FORCED_STOP && ( // 1
                    !curRecognizer || recognizer == curRecognizer || // 2
                    recognizer.canRecognizeWith(curRecognizer))) { // 3
                recognizer.recognize(inputData);
            } else {
                recognizer.reset();
            }

            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the
            // current active recognizer. but only if we don't already have an active recognizer
            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {
                curRecognizer = session.curRecognizer = recognizer;
            }
            i++;
        }
    },

    /**
     * get a recognizer by its event name.
     * @param {Recognizer|String} recognizer
     * @returns {Recognizer|Null}
     */
    get: function(recognizer) {
        if (recognizer instanceof Recognizer) {
            return recognizer;
        }

        var recognizers = this.recognizers;
        for (var i = 0; i < recognizers.length; i++) {
            if (recognizers[i].options.event == recognizer) {
                return recognizers[i];
            }
        }
        return null;
    },

    /**
     * add a recognizer to the manager
     * existing recognizers with the same event name will be removed
     * @param {Recognizer} recognizer
     * @returns {Recognizer|Manager}
     */
    add: function(recognizer) {
        if (invokeArrayArg(recognizer, 'add', this)) {
            return this;
        }

        // remove existing
        var existing = this.get(recognizer.options.event);
        if (existing) {
            this.remove(existing);
        }

        this.recognizers.push(recognizer);
        recognizer.manager = this;

        this.touchAction.update();
        return recognizer;
    },

    /**
     * remove a recognizer by name or instance
     * @param {Recognizer|String} recognizer
     * @returns {Manager}
     */
    remove: function(recognizer) {
        if (invokeArrayArg(recognizer, 'remove', this)) {
            return this;
        }

        recognizer = this.get(recognizer);

        // let's make sure this recognizer exists
        if (recognizer) {
            var recognizers = this.recognizers;
            var index = inArray(recognizers, recognizer);

            if (index !== -1) {
                recognizers.splice(index, 1);
                this.touchAction.update();
            }
        }

        return this;
    },

    /**
     * bind event
     * @param {String} events
     * @param {Function} handler
     * @returns {EventEmitter} this
     */
    on: function(events, handler) {
        if (events === undefined) {
            return;
        }
        if (handler === undefined) {
            return;
        }

        var handlers = this.handlers;
        each(splitStr(events), function(event) {
            handlers[event] = handlers[event] || [];
            handlers[event].push(handler);
        });
        return this;
    },

    /**
     * unbind event, leave emit blank to remove all handlers
     * @param {String} events
     * @param {Function} [handler]
     * @returns {EventEmitter} this
     */
    off: function(events, handler) {
        if (events === undefined) {
            return;
        }

        var handlers = this.handlers;
        each(splitStr(events), function(event) {
            if (!handler) {
                delete handlers[event];
            } else {
                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);
            }
        });
        return this;
    },

    /**
     * emit event to the listeners
     * @param {String} event
     * @param {Object} data
     */
    emit: function(event, data) {
        // we also want to trigger dom events
        if (this.options.domEvents) {
            triggerDomEvent(event, data);
        }

        // no handlers, so skip it all
        var handlers = this.handlers[event] && this.handlers[event].slice();
        if (!handlers || !handlers.length) {
            return;
        }

        data.type = event;
        data.preventDefault = function() {
            data.srcEvent.preventDefault();
        };

        var i = 0;
        while (i < handlers.length) {
            handlers[i](data);
            i++;
        }
    },

    /**
     * destroy the manager and unbinds all events
     * it doesn't unbind dom events, that is the user own responsibility
     */
    destroy: function() {
        this.element && toggleCssProps(this, false);

        this.handlers = {};
        this.session = {};
        this.input.destroy();
        this.element = null;
    }
};

/**
 * add/remove the css properties as defined in manager.options.cssProps
 * @param {Manager} manager
 * @param {Boolean} add
 */
function toggleCssProps(manager, add) {
    var element = manager.element;
    if (!element.style) {
        return;
    }
    var prop;
    each(manager.options.cssProps, function(value, name) {
        prop = prefixed(element.style, name);
        if (add) {
            manager.oldCssProps[prop] = element.style[prop];
            element.style[prop] = value;
        } else {
            element.style[prop] = manager.oldCssProps[prop] || '';
        }
    });
    if (!add) {
        manager.oldCssProps = {};
    }
}

/**
 * trigger dom event
 * @param {String} event
 * @param {Object} data
 */
function triggerDomEvent(event, data) {
    var gestureEvent = document.createEvent('Event');
    gestureEvent.initEvent(event, true, true);
    gestureEvent.gesture = data;
    data.target.dispatchEvent(gestureEvent);
}

assign(Hammer, {
    INPUT_START: INPUT_START,
    INPUT_MOVE: INPUT_MOVE,
    INPUT_END: INPUT_END,
    INPUT_CANCEL: INPUT_CANCEL,

    STATE_POSSIBLE: STATE_POSSIBLE,
    STATE_BEGAN: STATE_BEGAN,
    STATE_CHANGED: STATE_CHANGED,
    STATE_ENDED: STATE_ENDED,
    STATE_RECOGNIZED: STATE_RECOGNIZED,
    STATE_CANCELLED: STATE_CANCELLED,
    STATE_FAILED: STATE_FAILED,

    DIRECTION_NONE: DIRECTION_NONE,
    DIRECTION_LEFT: DIRECTION_LEFT,
    DIRECTION_RIGHT: DIRECTION_RIGHT,
    DIRECTION_UP: DIRECTION_UP,
    DIRECTION_DOWN: DIRECTION_DOWN,
    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,
    DIRECTION_VERTICAL: DIRECTION_VERTICAL,
    DIRECTION_ALL: DIRECTION_ALL,

    Manager: Manager,
    Input: Input,
    TouchAction: TouchAction,

    TouchInput: TouchInput,
    MouseInput: MouseInput,
    PointerEventInput: PointerEventInput,
    TouchMouseInput: TouchMouseInput,
    SingleTouchInput: SingleTouchInput,

    Recognizer: Recognizer,
    AttrRecognizer: AttrRecognizer,
    Tap: TapRecognizer,
    Pan: PanRecognizer,
    Swipe: SwipeRecognizer,
    Pinch: PinchRecognizer,
    Rotate: RotateRecognizer,
    Press: PressRecognizer,

    on: addEventListeners,
    off: removeEventListeners,
    each: each,
    merge: merge,
    extend: extend,
    assign: assign,
    inherit: inherit,
    bindFn: bindFn,
    prefixed: prefixed
});

// this prevents errors when Hammer is loaded in the presence of an AMD
//  style loader but by script tag, not by the loader.
var freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line
freeGlobal.Hammer = Hammer;

if (typeof define === 'function' && define.amd) {
    define(function() {
        return Hammer;
    });
} else if (typeof module != 'undefined' && module.exports) {
    module.exports = Hammer;
} else {
    window[exportName] = Hammer;
}

})(window, document, 'Hammer');

},{}],14:[function(require,module,exports){
/**
 * @author  Mudit Ameta
 * @license https://github.com/zeusdeux/isInViewport/blob/master/license.md MIT
 */
(function($, window) {

  // polyfilling trim for ie < 9. sigh ;-;
  if (!String.prototype.hasOwnProperty('trim')) {
    String.prototype.trim = function() {
      return this.replace(/^\s*(.*?)\s*$/, '$1');
    };
  }


  // lets you chain any arbitrary function or an array of functions and returns a jquery object
  var run = function(args) {
    if (arguments.length === 1 && typeof args === 'function')
      args = [args];

    if (!(args instanceof Array))
      throw new SyntaxError('isInViewport: Argument(s) passed to .do/.run should be a function or an array of functions');

    for (var i = 0; i < args.length; i++) {
      if (typeof args[i] !== 'function') {
        console.warn('isInViewport: Argument(s) passed to .do/.run should be a function or an array of functions');
        console.warn('isInViewport: Ignoring non-function values in array and moving on');
        continue;
      }
      for (var j = 0; j < this.length; j++)
        args[i].call($(this[j]));
    }
    return this;
  };


  // do is a reserved word and hence using it as a property throws on some browsers
  // it is now aliased as $.fn.run
  // deprecate $.fn.do (2.3.0)
  $.fn['do'] = function(args) {
    console.warn('isInViewport: .do is deprecated as it causes issues in IE and some browsers since it\'s a reserved word. Use $.fn.run instead i.e., $(el).run(fn).');
    return run(args);
  };
  $.fn.run = run;


  // gets the width of the scrollbar
  function getScrollbarWidth(viewport) {
    var scrollBarWidth;

    // append a div that has 100% width to get true width of viewport
    var el = $('<div></div>').css({
      'width': '100%'
    });
    viewport.append(el);

    // subtract true width from the viewport width which is inclusive
    // of scrollbar by default
    scrollBarWidth = viewport.width() - el.width();

    // remove our element from DOM
    el.remove();
    return scrollBarWidth;
  }


  // Returns true if DOM element `element` is in viewport
  function isInViewport(element, options) {
    var boundingRect  = element.getBoundingClientRect();
    var top           = boundingRect.top;
    var bottom        = boundingRect.bottom;
    var left          = boundingRect.left;
    var right         = boundingRect.right;
    var settings      = $.extend({
      'tolerance': 0,
      'viewport': window
    }, options);
    var isVisibleFlag = false;
    var $viewport     = settings.viewport.jquery ? settings.viewport : $(settings.viewport);

    if (!$viewport.length) {
      console.warn('isInViewport: The viewport selector you have provided matches no element on page.');
      console.warn('isInViewport: Defaulting to viewport as window');
      $viewport = $(window);
    }

    var $viewportHeight = $viewport.height();
    var $viewportWidth  = $viewport.width();
    var typeofViewport  = $viewport[0].toString();

    // if the viewport is other than window recalculate the top,
    // bottom,left and right wrt the new viewport
    // the [object DOMWindow] check is for window object type in PhantomJS
    if ($viewport[0] !== window && typeofViewport !== '[object Window]' && typeofViewport !== '[object DOMWindow]') {
      // Use getBoundingClientRect() instead of $.Offset()
      // since the original top/bottom positions are calculated relative to browser viewport and not document
      var viewportRect = $viewport[0].getBoundingClientRect();

      // recalculate these relative to viewport
      top    = top - viewportRect.top;
      bottom = bottom - viewportRect.top;
      left   = left - viewportRect.left;
      right  = right - viewportRect.left;

      // get the scrollbar width from cache or calculate it
      isInViewport.scrollBarWidth = isInViewport.scrollBarWidth || getScrollbarWidth($viewport);

      // remove the width of the scrollbar from the viewport width
      $viewportWidth -= isInViewport.scrollBarWidth;
    }

    // handle falsy, non-number and non-integer tolerance value
    // same as checking using isNaN and then setting to 0
    // bitwise operators deserve some love too you know
    settings.tolerance = ~~Math.round(parseFloat(settings.tolerance));

    if (settings.tolerance < 0)
      settings.tolerance = $viewportHeight + settings.tolerance; // viewport height - tol

    // the element is NOT in viewport iff it is completely out of
    // viewport laterally or if it is completely out of the tolerance
    // region. Therefore, if it is partially in view then it is considered
    // to be in the viewport and hence true is returned. Because we have adjusted
    // the left/right positions relative to the viewport, we should check the
    // element's right against the viewport's 0 (left side), and the element's
    // left against the viewport's width to see if it is outside of the viewport.

    if (right <= 0 || left >= $viewportWidth)
      return isVisibleFlag;

    // if the element is bound to some tolerance
    isVisibleFlag = settings.tolerance ? top <= settings.tolerance && bottom >= settings.tolerance : bottom > 0 && top <= $viewportHeight;

    return isVisibleFlag;
  }


  // get the selector args from the args string proved by Sizzle
  var getSelectorArgs = function(argsString) {
    if (argsString) {
      var args = argsString.split(',');

      // when user only gives viewport and no tolerance
      if (args.length === 1 && isNaN(args[0])) {
        args[1] = args[0];
        args[0] = void 0;
      }

      return {
        tolerance: args[0] ? args[0].trim() : void 0,
        viewport: args[1] ? $(args[1].trim()) : void 0
      };
    }
    return {};
  };


  // expose isInViewport as a custom pseudo-selector
  $.extend($.expr[':'], {
    // if $.expr.createPseudo is available, use it
    'in-viewport': $.expr.createPseudo ?
      $.expr.createPseudo(function(argsString) {
        return function(currElement) {
          return isInViewport(currElement, getSelectorArgs(argsString));
        };
      }) :
    function(currObj, index, meta) {
      return isInViewport(currObj, getSelectorArgs(meta[3]));
    }
  });


  // expose isInViewport as a function too
  // this lets folks pass around actual objects as options (like custom viewport)
  // and doesn't tie 'em down to strings. It also prevents isInViewport from
  // having to look up and wrap the dom element corresponding to the viewport selector
  $.fn.isInViewport = function(options) {
    return this.filter(function(i, el) {
      return isInViewport(el, options);
    });
  };

})(jQuery, window);

},{}],15:[function(require,module,exports){
/**
 * isMobile.js v0.4.1
 *
 * A simple library to detect Apple phones and tablets,
 * Android phones and tablets, other mobile devices (like blackberry, mini-opera and windows phone),
 * and any kind of seven inch device, via user agent sniffing.
 *
 * @author: Kai Mallea (kmallea@gmail.com)
 *
 * @license: http://creativecommons.org/publicdomain/zero/1.0/
 */
(function (global) {

    var apple_phone         = /iPhone/i,
        apple_ipod          = /iPod/i,
        apple_tablet        = /iPad/i,
        android_phone       = /(?=.*\bAndroid\b)(?=.*\bMobile\b)/i, // Match 'Android' AND 'Mobile'
        android_tablet      = /Android/i,
        amazon_phone        = /(?=.*\bAndroid\b)(?=.*\bSD4930UR\b)/i,
        amazon_tablet       = /(?=.*\bAndroid\b)(?=.*\b(?:KFOT|KFTT|KFJWI|KFJWA|KFSOWI|KFTHWI|KFTHWA|KFAPWI|KFAPWA|KFARWI|KFASWI|KFSAWI|KFSAWA)\b)/i,
        windows_phone       = /Windows Phone/i,
        windows_tablet      = /(?=.*\bWindows\b)(?=.*\bARM\b)/i, // Match 'Windows' AND 'ARM'
        other_blackberry    = /BlackBerry/i,
        other_blackberry_10 = /BB10/i,
        other_opera         = /Opera Mini/i,
        other_chrome        = /(CriOS|Chrome)(?=.*\bMobile\b)/i,
        other_firefox       = /(?=.*\bFirefox\b)(?=.*\bMobile\b)/i, // Match 'Firefox' AND 'Mobile'
        seven_inch = new RegExp(
            '(?:' +         // Non-capturing group

            'Nexus 7' +     // Nexus 7

            '|' +           // OR

            'BNTV250' +     // B&N Nook Tablet 7 inch

            '|' +           // OR

            'Kindle Fire' + // Kindle Fire

            '|' +           // OR

            'Silk' +        // Kindle Fire, Silk Accelerated

            '|' +           // OR

            'GT-P1000' +    // Galaxy Tab 7 inch

            ')',            // End non-capturing group

            'i');           // Case-insensitive matching

    var match = function(regex, userAgent) {
        return regex.test(userAgent);
    };

    var IsMobileClass = function(userAgent) {
        var ua = userAgent || navigator.userAgent;

        // Facebook mobile app's integrated browser adds a bunch of strings that
        // match everything. Strip it out if it exists.
        var tmp = ua.split('[FBAN');
        if (typeof tmp[1] !== 'undefined') {
            ua = tmp[0];
        }

        // Twitter mobile app's integrated browser on iPad adds a "Twitter for
        // iPhone" string. Same probable happens on other tablet platforms.
        // This will confuse detection so strip it out if it exists.
        tmp = ua.split('Twitter');
        if (typeof tmp[1] !== 'undefined') {
            ua = tmp[0];
        }

        this.apple = {
            phone:  match(apple_phone, ua),
            ipod:   match(apple_ipod, ua),
            tablet: !match(apple_phone, ua) && match(apple_tablet, ua),
            device: match(apple_phone, ua) || match(apple_ipod, ua) || match(apple_tablet, ua)
        };
        this.amazon = {
            phone:  match(amazon_phone, ua),
            tablet: !match(amazon_phone, ua) && match(amazon_tablet, ua),
            device: match(amazon_phone, ua) || match(amazon_tablet, ua)
        };
        this.android = {
            phone:  match(amazon_phone, ua) || match(android_phone, ua),
            tablet: !match(amazon_phone, ua) && !match(android_phone, ua) && (match(amazon_tablet, ua) || match(android_tablet, ua)),
            device: match(amazon_phone, ua) || match(amazon_tablet, ua) || match(android_phone, ua) || match(android_tablet, ua)
        };
        this.windows = {
            phone:  match(windows_phone, ua),
            tablet: match(windows_tablet, ua),
            device: match(windows_phone, ua) || match(windows_tablet, ua)
        };
        this.other = {
            blackberry:   match(other_blackberry, ua),
            blackberry10: match(other_blackberry_10, ua),
            opera:        match(other_opera, ua),
            firefox:      match(other_firefox, ua),
            chrome:       match(other_chrome, ua),
            device:       match(other_blackberry, ua) || match(other_blackberry_10, ua) || match(other_opera, ua) || match(other_firefox, ua) || match(other_chrome, ua)
        };
        this.seven_inch = match(seven_inch, ua);
        this.any = this.apple.device || this.android.device || this.windows.device || this.other.device || this.seven_inch;

        // excludes 'other' devices and ipods, targeting touchscreen phones
        this.phone = this.apple.phone || this.android.phone || this.windows.phone;

        // excludes 7 inch devices, classifying as phone or tablet is left to the user
        this.tablet = this.apple.tablet || this.android.tablet || this.windows.tablet;

        if (typeof window === 'undefined') {
            return this;
        }
    };

    var instantiate = function() {
        var IM = new IsMobileClass();
        IM.Class = IsMobileClass;
        return IM;
    };

    if (typeof module !== 'undefined' && module.exports && typeof window === 'undefined') {
        //node
        module.exports = IsMobileClass;
    } else if (typeof module !== 'undefined' && module.exports && typeof window !== 'undefined') {
        //browserify
        module.exports = instantiate();
    } else if (typeof define === 'function' && define.amd) {
        //AMD
        define('isMobile', [], global.isMobile = instantiate());
    } else {
        global.isMobile = instantiate();
    }

})(this);

},{}],16:[function(require,module,exports){
(function(factory) {
    if (typeof define === 'function' && define.amd) {
        define(['jquery', 'hammerjs'], factory);
    } else if (typeof exports === 'object') {
        factory(require('jquery'), require('hammerjs'));
    } else {
        factory(jQuery, Hammer);
    }
}(function($, Hammer) {
    function hammerify(el, options) {
        var $el = $(el);
        if(!$el.data("hammer")) {
            $el.data("hammer", new Hammer($el[0], options));
        }
    }

    $.fn.hammer = function(options) {
        return this.each(function() {
            hammerify(this, options);
        });
    };

    // extend the emit method to also trigger jQuery events
    Hammer.Manager.prototype.emit = (function(originalEmit) {
        return function(type, data) {
            originalEmit.call(this, type, data);
            $(this.element).trigger({
                type: type,
                gesture: data
            });
        };
    })(Hammer.Manager.prototype.emit);
}));

},{"hammerjs":13,"jquery":17}],17:[function(require,module,exports){
/*!
 * jQuery JavaScript Library v2.1.4
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright 2005, 2014 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2015-04-28T16:01Z
 */

(function( global, factory ) {

	if ( typeof module === "object" && typeof module.exports === "object" ) {
		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
}(typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Support: Firefox 18+
// Can't be in strict mode, several libs including ASP.NET trace
// the stack via arguments.caller.callee and Firefox dies if
// you try to trace through "use strict" call chains. (#13335)
//

var arr = [];

var slice = arr.slice;

var concat = arr.concat;

var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var support = {};



var
	// Use the correct document accordingly with window argument (sandbox)
	document = window.document,

	version = "2.1.4",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {
		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	},

	// Support: Android<4.1
	// Make sure we trim BOM and NBSP
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

	// Matches dashed string for camelizing
	rmsPrefix = /^-ms-/,
	rdashAlpha = /-([\da-z])/gi,

	// Used by jQuery.camelCase as callback to replace()
	fcamelCase = function( all, letter ) {
		return letter.toUpperCase();
	};

jQuery.fn = jQuery.prototype = {
	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// Start with an empty selector
	selector: "",

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {
		return num != null ?

			// Return just the one element from the set
			( num < 0 ? this[ num + this.length ] : this[ num ] ) :

			// Return all the elements in a clean array
			slice.call( this );
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;
		ret.context = this.context;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	// (You can seed the arguments with an array of args, but this is
	// only used internally.)
	each: function( callback, args ) {
		return jQuery.each( this, callback, args );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map(this, function( elem, i ) {
			return callback.call( elem, i, elem );
		}));
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor(null);
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[0] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction(target) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {
		// Only deal with non-null/undefined values
		if ( (options = arguments[ i ]) != null ) {
			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {
					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && jQuery.isArray(src) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject(src) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend({
	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isFunction: function( obj ) {
		return jQuery.type(obj) === "function";
	},

	isArray: Array.isArray,

	isWindow: function( obj ) {
		return obj != null && obj === obj.window;
	},

	isNumeric: function( obj ) {
		// parseFloat NaNs numeric-cast false positives (null|true|false|"")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		// adding 1 corrects loss of precision from parseFloat (#15100)
		return !jQuery.isArray( obj ) && (obj - parseFloat( obj ) + 1) >= 0;
	},

	isPlainObject: function( obj ) {
		// Not plain objects:
		// - Any object or value whose internal [[Class]] property is not "[object Object]"
		// - DOM nodes
		// - window
		if ( jQuery.type( obj ) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
			return false;
		}

		if ( obj.constructor &&
				!hasOwn.call( obj.constructor.prototype, "isPrototypeOf" ) ) {
			return false;
		}

		// If the function hasn't returned already, we're confident that
		// |obj| is a plain object, created by {} or constructed with new Object
		return true;
	},

	isEmptyObject: function( obj ) {
		var name;
		for ( name in obj ) {
			return false;
		}
		return true;
	},

	type: function( obj ) {
		if ( obj == null ) {
			return obj + "";
		}
		// Support: Android<4.0, iOS<6 (functionish RegExp)
		return typeof obj === "object" || typeof obj === "function" ?
			class2type[ toString.call(obj) ] || "object" :
			typeof obj;
	},

	// Evaluates a script in a global context
	globalEval: function( code ) {
		var script,
			indirect = eval;

		code = jQuery.trim( code );

		if ( code ) {
			// If the code includes a valid, prologue position
			// strict mode pragma, execute code by injecting a
			// script tag into the document.
			if ( code.indexOf("use strict") === 1 ) {
				script = document.createElement("script");
				script.text = code;
				document.head.appendChild( script ).parentNode.removeChild( script );
			} else {
			// Otherwise, avoid the DOM node creation, insertion
			// and removal by using an indirect global eval
				indirect( code );
			}
		}
	},

	// Convert dashed to camelCase; used by the css and data modules
	// Support: IE9-11+
	// Microsoft forgot to hump their vendor prefix (#9572)
	camelCase: function( string ) {
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
	},

	// args is for internal usage only
	each: function( obj, callback, args ) {
		var value,
			i = 0,
			length = obj.length,
			isArray = isArraylike( obj );

		if ( args ) {
			if ( isArray ) {
				for ( ; i < length; i++ ) {
					value = callback.apply( obj[ i ], args );

					if ( value === false ) {
						break;
					}
				}
			} else {
				for ( i in obj ) {
					value = callback.apply( obj[ i ], args );

					if ( value === false ) {
						break;
					}
				}
			}

		// A special, fast, case for the most common use of each
		} else {
			if ( isArray ) {
				for ( ; i < length; i++ ) {
					value = callback.call( obj[ i ], i, obj[ i ] );

					if ( value === false ) {
						break;
					}
				}
			} else {
				for ( i in obj ) {
					value = callback.call( obj[ i ], i, obj[ i ] );

					if ( value === false ) {
						break;
					}
				}
			}
		}

		return obj;
	},

	// Support: Android<4.1
	trim: function( text ) {
		return text == null ?
			"" :
			( text + "" ).replace( rtrim, "" );
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArraylike( Object(arr) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var value,
			i = 0,
			length = elems.length,
			isArray = isArraylike( elems ),
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArray ) {
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// Bind a function to a context, optionally partially applying any
	// arguments.
	proxy: function( fn, context ) {
		var tmp, args, proxy;

		if ( typeof context === "string" ) {
			tmp = fn[ context ];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if ( !jQuery.isFunction( fn ) ) {
			return undefined;
		}

		// Simulated bind
		args = slice.call( arguments, 2 );
		proxy = function() {
			return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
		};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || jQuery.guid++;

		return proxy;
	},

	now: Date.now,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
});

// Populate the class2type map
jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
});

function isArraylike( obj ) {

	// Support: iOS 8.2 (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = "length" in obj && obj.length,
		type = jQuery.type( obj );

	if ( type === "function" || jQuery.isWindow( obj ) ) {
		return false;
	}

	if ( obj.nodeType === 1 && length ) {
		return true;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.2.0-pre
 * http://sizzlejs.com/
 *
 * Copyright 2008, 2014 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2014-12-16
 */
(function( window ) {

var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// General-purpose constants
	MAX_NEGATIVE = 1 << 31,

	// Instance methods
	hasOwn = ({}).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	push_native = arr.push,
	push = arr.push,
	slice = arr.slice,
	// Use a stripped-down indexOf as it's faster than native
	// http://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",
	// http://www.w3.org/TR/css3-syntax/#characters
	characterEncoding = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",

	// Loosely modeled on CSS identifier characters
	// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors
	// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = characterEncoding.replace( "w", "w#" ),

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + characterEncoding + ")(?:" + whitespace +
		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +
		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
		"*\\]",

	pseudos = ":(" + characterEncoding + ")(?:\\((" +
		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

	rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + characterEncoding + ")" ),
		"CLASS": new RegExp( "^\\.(" + characterEncoding + ")" ),
		"TAG": new RegExp( "^(" + characterEncoding.replace( "w", "w*" ) + ")" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,
	rescape = /'|\\/g,

	// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
	funescape = function( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox<24
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			high < 0 ?
				// BMP codepoint
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	};

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		(arr = slice.call( preferredDoc.childNodes )),
		preferredDoc.childNodes
	);
	// Support: Android<4.0
	// Detect silently failing push.apply
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			push_native.apply( target, slice.call(els) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;
			// Can't trust NodeList.length
			while ( (target[j++] = els[i++]) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var match, elem, m, nodeType,
		// QSA vars
		i, groups, old, nid, newContext, newSelector;

	if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
		setDocument( context );
	}

	context = context || document;
	results = results || [];
	nodeType = context.nodeType;

	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	if ( !seed && documentIsHTML ) {

		// Try to shortcut find operations when possible (e.g., not under DocumentFragment)
		if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {
			// Speed-up: Sizzle("#ID")
			if ( (m = match[1]) ) {
				if ( nodeType === 9 ) {
					elem = context.getElementById( m );
					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document (jQuery #6963)
					if ( elem && elem.parentNode ) {
						// Handle the case where IE, Opera, and Webkit return items
						// by name instead of ID
						if ( elem.id === m ) {
							results.push( elem );
							return results;
						}
					} else {
						return results;
					}
				} else {
					// Context is not a document
					if ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&
						contains( context, elem ) && elem.id === m ) {
						results.push( elem );
						return results;
					}
				}

			// Speed-up: Sizzle("TAG")
			} else if ( match[2] ) {
				push.apply( results, context.getElementsByTagName( selector ) );
				return results;

			// Speed-up: Sizzle(".CLASS")
			} else if ( (m = match[3]) && support.getElementsByClassName ) {
				push.apply( results, context.getElementsByClassName( m ) );
				return results;
			}
		}

		// QSA path
		if ( support.qsa && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {
			nid = old = expando;
			newContext = context;
			newSelector = nodeType !== 1 && selector;

			// qSA works strangely on Element-rooted queries
			// We can work around this by specifying an extra ID on the root
			// and working up from there (Thanks to Andrew Dupont for the technique)
			// IE 8 doesn't work on object elements
			if ( nodeType === 1 && context.nodeName.toLowerCase() !== "object" ) {
				groups = tokenize( selector );

				if ( (old = context.getAttribute("id")) ) {
					nid = old.replace( rescape, "\\$&" );
				} else {
					context.setAttribute( "id", nid );
				}
				nid = "[id='" + nid + "'] ";

				i = groups.length;
				while ( i-- ) {
					groups[i] = nid + toSelector( groups[i] );
				}
				newContext = rsibling.test( selector ) && testContext( context.parentNode ) || context;
				newSelector = groups.join(",");
			}

			if ( newSelector ) {
				try {
					push.apply( results,
						newContext.querySelectorAll( newSelector )
					);
					return results;
				} catch(qsaError) {
				} finally {
					if ( !old ) {
						context.removeAttribute("id");
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {Function(string, Object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {
		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {
			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return (cache[ key + " " ] = value);
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created div and expects a boolean result
 */
function assert( fn ) {
	var div = document.createElement("div");

	try {
		return !!fn( div );
	} catch (e) {
		return false;
	} finally {
		// Remove from its parent by default
		if ( div.parentNode ) {
			div.parentNode.removeChild( div );
		}
		// release memory in IE
		div = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split("|"),
		i = attrs.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[i] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			( ~b.sourceIndex || MAX_NEGATIVE ) -
			( ~a.sourceIndex || MAX_NEGATIVE );

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( (cur = cur.nextSibling) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, parent,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// If no document and documentElement is available, return
	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Set our document
	document = doc;
	docElem = doc.documentElement;
	parent = doc.defaultView;

	// Support: IE>8
	// If iframe document is assigned to "document" variable and if iframe has been reloaded,
	// IE will throw "permission denied" error when accessing "document" variable, see jQuery #13936
	// IE6-8 do not support the defaultView property so parent will be undefined
	if ( parent && parent !== parent.top ) {
		// IE11 does not have attachEvent, so all must suffer
		if ( parent.addEventListener ) {
			parent.addEventListener( "unload", unloadHandler, false );
		} else if ( parent.attachEvent ) {
			parent.attachEvent( "onunload", unloadHandler );
		}
	}

	/* Support tests
	---------------------------------------------------------------------- */
	documentIsHTML = !isXML( doc );

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert(function( div ) {
		div.className = "i";
		return !div.getAttribute("className");
	});

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert(function( div ) {
		div.appendChild( doc.createComment("") );
		return !div.getElementsByTagName("*").length;
	});

	// Support: IE<9
	support.getElementsByClassName = rnative.test( doc.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert(function( div ) {
		docElem.appendChild( div ).id = expando;
		return !doc.getElementsByName || !doc.getElementsByName( expando ).length;
	});

	// ID find and filter
	if ( support.getById ) {
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var m = context.getElementById( id );
				// Check parentNode to catch when Blackberry 4.6 returns
				// nodes that are no longer in the document #6963
				return m && m.parentNode ? [ m ] : [];
			}
		};
		Expr.filter["ID"] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute("id") === attrId;
			};
		};
	} else {
		// Support: IE6/7
		// getElementById is not reliable as a find shortcut
		delete Expr.find["ID"];

		Expr.filter["ID"] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");
				return node && node.value === attrId;
			};
		};
	}

	// Tag
	Expr.find["TAG"] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,
				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( (elem = results[i++]) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
		if ( documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See http://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( (support.qsa = rnative.test( doc.querySelectorAll )) ) {
		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( div ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// http://bugs.jquery.com/ticket/12359
			docElem.appendChild( div ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\f]' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( div.querySelectorAll("[msallowcapture^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !div.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.2+, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.7+
			if ( !div.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push("~=");
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !div.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibing-combinator selector` fails
			if ( !div.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push(".#.+[+~]");
			}
		});

		assert(function( div ) {
			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = doc.createElement("input");
			input.setAttribute( "type", "hidden" );
			div.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( div.querySelectorAll("[name=d]").length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( !div.querySelectorAll(":enabled").length ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Opera 10-11 does not throw on post-comma invalid pseudos
			div.querySelectorAll("*,:x");
			rbuggyQSA.push(",.*:");
		});
	}

	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector) )) ) {

		assert(function( div ) {
			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( div, "div" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( div, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		});
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully does not implement inclusive descendent
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			));
		} :
		function( a, b ) {
			if ( b ) {
				while ( (b = b.parentNode) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

			// Choose the first element that is related to our preferred document
			if ( a === doc || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
				return -1;
			}
			if ( b === doc || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {
		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {
			return a === doc ? -1 :
				b === doc ? 1 :
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( (cur = cur.parentNode) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( (cur = cur.parentNode) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[i] === bp[i] ) {
			i++;
		}

		return i ?
			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[i], bp[i] ) :

			// Otherwise nodes in our document sort first
			ap[i] === preferredDoc ? -1 :
			bp[i] === preferredDoc ? 1 :
			0;
	};

	return doc;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	// Make sure that attribute selectors are quoted
	expr = expr.replace( rattributeQuotes, "='$1']" );

	if ( support.matchesSelector && documentIsHTML &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||
					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch (e) {}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {
	// Set document vars if needed
	if ( ( context.ownerDocument || context ) !== document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],
		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			(val = elem.getAttributeNode(name)) && val.specified ?
				val.value :
				null;
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( (elem = results[i++]) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {
		// If no nodeType, this is expected to be an array
		while ( (node = elem[i++]) ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {
			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}
	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1].slice( 0, 3 ) === "nth" ) {
				// nth-* requires argument
				if ( !match[3] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

			// other types prohibit arguments
			} else if ( match[3] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[6] && match[2];

			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[3] ) {
				match[2] = match[4] || match[5] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&
				// Get excess from tokenize (recursively)
				(excess = tokenize( unquoted, true )) &&
				// advance to the next closing parenthesis
				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

				// excess is a negative index
				match[0] = match[0].slice( 0, excess );
				match[2] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() { return true; } :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, what, argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, context, xml ) {
					var cache, outerCache, node, diff, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( (node = node[ dir ]) ) {
									if ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) {
										return false;
									}
								}
								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {
							// Seek `elem` from a previously-cached index
							outerCache = parent[ expando ] || (parent[ expando ] = {});
							cache = outerCache[ type ] || [];
							nodeIndex = cache[0] === dirruns && cache[1];
							diff = cache[0] === dirruns && cache[2];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( (node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								(diff = nodeIndex = 0) || start.pop()) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									outerCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						// Use previously-cached element index if available
						} else if ( useCache && (cache = (elem[ expando ] || (elem[ expando ] = {}))[ type ]) && cache[0] === dirruns ) {
							diff = cache[1];

						// xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)
						} else {
							// Use the same loop as above to seek `elem` from the start
							while ( (node = ++nodeIndex && node && node[ dir ] ||
								(diff = nodeIndex = 0) || start.pop()) ) {

								if ( ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) && ++diff ) {
									// Cache the index of each encountered element
									if ( useCache ) {
										(node[ expando ] || (node[ expando ] = {}))[ type ] = [ dirruns, diff ];
									}

									if ( node === elem ) {
										break;
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		// Potentially complex pseudos
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					// Don't keep the element (issue #299)
					input[0] = null;
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {
			// lang value must be a valid identifier
			if ( !ridentifier.test(lang || "") ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( (elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
				return false;
			};
		}),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		// Boolean properties
		"enabled": function( elem ) {
			return elem.disabled === false;
		},

		"disabled": function( elem ) {
			return elem.disabled === true;
		},

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( (tokens = []) );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			matched = match.shift();
			tokens.push({
				value: matched,
				// Cast descendant combinators to space
				type: match[0].replace( rtrim, " " )
			});
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					type: type,
					matches: match
				});
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[i].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		checkNonElements = base && dir === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from dir caching
			if ( xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || (elem[ expando ] = {});
						if ( (oldCache = outerCache[ dir ]) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return (newCache[ 2 ] = oldCache[ 2 ]);
						} else {
							// Reuse newcache so results back-propagate to previous elements
							outerCache[ dir ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
								return true;
							}
						}
					}
				}
			}
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(
						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,
				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
				len = elems.length;

			if ( outermost ) {
				outermostContext = context !== document && context;
			}

			// Add elements passing elementMatchers directly to results
			// Keep `i` a string if there are no elements so `matchedCount` will be "00" below
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;
					while ( (matcher = elementMatchers[j++]) ) {
						if ( matcher( elem, context, xml ) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// Apply set filters to unmatched elements
			matchedCount += i;
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( (matcher = setMatchers[j++]) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( (selector = compiled.selector || selector) );

	results = results || [];

	// Try to minimize operations if there is no seed and only one group
	if ( match.length === 1 ) {

		// Take a shortcut and set the context if the root selector is an ID
		tokens = match[0] = match[0].slice( 0 );
		if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
				support.getById && context.nodeType === 9 && documentIsHTML &&
				Expr.relative[ tokens[1].type ] ) {

			context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[i];

			// Abort if we hit a combinator
			if ( Expr.relative[ (type = token.type) ] ) {
				break;
			}
			if ( (find = Expr.find[ type ]) ) {
				// Search, expanding context for leading sibling combinators
				if ( (seed = find(
					token.matches[0].replace( runescape, funescape ),
					rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
				)) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( div1 ) {
	// Should return 1, but returns 4 (following)
	return div1.compareDocumentPosition( document.createElement("div") ) & 1;
});

// Support: IE<8
// Prevent attribute/property "interpolation"
// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( div ) {
	div.innerHTML = "<a href='#'></a>";
	return div.firstChild.getAttribute("href") === "#" ;
}) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	});
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( div ) {
	div.innerHTML = "<input/>";
	div.firstChild.setAttribute( "value", "" );
	return div.firstChild.getAttribute( "value" ) === "";
}) ) {
	addHandle( "value", function( elem, name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	});
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( div ) {
	return div.getAttribute("disabled") == null;
}) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
					(val = elem.getAttributeNode( name )) && val.specified ?
					val.value :
				null;
		}
	});
}

return Sizzle;

})( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;
jQuery.expr[":"] = jQuery.expr.pseudos;
jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;



var rneedsContext = jQuery.expr.match.needsContext;

var rsingleTag = (/^<(\w+)\s*\/?>(?:<\/\1>|)$/);



var risSimple = /^.[^:#\[\.,]*$/;

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			/* jshint -W018 */
			return !!qualifier.call( elem, i, elem ) !== not;
		});

	}

	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		});

	}

	if ( typeof qualifier === "string" ) {
		if ( risSimple.test( qualifier ) ) {
			return jQuery.filter( qualifier, elements, not );
		}

		qualifier = jQuery.filter( qualifier, elements );
	}

	return jQuery.grep( elements, function( elem ) {
		return ( indexOf.call( qualifier, elem ) >= 0 ) !== not;
	});
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	return elems.length === 1 && elem.nodeType === 1 ?
		jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :
		jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
			return elem.nodeType === 1;
		}));
};

jQuery.fn.extend({
	find: function( selector ) {
		var i,
			len = this.length,
			ret = [],
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter(function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			}) );
		}

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		// Needed because $( selector, context ) becomes $( context ).find( selector )
		ret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );
		ret.selector = this.selector ? this.selector + " " + selector : selector;
		return ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow(this, selector || [], false) );
	},
	not: function( selector ) {
		return this.pushStack( winnow(this, selector || [], true) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
});


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,

	init = jQuery.fn.init = function( selector, context ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[0] === "<" && selector[ selector.length - 1 ] === ">" && selector.length >= 3 ) {
				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && (match[1] || !context) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[1] ) {
					context = context instanceof jQuery ? context[0] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[1],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {
							// Properties of context are called as methods if possible
							if ( jQuery.isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[2] );

					// Support: Blackberry 4.6
					// gEBID returns nodes no longer in the document (#6963)
					if ( elem && elem.parentNode ) {
						// Inject the element directly into the jQuery object
						this.length = 1;
						this[0] = elem;
					}

					this.context = document;
					this.selector = selector;
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || rootjQuery ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this.context = this[0] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return typeof rootjQuery.ready !== "undefined" ?
				rootjQuery.ready( selector ) :
				// Execute immediately if ready is not present
				selector( jQuery );
		}

		if ( selector.selector !== undefined ) {
			this.selector = selector.selector;
			this.context = selector.context;
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,
	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.extend({
	dir: function( elem, dir, until ) {
		var matched = [],
			truncate = until !== undefined;

		while ( (elem = elem[ dir ]) && elem.nodeType !== 9 ) {
			if ( elem.nodeType === 1 ) {
				if ( truncate && jQuery( elem ).is( until ) ) {
					break;
				}
				matched.push( elem );
			}
		}
		return matched;
	},

	sibling: function( n, elem ) {
		var matched = [];

		for ( ; n; n = n.nextSibling ) {
			if ( n.nodeType === 1 && n !== elem ) {
				matched.push( n );
			}
		}

		return matched;
	}
});

jQuery.fn.extend({
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter(function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[i] ) ) {
					return true;
				}
			}
		});
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			pos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?
				jQuery( selectors, context || this.context ) :
				0;

		for ( ; i < l; i++ ) {
			for ( cur = this[i]; cur && cur !== context; cur = cur.parentNode ) {
				// Always skip document fragments
				if ( cur.nodeType < 11 && (pos ?
					pos.index(cur) > -1 :

					// Don't pass non-elements to Sizzle
					cur.nodeType === 1 &&
						jQuery.find.matchesSelector(cur, selectors)) ) {

					matched.push( cur );
					break;
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.unique( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.unique(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter(selector)
		);
	}
});

function sibling( cur, dir ) {
	while ( (cur = cur[dir]) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each({
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return jQuery.dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return jQuery.dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return jQuery.dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return jQuery.sibling( elem.firstChild );
	},
	contents: function( elem ) {
		return elem.contentDocument || jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {
			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.unique( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
});
var rnotwhite = (/\S+/g);



// String to Object options format cache
var optionsCache = {};

// Convert String-formatted options into Object-formatted ones and store in cache
function createOptions( options ) {
	var object = optionsCache[ options ] = {};
	jQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	});
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		( optionsCache[ options ] || createOptions( options ) ) :
		jQuery.extend( {}, options );

	var // Last fire value (for non-forgettable lists)
		memory,
		// Flag to know if list was already fired
		fired,
		// Flag to know if list is currently firing
		firing,
		// First callback to fire (used internally by add and fireWith)
		firingStart,
		// End of the loop when firing
		firingLength,
		// Index of currently firing callback (modified by remove if needed)
		firingIndex,
		// Actual callback list
		list = [],
		// Stack of fire calls for repeatable lists
		stack = !options.once && [],
		// Fire callbacks
		fire = function( data ) {
			memory = options.memory && data;
			fired = true;
			firingIndex = firingStart || 0;
			firingStart = 0;
			firingLength = list.length;
			firing = true;
			for ( ; list && firingIndex < firingLength; firingIndex++ ) {
				if ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {
					memory = false; // To prevent further calls using add
					break;
				}
			}
			firing = false;
			if ( list ) {
				if ( stack ) {
					if ( stack.length ) {
						fire( stack.shift() );
					}
				} else if ( memory ) {
					list = [];
				} else {
					self.disable();
				}
			}
		},
		// Actual Callbacks object
		self = {
			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {
					// First, we save the current length
					var start = list.length;
					(function add( args ) {
						jQuery.each( args, function( _, arg ) {
							var type = jQuery.type( arg );
							if ( type === "function" ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && type !== "string" ) {
								// Inspect recursively
								add( arg );
							}
						});
					})( arguments );
					// Do we need to add the callbacks to the
					// current firing batch?
					if ( firing ) {
						firingLength = list.length;
					// With memory, if we're not firing then
					// we should call right away
					} else if ( memory ) {
						firingStart = start;
						fire( memory );
					}
				}
				return this;
			},
			// Remove a callback from the list
			remove: function() {
				if ( list ) {
					jQuery.each( arguments, function( _, arg ) {
						var index;
						while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
							list.splice( index, 1 );
							// Handle firing indexes
							if ( firing ) {
								if ( index <= firingLength ) {
									firingLength--;
								}
								if ( index <= firingIndex ) {
									firingIndex--;
								}
							}
						}
					});
				}
				return this;
			},
			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ? jQuery.inArray( fn, list ) > -1 : !!( list && list.length );
			},
			// Remove all callbacks from the list
			empty: function() {
				list = [];
				firingLength = 0;
				return this;
			},
			// Have the list do nothing anymore
			disable: function() {
				list = stack = memory = undefined;
				return this;
			},
			// Is it disabled?
			disabled: function() {
				return !list;
			},
			// Lock the list in its current state
			lock: function() {
				stack = undefined;
				if ( !memory ) {
					self.disable();
				}
				return this;
			},
			// Is it locked?
			locked: function() {
				return !stack;
			},
			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( list && ( !fired || stack ) ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					if ( firing ) {
						stack.push( args );
					} else {
						fire( args );
					}
				}
				return this;
			},
			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},
			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


jQuery.extend({

	Deferred: function( func ) {
		var tuples = [
				// action, add listener, listener list, final state
				[ "resolve", "done", jQuery.Callbacks("once memory"), "resolved" ],
				[ "reject", "fail", jQuery.Callbacks("once memory"), "rejected" ],
				[ "notify", "progress", jQuery.Callbacks("memory") ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				then: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;
					return jQuery.Deferred(function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {
							var fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];
							// deferred[ done | fail | progress ] for forwarding actions to newDefer
							deferred[ tuple[1] ](function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && jQuery.isFunction( returned.promise ) ) {
									returned.promise()
										.done( newDefer.resolve )
										.fail( newDefer.reject )
										.progress( newDefer.notify );
								} else {
									newDefer[ tuple[ 0 ] + "With" ]( this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments );
								}
							});
						});
						fns = null;
					}).promise();
				},
				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Keep pipe for back-compat
		promise.pipe = promise.then;

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 3 ];

			// promise[ done | fail | progress ] = list.add
			promise[ tuple[1] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(function() {
					// state = [ resolved | rejected ]
					state = stateString;

				// [ reject_list | resolve_list ].disable; progress_list.lock
				}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );
			}

			// deferred[ resolve | reject | notify ]
			deferred[ tuple[0] ] = function() {
				deferred[ tuple[0] + "With" ]( this === deferred ? promise : this, arguments );
				return this;
			};
			deferred[ tuple[0] + "With" ] = list.fireWith;
		});

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( subordinate /* , ..., subordinateN */ ) {
		var i = 0,
			resolveValues = slice.call( arguments ),
			length = resolveValues.length,

			// the count of uncompleted subordinates
			remaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,

			// the master Deferred. If resolveValues consist of only a single Deferred, just use that.
			deferred = remaining === 1 ? subordinate : jQuery.Deferred(),

			// Update function for both resolve and progress values
			updateFunc = function( i, contexts, values ) {
				return function( value ) {
					contexts[ i ] = this;
					values[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( values === progressValues ) {
						deferred.notifyWith( contexts, values );
					} else if ( !( --remaining ) ) {
						deferred.resolveWith( contexts, values );
					}
				};
			},

			progressValues, progressContexts, resolveContexts;

		// Add listeners to Deferred subordinates; treat others as resolved
		if ( length > 1 ) {
			progressValues = new Array( length );
			progressContexts = new Array( length );
			resolveContexts = new Array( length );
			for ( ; i < length; i++ ) {
				if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {
					resolveValues[ i ].promise()
						.done( updateFunc( i, resolveContexts, resolveValues ) )
						.fail( deferred.reject )
						.progress( updateFunc( i, progressContexts, progressValues ) );
				} else {
					--remaining;
				}
			}
		}

		// If we're not waiting on anything, resolve the master
		if ( !remaining ) {
			deferred.resolveWith( resolveContexts, resolveValues );
		}

		return deferred.promise();
	}
});


// The deferred used on DOM ready
var readyList;

jQuery.fn.ready = function( fn ) {
	// Add the callback
	jQuery.ready.promise().done( fn );

	return this;
};

jQuery.extend({
	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Hold (or release) the ready event
	holdReady: function( hold ) {
		if ( hold ) {
			jQuery.readyWait++;
		} else {
			jQuery.ready( true );
		}
	},

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );

		// Trigger any bound ready events
		if ( jQuery.fn.triggerHandler ) {
			jQuery( document ).triggerHandler( "ready" );
			jQuery( document ).off( "ready" );
		}
	}
});

/**
 * The ready event handler and self cleanup method
 */
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed, false );
	window.removeEventListener( "load", completed, false );
	jQuery.ready();
}

jQuery.ready.promise = function( obj ) {
	if ( !readyList ) {

		readyList = jQuery.Deferred();

		// Catch cases where $(document).ready() is called after the browser event has already occurred.
		// We once tried to use readyState "interactive" here, but it caused issues like the one
		// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15
		if ( document.readyState === "complete" ) {
			// Handle it asynchronously to allow scripts the opportunity to delay ready
			setTimeout( jQuery.ready );

		} else {

			// Use the handy event callback
			document.addEventListener( "DOMContentLoaded", completed, false );

			// A fallback to window.onload, that will always work
			window.addEventListener( "load", completed, false );
		}
	}
	return readyList.promise( obj );
};

// Kick off the DOM ready check even if the user does not
jQuery.ready.promise();




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = jQuery.access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( jQuery.type( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			jQuery.access( elems, fn, i, key[i], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !jQuery.isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {
			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );
			}
		}
	}

	return chainable ?
		elems :

		// Gets
		bulk ?
			fn.call( elems ) :
			len ? fn( elems[0], key ) : emptyGet;
};


/**
 * Determines whether an object can have data
 */
jQuery.acceptData = function( owner ) {
	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	/* jshint -W018 */
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};


function Data() {
	// Support: Android<4,
	// Old WebKit does not have Object.preventExtensions/freeze method,
	// return new empty object instead with no [[set]] accessor
	Object.defineProperty( this.cache = {}, 0, {
		get: function() {
			return {};
		}
	});

	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;
Data.accepts = jQuery.acceptData;

Data.prototype = {
	key: function( owner ) {
		// We can accept data for non-element nodes in modern browsers,
		// but we should not, see #8335.
		// Always return the key for a frozen object.
		if ( !Data.accepts( owner ) ) {
			return 0;
		}

		var descriptor = {},
			// Check if the owner object already has a cache key
			unlock = owner[ this.expando ];

		// If not, create one
		if ( !unlock ) {
			unlock = Data.uid++;

			// Secure it in a non-enumerable, non-writable property
			try {
				descriptor[ this.expando ] = { value: unlock };
				Object.defineProperties( owner, descriptor );

			// Support: Android<4
			// Fallback to a less secure definition
			} catch ( e ) {
				descriptor[ this.expando ] = unlock;
				jQuery.extend( owner, descriptor );
			}
		}

		// Ensure the cache object
		if ( !this.cache[ unlock ] ) {
			this.cache[ unlock ] = {};
		}

		return unlock;
	},
	set: function( owner, data, value ) {
		var prop,
			// There may be an unlock assigned to this node,
			// if there is no entry for this "owner", create one inline
			// and set the unlock as though an owner entry had always existed
			unlock = this.key( owner ),
			cache = this.cache[ unlock ];

		// Handle: [ owner, key, value ] args
		if ( typeof data === "string" ) {
			cache[ data ] = value;

		// Handle: [ owner, { properties } ] args
		} else {
			// Fresh assignments by object are shallow copied
			if ( jQuery.isEmptyObject( cache ) ) {
				jQuery.extend( this.cache[ unlock ], data );
			// Otherwise, copy the properties one-by-one to the cache object
			} else {
				for ( prop in data ) {
					cache[ prop ] = data[ prop ];
				}
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		// Either a valid cache is found, or will be created.
		// New caches will be created and the unlock returned,
		// allowing direct access to the newly created
		// empty data object. A valid owner object must be provided.
		var cache = this.cache[ this.key( owner ) ];

		return key === undefined ?
			cache : cache[ key ];
	},
	access: function( owner, key, value ) {
		var stored;
		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				((key && typeof key === "string") && value === undefined) ) {

			stored = this.get( owner, key );

			return stored !== undefined ?
				stored : this.get( owner, jQuery.camelCase(key) );
		}

		// [*]When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i, name, camel,
			unlock = this.key( owner ),
			cache = this.cache[ unlock ];

		if ( key === undefined ) {
			this.cache[ unlock ] = {};

		} else {
			// Support array or space separated string of keys
			if ( jQuery.isArray( key ) ) {
				// If "name" is an array of keys...
				// When data is initially created, via ("key", "val") signature,
				// keys will be converted to camelCase.
				// Since there is no way to tell _how_ a key was added, remove
				// both plain key and camelCase key. #12786
				// This will only penalize the array argument path.
				name = key.concat( key.map( jQuery.camelCase ) );
			} else {
				camel = jQuery.camelCase( key );
				// Try the string as a key before any manipulation
				if ( key in cache ) {
					name = [ key, camel ];
				} else {
					// If a key with the spaces exists, use it.
					// Otherwise, create an array by matching non-whitespace
					name = camel;
					name = name in cache ?
						[ name ] : ( name.match( rnotwhite ) || [] );
				}
			}

			i = name.length;
			while ( i-- ) {
				delete cache[ name[ i ] ];
			}
		}
	},
	hasData: function( owner ) {
		return !jQuery.isEmptyObject(
			this.cache[ owner[ this.expando ] ] || {}
		);
	},
	discard: function( owner ) {
		if ( owner[ this.expando ] ) {
			delete this.cache[ owner[ this.expando ] ];
		}
	}
};
var data_priv = new Data();

var data_user = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /([A-Z])/g;

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = data === "true" ? true :
					data === "false" ? false :
					data === "null" ? null :
					// Only convert to a number if it doesn't change the string
					+data + "" === data ? +data :
					rbrace.test( data ) ? jQuery.parseJSON( data ) :
					data;
			} catch( e ) {}

			// Make sure we set the data so it isn't changed later
			data_user.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend({
	hasData: function( elem ) {
		return data_user.hasData( elem ) || data_priv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return data_user.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		data_user.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to data_priv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return data_priv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		data_priv.remove( elem, name );
	}
});

jQuery.fn.extend({
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = data_user.get( elem );

				if ( elem.nodeType === 1 && !data_priv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE11+
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = jQuery.camelCase( name.slice(5) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					data_priv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each(function() {
				data_user.set( this, key );
			});
		}

		return access( this, function( value ) {
			var data,
				camelKey = jQuery.camelCase( key );

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {
				// Attempt to get data from the cache
				// with the key as-is
				data = data_user.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to get data from the cache
				// with the key camelized
				data = data_user.get( elem, camelKey );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, camelKey, undefined );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each(function() {
				// First, attempt to store a copy or reference of any
				// data that might've been store with a camelCased key.
				var data = data_user.get( this, camelKey );

				// For HTML5 data-* attribute interop, we have to
				// store property names with dashes in a camelCase form.
				// This might not apply to all properties...*
				data_user.set( this, camelKey, value );

				// *... In the case of properties that might _actually_
				// have dashes, we need to also store a copy of that
				// unchanged property.
				if ( key.indexOf("-") !== -1 && data !== undefined ) {
					data_user.set( this, key, value );
				}
			});
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each(function() {
			data_user.remove( this, key );
		});
	}
});


jQuery.extend({
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = data_priv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || jQuery.isArray( data ) ) {
					queue = data_priv.access( elem, type, jQuery.makeArray(data) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return data_priv.get( elem, key ) || data_priv.access( elem, key, {
			empty: jQuery.Callbacks("once memory").add(function() {
				data_priv.remove( elem, [ type + "queue", key ] );
			})
		});
	}
});

jQuery.fn.extend({
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[0], type );
		}

		return data === undefined ?
			this :
			this.each(function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[0] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			});
	},
	dequeue: function( type ) {
		return this.each(function() {
			jQuery.dequeue( this, type );
		});
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},
	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = data_priv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
});
var pnum = (/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/).source;

var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var isHidden = function( elem, el ) {
		// isHidden might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;
		return jQuery.css( elem, "display" ) === "none" || !jQuery.contains( elem.ownerDocument, elem );
	};

var rcheckableType = (/^(?:checkbox|radio)$/i);



(function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Safari<=5.1
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Safari<=5.1, Android<4.2
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE<=11+
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;
})();
var strundefined = typeof undefined;



support.focusinBubbles = "onfocusin" in window;


var
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu)|click/,
	rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)$/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = data_priv.get( elem );

		// Don't attach events to noData or text/comment nodes (but allow plain objects)
		if ( !elemData ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !(events = elemData.events) ) {
			events = elemData.events = {};
		}
		if ( !(eventHandle = elemData.handle) ) {
			eventHandle = elemData.handle = function( e ) {
				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== strundefined && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnotwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[t] ) || [];
			type = origType = tmp[1];
			namespaces = ( tmp[2] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend({
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join(".")
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !(handlers = events[ type ]) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {
					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle, false );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = data_priv.hasData( elem ) && data_priv.get( elem );

		if ( !elemData || !(events = elemData.events) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnotwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[t] ) || [];
			type = origType = tmp[1];
			namespaces = ( tmp[2] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[2] && new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector || selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {
					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			delete elemData.handle;
			data_priv.remove( elem, "events" );
		}
	},

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split(".") : [];

		cur = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf(".") >= 0 ) {
			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split(".");
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf(":") < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join(".");
		event.namespace_re = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === (elem.ownerDocument || document) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( (cur = eventPath[i++]) && !event.isPropagationStopped() ) {

			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( data_priv.get( cur, "events" ) || {} )[ event.type ] && data_priv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && jQuery.acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( (!special._default || special._default.apply( eventPath.pop(), data ) === false) &&
				jQuery.acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;
					elem[ type ]();
					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	dispatch: function( event ) {

		// Make a writable jQuery.Event from the native event object
		event = jQuery.event.fix( event );

		var i, j, ret, matched, handleObj,
			handlerQueue = [],
			args = slice.call( arguments ),
			handlers = ( data_priv.get( this, "events" ) || {} )[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[0] = event;
		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( (matched = handlerQueue[ i++ ]) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( (handleObj = matched.handlers[ j++ ]) && !event.isImmediatePropagationStopped() ) {

				// Triggered event must either 1) have no namespace, or 2) have namespace(s)
				// a subset or equal to those in the bound event (both can have no namespace).
				if ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )
							.apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( (event.result = ret) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, matches, sel, handleObj,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		// Black-hole SVG <use> instance trees (#13180)
		// Avoid non-left-click bubbling in Firefox (#3861)
		if ( delegateCount && cur.nodeType && (!event.button || event.type !== "click") ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.disabled !== true || event.type !== "click" ) {
					matches = [];
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matches[ sel ] === undefined ) {
							matches[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) >= 0 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matches[ sel ] ) {
							matches.push( handleObj );
						}
					}
					if ( matches.length ) {
						handlerQueue.push({ elem: cur, handlers: matches });
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		if ( delegateCount < handlers.length ) {
			handlerQueue.push({ elem: this, handlers: handlers.slice( delegateCount ) });
		}

		return handlerQueue;
	},

	// Includes some event props shared by KeyEvent and MouseEvent
	props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),

	fixHooks: {},

	keyHooks: {
		props: "char charCode key keyCode".split(" "),
		filter: function( event, original ) {

			// Add which for key events
			if ( event.which == null ) {
				event.which = original.charCode != null ? original.charCode : original.keyCode;
			}

			return event;
		}
	},

	mouseHooks: {
		props: "button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
		filter: function( event, original ) {
			var eventDoc, doc, body,
				button = original.button;

			// Calculate pageX/Y if missing and clientX/Y available
			if ( event.pageX == null && original.clientX != null ) {
				eventDoc = event.target.ownerDocument || document;
				doc = eventDoc.documentElement;
				body = eventDoc.body;

				event.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );
				event.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );
			}

			// Add which for click: 1 === left; 2 === middle; 3 === right
			// Note: button is not normalized, so don't use it
			if ( !event.which && button !== undefined ) {
				event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
			}

			return event;
		}
	},

	fix: function( event ) {
		if ( event[ jQuery.expando ] ) {
			return event;
		}

		// Create a writable copy of the event object and normalize some properties
		var i, prop, copy,
			type = event.type,
			originalEvent = event,
			fixHook = this.fixHooks[ type ];

		if ( !fixHook ) {
			this.fixHooks[ type ] = fixHook =
				rmouseEvent.test( type ) ? this.mouseHooks :
				rkeyEvent.test( type ) ? this.keyHooks :
				{};
		}
		copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;

		event = new jQuery.Event( originalEvent );

		i = copy.length;
		while ( i-- ) {
			prop = copy[ i ];
			event[ prop ] = originalEvent[ prop ];
		}

		// Support: Cordova 2.5 (WebKit) (#13255)
		// All events should have a target; Cordova deviceready doesn't
		if ( !event.target ) {
			event.target = document;
		}

		// Support: Safari 6.0+, Chrome<28
		// Target should not be a text node (#504, #13143)
		if ( event.target.nodeType === 3 ) {
			event.target = event.target.parentNode;
		}

		return fixHook.filter ? fixHook.filter( event, originalEvent ) : event;
	},

	special: {
		load: {
			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		focus: {
			// Fire native event if possible so blur/focus sequence is correct
			trigger: function() {
				if ( this !== safeActiveElement() && this.focus ) {
					this.focus();
					return false;
				}
			},
			delegateType: "focusin"
		},
		blur: {
			trigger: function() {
				if ( this === safeActiveElement() && this.blur ) {
					this.blur();
					return false;
				}
			},
			delegateType: "focusout"
		},
		click: {
			// For checkbox, fire native event so checked state will be right
			trigger: function() {
				if ( this.type === "checkbox" && this.click && jQuery.nodeName( this, "input" ) ) {
					this.click();
					return false;
				}
			},

			// For cross-browser consistency, don't fire native .click() on links
			_default: function( event ) {
				return jQuery.nodeName( event.target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	},

	simulate: function( type, elem, event, bubble ) {
		// Piggyback on a donor event to simulate a different one.
		// Fake originalEvent to avoid donor's stopPropagation, but if the
		// simulated event prevents default then we do the same on the donor.
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true,
				originalEvent: {}
			}
		);
		if ( bubble ) {
			jQuery.event.trigger( e, null, elem );
		} else {
			jQuery.event.dispatch.call( elem, e );
		}
		if ( e.isDefaultPrevented() ) {
			event.preventDefault();
		}
	}
};

jQuery.removeEvent = function( elem, type, handle ) {
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle, false );
	}
};

jQuery.Event = function( src, props ) {
	// Allow instantiation without the 'new' keyword
	if ( !(this instanceof jQuery.Event) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&
				// Support: Android<4.0
				src.returnValue === false ?
			returnTrue :
			returnFalse;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || jQuery.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && e.preventDefault ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && e.stopPropagation ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && e.stopImmediatePropagation ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Create mouseenter/leave events using mouseover/out and event-time checks
// Support: Chrome 15+
jQuery.each({
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mousenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || (related !== target && !jQuery.contains( target, related )) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
});

// Support: Firefox, Chrome, Safari
// Create "bubbling" focus and blur events
if ( !support.focusinBubbles ) {
	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
				jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );
			};

		jQuery.event.special[ fix ] = {
			setup: function() {
				var doc = this.ownerDocument || this,
					attaches = data_priv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				data_priv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this,
					attaches = data_priv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					data_priv.remove( doc, fix );

				} else {
					data_priv.access( doc, fix, attaches );
				}
			}
		};
	});
}

jQuery.fn.extend({

	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
		var origFn, type;

		// Types can be a map of types/handlers
		if ( typeof types === "object" ) {
			// ( types-Object, selector, data )
			if ( typeof selector !== "string" ) {
				// ( types-Object, data )
				data = data || selector;
				selector = undefined;
			}
			for ( type in types ) {
				this.on( type, selector, data, types[ type ], one );
			}
			return this;
		}

		if ( data == null && fn == null ) {
			// ( types, fn )
			fn = selector;
			data = selector = undefined;
		} else if ( fn == null ) {
			if ( typeof selector === "string" ) {
				// ( types, selector, fn )
				fn = data;
				data = undefined;
			} else {
				// ( types, data, fn )
				fn = data;
				data = selector;
				selector = undefined;
			}
		}
		if ( fn === false ) {
			fn = returnFalse;
		} else if ( !fn ) {
			return this;
		}

		if ( one === 1 ) {
			origFn = fn;
			fn = function( event ) {
				// Can use an empty set, since event contains the info
				jQuery().off( event );
				return origFn.apply( this, arguments );
			};
			// Use same guid so caller can remove using origFn
			fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
		}
		return this.each( function() {
			jQuery.event.add( this, types, fn, data, selector );
		});
	},
	one: function( types, selector, data, fn ) {
		return this.on( types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {
			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {
			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {
			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each(function() {
			jQuery.event.remove( this, types, fn, selector );
		});
	},

	trigger: function( type, data ) {
		return this.each(function() {
			jQuery.event.trigger( type, data, this );
		});
	},
	triggerHandler: function( type, data ) {
		var elem = this[0];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
});


var
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
	rtagName = /<([\w:]+)/,
	rhtml = /<|&#?\w+;/,
	rnoInnerhtml = /<(?:script|style|link)/i,
	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rscriptType = /^$|\/(?:java|ecma)script/i,
	rscriptTypeMasked = /^true\/(.*)/,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,

	// We have to close these tags to support XHTML (#13200)
	wrapMap = {

		// Support: IE9
		option: [ 1, "<select multiple='multiple'>", "</select>" ],

		thead: [ 1, "<table>", "</table>" ],
		col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
		tr: [ 2, "<table><tbody>", "</tbody></table>" ],
		td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

		_default: [ 0, "", "" ]
	};

// Support: IE9
wrapMap.optgroup = wrapMap.option;

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

// Support: 1.x compatibility
// Manipulating tables requires a tbody
function manipulationTarget( elem, content ) {
	return jQuery.nodeName( elem, "table" ) &&
		jQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ?

		elem.getElementsByTagName("tbody")[0] ||
			elem.appendChild( elem.ownerDocument.createElement("tbody") ) :
		elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = (elem.getAttribute("type") !== null) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	var match = rscriptTypeMasked.exec( elem.type );

	if ( match ) {
		elem.type = match[ 1 ];
	} else {
		elem.removeAttribute("type");
	}

	return elem;
}

// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		data_priv.set(
			elems[ i ], "globalEval", !refElements || data_priv.get( refElements[ i ], "globalEval" )
		);
	}
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( data_priv.hasData( src ) ) {
		pdataOld = data_priv.access( src );
		pdataCur = data_priv.set( dest, pdataOld );
		events = pdataOld.events;

		if ( events ) {
			delete pdataCur.handle;
			pdataCur.events = {};

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( data_user.hasData( src ) ) {
		udataOld = data_user.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		data_user.set( dest, udataCur );
	}
}

function getAll( context, tag ) {
	var ret = context.getElementsByTagName ? context.getElementsByTagName( tag || "*" ) :
			context.querySelectorAll ? context.querySelectorAll( tag || "*" ) :
			[];

	return tag === undefined || tag && jQuery.nodeName( context, tag ) ?
		jQuery.merge( [ context ], ret ) :
		ret;
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

jQuery.extend({
	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = jQuery.contains( elem.ownerDocument, elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	buildFragment: function( elems, context, scripts, selection ) {
		var elem, tmp, tag, wrap, contains, j,
			fragment = context.createDocumentFragment(),
			nodes = [],
			i = 0,
			l = elems.length;

		for ( ; i < l; i++ ) {
			elem = elems[ i ];

			if ( elem || elem === 0 ) {

				// Add nodes directly
				if ( jQuery.type( elem ) === "object" ) {
					// Support: QtWebKit, PhantomJS
					// push.apply(_, arraylike) throws on ancient WebKit
					jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

				// Convert non-html into a text node
				} else if ( !rhtml.test( elem ) ) {
					nodes.push( context.createTextNode( elem ) );

				// Convert html into DOM nodes
				} else {
					tmp = tmp || fragment.appendChild( context.createElement("div") );

					// Deserialize a standard representation
					tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
					wrap = wrapMap[ tag ] || wrapMap._default;
					tmp.innerHTML = wrap[ 1 ] + elem.replace( rxhtmlTag, "<$1></$2>" ) + wrap[ 2 ];

					// Descend through wrappers to the right content
					j = wrap[ 0 ];
					while ( j-- ) {
						tmp = tmp.lastChild;
					}

					// Support: QtWebKit, PhantomJS
					// push.apply(_, arraylike) throws on ancient WebKit
					jQuery.merge( nodes, tmp.childNodes );

					// Remember the top-level container
					tmp = fragment.firstChild;

					// Ensure the created nodes are orphaned (#12392)
					tmp.textContent = "";
				}
			}
		}

		// Remove wrapper from fragment
		fragment.textContent = "";

		i = 0;
		while ( (elem = nodes[ i++ ]) ) {

			// #4087 - If origin and destination elements are the same, and this is
			// that element, do not do anything
			if ( selection && jQuery.inArray( elem, selection ) !== -1 ) {
				continue;
			}

			contains = jQuery.contains( elem.ownerDocument, elem );

			// Append to fragment
			tmp = getAll( fragment.appendChild( elem ), "script" );

			// Preserve script evaluation history
			if ( contains ) {
				setGlobalEval( tmp );
			}

			// Capture executables
			if ( scripts ) {
				j = 0;
				while ( (elem = tmp[ j++ ]) ) {
					if ( rscriptType.test( elem.type || "" ) ) {
						scripts.push( elem );
					}
				}
			}
		}

		return fragment;
	},

	cleanData: function( elems ) {
		var data, elem, type, key,
			special = jQuery.event.special,
			i = 0;

		for ( ; (elem = elems[ i ]) !== undefined; i++ ) {
			if ( jQuery.acceptData( elem ) ) {
				key = elem[ data_priv.expando ];

				if ( key && (data = data_priv.cache[ key ]) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}
					if ( data_priv.cache[ key ] ) {
						// Discard any remaining `private` data
						delete data_priv.cache[ key ];
					}
				}
			}
			// Discard any remaining `user` data
			delete data_user.cache[ elem[ data_user.expando ] ];
		}
	}
});

jQuery.fn.extend({
	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each(function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				});
		}, null, value, arguments.length );
	},

	append: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		});
	},

	prepend: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		});
	},

	before: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		});
	},

	after: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		});
	},

	remove: function( selector, keepData /* Internal Use Only */ ) {
		var elem,
			elems = selector ? jQuery.filter( selector, this ) : this,
			i = 0;

		for ( ; (elem = elems[i]) != null; i++ ) {
			if ( !keepData && elem.nodeType === 1 ) {
				jQuery.cleanData( getAll( elem ) );
			}

			if ( elem.parentNode ) {
				if ( keepData && jQuery.contains( elem.ownerDocument, elem ) ) {
					setGlobalEval( getAll( elem, "script" ) );
				}
				elem.parentNode.removeChild( elem );
			}
		}

		return this;
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; (elem = this[i]) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map(function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		});
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = value.replace( rxhtmlTag, "<$1></$2>" );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var arg = arguments[ 0 ];

		// Make the changes, replacing each context element with the new content
		this.domManip( arguments, function( elem ) {
			arg = this.parentNode;

			jQuery.cleanData( getAll( this ) );

			if ( arg ) {
				arg.replaceChild( elem, this );
			}
		});

		// Force removal if there was no new content (e.g., from empty arguments)
		return arg && (arg.length || arg.nodeType) ? this : this.remove();
	},

	detach: function( selector ) {
		return this.remove( selector, true );
	},

	domManip: function( args, callback ) {

		// Flatten any nested arrays
		args = concat.apply( [], args );

		var fragment, first, scripts, hasScripts, node, doc,
			i = 0,
			l = this.length,
			set = this,
			iNoClone = l - 1,
			value = args[ 0 ],
			isFunction = jQuery.isFunction( value );

		// We can't cloneNode fragments that contain checked, in WebKit
		if ( isFunction ||
				( l > 1 && typeof value === "string" &&
					!support.checkClone && rchecked.test( value ) ) ) {
			return this.each(function( index ) {
				var self = set.eq( index );
				if ( isFunction ) {
					args[ 0 ] = value.call( this, index, self.html() );
				}
				self.domManip( args, callback );
			});
		}

		if ( l ) {
			fragment = jQuery.buildFragment( args, this[ 0 ].ownerDocument, false, this );
			first = fragment.firstChild;

			if ( fragment.childNodes.length === 1 ) {
				fragment = first;
			}

			if ( first ) {
				scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
				hasScripts = scripts.length;

				// Use the original fragment for the last item instead of the first because it can end up
				// being emptied incorrectly in certain situations (#8070).
				for ( ; i < l; i++ ) {
					node = fragment;

					if ( i !== iNoClone ) {
						node = jQuery.clone( node, true, true );

						// Keep references to cloned scripts for later restoration
						if ( hasScripts ) {
							// Support: QtWebKit
							// jQuery.merge because push.apply(_, arraylike) throws
							jQuery.merge( scripts, getAll( node, "script" ) );
						}
					}

					callback.call( this[ i ], node, i );
				}

				if ( hasScripts ) {
					doc = scripts[ scripts.length - 1 ].ownerDocument;

					// Reenable scripts
					jQuery.map( scripts, restoreScript );

					// Evaluate executable scripts on first document insertion
					for ( i = 0; i < hasScripts; i++ ) {
						node = scripts[ i ];
						if ( rscriptType.test( node.type || "" ) &&
							!data_priv.access( node, "globalEval" ) && jQuery.contains( doc, node ) ) {

							if ( node.src ) {
								// Optional AJAX dependency, but won't run scripts if not present
								if ( jQuery._evalUrl ) {
									jQuery._evalUrl( node.src );
								}
							} else {
								jQuery.globalEval( node.textContent.replace( rcleanScript, "" ) );
							}
						}
					}
				}
			}
		}

		return this;
	}
});

jQuery.each({
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: QtWebKit
			// .get() because push.apply(_, arraylike) throws
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
});


var iframe,
	elemdisplay = {};

/**
 * Retrieve the actual display of a element
 * @param {String} name nodeName of the element
 * @param {Object} doc Document object
 */
// Called only from within defaultDisplay
function actualDisplay( name, doc ) {
	var style,
		elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),

		// getDefaultComputedStyle might be reliably used only on attached element
		display = window.getDefaultComputedStyle && ( style = window.getDefaultComputedStyle( elem[ 0 ] ) ) ?

			// Use of this method is a temporary fix (more like optimization) until something better comes along,
			// since it was removed from specification and supported only in FF
			style.display : jQuery.css( elem[ 0 ], "display" );

	// We don't have any data stored on the element,
	// so use "detach" method as fast way to get rid of the element
	elem.detach();

	return display;
}

/**
 * Try to determine the default display value of an element
 * @param {String} nodeName
 */
function defaultDisplay( nodeName ) {
	var doc = document,
		display = elemdisplay[ nodeName ];

	if ( !display ) {
		display = actualDisplay( nodeName, doc );

		// If the simple way fails, read from inside an iframe
		if ( display === "none" || !display ) {

			// Use the already-created iframe if possible
			iframe = (iframe || jQuery( "<iframe frameborder='0' width='0' height='0'/>" )).appendTo( doc.documentElement );

			// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse
			doc = iframe[ 0 ].contentDocument;

			// Support: IE
			doc.write();
			doc.close();

			display = actualDisplay( nodeName, doc );
			iframe.detach();
		}

		// Store the correct default display
		elemdisplay[ nodeName ] = display;
	}

	return display;
}
var rmargin = (/^margin/);

var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {
		// Support: IE<=11+, Firefox<=30+ (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		if ( elem.ownerDocument.defaultView.opener ) {
			return elem.ownerDocument.defaultView.getComputedStyle( elem, null );
		}

		return window.getComputedStyle( elem, null );
	};



function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,
		style = elem.style;

	computed = computed || getStyles( elem );

	// Support: IE9
	// getPropertyValue is only needed for .css('filter') (#12537)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];
	}

	if ( computed ) {

		if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// Support: iOS < 6
		// A tribute to the "awesome hack by Dean Edwards"
		// iOS < 6 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels
		// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values
		if ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?
		// Support: IE
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {
	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {
				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return (this.get = hookFn).apply( this, arguments );
		}
	};
}


(function() {
	var pixelPositionVal, boxSizingReliableVal,
		docElem = document.documentElement,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	if ( !div.style ) {
		return;
	}

	// Support: IE9-11+
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	container.style.cssText = "border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;" +
		"position:absolute";
	container.appendChild( div );

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computePixelPositionAndBoxSizingReliable() {
		div.style.cssText =
			// Support: Firefox<29, Android 2.3
			// Vendor-prefix box-sizing
			"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;" +
			"box-sizing:border-box;display:block;margin-top:1%;top:1%;" +
			"border:1px;padding:1px;width:4px;position:absolute";
		div.innerHTML = "";
		docElem.appendChild( container );

		var divStyle = window.getComputedStyle( div, null );
		pixelPositionVal = divStyle.top !== "1%";
		boxSizingReliableVal = divStyle.width === "4px";

		docElem.removeChild( container );
	}

	// Support: node.js jsdom
	// Don't assume that getComputedStyle is a property of the global object
	if ( window.getComputedStyle ) {
		jQuery.extend( support, {
			pixelPosition: function() {

				// This test is executed only once but we still do memoizing
				// since we can use the boxSizingReliable pre-computing.
				// No need to check if the test was already performed, though.
				computePixelPositionAndBoxSizingReliable();
				return pixelPositionVal;
			},
			boxSizingReliable: function() {
				if ( boxSizingReliableVal == null ) {
					computePixelPositionAndBoxSizingReliable();
				}
				return boxSizingReliableVal;
			},
			reliableMarginRight: function() {

				// Support: Android 2.3
				// Check if div with explicit width and no margin-right incorrectly
				// gets computed margin-right based on width of container. (#3333)
				// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
				// This support function is only executed once so no memoizing is needed.
				var ret,
					marginDiv = div.appendChild( document.createElement( "div" ) );

				// Reset CSS: box-sizing; display; margin; border; padding
				marginDiv.style.cssText = div.style.cssText =
					// Support: Firefox<29, Android 2.3
					// Vendor-prefix box-sizing
					"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;" +
					"box-sizing:content-box;display:block;margin:0;border:0;padding:0";
				marginDiv.style.marginRight = marginDiv.style.width = "0";
				div.style.width = "1px";
				docElem.appendChild( container );

				ret = !parseFloat( window.getComputedStyle( marginDiv, null ).marginRight );

				docElem.removeChild( container );
				div.removeChild( marginDiv );

				return ret;
			}
		});
	}
})();


// A method for quickly swapping in/out CSS properties to get correct calculations.
jQuery.swap = function( elem, options, callback, args ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.apply( elem, args || [] );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};


var
	// Swappable if display is none or starts with table except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rnumsplit = new RegExp( "^(" + pnum + ")(.*)$", "i" ),
	rrelNum = new RegExp( "^([+-])=(" + pnum + ")", "i" ),

	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	},

	cssPrefixes = [ "Webkit", "O", "Moz", "ms" ];

// Return a css property mapped to a potentially vendor prefixed property
function vendorPropName( style, name ) {

	// Shortcut for names that are not vendor prefixed
	if ( name in style ) {
		return name;
	}

	// Check for vendor prefixed names
	var capName = name[0].toUpperCase() + name.slice(1),
		origName = name,
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in style ) {
			return name;
		}
	}

	return origName;
}

function setPositiveNumber( elem, value, subtract ) {
	var matches = rnumsplit.exec( value );
	return matches ?
		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || "px" ) :
		value;
}

function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
	var i = extra === ( isBorderBox ? "border" : "content" ) ?
		// If we already have the right measurement, avoid augmentation
		4 :
		// Otherwise initialize for horizontal or vertical properties
		name === "width" ? 1 : 0,

		val = 0;

	for ( ; i < 4; i += 2 ) {
		// Both box models exclude margin, so add it if we want it
		if ( extra === "margin" ) {
			val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
		}

		if ( isBorderBox ) {
			// border-box includes padding, so remove it if we want content
			if ( extra === "content" ) {
				val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// At this point, extra isn't border nor margin, so remove border
			if ( extra !== "margin" ) {
				val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		} else {
			// At this point, extra isn't content, so add padding
			val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// At this point, extra isn't content nor padding, so add border
			if ( extra !== "padding" ) {
				val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	return val;
}

function getWidthOrHeight( elem, name, extra ) {

	// Start with offset property, which is equivalent to the border-box value
	var valueIsBorderBox = true,
		val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
		styles = getStyles( elem ),
		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

	// Some non-html elements return undefined for offsetWidth, so check for null/undefined
	// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
	// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
	if ( val <= 0 || val == null ) {
		// Fall back to computed then uncomputed css if necessary
		val = curCSS( elem, name, styles );
		if ( val < 0 || val == null ) {
			val = elem.style[ name ];
		}

		// Computed unit is not pixels. Stop here and return.
		if ( rnumnonpx.test(val) ) {
			return val;
		}

		// Check for style in case a browser which returns unreliable values
		// for getComputedStyle silently falls back to the reliable elem.style
		valueIsBorderBox = isBorderBox &&
			( support.boxSizingReliable() || val === elem.style[ name ] );

		// Normalize "", auto, and prepare for extra
		val = parseFloat( val ) || 0;
	}

	// Use the active box-sizing model to add/subtract irrelevant styles
	return ( val +
		augmentWidthOrHeight(
			elem,
			name,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles
		)
	) + "px";
}

function showHide( elements, show ) {
	var display, elem, hidden,
		values = [],
		index = 0,
		length = elements.length;

	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		values[ index ] = data_priv.get( elem, "olddisplay" );
		display = elem.style.display;
		if ( show ) {
			// Reset the inline display of this element to learn if it is
			// being hidden by cascaded rules or not
			if ( !values[ index ] && display === "none" ) {
				elem.style.display = "";
			}

			// Set elements which have been overridden with display: none
			// in a stylesheet to whatever the default browser style is
			// for such an element
			if ( elem.style.display === "" && isHidden( elem ) ) {
				values[ index ] = data_priv.access( elem, "olddisplay", defaultDisplay(elem.nodeName) );
			}
		} else {
			hidden = isHidden( elem );

			if ( display !== "none" || !hidden ) {
				data_priv.set( elem, "olddisplay", hidden ? display : jQuery.css( elem, "display" ) );
			}
		}
	}

	// Set the display of most of the elements in a second loop
	// to avoid the constant reflow
	for ( index = 0; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}
		if ( !show || elem.style.display === "none" || elem.style.display === "" ) {
			elem.style.display = show ? values[ index ] || "" : "none";
		}
	}

	return elements;
}

jQuery.extend({

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {
		"float": "cssFloat"
	},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = jQuery.camelCase( name ),
			style = elem.style;

		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && (ret = rrelNum.exec( value )) ) {
				value = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );
				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number, add 'px' to the (except for certain CSS properties)
			if ( type === "number" && !jQuery.cssNumber[ origName ] ) {
				value += "px";
			}

			// Support: IE9-11+
			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {
				style[ name ] = value;
			}

		} else {
			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {
				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = jQuery.camelCase( name );

		// Make sure that we're working with the right name
		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || jQuery.isNumeric( num ) ? num || 0 : val;
		}
		return val;
	}
});

jQuery.each([ "height", "width" ], function( i, name ) {
	jQuery.cssHooks[ name ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) && elem.offsetWidth === 0 ?
					jQuery.swap( elem, cssShow, function() {
						return getWidthOrHeight( elem, name, extra );
					}) :
					getWidthOrHeight( elem, name, extra );
			}
		},

		set: function( elem, value, extra ) {
			var styles = extra && getStyles( elem );
			return setPositiveNumber( elem, value, extra ?
				augmentWidthOrHeight(
					elem,
					name,
					extra,
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
					styles
				) : 0
			);
		}
	};
});

// Support: Android 2.3
jQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,
	function( elem, computed ) {
		if ( computed ) {
			return jQuery.swap( elem, { "display": "inline-block" },
				curCSS, [ elem, "marginRight" ] );
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each({
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split(" ") : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( !rmargin.test( prefix ) ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
});

jQuery.fn.extend({
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( jQuery.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	},
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each(function() {
			if ( isHidden( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		});
	}
});


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || "swing";
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			if ( tween.elem[ tween.prop ] != null &&
				(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );
			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {
			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE9
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	}
};

jQuery.fx = Tween.prototype.init;

// Back Compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, timerId,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rfxnum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" ),
	rrun = /queueHooks$/,
	animationPrefilters = [ defaultPrefilter ],
	tweeners = {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value ),
				target = tween.cur(),
				parts = rfxnum.exec( value ),
				unit = parts && parts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

				// Starting value computation is required for potential unit mismatches
				start = ( jQuery.cssNumber[ prop ] || unit !== "px" && +target ) &&
					rfxnum.exec( jQuery.css( tween.elem, prop ) ),
				scale = 1,
				maxIterations = 20;

			if ( start && start[ 3 ] !== unit ) {
				// Trust units reported by jQuery.css
				unit = unit || start[ 3 ];

				// Make sure we update the tween properties later on
				parts = parts || [];

				// Iteratively approximate from a nonzero starting point
				start = +target || 1;

				do {
					// If previous iteration zeroed out, double until we get *something*.
					// Use string for doubling so we don't accidentally see scale as unchanged below
					scale = scale || ".5";

					// Adjust and apply
					start = start / scale;
					jQuery.style( tween.elem, prop, start + unit );

				// Update scale, tolerating zero or NaN from tween.cur(),
				// break the loop if scale is unchanged or perfect, or if we've just had enough
				} while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );
			}

			// Update tween properties
			if ( parts ) {
				start = tween.start = +start || +target || 0;
				tween.unit = unit;
				// If a +=/-= token was provided, we're doing a relative animation
				tween.end = parts[ 1 ] ?
					start + ( parts[ 1 ] + 1 ) * parts[ 2 ] :
					+parts[ 2 ];
			}

			return tween;
		} ]
	};

// Animations created synchronously will run synchronously
function createFxNow() {
	setTimeout(function() {
		fxNow = undefined;
	});
	return ( fxNow = jQuery.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4 ; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( tweeners[ prop ] || [] ).concat( tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( (tween = collection[ index ].call( animation, prop, value )) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	/* jshint validthis: true */
	var prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHidden( elem ),
		dataShow = data_priv.get( elem, "fxshow" );

	// Handle queue: false promises
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always(function() {
			// Ensure the complete handler is called before this completes
			anim.always(function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			});
		});
	}

	// Height/width overflow pass
	if ( elem.nodeType === 1 && ( "height" in props || "width" in props ) ) {
		// Make sure that nothing sneaks out
		// Record all 3 overflow attributes because IE9-10 do not
		// change the overflow attribute when overflowX and
		// overflowY are set to the same value
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Set display property to inline-block for height/width
		// animations on inline elements that are having width/height animated
		display = jQuery.css( elem, "display" );

		// Test default display if display is currently "none"
		checkDisplay = display === "none" ?
			data_priv.get( elem, "olddisplay" ) || defaultDisplay( elem.nodeName ) : display;

		if ( checkDisplay === "inline" && jQuery.css( elem, "float" ) === "none" ) {
			style.display = "inline-block";
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always(function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		});
	}

	// show/hide pass
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.exec( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// If there is dataShow left over from a stopped hide or show and we are going to proceed with show, we should pretend to be hidden
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );

		// Any non-fx value stops us from restoring the original display value
		} else {
			display = undefined;
		}
	}

	if ( !jQuery.isEmptyObject( orig ) ) {
		if ( dataShow ) {
			if ( "hidden" in dataShow ) {
				hidden = dataShow.hidden;
			}
		} else {
			dataShow = data_priv.access( elem, "fxshow", {} );
		}

		// Store state if its toggle - enables .stop().toggle() to "reverse"
		if ( toggle ) {
			dataShow.hidden = !hidden;
		}
		if ( hidden ) {
			jQuery( elem ).show();
		} else {
			anim.done(function() {
				jQuery( elem ).hide();
			});
		}
		anim.done(function() {
			var prop;

			data_priv.remove( elem, "fxshow" );
			for ( prop in orig ) {
				jQuery.style( elem, prop, orig[ prop ] );
			}
		});
		for ( prop in orig ) {
			tween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );

			if ( !( prop in dataShow ) ) {
				dataShow[ prop ] = tween.start;
				if ( hidden ) {
					tween.end = tween.start;
					tween.start = prop === "width" || prop === "height" ? 1 : 0;
				}
			}
		}

	// If this is a noop like .hide().hide(), restore an overwritten display value
	} else if ( (display === "none" ? defaultDisplay( elem.nodeName ) : display) === "inline" ) {
		style.display = display;
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = jQuery.camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( jQuery.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = animationPrefilters.length,
		deferred = jQuery.Deferred().always( function() {
			// Don't match elem in the :animated selector
			delete tick.elem;
		}),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),
				// Support: Android 2.3
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length ; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ]);

			if ( percent < 1 && length ) {
				return remaining;
			} else {
				deferred.resolveWith( elem, [ animation ] );
				return false;
			}
		},
		animation = deferred.promise({
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, { specialEasing: {} }, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,
					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length ; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		}),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length ; index++ ) {
		result = animationPrefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( jQuery.isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		})
	);

	// attach callbacks from options
	return animation.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );
}

jQuery.Animation = jQuery.extend( Animation, {

	tweener: function( props, callback ) {
		if ( jQuery.isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.split(" ");
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length ; index++ ) {
			prop = props[ index ];
			tweeners[ prop ] = tweeners[ prop ] || [];
			tweeners[ prop ].unshift( callback );
		}
	},

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			animationPrefilters.unshift( callback );
		} else {
			animationPrefilters.push( callback );
		}
	}
});

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			jQuery.isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
	};

	opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :
		opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( jQuery.isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend({
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHidden ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate({ opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {
				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || data_priv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each(function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = data_priv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {
					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		});
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each(function() {
			var index,
				data = data_priv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		});
	}
});

jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
});

// Generate shortcuts for custom animations
jQuery.each({
	slideDown: genFx("show"),
	slideUp: genFx("hide"),
	slideToggle: genFx("toggle"),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
});

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = jQuery.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];
		// Checks the timer has not already been removed
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	if ( timer() ) {
		jQuery.fx.start();
	} else {
		jQuery.timers.pop();
	}
};

jQuery.fx.interval = 13;

jQuery.fx.start = function() {
	if ( !timerId ) {
		timerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );
	}
};

jQuery.fx.stop = function() {
	clearInterval( timerId );
	timerId = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,
	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = setTimeout( next, time );
		hooks.stop = function() {
			clearTimeout( timeout );
		};
	});
};


(function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: iOS<=5.1, Android<=4.2+
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE<=11+
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: Android<=2.3
	// Options inside disabled selects are incorrectly marked as disabled
	select.disabled = true;
	support.optDisabled = !opt.disabled;

	// Support: IE<=11+
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
})();


var nodeHook, boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend({
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each(function() {
			jQuery.removeAttr( this, name );
		});
	}
});

jQuery.extend({
	attr: function( elem, name, value ) {
		var hooks, ret,
			nType = elem.nodeType;

		// don't get/set attributes on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === strundefined ) {
			return jQuery.prop( elem, name, value );
		}

		// All attributes are lowercase
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			name = name.toLowerCase();
			hooks = jQuery.attrHooks[ name ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );
		}

		if ( value !== undefined ) {

			if ( value === null ) {
				jQuery.removeAttr( elem, name );

			} else if ( hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {
				return ret;

			} else {
				elem.setAttribute( name, value + "" );
				return value;
			}

		} else if ( hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ) {
			return ret;

		} else {
			ret = jQuery.find.attr( elem, name );

			// Non-existent attributes return null, we normalize to undefined
			return ret == null ?
				undefined :
				ret;
		}
	},

	removeAttr: function( elem, value ) {
		var name, propName,
			i = 0,
			attrNames = value && value.match( rnotwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( (name = attrNames[i++]) ) {
				propName = jQuery.propFix[ name ] || name;

				// Boolean attributes get special treatment (#10870)
				if ( jQuery.expr.match.bool.test( name ) ) {
					// Set corresponding property to false
					elem[ propName ] = false;
				}

				elem.removeAttribute( name );
			}
		}
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					jQuery.nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	}
});

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {
			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};
jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle;
		if ( !isXML ) {
			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ name ];
			attrHandle[ name ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				name.toLowerCase() :
				null;
			attrHandle[ name ] = handle;
		}
		return ret;
	};
});




var rfocusable = /^(?:input|select|textarea|button)$/i;

jQuery.fn.extend({
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each(function() {
			delete this[ jQuery.propFix[ name ] || name ];
		});
	}
});

jQuery.extend({
	propFix: {
		"for": "htmlFor",
		"class": "className"
	},

	prop: function( elem, name, value ) {
		var ret, hooks, notxml,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		notxml = nType !== 1 || !jQuery.isXMLDoc( elem );

		if ( notxml ) {
			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			return hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ?
				ret :
				( elem[ name ] = value );

		} else {
			return hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ?
				ret :
				elem[ name ];
		}
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {
				return elem.hasAttribute( "tabindex" ) || rfocusable.test( elem.nodeName ) || elem.href ?
					elem.tabIndex :
					-1;
			}
		}
	}
});

if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {
			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		}
	};
}

jQuery.each([
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
});




var rclass = /[\t\r\n\f]/g;

jQuery.fn.extend({
	addClass: function( value ) {
		var classes, elem, cur, clazz, j, finalValue,
			proceed = typeof value === "string" && value,
			i = 0,
			len = this.length;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).addClass( value.call( this, j, this.className ) );
			});
		}

		if ( proceed ) {
			// The disjunction here is for better compressibility (see removeClass)
			classes = ( value || "" ).match( rnotwhite ) || [];

			for ( ; i < len; i++ ) {
				elem = this[ i ];
				cur = elem.nodeType === 1 && ( elem.className ?
					( " " + elem.className + " " ).replace( rclass, " " ) :
					" "
				);

				if ( cur ) {
					j = 0;
					while ( (clazz = classes[j++]) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// only assign if different to avoid unneeded rendering.
					finalValue = jQuery.trim( cur );
					if ( elem.className !== finalValue ) {
						elem.className = finalValue;
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, clazz, j, finalValue,
			proceed = arguments.length === 0 || typeof value === "string" && value,
			i = 0,
			len = this.length;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).removeClass( value.call( this, j, this.className ) );
			});
		}
		if ( proceed ) {
			classes = ( value || "" ).match( rnotwhite ) || [];

			for ( ; i < len; i++ ) {
				elem = this[ i ];
				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( elem.className ?
					( " " + elem.className + " " ).replace( rclass, " " ) :
					""
				);

				if ( cur ) {
					j = 0;
					while ( (clazz = classes[j++]) ) {
						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) >= 0 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = value ? jQuery.trim( cur ) : "";
					if ( elem.className !== finalValue ) {
						elem.className = finalValue;
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value;

		if ( typeof stateVal === "boolean" && type === "string" ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( i ) {
				jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );
			});
		}

		return this.each(function() {
			if ( type === "string" ) {
				// Toggle individual class names
				var className,
					i = 0,
					self = jQuery( this ),
					classNames = value.match( rnotwhite ) || [];

				while ( (className = classNames[ i++ ]) ) {
					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( type === strundefined || type === "boolean" ) {
				if ( this.className ) {
					// store className if set
					data_priv.set( this, "__className__", this.className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				this.className = this.className || value === false ? "" : data_priv.get( this, "__className__" ) || "";
			}
		});
	},

	hasClass: function( selector ) {
		var className = " " + selector + " ",
			i = 0,
			l = this.length;
		for ( ; i < l; i++ ) {
			if ( this[i].nodeType === 1 && (" " + this[i].className + " ").replace(rclass, " ").indexOf( className ) >= 0 ) {
				return true;
			}
		}

		return false;
	}
});




var rreturn = /\r/g;

jQuery.fn.extend({
	val: function( value ) {
		var hooks, ret, isFunction,
			elem = this[0];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks && "get" in hooks && (ret = hooks.get( elem, "value" )) !== undefined ) {
					return ret;
				}

				ret = elem.value;

				return typeof ret === "string" ?
					// Handle most common string cases
					ret.replace(rreturn, "") :
					// Handle cases where value is null/undef or number
					ret == null ? "" : ret;
			}

			return;
		}

		isFunction = jQuery.isFunction( value );

		return this.each(function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( isFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( jQuery.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				});
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		});
	}
});

jQuery.extend({
	valHooks: {
		option: {
			get: function( elem ) {
				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :
					// Support: IE10-11+
					// option.text throws exceptions (#14686, #14858)
					jQuery.trim( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one" || index < 0,
					values = one ? null : [],
					max = one ? index + 1 : options.length,
					i = index < 0 ?
						max :
						one ? index : 0;

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// IE6-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&
							// Don't return options that are disabled or in a disabled optgroup
							( support.optDisabled ? !option.disabled : option.getAttribute( "disabled" ) === null ) &&
							( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];
					if ( (option.selected = jQuery.inArray( option.value, values ) >= 0) ) {
						optionSet = true;
					}
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
});

// Radios and checkboxes getter/setter
jQuery.each([ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( jQuery.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute("value") === null ? "on" : elem.value;
		};
	}
});




// Return jQuery for attributes-only inclusion


jQuery.each( ("blur focus focusin focusout load resize scroll unload click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};
});

jQuery.fn.extend({
	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	},

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {
		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ? this.off( selector, "**" ) : this.off( types, selector || "**", fn );
	}
});


var nonce = jQuery.now();

var rquery = (/\?/);



// Support: Android 2.3
// Workaround failure to string-cast null input
jQuery.parseJSON = function( data ) {
	return JSON.parse( data + "" );
};


// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml, tmp;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE9
	try {
		tmp = new DOMParser();
		xml = tmp.parseFromString( data, "text/xml" );
	} catch ( e ) {
		xml = undefined;
	}

	if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};


var
	rhash = /#.*$/,
	rts = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,
	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,
	rurl = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Document location
	ajaxLocation = window.location.href,

	// Segment location into parts
	ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];

		if ( jQuery.isFunction( func ) ) {
			// For each dataType in the dataTypeExpression
			while ( (dataType = dataTypes[i++]) ) {
				// Prepend if requested
				if ( dataType[0] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					(structure[ dataType ] = structure[ dataType ] || []).unshift( func );

				// Otherwise append
				} else {
					(structure[ dataType ] = structure[ dataType ] || []).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[ dataTypeOrTransport ] ) {
				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		});
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {
		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[0] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}
		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},
		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

		// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {
								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s[ "throws" ] ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return { state: "parsererror", error: conv ? e : "No conversion from " + prev + " to " + current };
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend({

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: ajaxLocation,
		type: "GET",
		isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",
		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /xml/,
			html: /html/,
			json: /json/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": jQuery.parseJSON,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,
			// URL without anti-cache param
			cacheURL,
			// Response headers
			responseHeadersString,
			responseHeaders,
			// timeout handle
			timeoutTimer,
			// Cross-domain detection vars
			parts,
			// To know if global events are to be dispatched
			fireGlobals,
			// Loop variable
			i,
			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),
			// Callbacks context
			callbackContext = s.context || s,
			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context && ( callbackContext.nodeType || callbackContext.jquery ) ?
				jQuery( callbackContext ) :
				jQuery.event,
			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks("once memory"),
			// Status-dependent callbacks
			statusCode = s.statusCode || {},
			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},
			// The jqXHR state
			state = 0,
			// Default abort message
			strAbort = "canceled",
			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( state === 2 ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( (match = rheaders.exec( responseHeadersString )) ) {
								responseHeaders[ match[1].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match == null ? null : match;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return state === 2 ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					var lname = name.toLowerCase();
					if ( !state ) {
						name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( !state ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( state < 2 ) {
							for ( code in map ) {
								// Lazy-add the new callback in a way that preserves old ones
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						} else {
							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR ).complete = completeDeferred.add;
		jqXHR.success = jqXHR.done;
		jqXHR.error = jqXHR.fail;

		// Remove hash character (#7531: and string promotion)
		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || ajaxLocation ) + "" ).replace( rhash, "" )
			.replace( rprotocol, ajaxLocParts[ 1 ] + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().match( rnotwhite ) || [ "" ];

		// A cross-domain request is in order when we have a protocol:host:port mismatch
		if ( s.crossDomain == null ) {
			parts = rurl.exec( s.url.toLowerCase() );
			s.crossDomain = !!( parts &&
				( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||
					( parts[ 3 ] || ( parts[ 1 ] === "http:" ? "80" : "443" ) ) !==
						( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? "80" : "443" ) ) )
			);
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( state === 2 ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger("ajaxStart");
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		cacheURL = s.url;

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// If data is available, append data to url
			if ( s.data ) {
				cacheURL = ( s.url += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data );
				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add anti-cache in url if needed
			if ( s.cache === false ) {
				s.url = rts.test( cacheURL ) ?

					// If there is already a '_' parameter, set its value
					cacheURL.replace( rts, "$1_=" + nonce++ ) :

					// Otherwise add one to the end
					cacheURL + ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + nonce++;
			}
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?
				s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {
			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		for ( i in { success: 1, error: 1, complete: 1 } ) {
			jqXHR[ i ]( s[ i ] );
		}

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}
			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = setTimeout(function() {
					jqXHR.abort("timeout");
				}, s.timeout );
			}

			try {
				state = 1;
				transport.send( requestHeaders, done );
			} catch ( e ) {
				// Propagate exception as error if not done
				if ( state < 2 ) {
					done( -1, e );
				// Simply rethrow otherwise
				} else {
					throw e;
				}
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Called once
			if ( state === 2 ) {
				return;
			}

			// State is "done" now
			state = 2;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader("Last-Modified");
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader("etag");
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {
				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );
				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger("ajaxStop");
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
});

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {
		// Shift arguments if data argument was omitted
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		return jQuery.ajax({
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		});
	};
});


jQuery._evalUrl = function( url ) {
	return jQuery.ajax({
		url: url,
		type: "GET",
		dataType: "script",
		async: false,
		global: false,
		"throws": true
	});
};


jQuery.fn.extend({
	wrapAll: function( html ) {
		var wrap;

		if ( jQuery.isFunction( html ) ) {
			return this.each(function( i ) {
				jQuery( this ).wrapAll( html.call(this, i) );
			});
		}

		if ( this[ 0 ] ) {

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map(function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			}).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function( i ) {
				jQuery( this ).wrapInner( html.call(this, i) );
			});
		}

		return this.each(function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		});
	},

	wrap: function( html ) {
		var isFunction = jQuery.isFunction( html );

		return this.each(function( i ) {
			jQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );
		});
	},

	unwrap: function() {
		return this.parent().each(function() {
			if ( !jQuery.nodeName( this, "body" ) ) {
				jQuery( this ).replaceWith( this.childNodes );
			}
		}).end();
	}
});


jQuery.expr.filters.hidden = function( elem ) {
	// Support: Opera <= 12.12
	// Opera reports offsetWidths and offsetHeights less than zero on some elements
	return elem.offsetWidth <= 0 && elem.offsetHeight <= 0;
};
jQuery.expr.filters.visible = function( elem ) {
	return !jQuery.expr.filters.hidden( elem );
};




var r20 = /%20/g,
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( jQuery.isArray( obj ) ) {
		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {
				// Treat each array item as a scalar.
				add( prefix, v );

			} else {
				// Item is non-scalar (array or object), encode its numeric index.
				buildParams( prefix + "[" + ( typeof v === "object" ? i : "" ) + "]", v, traditional, add );
			}
		});

	} else if ( !traditional && jQuery.type( obj ) === "object" ) {
		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {
		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, value ) {
			// If value is a function, invoke it and return its value
			value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
			s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
		};

	// Set traditional to true for jQuery <= 1.3.2 behavior.
	if ( traditional === undefined ) {
		traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {
		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		});

	} else {
		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" ).replace( r20, "+" );
};

jQuery.fn.extend({
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map(function() {
			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		})
		.filter(function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		})
		.map(function( i, elem ) {
			var val = jQuery( this ).val();

			return val == null ?
				null :
				jQuery.isArray( val ) ?
					jQuery.map( val, function( val ) {
						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
					}) :
					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		}).get();
	}
});


jQuery.ajaxSettings.xhr = function() {
	try {
		return new XMLHttpRequest();
	} catch( e ) {}
};

var xhrId = 0,
	xhrCallbacks = {},
	xhrSuccessStatus = {
		// file protocol always yields status code 0, assume 200
		0: 200,
		// Support: IE9
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

// Support: IE9
// Open requests must be manually aborted on unload (#5280)
// See https://support.microsoft.com/kb/2856746 for more info
if ( window.attachEvent ) {
	window.attachEvent( "onunload", function() {
		for ( var key in xhrCallbacks ) {
			xhrCallbacks[ key ]();
		}
	});
}

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport(function( options ) {
	var callback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr(),
					id = ++xhrId;

				xhr.open( options.type, options.url, options.async, options.username, options.password );

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers["X-Requested-With"] ) {
					headers["X-Requested-With"] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							delete xhrCallbacks[ id ];
							callback = xhr.onload = xhr.onerror = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {
								complete(
									// file: protocol always yields status 0; see #8605, #14207
									xhr.status,
									xhr.statusText
								);
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,
									// Support: IE9
									// Accessing binary-data responseText throws an exception
									// (#11426)
									typeof xhr.responseText === "string" ? {
										text: xhr.responseText
									} : undefined,
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				xhr.onerror = callback("error");

				// Create the abort callback
				callback = xhrCallbacks[ id ] = callback("abort");

				try {
					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {
					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
});




// Install script dataType
jQuery.ajaxSetup({
	accepts: {
		script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /(?:java|ecma)script/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
});

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
});

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {
	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery("<script>").prop({
					async: true,
					charset: s.scriptCharset,
					src: s.url
				}).on(
					"load error",
					callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					}
				);
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
});




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup({
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
});

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" && !( s.contentType || "" ).indexOf("application/x-www-form-urlencoded") && rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters["script json"] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always(function() {
			// Restore preexisting value
			window[ callbackName ] = overwritten;

			// Save back as free
			if ( s[ callbackName ] ) {
				// make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && jQuery.isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		});

		// Delegate to script
		return "script";
	}
});




// data: string of html
// context (optional): If specified, the fragment will be created in this context, defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( !data || typeof data !== "string" ) {
		return null;
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}
	context = context || document;

	var parsed = rsingleTag.exec( data ),
		scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[1] ) ];
	}

	parsed = jQuery.buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


// Keep a copy of the old load method
var _load = jQuery.fn.load;

/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	if ( typeof url !== "string" && _load ) {
		return _load.apply( this, arguments );
	}

	var selector, type, response,
		self = this,
		off = url.indexOf(" ");

	if ( off >= 0 ) {
		selector = jQuery.trim( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( jQuery.isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax({
			url: url,

			// if "type" variable is undefined, then "GET" method will be used
			type: type,
			dataType: "html",
			data: params
		}).done(function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery("<div>").append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		}).complete( callback && function( jqXHR, status ) {
			self.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );
		});
	}

	return this;
};




// Attach a bunch of functions for handling common AJAX events
jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function( i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
});




jQuery.expr.filters.animated = function( elem ) {
	return jQuery.grep(jQuery.timers, function( fn ) {
		return elem === fn.elem;
	}).length;
};




var docElem = window.document.documentElement;

/**
 * Gets a window from an element
 */
function getWindow( elem ) {
	return jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;
}

jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf("auto") > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {
			options = options.call( elem, i, curOffset );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend({
	offset: function( options ) {
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each(function( i ) {
					jQuery.offset.setOffset( this, options, i );
				});
		}

		var docElem, win,
			elem = this[ 0 ],
			box = { top: 0, left: 0 },
			doc = elem && elem.ownerDocument;

		if ( !doc ) {
			return;
		}

		docElem = doc.documentElement;

		// Make sure it's not a disconnected DOM node
		if ( !jQuery.contains( docElem, elem ) ) {
			return box;
		}

		// Support: BlackBerry 5, iOS 3 (original iPhone)
		// If we don't have gBCR, just use 0,0 rather than error
		if ( typeof elem.getBoundingClientRect !== strundefined ) {
			box = elem.getBoundingClientRect();
		}
		win = getWindow( doc );
		return {
			top: box.top + win.pageYOffset - docElem.clientTop,
			left: box.left + win.pageXOffset - docElem.clientLeft
		};
	},

	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is its only offset parent
		if ( jQuery.css( elem, "position" ) === "fixed" ) {
			// Assume getBoundingClientRect is there when computed position is fixed
			offset = elem.getBoundingClientRect();

		} else {
			// Get *real* offsetParent
			offsetParent = this.offsetParent();

			// Get correct offsets
			offset = this.offset();
			if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {
				parentOffset = offsetParent.offset();
			}

			// Add offsetParent borders
			parentOffset.top += jQuery.css( offsetParent[ 0 ], "borderTopWidth", true );
			parentOffset.left += jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true );
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	offsetParent: function() {
		return this.map(function() {
			var offsetParent = this.offsetParent || docElem;

			while ( offsetParent && ( !jQuery.nodeName( offsetParent, "html" ) && jQuery.css( offsetParent, "position" ) === "static" ) ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || docElem;
		});
	}
});

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {
			var win = getWindow( elem );

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : window.pageXOffset,
					top ? val : window.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length, null );
	};
});

// Support: Safari<7+, Chrome<37+
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );
				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
});


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( jQuery.isWindow( elem ) ) {
					// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there
					// isn't a whole lot we can do. See pull request at this URL for discussion:
					// https://github.com/jquery/jquery/pull/764
					return elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?
					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable, null );
		};
	});
});


// The number of elements contained in the matched element set
jQuery.fn.size = function() {
	return this.length;
};

jQuery.fn.andSelf = jQuery.fn.addBack;




// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( typeof define === "function" && define.amd ) {
	define( "jquery", [], function() {
		return jQuery;
	});
}




var
	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( typeof noGlobal === strundefined ) {
	window.jQuery = window.$ = jQuery;
}




return jQuery;

}));

},{}],18:[function(require,module,exports){
/*!
 * jQuery JavaScript Library v2.2.4
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2016-05-20T17:23Z
 */

(function( global, factory ) {

	if ( typeof module === "object" && typeof module.exports === "object" ) {
		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
}(typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Support: Firefox 18+
// Can't be in strict mode, several libs including ASP.NET trace
// the stack via arguments.caller.callee and Firefox dies if
// you try to trace through "use strict" call chains. (#13335)
//"use strict";
var arr = [];

var document = window.document;

var slice = arr.slice;

var concat = arr.concat;

var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var support = {};



var
	version = "2.2.4",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	},

	// Support: Android<4.1
	// Make sure we trim BOM and NBSP
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

	// Matches dashed string for camelizing
	rmsPrefix = /^-ms-/,
	rdashAlpha = /-([\da-z])/gi,

	// Used by jQuery.camelCase as callback to replace()
	fcamelCase = function( all, letter ) {
		return letter.toUpperCase();
	};

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// Start with an empty selector
	selector: "",

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {
		return num != null ?

			// Return just the one element from the set
			( num < 0 ? this[ num + this.length ] : this[ num ] ) :

			// Return all the elements in a clean array
			slice.call( this );
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;
		ret.context = this.context;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = jQuery.isArray( copy ) ) ) ) {

					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && jQuery.isArray( src ) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject( src ) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isFunction: function( obj ) {
		return jQuery.type( obj ) === "function";
	},

	isArray: Array.isArray,

	isWindow: function( obj ) {
		return obj != null && obj === obj.window;
	},

	isNumeric: function( obj ) {

		// parseFloat NaNs numeric-cast false positives (null|true|false|"")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		// adding 1 corrects loss of precision from parseFloat (#15100)
		var realStringObj = obj && obj.toString();
		return !jQuery.isArray( obj ) && ( realStringObj - parseFloat( realStringObj ) + 1 ) >= 0;
	},

	isPlainObject: function( obj ) {
		var key;

		// Not plain objects:
		// - Any object or value whose internal [[Class]] property is not "[object Object]"
		// - DOM nodes
		// - window
		if ( jQuery.type( obj ) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
			return false;
		}

		// Not own constructor property must be Object
		if ( obj.constructor &&
				!hasOwn.call( obj, "constructor" ) &&
				!hasOwn.call( obj.constructor.prototype || {}, "isPrototypeOf" ) ) {
			return false;
		}

		// Own properties are enumerated firstly, so to speed up,
		// if last one is own, then all properties are own
		for ( key in obj ) {}

		return key === undefined || hasOwn.call( obj, key );
	},

	isEmptyObject: function( obj ) {
		var name;
		for ( name in obj ) {
			return false;
		}
		return true;
	},

	type: function( obj ) {
		if ( obj == null ) {
			return obj + "";
		}

		// Support: Android<4.0, iOS<6 (functionish RegExp)
		return typeof obj === "object" || typeof obj === "function" ?
			class2type[ toString.call( obj ) ] || "object" :
			typeof obj;
	},

	// Evaluates a script in a global context
	globalEval: function( code ) {
		var script,
			indirect = eval;

		code = jQuery.trim( code );

		if ( code ) {

			// If the code includes a valid, prologue position
			// strict mode pragma, execute code by injecting a
			// script tag into the document.
			if ( code.indexOf( "use strict" ) === 1 ) {
				script = document.createElement( "script" );
				script.text = code;
				document.head.appendChild( script ).parentNode.removeChild( script );
			} else {

				// Otherwise, avoid the DOM node creation, insertion
				// and removal by using an indirect global eval

				indirect( code );
			}
		}
	},

	// Convert dashed to camelCase; used by the css and data modules
	// Support: IE9-11+
	// Microsoft forgot to hump their vendor prefix (#9572)
	camelCase: function( string ) {
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// Support: Android<4.1
	trim: function( text ) {
		return text == null ?
			"" :
			( text + "" ).replace( rtrim, "" );
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// Bind a function to a context, optionally partially applying any
	// arguments.
	proxy: function( fn, context ) {
		var tmp, args, proxy;

		if ( typeof context === "string" ) {
			tmp = fn[ context ];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if ( !jQuery.isFunction( fn ) ) {
			return undefined;
		}

		// Simulated bind
		args = slice.call( arguments, 2 );
		proxy = function() {
			return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
		};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || jQuery.guid++;

		return proxy;
	},

	now: Date.now,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

// JSHint would error on this code due to the Symbol not being defined in ES5.
// Defining this global in .jshintrc would create a danger of using the global
// unguarded in another place, it seems safer to just disable JSHint for these
// three lines.
/* jshint ignore: start */
if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}
/* jshint ignore: end */

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
function( i, name ) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
} );

function isArrayLike( obj ) {

	// Support: iOS 8.2 (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = jQuery.type( obj );

	if ( type === "function" || jQuery.isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.2.1
 * http://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2015-10-17
 */
(function( window ) {

var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// General-purpose constants
	MAX_NEGATIVE = 1 << 31,

	// Instance methods
	hasOwn = ({}).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	push_native = arr.push,
	push = arr.push,
	slice = arr.slice,
	// Use a stripped-down indexOf as it's faster than native
	// http://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +
		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +
		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
		"*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +
		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

	rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,
	rescape = /'|\\/g,

	// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
	funescape = function( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox<24
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			high < 0 ?
				// BMP codepoint
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	};

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		(arr = slice.call( preferredDoc.childNodes )),
		preferredDoc.childNodes
	);
	// Support: Android<4.0
	// Detect silently failing push.apply
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			push_native.apply( target, slice.call(els) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;
			// Can't trust NodeList.length
			while ( (target[j++] = els[i++]) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, nidselect, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {

		if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
			setDocument( context );
		}
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {

				// ID selector
				if ( (m = match[1]) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( (elem = context.getElementById( m )) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && (elem = newContext.getElementById( m )) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[2] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( (m = match[3]) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!compilerCache[ selector + " " ] &&
				(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {

				if ( nodeType !== 1 ) {
					newContext = context;
					newSelector = selector;

				// qSA looks outside Element context, which is not what we want
				// Thanks to Andrew Dupont for this workaround technique
				// Support: IE <=8
				// Exclude object elements
				} else if ( context.nodeName.toLowerCase() !== "object" ) {

					// Capture the context ID, setting it first if necessary
					if ( (nid = context.getAttribute( "id" )) ) {
						nid = nid.replace( rescape, "\\$&" );
					} else {
						context.setAttribute( "id", (nid = expando) );
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					nidselect = ridentifier.test( nid ) ? "#" + nid : "[id='" + nid + "']";
					while ( i-- ) {
						groups[i] = nidselect + " " + toSelector( groups[i] );
					}
					newSelector = groups.join( "," );

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;
				}

				if ( newSelector ) {
					try {
						push.apply( results,
							newContext.querySelectorAll( newSelector )
						);
						return results;
					} catch ( qsaError ) {
					} finally {
						if ( nid === expando ) {
							context.removeAttribute( "id" );
						}
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {
		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {
			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return (cache[ key + " " ] = value);
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created div and expects a boolean result
 */
function assert( fn ) {
	var div = document.createElement("div");

	try {
		return !!fn( div );
	} catch (e) {
		return false;
	} finally {
		// Remove from its parent by default
		if ( div.parentNode ) {
			div.parentNode.removeChild( div );
		}
		// release memory in IE
		div = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split("|"),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[i] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			( ~b.sourceIndex || MAX_NEGATIVE ) -
			( ~a.sourceIndex || MAX_NEGATIVE );

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( (cur = cur.nextSibling) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, parent,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9-11, Edge
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	if ( (parent = document.defaultView) && parent.top !== parent ) {
		// Support: IE 11
		if ( parent.addEventListener ) {
			parent.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( parent.attachEvent ) {
			parent.attachEvent( "onunload", unloadHandler );
		}
	}

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert(function( div ) {
		div.className = "i";
		return !div.getAttribute("className");
	});

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert(function( div ) {
		div.appendChild( document.createComment("") );
		return !div.getElementsByTagName("*").length;
	});

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert(function( div ) {
		docElem.appendChild( div ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	});

	// ID find and filter
	if ( support.getById ) {
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var m = context.getElementById( id );
				return m ? [ m ] : [];
			}
		};
		Expr.filter["ID"] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute("id") === attrId;
			};
		};
	} else {
		// Support: IE6/7
		// getElementById is not reliable as a find shortcut
		delete Expr.find["ID"];

		Expr.filter["ID"] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode("id");
				return node && node.value === attrId;
			};
		};
	}

	// Tag
	Expr.find["TAG"] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,
				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( (elem = results[i++]) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See http://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( (support.qsa = rnative.test( document.querySelectorAll )) ) {
		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( div ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// http://bugs.jquery.com/ticket/12359
			docElem.appendChild( div ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( div.querySelectorAll("[msallowcapture^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !div.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !div.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push("~=");
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !div.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibing-combinator selector` fails
			if ( !div.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push(".#.+[+~]");
			}
		});

		assert(function( div ) {
			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement("input");
			input.setAttribute( "type", "hidden" );
			div.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( div.querySelectorAll("[name=d]").length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( !div.querySelectorAll(":enabled").length ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Opera 10-11 does not throw on post-comma invalid pseudos
			div.querySelectorAll("*,:x");
			rbuggyQSA.push(",.*:");
		});
	}

	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector) )) ) {

		assert(function( div ) {
			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( div, "div" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( div, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		});
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			));
		} :
		function( a, b ) {
			if ( b ) {
				while ( (b = b.parentNode) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

			// Choose the first element that is related to our preferred document
			if ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
				return -1;
			}
			if ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {
		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {
			return a === document ? -1 :
				b === document ? 1 :
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( (cur = cur.parentNode) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( (cur = cur.parentNode) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[i] === bp[i] ) {
			i++;
		}

		return i ?
			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[i], bp[i] ) :

			// Otherwise nodes in our document sort first
			ap[i] === preferredDoc ? -1 :
			bp[i] === preferredDoc ? 1 :
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	// Make sure that attribute selectors are quoted
	expr = expr.replace( rattributeQuotes, "='$1']" );

	if ( support.matchesSelector && documentIsHTML &&
		!compilerCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||
					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch (e) {}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {
	// Set document vars if needed
	if ( ( context.ownerDocument || context ) !== document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],
		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			(val = elem.getAttributeNode(name)) && val.specified ?
				val.value :
				null;
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( (elem = results[i++]) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {
		// If no nodeType, this is expected to be an array
		while ( (node = elem[i++]) ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {
			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}
	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1].slice( 0, 3 ) === "nth" ) {
				// nth-* requires argument
				if ( !match[3] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

			// other types prohibit arguments
			} else if ( match[3] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[6] && match[2];

			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[3] ) {
				match[2] = match[4] || match[5] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&
				// Get excess from tokenize (recursively)
				(excess = tokenize( unquoted, true )) &&
				// advance to the next closing parenthesis
				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

				// excess is a negative index
				match[0] = match[0].slice( 0, excess );
				match[2] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() { return true; } :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, what, argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( (node = node[ dir ]) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}
								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || (node[ expando ] = {});

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								(outerCache[ node.uniqueID ] = {});

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( (node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								(diff = nodeIndex = 0) || start.pop()) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {
							// Use previously-cached element index if available
							if ( useCache ) {
								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || (node[ expando ] = {});

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									(outerCache[ node.uniqueID ] = {});

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {
								// Use the same loop as above to seek `elem` from the start
								while ( (node = ++nodeIndex && node && node[ dir ] ||
									(diff = nodeIndex = 0) || start.pop()) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] || (node[ expando ] = {});

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												(outerCache[ node.uniqueID ] = {});

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		// Potentially complex pseudos
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					// Don't keep the element (issue #299)
					input[0] = null;
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {
			// lang value must be a valid identifier
			if ( !ridentifier.test(lang || "") ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( (elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
				return false;
			};
		}),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		// Boolean properties
		"enabled": function( elem ) {
			return elem.disabled === false;
		},

		"disabled": function( elem ) {
			return elem.disabled === true;
		},

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( (tokens = []) );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			matched = match.shift();
			tokens.push({
				value: matched,
				// Cast descendant combinators to space
				type: match[0].replace( rtrim, " " )
			});
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					type: type,
					matches: match
				});
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[i].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		checkNonElements = base && dir === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || (elem[ expando ] = {});

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});

						if ( (oldCache = uniqueCache[ dir ]) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return (newCache[ 2 ] = oldCache[ 2 ]);
						} else {
							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ dir ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
								return true;
							}
						}
					}
				}
			}
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(
						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,
				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
				len = elems.length;

			if ( outermost ) {
				outermostContext = context === document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;
					if ( !context && elem.ownerDocument !== document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( (matcher = elementMatchers[j++]) ) {
						if ( matcher( elem, context || document, xml) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( (matcher = setMatchers[j++]) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( (selector = compiled.selector || selector) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[0] = match[0].slice( 0 );
		if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
				support.getById && context.nodeType === 9 && documentIsHTML &&
				Expr.relative[ tokens[1].type ] ) {

			context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[i];

			// Abort if we hit a combinator
			if ( Expr.relative[ (type = token.type) ] ) {
				break;
			}
			if ( (find = Expr.find[ type ]) ) {
				// Search, expanding context for leading sibling combinators
				if ( (seed = find(
					token.matches[0].replace( runescape, funescape ),
					rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
				)) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( div1 ) {
	// Should return 1, but returns 4 (following)
	return div1.compareDocumentPosition( document.createElement("div") ) & 1;
});

// Support: IE<8
// Prevent attribute/property "interpolation"
// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( div ) {
	div.innerHTML = "<a href='#'></a>";
	return div.firstChild.getAttribute("href") === "#" ;
}) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	});
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( div ) {
	div.innerHTML = "<input/>";
	div.firstChild.setAttribute( "value", "" );
	return div.firstChild.getAttribute( "value" ) === "";
}) ) {
	addHandle( "value", function( elem, name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	});
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( div ) {
	return div.getAttribute("disabled") == null;
}) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
					(val = elem.getAttributeNode( name )) && val.specified ?
					val.value :
				null;
		}
	});
}

return Sizzle;

})( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;



var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;

var rsingleTag = ( /^<([\w-]+)\s*\/?>(?:<\/\1>|)$/ );



var risSimple = /^.[^:#\[\.,]*$/;

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			/* jshint -W018 */
			return !!qualifier.call( elem, i, elem ) !== not;
		} );

	}

	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );

	}

	if ( typeof qualifier === "string" ) {
		if ( risSimple.test( qualifier ) ) {
			return jQuery.filter( qualifier, elements, not );
		}

		qualifier = jQuery.filter( qualifier, elements );
	}

	return jQuery.grep( elements, function( elem ) {
		return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
	} );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	return elems.length === 1 && elem.nodeType === 1 ?
		jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :
		jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
			return elem.nodeType === 1;
		} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i,
			len = this.length,
			ret = [],
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		// Needed because $( selector, context ) becomes $( context ).find( selector )
		ret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );
		ret.selector = this.selector ? this.selector + " " + selector : selector;
		return ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( jQuery.isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					// Support: Blackberry 4.6
					// gEBID returns nodes no longer in the document (#6963)
					if ( elem && elem.parentNode ) {

						// Inject the element directly into the jQuery object
						this.length = 1;
						this[ 0 ] = elem;
					}

					this.context = document;
					this.selector = selector;
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this.context = this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		if ( selector.selector !== undefined ) {
			this.selector = selector.selector;
			this.context = selector.context;
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			pos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?
				jQuery( selectors, context || this.context ) :
				0;

		for ( ; i < l; i++ ) {
			for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

				// Always skip document fragments
				if ( cur.nodeType < 11 && ( pos ?
					pos.index( cur ) > -1 :

					// Don't pass non-elements to Sizzle
					cur.nodeType === 1 &&
						jQuery.find.matchesSelector( cur, selectors ) ) ) {

					matched.push( cur );
					break;
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
		return elem.contentDocument || jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnotwhite = ( /\S+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( jQuery.isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && jQuery.type( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, listener list, final state
				[ "resolve", "done", jQuery.Callbacks( "once memory" ), "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ), "rejected" ],
				[ "notify", "progress", jQuery.Callbacks( "memory" ) ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				then: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;
					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {
							var fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];

							// deferred[ done | fail | progress ] for forwarding actions to newDefer
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && jQuery.isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this === promise ? newDefer.promise() : this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Keep pipe for back-compat
		promise.pipe = promise.then;

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 3 ];

			// promise[ done | fail | progress ] = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add( function() {

					// state = [ resolved | rejected ]
					state = stateString;

				// [ reject_list | resolve_list ].disable; progress_list.lock
				}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );
			}

			// deferred[ resolve | reject | notify ]
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? promise : this, arguments );
				return this;
			};
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( subordinate /* , ..., subordinateN */ ) {
		var i = 0,
			resolveValues = slice.call( arguments ),
			length = resolveValues.length,

			// the count of uncompleted subordinates
			remaining = length !== 1 ||
				( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,

			// the master Deferred.
			// If resolveValues consist of only a single Deferred, just use that.
			deferred = remaining === 1 ? subordinate : jQuery.Deferred(),

			// Update function for both resolve and progress values
			updateFunc = function( i, contexts, values ) {
				return function( value ) {
					contexts[ i ] = this;
					values[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( values === progressValues ) {
						deferred.notifyWith( contexts, values );
					} else if ( !( --remaining ) ) {
						deferred.resolveWith( contexts, values );
					}
				};
			},

			progressValues, progressContexts, resolveContexts;

		// Add listeners to Deferred subordinates; treat others as resolved
		if ( length > 1 ) {
			progressValues = new Array( length );
			progressContexts = new Array( length );
			resolveContexts = new Array( length );
			for ( ; i < length; i++ ) {
				if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {
					resolveValues[ i ].promise()
						.progress( updateFunc( i, progressContexts, progressValues ) )
						.done( updateFunc( i, resolveContexts, resolveValues ) )
						.fail( deferred.reject );
				} else {
					--remaining;
				}
			}
		}

		// If we're not waiting on anything, resolve the master
		if ( !remaining ) {
			deferred.resolveWith( resolveContexts, resolveValues );
		}

		return deferred.promise();
	}
} );


// The deferred used on DOM ready
var readyList;

jQuery.fn.ready = function( fn ) {

	// Add the callback
	jQuery.ready.promise().done( fn );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Hold (or release) the ready event
	holdReady: function( hold ) {
		if ( hold ) {
			jQuery.readyWait++;
		} else {
			jQuery.ready( true );
		}
	},

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );

		// Trigger any bound ready events
		if ( jQuery.fn.triggerHandler ) {
			jQuery( document ).triggerHandler( "ready" );
			jQuery( document ).off( "ready" );
		}
	}
} );

/**
 * The ready event handler and self cleanup method
 */
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

jQuery.ready.promise = function( obj ) {
	if ( !readyList ) {

		readyList = jQuery.Deferred();

		// Catch cases where $(document).ready() is called
		// after the browser event has already occurred.
		// Support: IE9-10 only
		// Older IE sometimes signals "interactive" too soon
		if ( document.readyState === "complete" ||
			( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

			// Handle it asynchronously to allow scripts the opportunity to delay ready
			window.setTimeout( jQuery.ready );

		} else {

			// Use the handy event callback
			document.addEventListener( "DOMContentLoaded", completed );

			// A fallback to window.onload, that will always work
			window.addEventListener( "load", completed );
		}
	}
	return readyList.promise( obj );
};

// Kick off the DOM ready check even if the user does not
jQuery.ready.promise();




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( jQuery.type( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !jQuery.isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
					value :
					value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	return chainable ?
		elems :

		// Gets
		bulk ?
			fn.call( elems ) :
			len ? fn( elems[ 0 ], key ) : emptyGet;
};
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	/* jshint -W018 */
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	register: function( owner, initial ) {
		var value = initial || {};

		// If it is a node unlikely to be stringify-ed or looped over
		// use plain assignment
		if ( owner.nodeType ) {
			owner[ this.expando ] = value;

		// Otherwise secure it in a non-enumerable, non-writable property
		// configurability must be true to allow the property to be
		// deleted with the delete operator
		} else {
			Object.defineProperty( owner, this.expando, {
				value: value,
				writable: true,
				configurable: true
			} );
		}
		return owner[ this.expando ];
	},
	cache: function( owner ) {

		// We can accept data for non-element nodes in modern browsers,
		// but we should not, see #8335.
		// Always return an empty object.
		if ( !acceptData( owner ) ) {
			return {};
		}

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		if ( typeof data === "string" ) {
			cache[ data ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ prop ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :
			owner[ this.expando ] && owner[ this.expando ][ key ];
	},
	access: function( owner, key, value ) {
		var stored;

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			stored = this.get( owner, key );

			return stored !== undefined ?
				stored : this.get( owner, jQuery.camelCase( key ) );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i, name, camel,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key === undefined ) {
			this.register( owner );

		} else {

			// Support array or space separated string of keys
			if ( jQuery.isArray( key ) ) {

				// If "name" is an array of keys...
				// When data is initially created, via ("key", "val") signature,
				// keys will be converted to camelCase.
				// Since there is no way to tell _how_ a key was added, remove
				// both plain key and camelCase key. #12786
				// This will only penalize the array argument path.
				name = key.concat( key.map( jQuery.camelCase ) );
			} else {
				camel = jQuery.camelCase( key );

				// Try the string as a key before any manipulation
				if ( key in cache ) {
					name = [ key, camel ];
				} else {

					// If a key with the spaces exists, use it.
					// Otherwise, create an array by matching non-whitespace
					name = camel;
					name = name in cache ?
						[ name ] : ( name.match( rnotwhite ) || [] );
				}
			}

			i = name.length;

			while ( i-- ) {
				delete cache[ name[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <= 35-45+
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://code.google.com/p/chromium/issues/detail?id=378607
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = data === "true" ? true :
					data === "false" ? false :
					data === "null" ? null :

					// Only convert to a number if it doesn't change the string
					+data + "" === data ? +data :
					rbrace.test( data ) ? jQuery.parseJSON( data ) :
					data;
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE11+
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = jQuery.camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data, camelKey;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// with the key as-is
				data = dataUser.get( elem, key ) ||

					// Try to find dashed key if it exists (gh-2779)
					// This is for 2.2.x only
					dataUser.get( elem, key.replace( rmultiDash, "-$&" ).toLowerCase() );

				if ( data !== undefined ) {
					return data;
				}

				camelKey = jQuery.camelCase( key );

				// Attempt to get data from the cache
				// with the key camelized
				data = dataUser.get( elem, camelKey );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, camelKey, undefined );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			camelKey = jQuery.camelCase( key );
			this.each( function() {

				// First, attempt to store a copy or reference of any
				// data that might've been store with a camelCased key.
				var data = dataUser.get( this, camelKey );

				// For HTML5 data-* attribute interop, we have to
				// store property names with dashes in a camelCase form.
				// This might not apply to all properties...*
				dataUser.set( this, camelKey, value );

				// *... In the case of properties that might _actually_
				// have dashes, we need to also store a copy of that
				// unchanged property.
				if ( key.indexOf( "-" ) > -1 && data !== undefined ) {
					dataUser.set( this, key, value );
				}
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || jQuery.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var isHidden = function( elem, el ) {

		// isHidden might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;
		return jQuery.css( elem, "display" ) === "none" ||
			!jQuery.contains( elem.ownerDocument, elem );
	};



function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted,
		scale = 1,
		maxIterations = 20,
		currentValue = tween ?
			function() { return tween.cur(); } :
			function() { return jQuery.css( elem, prop, "" ); },
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = ( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		do {

			// If previous iteration zeroed out, double until we get *something*.
			// Use string for doubling so we don't accidentally see scale as unchanged below
			scale = scale || ".5";

			// Adjust and apply
			initialInUnit = initialInUnit / scale;
			jQuery.style( elem, prop, initialInUnit + unit );

		// Update scale, tolerating zero or NaN from tween.cur()
		// Break the loop if scale is unchanged or perfect, or if we've just had enough.
		} while (
			scale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations
		);
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([\w:-]+)/ );

var rscriptType = ( /^$|\/(?:java|ecma)script/i );



// We have to close these tags to support XHTML (#13200)
var wrapMap = {

	// Support: IE9
	option: [ 1, "<select multiple='multiple'>", "</select>" ],

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

// Support: IE9
wrapMap.optgroup = wrapMap.option;

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;


function getAll( context, tag ) {

	// Support: IE9-11+
	// Use typeof to avoid zero-argument method invocation on host objects (#15151)
	var ret = typeof context.getElementsByTagName !== "undefined" ?
			context.getElementsByTagName( tag || "*" ) :
			typeof context.querySelectorAll !== "undefined" ?
				context.querySelectorAll( tag || "*" ) :
			[];

	return tag === undefined || tag && jQuery.nodeName( context, tag ) ?
		jQuery.merge( [ context ], ret ) :
		ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, contains, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( jQuery.type( elem ) === "object" ) {

				// Support: Android<4.1, PhantomJS<2
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android<4.1, PhantomJS<2
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (#12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		contains = jQuery.contains( elem.ownerDocument, elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( contains ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0-4.3, Safari<=5.1
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Safari<=5.1, Android<4.2
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE<=11+
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;
} )();


var
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE9
// See #13393 for more info
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Don't attach events to noData or text/comment nodes (but allow plain objects)
		if ( !elemData ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = {};
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnotwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnotwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( event ) {

		// Make a writable jQuery.Event from the native event object
		event = jQuery.event.fix( event );

		var i, j, ret, matched, handleObj,
			handlerQueue = [],
			args = slice.call( arguments ),
			handlers = ( dataPriv.get( this, "events" ) || {} )[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;
		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// Triggered event must either 1) have no namespace, or 2) have namespace(s)
				// a subset or equal to those in the bound event (both can have no namespace).
				if ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, matches, sel, handleObj,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Support (at least): Chrome, IE9
		// Find delegate handlers
		// Black-hole SVG <use> instance trees (#13180)
		//
		// Support: Firefox<=42+
		// Avoid non-left-click in FF but don't block IE radio events (#3861, gh-2343)
		if ( delegateCount && cur.nodeType &&
			( event.type !== "click" || isNaN( event.button ) || event.button < 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && ( cur.disabled !== true || event.type !== "click" ) ) {
					matches = [];
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matches[ sel ] === undefined ) {
							matches[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matches[ sel ] ) {
							matches.push( handleObj );
						}
					}
					if ( matches.length ) {
						handlerQueue.push( { elem: cur, handlers: matches } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: this, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	// Includes some event props shared by KeyEvent and MouseEvent
	props: ( "altKey bubbles cancelable ctrlKey currentTarget detail eventPhase " +
		"metaKey relatedTarget shiftKey target timeStamp view which" ).split( " " ),

	fixHooks: {},

	keyHooks: {
		props: "char charCode key keyCode".split( " " ),
		filter: function( event, original ) {

			// Add which for key events
			if ( event.which == null ) {
				event.which = original.charCode != null ? original.charCode : original.keyCode;
			}

			return event;
		}
	},

	mouseHooks: {
		props: ( "button buttons clientX clientY offsetX offsetY pageX pageY " +
			"screenX screenY toElement" ).split( " " ),
		filter: function( event, original ) {
			var eventDoc, doc, body,
				button = original.button;

			// Calculate pageX/Y if missing and clientX/Y available
			if ( event.pageX == null && original.clientX != null ) {
				eventDoc = event.target.ownerDocument || document;
				doc = eventDoc.documentElement;
				body = eventDoc.body;

				event.pageX = original.clientX +
					( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) -
					( doc && doc.clientLeft || body && body.clientLeft || 0 );
				event.pageY = original.clientY +
					( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) -
					( doc && doc.clientTop  || body && body.clientTop  || 0 );
			}

			// Add which for click: 1 === left; 2 === middle; 3 === right
			// Note: button is not normalized, so don't use it
			if ( !event.which && button !== undefined ) {
				event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
			}

			return event;
		}
	},

	fix: function( event ) {
		if ( event[ jQuery.expando ] ) {
			return event;
		}

		// Create a writable copy of the event object and normalize some properties
		var i, prop, copy,
			type = event.type,
			originalEvent = event,
			fixHook = this.fixHooks[ type ];

		if ( !fixHook ) {
			this.fixHooks[ type ] = fixHook =
				rmouseEvent.test( type ) ? this.mouseHooks :
				rkeyEvent.test( type ) ? this.keyHooks :
				{};
		}
		copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;

		event = new jQuery.Event( originalEvent );

		i = copy.length;
		while ( i-- ) {
			prop = copy[ i ];
			event[ prop ] = originalEvent[ prop ];
		}

		// Support: Cordova 2.5 (WebKit) (#13255)
		// All events should have a target; Cordova deviceready doesn't
		if ( !event.target ) {
			event.target = document;
		}

		// Support: Safari 6.0+, Chrome<28
		// Target should not be a text node (#504, #13143)
		if ( event.target.nodeType === 3 ) {
			event.target = event.target.parentNode;
		}

		return fixHook.filter ? fixHook.filter( event, originalEvent ) : event;
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		focus: {

			// Fire native event if possible so blur/focus sequence is correct
			trigger: function() {
				if ( this !== safeActiveElement() && this.focus ) {
					this.focus();
					return false;
				}
			},
			delegateType: "focusin"
		},
		blur: {
			trigger: function() {
				if ( this === safeActiveElement() && this.blur ) {
					this.blur();
					return false;
				}
			},
			delegateType: "focusout"
		},
		click: {

			// For checkbox, fire native event so checked state will be right
			trigger: function() {
				if ( this.type === "checkbox" && this.click && jQuery.nodeName( this, "input" ) ) {
					this.click();
					return false;
				}
			},

			// For cross-browser consistency, don't fire native .click() on links
			_default: function( event ) {
				return jQuery.nodeName( event.target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android<4.0
				src.returnValue === false ?
			returnTrue :
			returnFalse;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || jQuery.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://code.google.com/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {
	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,

	// Support: IE 10-11, Edge 10240+
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rscriptTypeMasked = /^true\/(.*)/,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

// Manipulating tables requires a tbody
function manipulationTarget( elem, content ) {
	return jQuery.nodeName( elem, "table" ) &&
		jQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ?

		elem.getElementsByTagName( "tbody" )[ 0 ] ||
			elem.appendChild( elem.ownerDocument.createElement( "tbody" ) ) :
		elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	var match = rscriptTypeMasked.exec( elem.type );

	if ( match ) {
		elem.type = match[ 1 ];
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.access( src );
		pdataCur = dataPriv.set( dest, pdataOld );
		events = pdataOld.events;

		if ( events ) {
			delete pdataCur.handle;
			pdataCur.events = {};

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = concat.apply( [], args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		isFunction = jQuery.isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( isFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( isFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android<4.1, PhantomJS<2
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl ) {
								jQuery._evalUrl( node.src );
							}
						} else {
							jQuery.globalEval( node.textContent.replace( rcleanScript, "" ) );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && jQuery.contains( node.ownerDocument, node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html.replace( rxhtmlTag, "<$1></$2>" );
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = jQuery.contains( elem.ownerDocument, elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <= 35-45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <= 35-45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {

	// Keep domManip exposed until 3.0 (gh-2225)
	domManip: domManip,

	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: QtWebKit
			// .get() because push.apply(_, arraylike) throws
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );


var iframe,
	elemdisplay = {

		// Support: Firefox
		// We have to pre-define these values for FF (#10227)
		HTML: "block",
		BODY: "block"
	};

/**
 * Retrieve the actual display of a element
 * @param {String} name nodeName of the element
 * @param {Object} doc Document object
 */

// Called only from within defaultDisplay
function actualDisplay( name, doc ) {
	var elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),

		display = jQuery.css( elem[ 0 ], "display" );

	// We don't have any data stored on the element,
	// so use "detach" method as fast way to get rid of the element
	elem.detach();

	return display;
}

/**
 * Try to determine the default display value of an element
 * @param {String} nodeName
 */
function defaultDisplay( nodeName ) {
	var doc = document,
		display = elemdisplay[ nodeName ];

	if ( !display ) {
		display = actualDisplay( nodeName, doc );

		// If the simple way fails, read from inside an iframe
		if ( display === "none" || !display ) {

			// Use the already-created iframe if possible
			iframe = ( iframe || jQuery( "<iframe frameborder='0' width='0' height='0'/>" ) )
				.appendTo( doc.documentElement );

			// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse
			doc = iframe[ 0 ].contentDocument;

			// Support: IE
			doc.write();
			doc.close();

			display = actualDisplay( nodeName, doc );
			iframe.detach();
		}

		// Store the correct default display
		elemdisplay[ nodeName ] = display;
	}

	return display;
}
var rmargin = ( /^margin/ );

var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {

		// Support: IE<=11+, Firefox<=30+ (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};

var swap = function( elem, options, callback, args ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.apply( elem, args || [] );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};


var documentElement = document.documentElement;



( function() {
	var pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE9-11+
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	container.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;" +
		"padding:0;margin-top:1px;position:absolute";
	container.appendChild( div );

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {
		div.style.cssText =

			// Support: Firefox<29, Android 2.3
			// Vendor-prefix box-sizing
			"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;" +
			"position:relative;display:block;" +
			"margin:auto;border:1px;padding:1px;" +
			"top:1%;width:50%";
		div.innerHTML = "";
		documentElement.appendChild( container );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";
		reliableMarginLeftVal = divStyle.marginLeft === "2px";
		boxSizingReliableVal = divStyle.width === "4px";

		// Support: Android 4.0 - 4.3 only
		// Some styles come back with percentage values, even though they shouldn't
		div.style.marginRight = "50%";
		pixelMarginRightVal = divStyle.marginRight === "4px";

		documentElement.removeChild( container );
	}

	jQuery.extend( support, {
		pixelPosition: function() {

			// This test is executed only once but we still do memoizing
			// since we can use the boxSizingReliable pre-computing.
			// No need to check if the test was already performed, though.
			computeStyleTests();
			return pixelPositionVal;
		},
		boxSizingReliable: function() {
			if ( boxSizingReliableVal == null ) {
				computeStyleTests();
			}
			return boxSizingReliableVal;
		},
		pixelMarginRight: function() {

			// Support: Android 4.0-4.3
			// We're checking for boxSizingReliableVal here instead of pixelMarginRightVal
			// since that compresses better and they're computed together anyway.
			if ( boxSizingReliableVal == null ) {
				computeStyleTests();
			}
			return pixelMarginRightVal;
		},
		reliableMarginLeft: function() {

			// Support: IE <=8 only, Android 4.0 - 4.3 only, Firefox <=3 - 37
			if ( boxSizingReliableVal == null ) {
				computeStyleTests();
			}
			return reliableMarginLeftVal;
		},
		reliableMarginRight: function() {

			// Support: Android 2.3
			// Check if div with explicit width and no margin-right incorrectly
			// gets computed margin-right based on width of container. (#3333)
			// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
			// This support function is only executed once so no memoizing is needed.
			var ret,
				marginDiv = div.appendChild( document.createElement( "div" ) );

			// Reset CSS: box-sizing; display; margin; border; padding
			marginDiv.style.cssText = div.style.cssText =

				// Support: Android 2.3
				// Vendor-prefix box-sizing
				"-webkit-box-sizing:content-box;box-sizing:content-box;" +
				"display:block;margin:0;border:0;padding:0";
			marginDiv.style.marginRight = marginDiv.style.width = "0";
			div.style.width = "1px";
			documentElement.appendChild( container );

			ret = !parseFloat( window.getComputedStyle( marginDiv ).marginRight );

			documentElement.removeChild( container );
			div.removeChild( marginDiv );

			return ret;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,
		style = elem.style;

	computed = computed || getStyles( elem );
	ret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined;

	// Support: Opera 12.1x only
	// Fall back to style even without computed
	// computed is undefined for elems on document fragments
	if ( ( ret === "" || ret === undefined ) && !jQuery.contains( elem.ownerDocument, elem ) ) {
		ret = jQuery.style( elem, name );
	}

	// Support: IE9
	// getPropertyValue is only needed for .css('filter') (#12537)
	if ( computed ) {

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// http://dev.w3.org/csswg/cssom/#resolved-values
		if ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE9-11+
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,

	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	},

	cssPrefixes = [ "Webkit", "O", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style;

// Return a css property mapped to a potentially vendor prefixed property
function vendorPropName( name ) {

	// Shortcut for names that are not vendor prefixed
	if ( name in emptyStyle ) {
		return name;
	}

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

function setPositiveNumber( elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
	var i = extra === ( isBorderBox ? "border" : "content" ) ?

		// If we already have the right measurement, avoid augmentation
		4 :

		// Otherwise initialize for horizontal or vertical properties
		name === "width" ? 1 : 0,

		val = 0;

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin, so add it if we want it
		if ( extra === "margin" ) {
			val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
		}

		if ( isBorderBox ) {

			// border-box includes padding, so remove it if we want content
			if ( extra === "content" ) {
				val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// At this point, extra isn't border nor margin, so remove border
			if ( extra !== "margin" ) {
				val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		} else {

			// At this point, extra isn't content, so add padding
			val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// At this point, extra isn't content nor padding, so add border
			if ( extra !== "padding" ) {
				val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	return val;
}

function getWidthOrHeight( elem, name, extra ) {

	// Start with offset property, which is equivalent to the border-box value
	var valueIsBorderBox = true,
		val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
		styles = getStyles( elem ),
		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

	// Some non-html elements return undefined for offsetWidth, so check for null/undefined
	// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
	// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
	if ( val <= 0 || val == null ) {

		// Fall back to computed then uncomputed css if necessary
		val = curCSS( elem, name, styles );
		if ( val < 0 || val == null ) {
			val = elem.style[ name ];
		}

		// Computed unit is not pixels. Stop here and return.
		if ( rnumnonpx.test( val ) ) {
			return val;
		}

		// Check for style in case a browser which returns unreliable values
		// for getComputedStyle silently falls back to the reliable elem.style
		valueIsBorderBox = isBorderBox &&
			( support.boxSizingReliable() || val === elem.style[ name ] );

		// Normalize "", auto, and prepare for extra
		val = parseFloat( val ) || 0;
	}

	// Use the active box-sizing model to add/subtract irrelevant styles
	return ( val +
		augmentWidthOrHeight(
			elem,
			name,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles
		)
	) + "px";
}

function showHide( elements, show ) {
	var display, elem, hidden,
		values = [],
		index = 0,
		length = elements.length;

	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		values[ index ] = dataPriv.get( elem, "olddisplay" );
		display = elem.style.display;
		if ( show ) {

			// Reset the inline display of this element to learn if it is
			// being hidden by cascaded rules or not
			if ( !values[ index ] && display === "none" ) {
				elem.style.display = "";
			}

			// Set elements which have been overridden with display: none
			// in a stylesheet to whatever the default browser style is
			// for such an element
			if ( elem.style.display === "" && isHidden( elem ) ) {
				values[ index ] = dataPriv.access(
					elem,
					"olddisplay",
					defaultDisplay( elem.nodeName )
				);
			}
		} else {
			hidden = isHidden( elem );

			if ( display !== "none" || !hidden ) {
				dataPriv.set(
					elem,
					"olddisplay",
					hidden ? display : jQuery.css( elem, "display" )
				);
			}
		}
	}

	// Set the display of most of the elements in a second loop
	// to avoid the constant reflow
	for ( index = 0; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}
		if ( !show || elem.style.display === "none" || elem.style.display === "" ) {
			elem.style.display = show ? values[ index ] || "" : "none";
		}
	}

	return elements;
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {
		"float": "cssFloat"
	},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = jQuery.camelCase( name ),
			style = elem.style;

		name = jQuery.cssProps[ origName ] ||
			( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			if ( type === "number" ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// Support: IE9-11+
			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				style[ name ] = value;
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = jQuery.camelCase( name );

		// Make sure that we're working with the right name
		name = jQuery.cssProps[ origName ] ||
			( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}
		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( i, name ) {
	jQuery.cssHooks[ name ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&
					elem.offsetWidth === 0 ?
						swap( elem, cssShow, function() {
							return getWidthOrHeight( elem, name, extra );
						} ) :
						getWidthOrHeight( elem, name, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = extra && getStyles( elem ),
				subtract = extra && augmentWidthOrHeight(
					elem,
					name,
					extra,
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
					styles
				);

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ name ] = value;
				value = jQuery.css( elem, name );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
				) + "px";
		}
	}
);

// Support: Android 2.3
jQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,
	function( elem, computed ) {
		if ( computed ) {
			return swap( elem, { "display": "inline-block" },
				curCSS, [ elem, "marginRight" ] );
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( !rmargin.test( prefix ) ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( jQuery.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	},
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHidden( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 &&
				( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||
					jQuery.cssHooks[ tween.prop ] ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE9
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back Compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, timerId,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = jQuery.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4 ; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	/* jshint validthis: true */
	var prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHidden( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Handle queue: false promises
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Height/width overflow pass
	if ( elem.nodeType === 1 && ( "height" in props || "width" in props ) ) {

		// Make sure that nothing sneaks out
		// Record all 3 overflow attributes because IE9-10 do not
		// change the overflow attribute when overflowX and
		// overflowY are set to the same value
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Set display property to inline-block for height/width
		// animations on inline elements that are having width/height animated
		display = jQuery.css( elem, "display" );

		// Test default display if display is currently "none"
		checkDisplay = display === "none" ?
			dataPriv.get( elem, "olddisplay" ) || defaultDisplay( elem.nodeName ) : display;

		if ( checkDisplay === "inline" && jQuery.css( elem, "float" ) === "none" ) {
			style.display = "inline-block";
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// show/hide pass
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.exec( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// If there is dataShow left over from a stopped hide or show
				// and we are going to proceed with show, we should pretend to be hidden
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );

		// Any non-fx value stops us from restoring the original display value
		} else {
			display = undefined;
		}
	}

	if ( !jQuery.isEmptyObject( orig ) ) {
		if ( dataShow ) {
			if ( "hidden" in dataShow ) {
				hidden = dataShow.hidden;
			}
		} else {
			dataShow = dataPriv.access( elem, "fxshow", {} );
		}

		// Store state if its toggle - enables .stop().toggle() to "reverse"
		if ( toggle ) {
			dataShow.hidden = !hidden;
		}
		if ( hidden ) {
			jQuery( elem ).show();
		} else {
			anim.done( function() {
				jQuery( elem ).hide();
			} );
		}
		anim.done( function() {
			var prop;

			dataPriv.remove( elem, "fxshow" );
			for ( prop in orig ) {
				jQuery.style( elem, prop, orig[ prop ] );
			}
		} );
		for ( prop in orig ) {
			tween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );

			if ( !( prop in dataShow ) ) {
				dataShow[ prop ] = tween.start;
				if ( hidden ) {
					tween.end = tween.start;
					tween.start = prop === "width" || prop === "height" ? 1 : 0;
				}
			}
		}

	// If this is a noop like .hide().hide(), restore an overwritten display value
	} else if ( ( display === "none" ? defaultDisplay( elem.nodeName ) : display ) === "inline" ) {
		style.display = display;
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = jQuery.camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( jQuery.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length ; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			if ( percent < 1 && length ) {
				return remaining;
			} else {
				deferred.resolveWith( elem, [ animation ] );
				return false;
			}
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length ; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length ; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( jQuery.isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					jQuery.proxy( result.stop, result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( jQuery.isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	// attach callbacks from options
	return animation.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );
}

jQuery.Animation = jQuery.extend( Animation, {
	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( jQuery.isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnotwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length ; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			jQuery.isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
	};

	opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ?
		opt.duration : opt.duration in jQuery.fx.speeds ?
			jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( jQuery.isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHidden ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = jQuery.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Checks the timer has not already been removed
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	if ( timer() ) {
		jQuery.fx.start();
	} else {
		jQuery.timers.pop();
	}
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( !timerId ) {
		timerId = window.setInterval( jQuery.fx.tick, jQuery.fx.interval );
	}
};

jQuery.fx.stop = function() {
	window.clearInterval( timerId );

	timerId = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// http://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: iOS<=5.1, Android<=4.2+
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE<=11+
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: Android<=2.3
	// Options inside disabled selects are incorrectly marked as disabled
	select.disabled = true;
	support.optDisabled = !opt.disabled;

	// Support: IE<=11+
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// All attributes are lowercase
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			name = name.toLowerCase();
			hooks = jQuery.attrHooks[ name ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					jQuery.nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name, propName,
			i = 0,
			attrNames = value && value.match( rnotwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				propName = jQuery.propFix[ name ] || name;

				// Boolean attributes get special treatment (#10870)
				if ( jQuery.expr.match.bool.test( name ) ) {

					// Set corresponding property to false
					elem[ propName ] = false;
				}

				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};
jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle;
		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ name ];
			attrHandle[ name ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				name.toLowerCase() :
				null;
			attrHandle[ name ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				return tabindex ?
					parseInt( tabindex, 10 ) :
					rfocusable.test( elem.nodeName ) ||
						rclickable.test( elem.nodeName ) && elem.href ?
							0 :
							-1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {
			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {
			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




var rclass = /[\t\r\n\f]/g;

function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( typeof value === "string" && value ) {
			classes = value.match( rnotwhite ) || [];

			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 &&
					( " " + curValue + " " ).replace( rclass, " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = jQuery.trim( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		if ( typeof value === "string" && value ) {
			classes = value.match( rnotwhite ) || [];

			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 &&
					( " " + curValue + " " ).replace( rclass, " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = jQuery.trim( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value;

		if ( typeof stateVal === "boolean" && type === "string" ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( type === "string" ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = value.match( rnotwhite ) || [];

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
						"" :
						dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + getClass( elem ) + " " ).replace( rclass, " " )
					.indexOf( className ) > -1
			) {
				return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g,
	rspaces = /[\x20\t\r\n\f]+/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, isFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				return typeof ret === "string" ?

					// Handle most common string cases
					ret.replace( rreturn, "" ) :

					// Handle cases where value is null/undef or number
					ret == null ? "" : ret;
			}

			return;
		}

		isFunction = jQuery.isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( isFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( jQuery.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE10-11+
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					jQuery.trim( jQuery.text( elem ) ).replace( rspaces, " " );
			}
		},
		select: {
			get: function( elem ) {
				var value, option,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one" || index < 0,
					values = one ? null : [],
					max = one ? index + 1 : options.length,
					i = index < 0 ?
						max :
						one ? index : 0;

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// IE8-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							( support.optDisabled ?
								!option.disabled : option.getAttribute( "disabled" ) === null ) &&
							( !option.parentNode.disabled ||
								!jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];
					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( jQuery.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {

			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( dataPriv.get( cur, "events" ) || {} )[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;
					elem[ type ]();
					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


jQuery.each( ( "blur focus focusin focusout load resize scroll unload click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup error contextmenu" ).split( " " ),
	function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};
} );

jQuery.fn.extend( {
	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );




support.focusin = "onfocusin" in window;


// Support: Firefox
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome, Safari
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://code.google.com/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					dataPriv.remove( doc, fix );

				} else {
					dataPriv.access( doc, fix, attaches );
				}
			}
		};
	} );
}
var location = window.location;

var nonce = jQuery.now();

var rquery = ( /\?/ );



// Support: Android 2.3
// Workaround failure to string-cast null input
jQuery.parseJSON = function( data ) {
	return JSON.parse( data + "" );
};


// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE9
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {
		xml = undefined;
	}

	if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};


var
	rhash = /#.*$/,
	rts = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );
	originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];

		if ( jQuery.isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

		// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",
		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": jQuery.parseJSON,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
					jQuery( callbackContext ) :
					jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// The jqXHR state
			state = 0,

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( state === 2 ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match == null ? null : match;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return state === 2 ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					var lname = name.toLowerCase();
					if ( !state ) {
						name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( !state ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( state < 2 ) {
							for ( code in map ) {

								// Lazy-add the new callback in a way that preserves old ones
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						} else {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR ).complete = completeDeferred.add;
		jqXHR.success = jqXHR.done;
		jqXHR.error = jqXHR.fail;

		// Remove hash character (#7531: and string promotion)
		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" ).replace( rhash, "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().match( rnotwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE8-11+
			// IE throws exception if url is malformed, e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE8-11+
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( state === 2 ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		cacheURL = s.url;

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// If data is available, append data to url
			if ( s.data ) {
				cacheURL = ( s.url += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data );

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add anti-cache in url if needed
			if ( s.cache === false ) {
				s.url = rts.test( cacheURL ) ?

					// If there is already a '_' parameter, set its value
					cacheURL.replace( rts, "$1_=" + nonce++ ) :

					// Otherwise add one to the end
					cacheURL + ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + nonce++;
			}
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		for ( i in { success: 1, error: 1, complete: 1 } ) {
			jqXHR[ i ]( s[ i ] );
		}

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( state === 2 ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				state = 1;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Propagate exception as error if not done
				if ( state < 2 ) {
					done( -1, e );

				// Simply rethrow otherwise
				} else {
					throw e;
				}
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Called once
			if ( state === 2 ) {
				return;
			}

			// State is "done" now
			state = 2;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );


jQuery._evalUrl = function( url ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		async: false,
		global: false,
		"throws": true
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( jQuery.isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapAll( html.call( this, i ) );
			} );
		}

		if ( this[ 0 ] ) {

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var isFunction = jQuery.isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function() {
		return this.parent().each( function() {
			if ( !jQuery.nodeName( this, "body" ) ) {
				jQuery( this ).replaceWith( this.childNodes );
			}
		} ).end();
	}
} );


jQuery.expr.filters.hidden = function( elem ) {
	return !jQuery.expr.filters.visible( elem );
};
jQuery.expr.filters.visible = function( elem ) {

	// Support: Opera <= 12.12
	// Opera reports offsetWidths and offsetHeights less than zero on some elements
	// Use OR instead of AND as the element is not visible if either is true
	// See tickets #10406 and #13132
	return elem.offsetWidth > 0 || elem.offsetHeight > 0 || elem.getClientRects().length > 0;
};




var r20 = /%20/g,
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( jQuery.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && jQuery.type( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, value ) {

			// If value is a function, invoke it and return its value
			value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
			s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
		};

	// Set traditional to true for jQuery <= 1.3.2 behavior.
	if ( traditional === undefined ) {
		traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" ).replace( r20, "+" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} )
		.filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} )
		.map( function( i, elem ) {
			var val = jQuery( this ).val();

			return val == null ?
				null :
				jQuery.isArray( val ) ?
					jQuery.map( val, function( val ) {
						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
					} ) :
					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE9
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE9
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = callback( "error" );

				// Support: IE9
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" ).prop( {
					charset: s.scriptCharset,
					src: s.url
				} ).on(
					"load error",
					callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					}
				);

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && jQuery.isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( !data || typeof data !== "string" ) {
		return null;
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}
	context = context || document;

	var parsed = rsingleTag.exec( data ),
		scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


// Keep a copy of the old load method
var _load = jQuery.fn.load;

/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	if ( typeof url !== "string" && _load ) {
		return _load.apply( this, arguments );
	}

	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = jQuery.trim( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( jQuery.isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




// Attach a bunch of functions for handling common AJAX events
jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.expr.filters.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




/**
 * Gets a window from an element
 */
function getWindow( elem ) {
	return jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;
}

jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {
	offset: function( options ) {
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var docElem, win,
			elem = this[ 0 ],
			box = { top: 0, left: 0 },
			doc = elem && elem.ownerDocument;

		if ( !doc ) {
			return;
		}

		docElem = doc.documentElement;

		// Make sure it's not a disconnected DOM node
		if ( !jQuery.contains( docElem, elem ) ) {
			return box;
		}

		box = elem.getBoundingClientRect();
		win = getWindow( doc );
		return {
			top: box.top + win.pageYOffset - docElem.clientTop,
			left: box.left + win.pageXOffset - docElem.clientLeft
		};
	},

	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// Fixed elements are offset from window (parentOffset = {top:0, left: 0},
		// because it is its only offset parent
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume getBoundingClientRect is there when computed position is fixed
			offset = elem.getBoundingClientRect();

		} else {

			// Get *real* offsetParent
			offsetParent = this.offsetParent();

			// Get correct offsets
			offset = this.offset();
			if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {
				parentOffset = offsetParent.offset();
			}

			// Add offsetParent borders
			parentOffset.top += jQuery.css( offsetParent[ 0 ], "borderTopWidth", true );
			parentOffset.left += jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true );
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {
			var win = getWindow( elem );

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari<7-8+, Chrome<37-44+
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
		function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( jQuery.isWindow( elem ) ) {

					// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there
					// isn't a whole lot we can do. See pull request at this URL for discussion:
					// https://github.com/jquery/jquery/pull/764
					return elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable, null );
		};
	} );
} );


jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	},
	size: function() {
		return this.length;
	}
} );

jQuery.fn.andSelf = jQuery.fn.addBack;




// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( typeof define === "function" && define.amd ) {
	define( "jquery", [], function() {
		return jQuery;
	} );
}



var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( !noGlobal ) {
	window.jQuery = window.$ = jQuery;
}

return jQuery;
}));

},{}],19:[function(require,module,exports){
(function(window, factory) {
	var lazySizes = factory(window, window.document);
	window.lazySizes = lazySizes;
	if(typeof module == 'object' && module.exports){
		module.exports = lazySizes;
	}
}(window, function l(window, document) {
	'use strict';
	/*jshint eqnull:true */
	if(!document.getElementsByClassName){return;}

	var lazySizesConfig;

	var docElem = document.documentElement;

	var Date = window.Date;

	var supportPicture = window.HTMLPictureElement;

	var _addEventListener = 'addEventListener';

	var _getAttribute = 'getAttribute';

	var addEventListener = window[_addEventListener];

	var setTimeout = window.setTimeout;

	var requestAnimationFrame = window.requestAnimationFrame || setTimeout;

	var requestIdleCallback = window.requestIdleCallback;

	var regPicture = /^picture$/i;

	var loadEvents = ['load', 'error', 'lazyincluded', '_lazyloaded'];

	var regClassCache = {};

	var forEach = Array.prototype.forEach;

	var hasClass = function(ele, cls) {
		if(!regClassCache[cls]){
			regClassCache[cls] = new RegExp('(\\s|^)'+cls+'(\\s|$)');
		}
		return regClassCache[cls].test(ele[_getAttribute]('class') || '') && regClassCache[cls];
	};

	var addClass = function(ele, cls) {
		if (!hasClass(ele, cls)){
			ele.setAttribute('class', (ele[_getAttribute]('class') || '').trim() + ' ' + cls);
		}
	};

	var removeClass = function(ele, cls) {
		var reg;
		if ((reg = hasClass(ele,cls))) {
			ele.setAttribute('class', (ele[_getAttribute]('class') || '').replace(reg, ' '));
		}
	};

	var addRemoveLoadEvents = function(dom, fn, add){
		var action = add ? _addEventListener : 'removeEventListener';
		if(add){
			addRemoveLoadEvents(dom, fn);
		}
		loadEvents.forEach(function(evt){
			dom[action](evt, fn);
		});
	};

	var triggerEvent = function(elem, name, detail, noBubbles, noCancelable){
		var event = document.createEvent('CustomEvent');

		event.initCustomEvent(name, !noBubbles, !noCancelable, detail || {});

		elem.dispatchEvent(event);
		return event;
	};

	var updatePolyfill = function (el, full){
		var polyfill;
		if( !supportPicture && ( polyfill = (window.picturefill || lazySizesConfig.pf) ) ){
			polyfill({reevaluate: true, elements: [el]});
		} else if(full && full.src){
			el.src = full.src;
		}
	};

	var getCSS = function (elem, style){
		return (getComputedStyle(elem, null) || {})[style];
	};

	var getWidth = function(elem, parent, width){
		width = width || elem.offsetWidth;

		while(width < lazySizesConfig.minSize && parent && !elem._lazysizesWidth){
			width =  parent.offsetWidth;
			parent = parent.parentNode;
		}

		return width;
	};

	var rAF = (function(){
		var running, waiting;
		var firstFns = [];
		var secondFns = [];
		var fns = firstFns;

		var run = function(){
			var runFns = fns;

			fns = firstFns.length ? secondFns : firstFns;

			running = true;
			waiting = false;

			while(runFns.length){
				runFns.shift()();
			}

			running = false;
		};

		var rafBatch = function(fn, queue){
			if(running && !queue){
				fn.apply(this, arguments);
			} else {
				fns.push(fn);

				if(!waiting){
					waiting = true;
					(document.hidden ? setTimeout : requestAnimationFrame)(run);
				}
			}
		};

		rafBatch._lsFlush = run;

		return rafBatch;
	})();

	var rAFIt = function(fn, simple){
		return simple ?
			function() {
				rAF(fn);
			} :
			function(){
				var that = this;
				var args = arguments;
				rAF(function(){
					fn.apply(that, args);
				});
			}
		;
	};

	var throttle = function(fn){
		var running;
		var lastTime = 0;
		var gDelay = 125;
		var RIC_DEFAULT_TIMEOUT = 666;
		var rICTimeout = RIC_DEFAULT_TIMEOUT;
		var run = function(){
			running = false;
			lastTime = Date.now();
			fn();
		};
		var idleCallback = requestIdleCallback ?
			function(){
				requestIdleCallback(run, {timeout: rICTimeout});
				if(rICTimeout !== RIC_DEFAULT_TIMEOUT){
					rICTimeout = RIC_DEFAULT_TIMEOUT;
				}
			}:
			rAFIt(function(){
				setTimeout(run);
			}, true)
		;

		return function(isPriority){
			var delay;
			if((isPriority = isPriority === true)){
				rICTimeout = 44;
			}

			if(running){
				return;
			}

			running =  true;

			delay = gDelay - (Date.now() - lastTime);

			if(delay < 0){
				delay = 0;
			}

			if(isPriority || (delay < 9 && requestIdleCallback)){
				idleCallback();
			} else {
				setTimeout(idleCallback, delay);
			}
		};
	};

	//based on http://modernjavascript.blogspot.de/2013/08/building-better-debounce.html
	var debounce = function(func) {
		var timeout, timestamp;
		var wait = 99;
		var run = function(){
			timeout = null;
			func();
		};
		var later = function() {
			var last = Date.now() - timestamp;

			if (last < wait) {
				setTimeout(later, wait - last);
			} else {
				(requestIdleCallback || run)(run);
			}
		};

		return function() {
			timestamp = Date.now();

			if (!timeout) {
				timeout = setTimeout(later, wait);
			}
		};
	};


	var loader = (function(){
		var lazyloadElems, preloadElems, isCompleted, resetPreloadingTimer, loadMode, started;

		var eLvW, elvH, eLtop, eLleft, eLright, eLbottom;

		var defaultExpand, preloadExpand, hFac;

		var regImg = /^img$/i;
		var regIframe = /^iframe$/i;

		var supportScroll = ('onscroll' in window) && !(/glebot/.test(navigator.userAgent));

		var shrinkExpand = 0;
		var currentExpand = 0;

		var isLoading = 0;
		var lowRuns = -1;

		var resetPreloading = function(e){
			isLoading--;
			if(e && e.target){
				addRemoveLoadEvents(e.target, resetPreloading);
			}

			if(!e || isLoading < 0 || !e.target){
				isLoading = 0;
			}
		};

		var isNestedVisible = function(elem, elemExpand){
			var outerRect;
			var parent = elem;
			var visible = getCSS(document.body, 'visibility') == 'hidden' || getCSS(elem, 'visibility') != 'hidden';

			eLtop -= elemExpand;
			eLbottom += elemExpand;
			eLleft -= elemExpand;
			eLright += elemExpand;

			while(visible && (parent = parent.offsetParent) && parent != document.body && parent != docElem){
				visible = ((getCSS(parent, 'opacity') || 1) > 0);

				if(visible && getCSS(parent, 'overflow') != 'visible'){
					outerRect = parent.getBoundingClientRect();
					visible = eLright > outerRect.left &&
						eLleft < outerRect.right &&
						eLbottom > outerRect.top - 1 &&
						eLtop < outerRect.bottom + 1
					;
				}
			}

			return visible;
		};

		var checkElements = function() {
			var eLlen, i, rect, autoLoadElem, loadedSomething, elemExpand, elemNegativeExpand, elemExpandVal, beforeExpandVal;

			if((loadMode = lazySizesConfig.loadMode) && isLoading < 8 && (eLlen = lazyloadElems.length)){

				i = 0;

				lowRuns++;

				if(preloadExpand == null){
					if(!('expand' in lazySizesConfig)){
						lazySizesConfig.expand = docElem.clientHeight > 500 && docElem.clientWidth > 500 ? 500 : 370;
					}

					defaultExpand = lazySizesConfig.expand;
					preloadExpand = defaultExpand * lazySizesConfig.expFactor;
				}

				if(currentExpand < preloadExpand && isLoading < 1 && lowRuns > 2 && loadMode > 2 && !document.hidden){
					currentExpand = preloadExpand;
					lowRuns = 0;
				} else if(loadMode > 1 && lowRuns > 1 && isLoading < 6){
					currentExpand = defaultExpand;
				} else {
					currentExpand = shrinkExpand;
				}

				for(; i < eLlen; i++){

					if(!lazyloadElems[i] || lazyloadElems[i]._lazyRace){continue;}

					if(!supportScroll){unveilElement(lazyloadElems[i]);continue;}

					if(!(elemExpandVal = lazyloadElems[i][_getAttribute]('data-expand')) || !(elemExpand = elemExpandVal * 1)){
						elemExpand = currentExpand;
					}

					if(beforeExpandVal !== elemExpand){
						eLvW = innerWidth + (elemExpand * hFac);
						elvH = innerHeight + elemExpand;
						elemNegativeExpand = elemExpand * -1;
						beforeExpandVal = elemExpand;
					}

					rect = lazyloadElems[i].getBoundingClientRect();

					if ((eLbottom = rect.bottom) >= elemNegativeExpand &&
						(eLtop = rect.top) <= elvH &&
						(eLright = rect.right) >= elemNegativeExpand * hFac &&
						(eLleft = rect.left) <= eLvW &&
						(eLbottom || eLright || eLleft || eLtop) &&
						((isCompleted && isLoading < 3 && !elemExpandVal && (loadMode < 3 || lowRuns < 4)) || isNestedVisible(lazyloadElems[i], elemExpand))){
						unveilElement(lazyloadElems[i]);
						loadedSomething = true;
						if(isLoading > 9){break;}
					} else if(!loadedSomething && isCompleted && !autoLoadElem &&
						isLoading < 4 && lowRuns < 4 && loadMode > 2 &&
						(preloadElems[0] || lazySizesConfig.preloadAfterLoad) &&
						(preloadElems[0] || (!elemExpandVal && ((eLbottom || eLright || eLleft || eLtop) || lazyloadElems[i][_getAttribute](lazySizesConfig.sizesAttr) != 'auto')))){
						autoLoadElem = preloadElems[0] || lazyloadElems[i];
					}
				}

				if(autoLoadElem && !loadedSomething){
					unveilElement(autoLoadElem);
				}
			}
		};

		var throttledCheckElements = throttle(checkElements);

		var switchLoadingClass = function(e){
			addClass(e.target, lazySizesConfig.loadedClass);
			removeClass(e.target, lazySizesConfig.loadingClass);
			addRemoveLoadEvents(e.target, rafSwitchLoadingClass);
		};
		var rafedSwitchLoadingClass = rAFIt(switchLoadingClass);
		var rafSwitchLoadingClass = function(e){
			rafedSwitchLoadingClass({target: e.target});
		};

		var changeIframeSrc = function(elem, src){
			try {
				elem.contentWindow.location.replace(src);
			} catch(e){
				elem.src = src;
			}
		};

		var handleSources = function(source){
			var customMedia, parent;

			var sourceSrcset = source[_getAttribute](lazySizesConfig.srcsetAttr);

			if( (customMedia = lazySizesConfig.customMedia[source[_getAttribute]('data-media') || source[_getAttribute]('media')]) ){
				source.setAttribute('media', customMedia);
			}

			if(sourceSrcset){
				source.setAttribute('srcset', sourceSrcset);
			}

			//https://bugzilla.mozilla.org/show_bug.cgi?id=1170572
			if(customMedia){
				parent = source.parentNode;
				parent.insertBefore(source.cloneNode(), source);
				parent.removeChild(source);
			}
		};

		var lazyUnveil = rAFIt(function (elem, detail, isAuto, sizes, isImg){
			var src, srcset, parent, isPicture, event, firesLoad;

			if(!(event = triggerEvent(elem, 'lazybeforeunveil', detail)).defaultPrevented){

				if(sizes){
					if(isAuto){
						addClass(elem, lazySizesConfig.autosizesClass);
					} else {
						elem.setAttribute('sizes', sizes);
					}
				}

				srcset = elem[_getAttribute](lazySizesConfig.srcsetAttr);
				src = elem[_getAttribute](lazySizesConfig.srcAttr);

				if(isImg) {
					parent = elem.parentNode;
					isPicture = parent && regPicture.test(parent.nodeName || '');
				}

				firesLoad = detail.firesLoad || (('src' in elem) && (srcset || src || isPicture));

				event = {target: elem};

				if(firesLoad){
					addRemoveLoadEvents(elem, resetPreloading, true);
					clearTimeout(resetPreloadingTimer);
					resetPreloadingTimer = setTimeout(resetPreloading, 2500);

					addClass(elem, lazySizesConfig.loadingClass);
					addRemoveLoadEvents(elem, rafSwitchLoadingClass, true);
				}

				if(isPicture){
					forEach.call(parent.getElementsByTagName('source'), handleSources);
				}

				if(srcset){
					elem.setAttribute('srcset', srcset);
				} else if(src && !isPicture){
					if(regIframe.test(elem.nodeName)){
						changeIframeSrc(elem, src);
					} else {
						elem.src = src;
					}
				}

				if(srcset || isPicture){
					updatePolyfill(elem, {src: src});
				}
			}

			if(elem._lazyRace){
				delete elem._lazyRace;
			}
			removeClass(elem, lazySizesConfig.lazyClass);

			rAF(function(){
				if( !firesLoad || (elem.complete && elem.naturalWidth > 1)){
					if(firesLoad){
						resetPreloading(event);
					} else {
						isLoading--;
					}
					switchLoadingClass(event);
				}
			}, true);
		});

		var unveilElement = function (elem){
			var detail;

			var isImg = regImg.test(elem.nodeName);

			//allow using sizes="auto", but don't use. it's invalid. Use data-sizes="auto" or a valid value for sizes instead (i.e.: sizes="80vw")
			var sizes = isImg && (elem[_getAttribute](lazySizesConfig.sizesAttr) || elem[_getAttribute]('sizes'));
			var isAuto = sizes == 'auto';

			if( (isAuto || !isCompleted) && isImg && (elem.src || elem.srcset) && !elem.complete && !hasClass(elem, lazySizesConfig.errorClass)){return;}

			detail = triggerEvent(elem, 'lazyunveilread').detail;

			if(isAuto){
				 autoSizer.updateElem(elem, true, elem.offsetWidth);
			}

			elem._lazyRace = true;
			isLoading++;

			lazyUnveil(elem, detail, isAuto, sizes, isImg);
		};

		var onload = function(){
			if(isCompleted){return;}
			if(Date.now() - started < 999){
				setTimeout(onload, 999);
				return;
			}
			var afterScroll = debounce(function(){
				lazySizesConfig.loadMode = 3;
				throttledCheckElements();
			});

			isCompleted = true;

			lazySizesConfig.loadMode = 3;

			throttledCheckElements();

			addEventListener('scroll', function(){
				if(lazySizesConfig.loadMode == 3){
					lazySizesConfig.loadMode = 2;
				}
				afterScroll();
			}, true);
		};

		return {
			_: function(){
				started = Date.now();

				lazyloadElems = document.getElementsByClassName(lazySizesConfig.lazyClass);
				preloadElems = document.getElementsByClassName(lazySizesConfig.lazyClass + ' ' + lazySizesConfig.preloadClass);
				hFac = lazySizesConfig.hFac;

				addEventListener('scroll', throttledCheckElements, true);

				addEventListener('resize', throttledCheckElements, true);

				if(window.MutationObserver){
					new MutationObserver( throttledCheckElements ).observe( docElem, {childList: true, subtree: true, attributes: true} );
				} else {
					docElem[_addEventListener]('DOMNodeInserted', throttledCheckElements, true);
					docElem[_addEventListener]('DOMAttrModified', throttledCheckElements, true);
					setInterval(throttledCheckElements, 999);
				}

				addEventListener('hashchange', throttledCheckElements, true);

				//, 'fullscreenchange'
				['focus', 'mouseover', 'click', 'load', 'transitionend', 'animationend', 'webkitAnimationEnd'].forEach(function(name){
					document[_addEventListener](name, throttledCheckElements, true);
				});

				if((/d$|^c/.test(document.readyState))){
					onload();
				} else {
					addEventListener('load', onload);
					document[_addEventListener]('DOMContentLoaded', throttledCheckElements);
					setTimeout(onload, 20000);
				}

				if(lazyloadElems.length){
					checkElements();
					rAF._lsFlush();
				} else {
					throttledCheckElements();
				}
			},
			checkElems: throttledCheckElements,
			unveil: unveilElement
		};
	})();


	var autoSizer = (function(){
		var autosizesElems;

		var sizeElement = rAFIt(function(elem, parent, event, width){
			var sources, i, len;
			elem._lazysizesWidth = width;
			width += 'px';

			elem.setAttribute('sizes', width);

			if(regPicture.test(parent.nodeName || '')){
				sources = parent.getElementsByTagName('source');
				for(i = 0, len = sources.length; i < len; i++){
					sources[i].setAttribute('sizes', width);
				}
			}

			if(!event.detail.dataAttr){
				updatePolyfill(elem, event.detail);
			}
		});
		var getSizeElement = function (elem, dataAttr, width){
			var event;
			var parent = elem.parentNode;

			if(parent){
				width = getWidth(elem, parent, width);
				event = triggerEvent(elem, 'lazybeforesizes', {width: width, dataAttr: !!dataAttr});

				if(!event.defaultPrevented){
					width = event.detail.width;

					if(width && width !== elem._lazysizesWidth){
						sizeElement(elem, parent, event, width);
					}
				}
			}
		};

		var updateElementsSizes = function(){
			var i;
			var len = autosizesElems.length;
			if(len){
				i = 0;

				for(; i < len; i++){
					getSizeElement(autosizesElems[i]);
				}
			}
		};

		var debouncedUpdateElementsSizes = debounce(updateElementsSizes);

		return {
			_: function(){
				autosizesElems = document.getElementsByClassName(lazySizesConfig.autosizesClass);
				addEventListener('resize', debouncedUpdateElementsSizes);
			},
			checkElems: debouncedUpdateElementsSizes,
			updateElem: getSizeElement
		};
	})();

	var init = function(){
		if(!init.i){
			init.i = true;
			autoSizer._();
			loader._();
		}
	};

	(function(){
		var prop;

		var lazySizesDefaults = {
			lazyClass: 'lazyload',
			loadedClass: 'lazyloaded',
			loadingClass: 'lazyloading',
			preloadClass: 'lazypreload',
			errorClass: 'lazyerror',
			//strictClass: 'lazystrict',
			autosizesClass: 'lazyautosizes',
			srcAttr: 'data-src',
			srcsetAttr: 'data-srcset',
			sizesAttr: 'data-sizes',
			//preloadAfterLoad: false,
			minSize: 40,
			customMedia: {},
			init: true,
			expFactor: 1.5,
			hFac: 0.8,
			loadMode: 2
		};

		lazySizesConfig = window.lazySizesConfig || window.lazysizesConfig || {};

		for(prop in lazySizesDefaults){
			if(!(prop in lazySizesConfig)){
				lazySizesConfig[prop] = lazySizesDefaults[prop];
			}
		}

		window.lazySizesConfig = lazySizesConfig;

		setTimeout(function(){
			if(lazySizesConfig.init){
				init();
			}
		});
	})();

	return {
		cfg: lazySizesConfig,
		autoSizer: autoSizer,
		loader: loader,
		init: init,
		uP: updatePolyfill,
		aC: addClass,
		rC: removeClass,
		hC: hasClass,
		fire: triggerEvent,
		gW: getWidth,
		rAF: rAF,
	};
}
));

},{}],20:[function(require,module,exports){
/*! lazysizes - v3.0.0 */
!function(a,b){"use strict";function c(a,c){if(!f[a]){var d=b.createElement(c?"link":"script"),e=b.getElementsByTagName("script")[0];c?(d.rel="stylesheet",d.href=a):d.src=a,f[a]=!0,f[d.src||d.href]=!0,e.parentNode.insertBefore(d,e)}}var d,e,f={};b.addEventListener&&(e=/\(|\)|\s|'/,d=function(a,c){var d=b.createElement("img");d.onload=function(){d.onload=null,d.onerror=null,d=null,c()},d.onerror=d.onload,d.src=a,d&&d.complete&&d.onload&&d.onload()},addEventListener("lazybeforeunveil",function(a){var b,f,g,h;a.defaultPrevented||("none"==a.target.preload&&(a.target.preload="auto"),b=a.target.getAttribute("data-link"),b&&c(b,!0),b=a.target.getAttribute("data-script"),b&&c(b),b=a.target.getAttribute("data-require"),b&&(lazySizes.cfg.requireJs?lazySizes.cfg.requireJs([b]):c(b)),g=a.target.getAttribute("data-bg"),g&&(a.detail.firesLoad=!0,f=function(){a.target.style.backgroundImage="url("+(e.test(g)?JSON.stringify(g):g)+")",a.detail.firesLoad=!1,lazySizes.fire(a.target,"_lazyloaded",{},!0,!0)},d(g,f)),h=a.target.getAttribute("data-poster"),h&&(a.detail.firesLoad=!0,f=function(){a.target.poster=h,a.detail.firesLoad=!1,lazySizes.fire(a.target,"_lazyloaded",{},!0,!0)},d(h,f)))},!1))}(window,document);
},{}],21:[function(require,module,exports){
(function (global){
/*! p5.js v1.2.0 December 19, 2020 */

!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).p5=e()}}(function(){return function a(o,s,l){function u(t,e){if(!s[t]){if(!o[t]){var r="function"==typeof require&&require;if(!e&&r)return r(t,!0);if(h)return h(t,!0);var i=new Error("Cannot find module '"+t+"'");throw i.code="MODULE_NOT_FOUND",i}var n=s[t]={exports:{}};o[t][0].call(n.exports,function(e){return u(o[t][1][e]||e)},n,n.exports,a,o,s,l)}return s[t].exports}for(var h="function"==typeof require&&require,e=0;e<l.length;e++)u(l[e]);return u}({1:[function(e,t,r){"use strict";r.byteLength=function(e){var t=c(e),r=t[0],i=t[1];return 3*(r+i)/4-i},r.toByteArray=function(e){var t,r,i=c(e),n=i[0],a=i[1],o=new h(function(e,t){return 3*(e+t)/4-t}(n,a)),s=0,l=0<a?n-4:n;for(r=0;r<l;r+=4)t=u[e.charCodeAt(r)]<<18|u[e.charCodeAt(r+1)]<<12|u[e.charCodeAt(r+2)]<<6|u[e.charCodeAt(r+3)],o[s++]=t>>16&255,o[s++]=t>>8&255,o[s++]=255&t;2===a&&(t=u[e.charCodeAt(r)]<<2|u[e.charCodeAt(r+1)]>>4,o[s++]=255&t);1===a&&(t=u[e.charCodeAt(r)]<<10|u[e.charCodeAt(r+1)]<<4|u[e.charCodeAt(r+2)]>>2,o[s++]=t>>8&255,o[s++]=255&t);return o},r.fromByteArray=function(e){for(var t,r=e.length,i=r%3,n=[],a=0,o=r-i;a<o;a+=16383)n.push(l(e,a,o<a+16383?o:a+16383));1==i?(t=e[r-1],n.push(s[t>>2]+s[t<<4&63]+"==")):2==i&&(t=(e[r-2]<<8)+e[r-1],n.push(s[t>>10]+s[t>>4&63]+s[t<<2&63]+"="));return n.join("")};for(var s=[],u=[],h="undefined"!=typeof Uint8Array?Uint8Array:Array,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",n=0,a=i.length;n<a;++n)s[n]=i[n],u[i.charCodeAt(n)]=n;function c(e){var t=e.length;if(0<t%4)throw new Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");return-1===r&&(r=t),[r,r===t?0:4-r%4]}function l(e,t,r){for(var i,n,a=[],o=t;o<r;o+=3)i=(e[o]<<16&16711680)+(e[o+1]<<8&65280)+(255&e[o+2]),a.push(s[(n=i)>>18&63]+s[n>>12&63]+s[n>>6&63]+s[63&n]);return a.join("")}u["-".charCodeAt(0)]=62,u["_".charCodeAt(0)]=63},{}],2:[function(e,t,r){},{}],3:[function(e,t,r){arguments[4][2][0].apply(r,arguments)},{dup:2}],4:[function(N,e,F){(function(c){"use strict";var i=N("base64-js"),a=N("ieee754"),e="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;F.Buffer=c,F.SlowBuffer=function(e){+e!=e&&(e=0);return c.alloc(+e)},F.INSPECT_MAX_BYTES=50;var r=2147483647;function o(e){if(r<e)throw new RangeError('The value "'+e+'" is invalid for option "size"');var t=new Uint8Array(e);return Object.setPrototypeOf(t,c.prototype),t}function c(e,t,r){if("number"!=typeof e)return n(e,t,r);if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return l(e)}function n(e,t,r){if("string"==typeof e)return function(e,t){"string"==typeof t&&""!==t||(t="utf8");if(!c.isEncoding(t))throw new TypeError("Unknown encoding: "+t);var r=0|f(e,t),i=o(r),n=i.write(e,t);n!==r&&(i=i.slice(0,n));return i}(e,t);if(ArrayBuffer.isView(e))return u(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(A(e,ArrayBuffer)||e&&A(e.buffer,ArrayBuffer))return function(e,t,r){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(r||0))throw new RangeError('"length" is outside of buffer bounds');var i;i=void 0===t&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,t):new Uint8Array(e,t,r);return Object.setPrototypeOf(i,c.prototype),i}(e,t,r);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');var i=e.valueOf&&e.valueOf();if(null!=i&&i!==e)return c.from(i,t,r);var n=function(e){if(c.isBuffer(e)){var t=0|h(e.length),r=o(t);return 0===r.length||e.copy(r,0,0,t),r}if(void 0!==e.length)return"number"!=typeof e.length||I(e.length)?o(0):u(e);if("Buffer"===e.type&&Array.isArray(e.data))return u(e.data)}(e);if(n)return n;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return c.from(e[Symbol.toPrimitive]("string"),t,r);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function s(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function l(e){return s(e),o(e<0?0:0|h(e))}function u(e){for(var t=e.length<0?0:0|h(e.length),r=o(t),i=0;i<t;i+=1)r[i]=255&e[i];return r}function h(e){if(r<=e)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+r.toString(16)+" bytes");return 0|e}function f(e,t){if(c.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||A(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);var r=e.length,i=2<arguments.length&&!0===arguments[2];if(!i&&0===r)return 0;for(var n=!1;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return R(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return D(e).length;default:if(n)return i?-1:R(e).length;t=(""+t).toLowerCase(),n=!0}}function d(e,t,r){var i=e[t];e[t]=e[r],e[r]=i}function p(e,t,r,i,n){if(0===e.length)return-1;if("string"==typeof r?(i=r,r=0):2147483647<r?r=2147483647:r<-2147483648&&(r=-2147483648),I(r=+r)&&(r=n?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(n)return-1;r=e.length-1}else if(r<0){if(!n)return-1;r=0}if("string"==typeof t&&(t=c.from(t,i)),c.isBuffer(t))return 0===t.length?-1:m(e,t,r,i,n);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?n?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):m(e,[t],r,i,n);throw new TypeError("val must be string, number or Buffer")}function m(e,t,r,i,n){var a,o=1,s=e.length,l=t.length;if(void 0!==i&&("ucs2"===(i=String(i).toLowerCase())||"ucs-2"===i||"utf16le"===i||"utf-16le"===i)){if(e.length<2||t.length<2)return-1;s/=o=2,l/=2,r/=2}function u(e,t){return 1===o?e[t]:e.readUInt16BE(t*o)}if(n){var h=-1;for(a=r;a<s;a++)if(u(e,a)===u(t,-1===h?0:a-h)){if(-1===h&&(h=a),a-h+1===l)return h*o}else-1!==h&&(a-=a-h),h=-1}else for(s<r+l&&(r=s-l),a=r;0<=a;a--){for(var c=!0,f=0;f<l;f++)if(u(e,a+f)!==u(t,f)){c=!1;break}if(c)return a}return-1}function v(e,t,r,i){r=Number(r)||0;var n=e.length-r;i?n<(i=Number(i))&&(i=n):i=n;var a=t.length;a/2<i&&(i=a/2);for(var o=0;o<i;++o){var s=parseInt(t.substr(2*o,2),16);if(I(s))return o;e[r+o]=s}return o}function y(e,t,r,i){return k(function(e){for(var t=[],r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(t),e,r,i)}function g(e,t,r,i){return k(function(e,t){for(var r,i,n,a=[],o=0;o<e.length&&!((t-=2)<0);++o)r=e.charCodeAt(o),i=r>>8,n=r%256,a.push(n),a.push(i);return a}(t,e.length-r),e,r,i)}function b(e,t,r){return 0===t&&r===e.length?i.fromByteArray(e):i.fromByteArray(e.slice(t,r))}function _(e,t,r){r=Math.min(e.length,r);for(var i=[],n=t;n<r;){var a,o,s,l,u=e[n],h=null,c=239<u?4:223<u?3:191<u?2:1;if(n+c<=r)switch(c){case 1:u<128&&(h=u);break;case 2:128==(192&(a=e[n+1]))&&127<(l=(31&u)<<6|63&a)&&(h=l);break;case 3:a=e[n+1],o=e[n+2],128==(192&a)&&128==(192&o)&&2047<(l=(15&u)<<12|(63&a)<<6|63&o)&&(l<55296||57343<l)&&(h=l);break;case 4:a=e[n+1],o=e[n+2],s=e[n+3],128==(192&a)&&128==(192&o)&&128==(192&s)&&65535<(l=(15&u)<<18|(63&a)<<12|(63&o)<<6|63&s)&&l<1114112&&(h=l)}null===h?(h=65533,c=1):65535<h&&(h-=65536,i.push(h>>>10&1023|55296),h=56320|1023&h),i.push(h),n+=c}return function(e){var t=e.length;if(t<=x)return String.fromCharCode.apply(String,e);var r="",i=0;for(;i<t;)r+=String.fromCharCode.apply(String,e.slice(i,i+=x));return r}(i)}F.kMaxLength=r,(c.TYPED_ARRAY_SUPPORT=function(){try{var e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}())||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(c.prototype,"parent",{enumerable:!0,get:function(){if(c.isBuffer(this))return this.buffer}}),Object.defineProperty(c.prototype,"offset",{enumerable:!0,get:function(){if(c.isBuffer(this))return this.byteOffset}}),"undefined"!=typeof Symbol&&null!=Symbol.species&&c[Symbol.species]===c&&Object.defineProperty(c,Symbol.species,{value:null,configurable:!0,enumerable:!1,writable:!1}),c.poolSize=8192,c.from=function(e,t,r){return n(e,t,r)},Object.setPrototypeOf(c.prototype,Uint8Array.prototype),Object.setPrototypeOf(c,Uint8Array),c.alloc=function(e,t,r){return n=t,a=r,s(i=e),i<=0?o(i):void 0!==n?"string"==typeof a?o(i).fill(n,a):o(i).fill(n):o(i);var i,n,a},c.allocUnsafe=function(e){return l(e)},c.allocUnsafeSlow=function(e){return l(e)},c.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==c.prototype},c.compare=function(e,t){if(A(e,Uint8Array)&&(e=c.from(e,e.offset,e.byteLength)),A(t,Uint8Array)&&(t=c.from(t,t.offset,t.byteLength)),!c.isBuffer(e)||!c.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;for(var r=e.length,i=t.length,n=0,a=Math.min(r,i);n<a;++n)if(e[n]!==t[n]){r=e[n],i=t[n];break}return r<i?-1:i<r?1:0},c.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},c.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return c.alloc(0);var r;if(void 0===t)for(r=t=0;r<e.length;++r)t+=e[r].length;var i=c.allocUnsafe(t),n=0;for(r=0;r<e.length;++r){var a=e[r];if(A(a,Uint8Array)&&(a=c.from(a)),!c.isBuffer(a))throw new TypeError('"list" argument must be an Array of Buffers');a.copy(i,n),n+=a.length}return i},c.byteLength=f,c.prototype._isBuffer=!0,c.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)d(this,t,t+1);return this},c.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)d(this,t,t+3),d(this,t+1,t+2);return this},c.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)d(this,t,t+7),d(this,t+1,t+6),d(this,t+2,t+5),d(this,t+3,t+4);return this},c.prototype.toLocaleString=c.prototype.toString=function(){var e=this.length;return 0===e?"":0===arguments.length?_(this,0,e):function(e,t,r){var i=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(t>>>=0))return"";for(e=e||"utf8";;)switch(e){case"hex":return M(this,t,r);case"utf8":case"utf-8":return _(this,t,r);case"ascii":return w(this,t,r);case"latin1":case"binary":return S(this,t,r);case"base64":return b(this,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return T(this,t,r);default:if(i)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),i=!0}}.apply(this,arguments)},c.prototype.equals=function(e){if(!c.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===c.compare(this,e)},c.prototype.inspect=function(){var e="",t=F.INSPECT_MAX_BYTES;return e=this.toString("hex",0,t).replace(/(.{2})/g,"$1 ").trim(),this.length>t&&(e+=" ... "),"<Buffer "+e+">"},e&&(c.prototype[e]=c.prototype.inspect),c.prototype.compare=function(e,t,r,i,n){if(A(e,Uint8Array)&&(e=c.from(e,e.offset,e.byteLength)),!c.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===i&&(i=0),void 0===n&&(n=this.length),t<0||r>e.length||i<0||n>this.length)throw new RangeError("out of range index");if(n<=i&&r<=t)return 0;if(n<=i)return-1;if(r<=t)return 1;if(this===e)return 0;for(var a=(n>>>=0)-(i>>>=0),o=(r>>>=0)-(t>>>=0),s=Math.min(a,o),l=this.slice(i,n),u=e.slice(t,r),h=0;h<s;++h)if(l[h]!==u[h]){a=l[h],o=u[h];break}return a<o?-1:o<a?1:0},c.prototype.includes=function(e,t,r){return-1!==this.indexOf(e,t,r)},c.prototype.indexOf=function(e,t,r){return p(this,e,t,r,!0)},c.prototype.lastIndexOf=function(e,t,r){return p(this,e,t,r,!1)},c.prototype.write=function(e,t,r,i){if(void 0===t)i="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)i=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(r)?(r>>>=0,void 0===i&&(i="utf8")):(i=r,r=void 0)}var n=this.length-t;if((void 0===r||n<r)&&(r=n),0<e.length&&(r<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");i=i||"utf8";for(var a,o,s,l,u,h,c=!1;;)switch(i){case"hex":return v(this,e,t,r);case"utf8":case"utf-8":return u=t,h=r,k(R(e,(l=this).length-u),l,u,h);case"ascii":return y(this,e,t,r);case"latin1":case"binary":return y(this,e,t,r);case"base64":return a=this,o=t,s=r,k(D(e),a,o,s);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return g(this,e,t,r);default:if(c)throw new TypeError("Unknown encoding: "+i);i=(""+i).toLowerCase(),c=!0}},c.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var x=4096;function w(e,t,r){var i="";r=Math.min(e.length,r);for(var n=t;n<r;++n)i+=String.fromCharCode(127&e[n]);return i}function S(e,t,r){var i="";r=Math.min(e.length,r);for(var n=t;n<r;++n)i+=String.fromCharCode(e[n]);return i}function M(e,t,r){var i=e.length;(!t||t<0)&&(t=0),(!r||r<0||i<r)&&(r=i);for(var n="",a=t;a<r;++a)n+=U[e[a]];return n}function T(e,t,r){for(var i=e.slice(t,r),n="",a=0;a<i.length;a+=2)n+=String.fromCharCode(i[a]+256*i[a+1]);return n}function E(e,t,r){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(r<e+t)throw new RangeError("Trying to access beyond buffer length")}function C(e,t,r,i,n,a){if(!c.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(n<t||t<a)throw new RangeError('"value" argument is out of bounds');if(r+i>e.length)throw new RangeError("Index out of range")}function L(e,t,r,i){if(r+i>e.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function O(e,t,r,i,n){return t=+t,r>>>=0,n||L(e,0,r,4),a.write(e,t,r,i,23,4),r+4}function P(e,t,r,i,n){return t=+t,r>>>=0,n||L(e,0,r,8),a.write(e,t,r,i,52,8),r+8}c.prototype.slice=function(e,t){var r=this.length;(e=~~e)<0?(e+=r)<0&&(e=0):r<e&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):r<t&&(t=r),t<e&&(t=e);var i=this.subarray(e,t);return Object.setPrototypeOf(i,c.prototype),i},c.prototype.readUIntLE=function(e,t,r){e>>>=0,t>>>=0,r||E(e,t,this.length);for(var i=this[e],n=1,a=0;++a<t&&(n*=256);)i+=this[e+a]*n;return i},c.prototype.readUIntBE=function(e,t,r){e>>>=0,t>>>=0,r||E(e,t,this.length);for(var i=this[e+--t],n=1;0<t&&(n*=256);)i+=this[e+--t]*n;return i},c.prototype.readUInt8=function(e,t){return e>>>=0,t||E(e,1,this.length),this[e]},c.prototype.readUInt16LE=function(e,t){return e>>>=0,t||E(e,2,this.length),this[e]|this[e+1]<<8},c.prototype.readUInt16BE=function(e,t){return e>>>=0,t||E(e,2,this.length),this[e]<<8|this[e+1]},c.prototype.readUInt32LE=function(e,t){return e>>>=0,t||E(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},c.prototype.readUInt32BE=function(e,t){return e>>>=0,t||E(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},c.prototype.readIntLE=function(e,t,r){e>>>=0,t>>>=0,r||E(e,t,this.length);for(var i=this[e],n=1,a=0;++a<t&&(n*=256);)i+=this[e+a]*n;return(n*=128)<=i&&(i-=Math.pow(2,8*t)),i},c.prototype.readIntBE=function(e,t,r){e>>>=0,t>>>=0,r||E(e,t,this.length);for(var i=t,n=1,a=this[e+--i];0<i&&(n*=256);)a+=this[e+--i]*n;return(n*=128)<=a&&(a-=Math.pow(2,8*t)),a},c.prototype.readInt8=function(e,t){return e>>>=0,t||E(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},c.prototype.readInt16LE=function(e,t){e>>>=0,t||E(e,2,this.length);var r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},c.prototype.readInt16BE=function(e,t){e>>>=0,t||E(e,2,this.length);var r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},c.prototype.readInt32LE=function(e,t){return e>>>=0,t||E(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},c.prototype.readInt32BE=function(e,t){return e>>>=0,t||E(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},c.prototype.readFloatLE=function(e,t){return e>>>=0,t||E(e,4,this.length),a.read(this,e,!0,23,4)},c.prototype.readFloatBE=function(e,t){return e>>>=0,t||E(e,4,this.length),a.read(this,e,!1,23,4)},c.prototype.readDoubleLE=function(e,t){return e>>>=0,t||E(e,8,this.length),a.read(this,e,!0,52,8)},c.prototype.readDoubleBE=function(e,t){return e>>>=0,t||E(e,8,this.length),a.read(this,e,!1,52,8)},c.prototype.writeUIntLE=function(e,t,r,i){e=+e,t>>>=0,r>>>=0,i||C(this,e,t,r,Math.pow(2,8*r)-1,0);var n=1,a=0;for(this[t]=255&e;++a<r&&(n*=256);)this[t+a]=e/n&255;return t+r},c.prototype.writeUIntBE=function(e,t,r,i){e=+e,t>>>=0,r>>>=0,i||C(this,e,t,r,Math.pow(2,8*r)-1,0);var n=r-1,a=1;for(this[t+n]=255&e;0<=--n&&(a*=256);)this[t+n]=e/a&255;return t+r},c.prototype.writeUInt8=function(e,t,r){return e=+e,t>>>=0,r||C(this,e,t,1,255,0),this[t]=255&e,t+1},c.prototype.writeUInt16LE=function(e,t,r){return e=+e,t>>>=0,r||C(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},c.prototype.writeUInt16BE=function(e,t,r){return e=+e,t>>>=0,r||C(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},c.prototype.writeUInt32LE=function(e,t,r){return e=+e,t>>>=0,r||C(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},c.prototype.writeUInt32BE=function(e,t,r){return e=+e,t>>>=0,r||C(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},c.prototype.writeIntLE=function(e,t,r,i){if(e=+e,t>>>=0,!i){var n=Math.pow(2,8*r-1);C(this,e,t,r,n-1,-n)}var a=0,o=1,s=0;for(this[t]=255&e;++a<r&&(o*=256);)e<0&&0===s&&0!==this[t+a-1]&&(s=1),this[t+a]=(e/o>>0)-s&255;return t+r},c.prototype.writeIntBE=function(e,t,r,i){if(e=+e,t>>>=0,!i){var n=Math.pow(2,8*r-1);C(this,e,t,r,n-1,-n)}var a=r-1,o=1,s=0;for(this[t+a]=255&e;0<=--a&&(o*=256);)e<0&&0===s&&0!==this[t+a+1]&&(s=1),this[t+a]=(e/o>>0)-s&255;return t+r},c.prototype.writeInt8=function(e,t,r){return e=+e,t>>>=0,r||C(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},c.prototype.writeInt16LE=function(e,t,r){return e=+e,t>>>=0,r||C(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},c.prototype.writeInt16BE=function(e,t,r){return e=+e,t>>>=0,r||C(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},c.prototype.writeInt32LE=function(e,t,r){return e=+e,t>>>=0,r||C(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},c.prototype.writeInt32BE=function(e,t,r){return e=+e,t>>>=0,r||C(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},c.prototype.writeFloatLE=function(e,t,r){return O(this,e,t,!0,r)},c.prototype.writeFloatBE=function(e,t,r){return O(this,e,t,!1,r)},c.prototype.writeDoubleLE=function(e,t,r){return P(this,e,t,!0,r)},c.prototype.writeDoubleBE=function(e,t,r){return P(this,e,t,!1,r)},c.prototype.copy=function(e,t,r,i){if(!c.isBuffer(e))throw new TypeError("argument should be a Buffer");if(r=r||0,i||0===i||(i=this.length),t>=e.length&&(t=e.length),t=t||0,0<i&&i<r&&(i=r),i===r)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("Index out of range");if(i<0)throw new RangeError("sourceEnd out of bounds");i>this.length&&(i=this.length),e.length-t<i-r&&(i=e.length-t+r);var n=i-r;if(this===e&&"function"==typeof Uint8Array.prototype.copyWithin)this.copyWithin(t,r,i);else if(this===e&&r<t&&t<i)for(var a=n-1;0<=a;--a)e[a+t]=this[a+r];else Uint8Array.prototype.set.call(e,this.subarray(r,i),t);return n},c.prototype.fill=function(e,t,r,i){if("string"==typeof e){if("string"==typeof t?(i=t,t=0,r=this.length):"string"==typeof r&&(i=r,r=this.length),void 0!==i&&"string"!=typeof i)throw new TypeError("encoding must be a string");if("string"==typeof i&&!c.isEncoding(i))throw new TypeError("Unknown encoding: "+i);if(1===e.length){var n=e.charCodeAt(0);("utf8"===i&&n<128||"latin1"===i)&&(e=n)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<r)throw new RangeError("Out of range index");if(r<=t)return this;var a;if(t>>>=0,r=void 0===r?this.length:r>>>0,"number"==typeof(e=e||0))for(a=t;a<r;++a)this[a]=e;else{var o=c.isBuffer(e)?e:c.from(e,i),s=o.length;if(0===s)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(a=0;a<r-t;++a)this[a+t]=o[a%s]}return this};var t=/[^+/0-9A-Za-z-_]/g;function R(e,t){var r;t=t||1/0;for(var i=e.length,n=null,a=[],o=0;o<i;++o){if(55295<(r=e.charCodeAt(o))&&r<57344){if(!n){if(56319<r){-1<(t-=3)&&a.push(239,191,189);continue}if(o+1===i){-1<(t-=3)&&a.push(239,191,189);continue}n=r;continue}if(r<56320){-1<(t-=3)&&a.push(239,191,189),n=r;continue}r=65536+(n-55296<<10|r-56320)}else n&&-1<(t-=3)&&a.push(239,191,189);if(n=null,r<128){if(--t<0)break;a.push(r)}else if(r<2048){if((t-=2)<0)break;a.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;a.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;a.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return a}function D(e){return i.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(t,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function k(e,t,r,i){for(var n=0;n<i&&!(n+r>=t.length||n>=e.length);++n)t[n+r]=e[n];return n}function A(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function I(e){return e!=e}var U=function(){for(var e="0123456789abcdef",t=new Array(256),r=0;r<16;++r)for(var i=16*r,n=0;n<16;++n)t[i+n]=e[r]+e[n];return t}()}).call(this,N("buffer").Buffer)},{"base64-js":1,buffer:4,ieee754:9}],5:[function(e,t,r){"use strict";t.exports=e("./").polyfill()},{"./":6}],6:[function(z,r,i){(function(j,V){var e,t;e=this,t=function(){"use strict";function l(e){return"function"==typeof e}var r=Array.isArray?Array.isArray:function(e){return"[object Array]"===Object.prototype.toString.call(e)},i=0,t=void 0,n=void 0,o=function(e,t){f[i]=e,f[i+1]=t,2===(i+=2)&&(n?n(d):g())};var e="undefined"!=typeof window?window:void 0,a=e||{},s=a.MutationObserver||a.WebKitMutationObserver,u="undefined"==typeof self&&void 0!==j&&"[object process]"==={}.toString.call(j),h="undefined"!=typeof Uint8ClampedArray&&"undefined"!=typeof importScripts&&"undefined"!=typeof MessageChannel;function c(){var e=setTimeout;return function(){return e(d,1)}}var f=new Array(1e3);function d(){for(var e=0;e<i;e+=2){(0,f[e])(f[e+1]),f[e]=void 0,f[e+1]=void 0}i=0}var p,m,v,y,g=void 0;function b(e,t){var r=this,i=new this.constructor(w);void 0===i[x]&&U(i);var n=r._state;if(n){var a=arguments[n-1];o(function(){return A(n,i,a,r._result)})}else D(r,i,e,t);return i}function _(e){if(e&&"object"==typeof e&&e.constructor===this)return e;var t=new this(w);return L(t,e),t}g=u?function(){return j.nextTick(d)}:s?(m=0,v=new s(d),y=document.createTextNode(""),v.observe(y,{characterData:!0}),function(){y.data=m=++m%2}):h?((p=new MessageChannel).port1.onmessage=d,function(){return p.port2.postMessage(0)}):void 0===e&&"function"==typeof z?function(){try{var e=Function("return this")().require("vertx");return void 0!==(t=e.runOnLoop||e.runOnContext)?function(){t(d)}:c()}catch(e){return c()}}():c();var x=Math.random().toString(36).substring(2);function w(){}var S=void 0,M=1,T=2;function E(e,i,n){o(function(t){var r=!1,e=function(e,t,r,i){try{e.call(t,r,i)}catch(e){return e}}(n,i,function(e){r||(r=!0,i!==e?L(t,e):P(t,e))},function(e){r||(r=!0,R(t,e))},t._label);!r&&e&&(r=!0,R(t,e))},e)}function C(e,t,r){var i,n;t.constructor===e.constructor&&r===b&&t.constructor.resolve===_?(i=e,(n=t)._state===M?P(i,n._result):n._state===T?R(i,n._result):D(n,void 0,function(e){return L(i,e)},function(e){return R(i,e)})):void 0===r?P(e,t):l(r)?E(e,t,r):P(e,t)}function L(t,e){if(t===e)R(t,new TypeError("You cannot resolve a promise with itself"));else if(n=typeof(i=e),null===i||"object"!=n&&"function"!=n)P(t,e);else{var r=void 0;try{r=e.then}catch(e){return void R(t,e)}C(t,e,r)}var i,n}function O(e){e._onerror&&e._onerror(e._result),k(e)}function P(e,t){e._state===S&&(e._result=t,e._state=M,0!==e._subscribers.length&&o(k,e))}function R(e,t){e._state===S&&(e._state=T,e._result=t,o(O,e))}function D(e,t,r,i){var n=e._subscribers,a=n.length;e._onerror=null,n[a]=t,n[a+M]=r,n[a+T]=i,0===a&&e._state&&o(k,e)}function k(e){var t=e._subscribers,r=e._state;if(0!==t.length){for(var i=void 0,n=void 0,a=e._result,o=0;o<t.length;o+=3)i=t[o],n=t[o+r],i?A(r,i,n,a):n(a);e._subscribers.length=0}}function A(e,t,r,i){var n=l(r),a=void 0,o=void 0,s=!0;if(n){try{a=r(i)}catch(e){s=!1,o=e}if(t===a)return void R(t,new TypeError("A promises callback cannot return that same promise."))}else a=i;t._state!==S||(n&&s?L(t,a):!1===s?R(t,o):e===M?P(t,a):e===T&&R(t,a))}var I=0;function U(e){e[x]=I++,e._state=void 0,e._result=void 0,e._subscribers=[]}var N=(F.prototype._enumerate=function(e){for(var t=0;this._state===S&&t<e.length;t++)this._eachEntry(e[t],t)},F.prototype._eachEntry=function(t,e){var r=this._instanceConstructor,i=r.resolve;if(i===_){var n=void 0,a=void 0,o=!1;try{n=t.then}catch(e){o=!0,a=e}if(n===b&&t._state!==S)this._settledAt(t._state,e,t._result);else if("function"!=typeof n)this._remaining--,this._result[e]=t;else if(r===B){var s=new r(w);o?R(s,a):C(s,t,n),this._willSettleAt(s,e)}else this._willSettleAt(new r(function(e){return e(t)}),e)}else this._willSettleAt(i(t),e)},F.prototype._settledAt=function(e,t,r){var i=this.promise;i._state===S&&(this._remaining--,e===T?R(i,r):this._result[t]=r),0===this._remaining&&P(i,this._result)},F.prototype._willSettleAt=function(e,t){var r=this;D(e,void 0,function(e){return r._settledAt(M,t,e)},function(e){return r._settledAt(T,t,e)})},F);function F(e,t){this._instanceConstructor=e,this.promise=new e(w),this.promise[x]||U(this.promise),r(t)?(this.length=t.length,this._remaining=t.length,this._result=new Array(this.length),0===this.length?P(this.promise,this._result):(this.length=this.length||0,this._enumerate(t),0===this._remaining&&P(this.promise,this._result))):R(this.promise,new Error("Array Methods must be provided an Array"))}var B=(G.prototype.catch=function(e){return this.then(null,e)},G.prototype.finally=function(t){var r=this.constructor;return l(t)?this.then(function(e){return r.resolve(t()).then(function(){return e})},function(e){return r.resolve(t()).then(function(){throw e})}):this.then(t,t)},G);function G(e){this[x]=I++,this._result=this._state=void 0,this._subscribers=[],w!==e&&("function"!=typeof e&&function(){throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")}(),this instanceof G?function(t,e){try{e(function(e){L(t,e)},function(e){R(t,e)})}catch(e){R(t,e)}}(this,e):function(){throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")}())}return B.prototype.then=b,B.all=function(e){return new N(this,e).promise},B.race=function(n){var a=this;return r(n)?new a(function(e,t){for(var r=n.length,i=0;i<r;i++)a.resolve(n[i]).then(e,t)}):new a(function(e,t){return t(new TypeError("You must pass an array to race."))})},B.resolve=_,B.reject=function(e){var t=new this(w);return R(t,e),t},B._setScheduler=function(e){n=e},B._setAsap=function(e){o=e},B._asap=o,B.polyfill=function(){var e=void 0;if(void 0!==V)e=V;else if("undefined"!=typeof self)e=self;else try{e=Function("return this")()}catch(e){throw new Error("polyfill failed because global object is unavailable in this environment")}var t=e.Promise;if(t){var r=null;try{r=Object.prototype.toString.call(t.resolve())}catch(e){}if("[object Promise]"===r&&!t.cast)return}e.Promise=B},B.Promise=B},"object"==typeof i&&void 0!==r?r.exports=t():e.ES6Promise=t()}).call(this,z("_process"),"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{_process:14}],7:[function(e,i,n){!function(e,t){if(0,void 0!==n&&void 0!==i)t(n,i);else{var r={exports:{}};t(r.exports,r),e.fetchJsonp=r.exports}}(this,function(e,t){"use strict";var r=5e3,i="callback";function c(t){try{delete window[t]}catch(e){window[t]=void 0}}function f(e){var t=document.getElementById(e);t&&document.getElementsByTagName("head")[0].removeChild(t)}t.exports=function(a){var o=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],s=a,l=o.timeout||r,u=o.jsonpCallback||i,h=void 0;return new Promise(function(t,e){var r=o.jsonpCallbackFunction||"jsonp_"+Date.now()+"_"+Math.ceil(1e5*Math.random()),i=u+"_"+r;window[r]=function(e){t({ok:!0,json:function(){return Promise.resolve(e)}}),h&&clearTimeout(h),f(i),c(r)},s+=-1===s.indexOf("?")?"?":"&";var n=document.createElement("script");n.setAttribute("src",""+s+u+"="+r),o.charset&&n.setAttribute("charset",o.charset),n.id=i,document.getElementsByTagName("head")[0].appendChild(n),h=setTimeout(function(){e(new Error("JSONP request to "+a+" timed out")),c(r),f(i),window[r]=function(){c(r)}},l),n.onerror=function(){e(new Error("JSONP request to "+a+" failed")),c(r),f(i),h&&clearTimeout(h)}})}})},{}],8:[function(e,t,r){var i=i||function(s){"use strict";if(!(void 0===s||"undefined"!=typeof navigator&&/MSIE [1-9]\./.test(navigator.userAgent))){var e=s.document,l=function(){return s.URL||s.webkitURL||s},u=e.createElementNS("http://www.w3.org/1999/xhtml","a"),h="download"in u,c=/constructor/i.test(s.HTMLElement)||s.safari,f=/CriOS\/[\d]+/.test(navigator.userAgent),d=function(e){(s.setImmediate||s.setTimeout)(function(){throw e},0)},p=function(e){setTimeout(function(){"string"==typeof e?l().revokeObjectURL(e):e.remove()},4e4)},m=function(e){return/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e.type)?new Blob([String.fromCharCode(65279),e],{type:e.type}):e},i=function(e,r,t){t||(e=m(e));function i(){!function(e,t,r){for(var i=(t=[].concat(t)).length;i--;){var n=e["on"+t[i]];if("function"==typeof n)try{n.call(e,r||e)}catch(e){d(e)}}}(a,"writestart progress write writeend".split(" "))}var n,a=this,o="application/octet-stream"===e.type;if(a.readyState=a.INIT,h)return n=l().createObjectURL(e),void setTimeout(function(){var e,t;u.href=n,u.download=r,e=u,t=new MouseEvent("click"),e.dispatchEvent(t),i(),p(n),a.readyState=a.DONE});!function(){if((f||o&&c)&&s.FileReader){var t=new FileReader;return t.onloadend=function(){var e=f?t.result:t.result.replace(/^data:[^;]*;/,"data:attachment/file;");s.open(e,"_blank")||(s.location.href=e),e=void 0,a.readyState=a.DONE,i()},t.readAsDataURL(e),a.readyState=a.INIT}(n=n||l().createObjectURL(e),o)?s.location.href=n:s.open(n,"_blank")||(s.location.href=n);a.readyState=a.DONE,i(),p(n)}()},t=i.prototype;return"undefined"!=typeof navigator&&navigator.msSaveOrOpenBlob?function(e,t,r){return t=t||e.name||"download",r||(e=m(e)),navigator.msSaveOrOpenBlob(e,t)}:(t.abort=function(){},t.readyState=t.INIT=0,t.WRITING=1,t.DONE=2,t.error=t.onwritestart=t.onprogress=t.onwrite=t.onabort=t.onerror=t.onwriteend=null,function(e,t,r){return new i(e,t||e.name||"download",r)})}}("undefined"!=typeof self&&self||"undefined"!=typeof window&&window||this.content);void 0!==t&&t.exports&&(t.exports.saveAs=i)},{}],9:[function(e,t,r){r.read=function(e,t,r,i,n){var a,o,s=8*n-i-1,l=(1<<s)-1,u=l>>1,h=-7,c=r?n-1:0,f=r?-1:1,d=e[t+c];for(c+=f,a=d&(1<<-h)-1,d>>=-h,h+=s;0<h;a=256*a+e[t+c],c+=f,h-=8);for(o=a&(1<<-h)-1,a>>=-h,h+=i;0<h;o=256*o+e[t+c],c+=f,h-=8);if(0===a)a=1-u;else{if(a===l)return o?NaN:1/0*(d?-1:1);o+=Math.pow(2,i),a-=u}return(d?-1:1)*o*Math.pow(2,a-i)},r.write=function(e,t,r,i,n,a){var o,s,l,u=8*a-n-1,h=(1<<u)-1,c=h>>1,f=23===n?Math.pow(2,-24)-Math.pow(2,-77):0,d=i?0:a-1,p=i?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(s=isNaN(t)?1:0,o=h):(o=Math.floor(Math.log(t)/Math.LN2),t*(l=Math.pow(2,-o))<1&&(o--,l*=2),2<=(t+=1<=o+c?f/l:f*Math.pow(2,1-c))*l&&(o++,l/=2),h<=o+c?(s=0,o=h):1<=o+c?(s=(t*l-1)*Math.pow(2,n),o+=c):(s=t*Math.pow(2,c-1)*Math.pow(2,n),o=0));8<=n;e[r+d]=255&s,d+=p,s/=256,n-=8);for(o=o<<n|s,u+=n;0<u;e[r+d]=255&o,d+=p,o/=256,u-=8);e[r+d-p]|=128*m}},{}],10:[function(e,t,r){"use strict";var i;function v(e,t){return e.b===t.b&&e.a===t.a}function y(e,t){return e.b<t.b||e.b===t.b&&e.a<=t.a}function g(e,t,r){var i=t.b-e.b,n=r.b-t.b;return 0<i+n?i<n?t.a-e.a+i/(i+n)*(e.a-r.a):t.a-r.a+n/(i+n)*(r.a-e.a):0}function b(e,t,r){var i=t.b-e.b,n=r.b-t.b;return 0<i+n?(t.a-r.a)*i+(t.a-e.a)*n:0}function _(e,t){return e.a<t.a||e.a===t.a&&e.b<=t.b}function x(e,t,r){var i=t.a-e.a,n=r.a-t.a;return 0<i+n?i<n?t.b-e.b+i/(i+n)*(e.b-r.b):t.b-r.b+n/(i+n)*(r.b-e.b):0}function w(e,t,r){var i=t.a-e.a,n=r.a-t.a;return 0<i+n?(t.b-r.b)*i+(t.b-e.b)*n:0}function S(e,t,r,i){return(e=e<0?0:e)<=(r=r<0?0:r)?0===r?(t+i)/2:t+e/(e+r)*(i-t):i+r/(e+r)*(t-i)}function o(e){var t=a(e.b);return n(t,e.c),n(t.b,e.c),s(t,e.a),t}function M(e,t){var r=!1,i=!1;e!==t&&(t.a!==e.a&&(i=!0,m(t.a,e.a)),t.d!==e.d&&(r=!0,l(t.d,e.d)),d(t,e),i||(n(t,e.a),e.a.c=e),r||(s(t,e.d),e.d.a=e))}function c(e){var t=e.b,r=!1;e.d!==e.b.d&&(r=!0,l(e.d,e.b.d)),e.c===e?m(e.a,null):(e.b.d.a=J(e),e.a.c=e.c,d(e,J(e)),r||s(e,e.d)),t.c===t?(m(t.a,null),l(t.d,null)):(e.d.a=J(t),t.a.c=t.c,d(t,J(t))),p(e)}function T(e){var t=a(e),r=t.b;return d(t,e.e),t.a=e.b.a,n(r,t.a),t.d=r.d=e.d,t=t.b,d(e.b,J(e.b)),d(e.b,t),e.b.a=t.a,t.b.a.c=t.b,t.b.d=e.b.d,t.f=e.f,t.b.f=e.b.f,t}function f(e,t){var r=!1,i=a(e),n=i.b;return t.d!==e.d&&(r=!0,l(t.d,e.d)),d(i,e.e),d(n,t),i.a=e.b.a,n.a=t.a,i.d=n.d=e.d,e.d.a=n,r||s(i,e.d),i}function a(e){var t=new K,r=new K,i=e.b.h;return(((r.h=i).b.h=t).h=e).b.h=r,t.b=r,((t.c=t).e=r).b=t,(r.c=r).e=t}function d(e,t){var r=e.c,i=t.c;r.b.e=t,(i.b.e=e).c=i,t.c=r}function n(e,t){var r=t.f,i=new ee(t,r);for(r.e=i,r=(t.f=i).c=e;r.a=i,(r=r.c)!==e;);}function s(e,t){var r=t.d,i=new Q(t,r);for(r.b=i,(t.d=i).a=e,i.c=t.c,r=e;r.d=i,(r=r.e)!==e;);}function p(e){var t=e.h;e=e.b.h,(t.b.h=e).b.h=t}function m(e,t){for(var r=e.c,i=r;i.a=t,(i=i.c)!==r;);r=e.f,((i=e.e).f=r).e=i}function l(e,t){for(var r=e.a,i=r;i.d=t,(i=i.e)!==r;);r=e.d,((i=e.b).d=r).b=i}function E(e){var t=0;return Math.abs(e[1])>Math.abs(e[0])&&(t=1),Math.abs(e[2])>Math.abs(e[t])&&(t=2),t}var C=4e150;function L(e,t){e.f+=t.f,e.b.f+=t.b.f}function u(e,t,r){return e=e.a,t=t.a,r=r.a,t.b.a===e?r.b.a===e?y(t.a,r.a)?b(r.b.a,t.a,r.a)<=0:0<=b(t.b.a,r.a,t.a):b(r.b.a,e,r.a)<=0:r.b.a===e?0<=b(t.b.a,e,t.a):(t=g(t.b.a,e,t.a),(e=g(r.b.a,e,r.a))<=t)}function O(e){e.a.i=null;var t=e.e;t.a.c=t.c,t.c.a=t.a,e.e=null}function h(e,t){c(e.a),e.c=!1,(e.a=t).i=e}function P(e){for(var t=e.a.a;(e=fe(e)).a.a===t;);return e.c&&(h(e,t=f(ce(e).a.b,e.a.e)),e=fe(e)),e}function R(e,t,r){var i=new he;return i.a=r,i.e=W(e.f,t.e,i),r.i=i}function D(e,t){switch(e.s){case 100130:return 0!=(1&t);case 100131:return 0!==t;case 100132:return 0<t;case 100133:return t<0;case 100134:return 2<=t||t<=-2}return!1}function k(e){var t=e.a,r=t.d;r.c=e.d,r.a=t,O(e)}function A(e,t,r){for(t=(e=t).a;e!==r;){e.c=!1;var i=ce(e),n=i.a;if(n.a!==t.a){if(!i.c){k(e);break}h(i,n=f(t.c.b,n.b))}t.c!==n&&(M(J(n),n),M(t,n)),k(e),t=i.a,e=i}return t}function I(e,t,r,i,n,a){for(var o=!0;R(e,t,r.b),(r=r.c)!==i;);for(null===n&&(n=ce(t).a.b.c);(r=(i=ce(t)).a.b).a===n.a;)r.c!==n&&(M(J(r),r),M(J(n),r)),i.f=t.f-r.f,i.d=D(e,i.f),t.b=!0,!o&&B(e,t)&&(L(r,n),O(t),c(n)),o=!1,t=i,n=r;t.b=!0,a&&j(e,t)}function U(e,t,r,i,n){var a=[t.g[0],t.g[1],t.g[2]];t.d=null,t.d=e.o&&e.o(a,r,i,e.c)||null,null===t.d&&(n?e.n||(Z(e,100156),e.n=!0):t.d=r[0])}function N(e,t,r){var i=[null,null,null,null];i[0]=t.a.d,i[1]=r.a.d,U(e,t.a,i,[.5,.5,0,0],!1),M(t,r)}function F(e,t,r,i,n){var a=Math.abs(t.b-e.b)+Math.abs(t.a-e.a),o=Math.abs(r.b-e.b)+Math.abs(r.a-e.a),s=n+1;i[n]=.5*o/(a+o),i[s]=.5*a/(a+o),e.g[0]+=i[n]*t.g[0]+i[s]*r.g[0],e.g[1]+=i[n]*t.g[1]+i[s]*r.g[1],e.g[2]+=i[n]*t.g[2]+i[s]*r.g[2]}function B(e,t){var r=ce(t),i=t.a,n=r.a;if(y(i.a,n.a)){if(0<b(n.b.a,i.a,n.a))return!1;if(v(i.a,n.a)){if(i.a!==n.a){r=e.e;var a=i.a.h;if(0<=a){var o=(r=r.b).d,s=r.e,l=r.c,u=l[a];o[u]=o[r.a],(l[o[u]]=u)<=--r.a&&(u<=1?le(r,u):y(s[o[u>>1]],s[o[u]])?le(r,u):ue(r,u)),s[a]=null,l[a]=r.b,r.b=a}else for(r.c[-(a+1)]=null;0<r.a&&null===r.c[r.d[r.a-1]];)--r.a;N(e,J(n),i)}}else T(n.b),M(i,J(n)),t.b=r.b=!0}else{if(b(i.b.a,n.a,i.a)<0)return!1;fe(t).b=t.b=!0,T(i.b),M(J(n),i)}return!0}function G(e,t){var r=ce(t),i=t.a,n=r.a,a=i.a,o=n.a,s=i.b.a,l=n.b.a,u=new ee;if(b(s,e.a,a),b(l,e.a,o),a===o||Math.min(a.a,s.a)>Math.max(o.a,l.a))return!1;if(y(a,o)){if(0<b(l,a,o))return!1}else if(b(s,o,a)<0)return!1;var h,c,f=s,d=a,p=l,m=o;if(y(f,d)||(h=f,f=d,d=h),y(p,m)||(h=p,p=m,m=h),y(f,p)||(h=f,f=p,p=h,h=d,d=m,m=h),y(p,d)?y(d,m)?((h=g(f,p,d))+(c=g(p,d,m))<0&&(h=-h,c=-c),u.b=S(h,p.b,c,d.b)):((h=b(f,p,d))+(c=-b(f,m,d))<0&&(h=-h,c=-c),u.b=S(h,p.b,c,m.b)):u.b=(p.b+d.b)/2,_(f,d)||(h=f,f=d,d=h),_(p,m)||(h=p,p=m,m=h),_(f,p)||(h=f,f=p,p=h,h=d,d=m,m=h),_(p,d)?_(d,m)?((h=x(f,p,d))+(c=x(p,d,m))<0&&(h=-h,c=-c),u.a=S(h,p.a,c,d.a)):((h=w(f,p,d))+(c=-w(f,m,d))<0&&(h=-h,c=-c),u.a=S(h,p.a,c,m.a)):u.a=(p.a+d.a)/2,y(u,e.a)&&(u.b=e.a.b,u.a=e.a.a),f=y(a,o)?a:o,y(f,u)&&(u.b=f.b,u.a=f.a),v(u,a)||v(u,o))return B(e,t),!1;if(!v(s,e.a)&&0<=b(s,e.a,u)||!v(l,e.a)&&b(l,e.a,u)<=0){if(l===e.a)return T(i.b),M(n.b,i),i=ce(t=P(t)).a,A(e,ce(t),r),I(e,t,J(i),i,i,!0),!0;if(s!==e.a)return 0<=b(s,e.a,u)&&(fe(t).b=t.b=!0,T(i.b),i.a.b=e.a.b,i.a.a=e.a.a),b(l,e.a,u)<=0&&(t.b=r.b=!0,T(n.b),n.a.b=e.a.b,n.a.a=e.a.a),!1;for(T(n.b),M(i.e,J(n)),o=(a=r=t).a.b.a;(a=fe(a)).a.b.a===o;);return a=ce(t=a).a.b.c,r.a=J(n),I(e,t,(n=A(e,r,null)).c,i.b.c,a,!0),!0}return T(i.b),T(n.b),M(J(n),i),i.a.b=u.b,i.a.a=u.a,i.a.h=re(e.e,i.a),i=i.a,n=[0,0,0,0],u=[a.d,s.d,o.d,l.d],i.g[0]=i.g[1]=i.g[2]=0,F(i,a,s,n,0),F(i,o,l,n,2),U(e,i,u,n,!0),fe(t).b=t.b=r.b=!0,!1}function j(e,t){for(var r=ce(t);;){for(;r.b;)r=ce(t=r);if(!t.b&&(null===(t=fe(r=t))||!t.b))break;t.b=!1;var i,n=t.a,a=r.a;if(i=n.b.a!==a.b.a)e:{var o=ce(i=t),s=i.a,l=o.a,u=void 0;if(y(s.b.a,l.b.a)){if(b(s.b.a,l.b.a,s.a)<0){i=!1;break e}fe(i).b=i.b=!0,u=T(s),M(l.b,u),u.d.c=i.d}else{if(0<b(l.b.a,s.b.a,l.a)){i=!1;break e}i.b=o.b=!0,u=T(l),M(s.e,l.b),u.b.d.c=i.d}i=!0}if(i&&(r.c?(O(r),c(a),a=(r=ce(t)).a):t.c&&(O(t),c(n),n=(t=fe(r)).a)),n.a!==a.a)if(n.b.a===a.b.a||t.c||r.c||n.b.a!==e.a&&a.b.a!==e.a)B(e,t);else if(G(e,t))break;n.a===a.a&&n.b.a===a.b.a&&(L(a,n),O(t),c(n),t=fe(r))}}function V(e,t){for(var r=(e.a=t).c;null===r.i;)if((r=r.c)===t.c){r=e;var i=t;(o=new he).a=i.c.b;for(var n=(l=r.f).a;null!==(n=n.a).b&&!l.c(l.b,o,n.b););var a=ce(l=n.b),o=l.a;n=a.a;if(0===b(o.b.a,i,o.a))v((o=l.a).a,i)||v(o.b.a,i)||(T(o.b),l.c&&(c(o.c),l.c=!1),M(i.c,o),V(r,i));else{var s=y(n.b.a,o.b.a)?l:a;a=void 0;l.d||s.c?(a=s===l?f(i.c.b,o.e):f(n.b.c.b,i.c).b,s.c?h(s,a):((l=R(o=r,l,a)).f=fe(l).f+l.a.f,l.d=D(o,l.f)),V(r,i)):I(r,l,i.c,i.c,null,!0)}return}if(l=(o=ce(r=P(r.i))).a,(o=A(e,o,null)).c===l){o=(l=o).c,n=ce(r),a=r.a,s=n.a;var l,u=!1;a.b.a!==s.b.a&&G(e,r),v(a.a,e.a)&&(M(J(o),a),o=ce(r=P(r)).a,A(e,ce(r),n),u=!0),v(s.a,e.a)&&(M(l,J(s)),l=A(e,n,null),u=!0),u?I(e,r,l.c,o,o,!0):(i=y(s.a,a.a)?J(s):a,I(e,r,i=f(l.c.b,i),i.c,i.c,!1),i.b.i.c=!0,j(e,r))}else I(e,r,o.c,l,l,!0)}function z(e,t){var r=new he,i=o(e.b);i.a.b=C,i.a.a=t,i.b.a.b=-C,i.b.a.a=t,e.a=i.b.a,r.a=i,r.f=0,r.d=!1,r.c=!1,r.h=!0,r.b=!1,i=W(i=e.f,i.a,r),r.e=i}function H(e){this.a=new q,this.b=e,this.c=u}function W(e,t,r){for(;null!==(t=t.c).b&&!e.c(e.b,t.b,r););return e=new q(r,t.a,t),t.a.c=e,t.a=e}function q(e,t,r){this.b=e||null,this.a=t||this,this.c=r||this}function X(){this.d=0,this.p=this.b=this.q=null,this.j=[0,0,0],this.s=100130,this.n=!1,this.o=this.a=this.e=this.f=null,this.m=!1,this.c=this.r=this.i=this.k=this.l=this.h=null}function Y(e,t){if(e.d!==t)for(;e.d!==t;)if(e.d<t)switch(e.d){case 0:Z(e,100151),e.u(null);break;case 1:Z(e,100152),e.t()}else switch(e.d){case 2:Z(e,100154),e.v();break;case 1:Z(e,100153),e.w()}}function Z(e,t){e.p&&e.p(t,e.c)}function Q(e,t){this.b=e||this,this.d=t||this,this.a=null,this.c=!1}function K(){(this.h=this).i=this.d=this.a=this.e=this.c=this.b=null,this.f=0}function J(e){return e.b.e}function $(){this.c=new ee,this.a=new Q,this.b=new K,this.d=new K,this.b.b=this.d,this.d.b=this.b}function ee(e,t){this.e=e||this,this.f=t||this,this.d=this.c=null,this.g=[0,0,0],this.h=this.a=this.b=0}function te(){this.c=[],this.d=null,this.a=0,this.e=!1,this.b=new ne}function re(e,t){if(e.e){var r,i=e.b,n=++i.a;return 2*n>i.f&&(i.f*=2,i.c=ae(i.c,i.f+1)),0===i.b?r=n:(r=i.b,i.b=i.c[i.b]),i.e[r]=t,i.c[r]=n,i.d[n]=r,i.h&&ue(i,n),r}return i=e.a++,e.c[i]=t,-(i+1)}function ie(e){if(0===e.a)return se(e.b);var t=e.c[e.d[e.a-1]];if(0!==e.b.a&&y(oe(e.b),t))return se(e.b);for(;--e.a,0<e.a&&null===e.c[e.d[e.a-1]];);return t}function ne(){this.d=ae([0],33),this.e=[null,null],this.c=[0,0],this.a=0,this.f=32,this.b=0,this.h=!1,this.d[1]=1}function ae(e,t){for(var r=Array(t),i=0;i<e.length;i++)r[i]=e[i];for(;i<t;i++)r[i]=0;return r}function oe(e){return e.e[e.d[1]]}function se(e){var t=e.d,r=e.e,i=e.c,n=t[1],a=r[n];return 0<e.a&&(t[1]=t[e.a],i[t[1]]=1,r[n]=null,i[n]=e.b,e.b=n,0<--e.a&&le(e,1)),a}function le(e,t){for(var r=e.d,i=e.e,n=e.c,a=t,o=r[a];;){var s=a<<1;s<e.a&&y(i[r[s+1]],i[r[s]])&&(s+=1);var l=r[s];if(s>e.a||y(i[o],i[l])){n[r[a]=o]=a;break}n[r[a]=l]=a,a=s}}function ue(e,t){for(var r=e.d,i=e.e,n=e.c,a=t,o=r[a];;){var s=a>>1,l=r[s];if(0==s||y(i[l],i[o])){n[r[a]=o]=a;break}n[r[a]=l]=a,a=s}}function he(){this.e=this.a=null,this.f=0,this.c=this.b=this.h=this.d=!1}function ce(e){return e.e.c.b}function fe(e){return e.e.a.b}(i=X.prototype).x=function(){Y(this,0)},i.B=function(e,t){switch(e){case 100142:return;case 100140:switch(t){case 100130:case 100131:case 100132:case 100133:case 100134:return void(this.s=t)}break;case 100141:return void(this.m=!!t);default:return void Z(this,100900)}Z(this,100901)},i.y=function(e){switch(e){case 100142:return 0;case 100140:return this.s;case 100141:return this.m;default:Z(this,100900)}return!1},i.A=function(e,t,r){this.j[0]=e,this.j[1]=t,this.j[2]=r},i.z=function(e,t){var r=t||null;switch(e){case 100100:case 100106:this.h=r;break;case 100104:case 100110:this.l=r;break;case 100101:case 100107:this.k=r;break;case 100102:case 100108:this.i=r;break;case 100103:case 100109:this.p=r;break;case 100105:case 100111:this.o=r;break;case 100112:this.r=r;break;default:Z(this,100900)}},i.C=function(e,t){var r=!1,i=[0,0,0];Y(this,2);for(var n=0;n<3;++n){var a=e[n];a<-1e150&&(a=-1e150,r=!0),1e150<a&&(a=1e150,r=!0),i[n]=a}r&&Z(this,100155),null===(r=this.q)?M(r=o(this.b),r.b):(T(r),r=r.e),r.a.d=t,r.a.g[0]=i[0],r.a.g[1]=i[1],r.a.g[2]=i[2],r.f=1,r.b.f=-1,this.q=r},i.u=function(e){Y(this,0),this.d=1,this.b=new $,this.c=e},i.t=function(){Y(this,1),this.d=2,this.q=null},i.v=function(){Y(this,2),this.d=1},i.w=function(){Y(this,1),this.d=0;var e,t,r=!1,i=[l=this.j[0],n=this.j[1],o=this.j[2]];if(0===l&&0===n&&0===o){for(var n=[-2e150,-2e150,-2e150],a=[2e150,2e150,2e150],o=[],s=[],l=(r=this.b.c).e;l!==r;l=l.e)for(var u=0;u<3;++u){var h=l.g[u];h<a[u]&&(a[u]=h,s[u]=l),h>n[u]&&(n[u]=h,o[u]=l)}if(l=0,n[1]-a[1]>n[0]-a[0]&&(l=1),n[2]-a[2]>n[l]-a[l]&&(l=2),a[l]>=n[l])i[0]=0,i[1]=0,i[2]=1;else{for(n=0,a=s[l],o=o[l],s=[0,0,0],a=[a.g[0]-o.g[0],a.g[1]-o.g[1],a.g[2]-o.g[2]],u=[0,0,0],l=r.e;l!==r;l=l.e)u[0]=l.g[0]-o.g[0],u[1]=l.g[1]-o.g[1],u[2]=l.g[2]-o.g[2],s[0]=a[1]*u[2]-a[2]*u[1],s[1]=a[2]*u[0]-a[0]*u[2],s[2]=a[0]*u[1]-a[1]*u[0],n<(h=s[0]*s[0]+s[1]*s[1]+s[2]*s[2])&&(n=h,i[0]=s[0],i[1]=s[1],i[2]=s[2]);n<=0&&(i[0]=i[1]=i[2]=0,i[E(a)]=1)}r=!0}for(s=E(i),l=this.b.c,n=(s+1)%3,o=(s+2)%3,s=0<i[s]?1:-1,i=l.e;i!==l;i=i.e)i.b=i.g[n],i.a=s*i.g[o];if(r){for(i=0,l=(r=this.b.a).b;l!==r;l=l.b)if(!((n=l.a).f<=0))for(;i+=(n.a.b-n.b.a.b)*(n.a.a+n.b.a.a),(n=n.e)!==l.a;);if(i<0)for(r=(i=this.b.c).e;r!==i;r=r.e)r.a=-r.a}for(this.n=!1,l=(i=this.b.b).h;l!==i;l=r)r=l.h,n=l.e,v(l.a,l.b.a)&&l.e.e!==l&&(N(this,n,l),c(l),n=(l=n).e),n.e===l&&(n!==l&&(n!==r&&n!==r.b||(r=r.h),c(n)),l!==r&&l!==r.b||(r=r.h),c(l));for(this.e=i=new te,l=(r=this.b.c).e;l!==r;l=l.e)l.h=re(i,l);for(!function(e){e.d=[];for(var t=0;t<e.a;t++)e.d[t]=t;e.d.sort(function(r){return function(e,t){return y(r[e],r[t])?1:-1}}(e.c)),e.e=!0,function(e){for(var t=e.a;1<=t;--t)le(e,t);e.h=!0}(e.b)}(i),this.f=new H(this),z(this,-C),z(this,C);null!==(i=ie(this.e));){for(;;){e:if(l=this.e,0===l.a)r=oe(l.b);else if(r=l.c[l.d[l.a-1]],0!==l.b.a&&(l=oe(l.b),y(l,r))){r=l;break e}if(null===r||!v(r,i))break;r=ie(this.e),N(this,i.c,r.c)}V(this,i)}for(this.a=this.f.a.a.b.a.a,i=0;null!==(r=this.f.a.a.b);)r.h||++i,O(r);for(this.f=null,(i=this.e).b=null,i.d=null,this.e=i.c=null,l=(i=this.b).a.b;l!==i.a;l=r)r=l.b,(l=l.a).e.e===l&&(L(l.c,l),c(l));if(!this.n){if(i=this.b,this.m)for(l=i.b.h;l!==i.b;l=r)r=l.h,l.b.d.c!==l.d.c?l.f=l.d.c?1:-1:c(l);else for(l=i.a.b;l!==i.a;l=r)if(r=l.b,l.c){for(l=l.a;y(l.b.a,l.a);l=l.c.b);for(;y(l.a,l.b.a);l=l.e);for(n=l.c.b,o=void 0;l.e!==n;)if(y(l.b.a,n.a)){for(;n.e!==l&&(y((t=n.e).b.a,t.a)||b(n.a,n.b.a,n.e.b.a)<=0);)n=(o=f(n.e,n)).b;n=n.c.b}else{for(;n.e!==l&&(y((e=l.c.b).a,e.b.a)||0<=b(l.b.a,l.a,l.c.b.a));)l=(o=f(l,l.c.b)).b;l=l.e}for(;n.e.e!==l;)n=(o=f(n.e,n)).b}if(this.h||this.i||this.k||this.l)if(this.m){for(r=(i=this.b).a.b;r!==i.a;r=r.b)if(r.c){for(this.h&&this.h(2,this.c),l=r.a;this.k&&this.k(l.a.d,this.c),(l=l.e)!==r.a;);this.i&&this.i(this.c)}}else{for(i=this.b,r=!!this.l,l=!1,n=-1,o=i.a.d;o!==i.a;o=o.d)if(o.c)for(l||(this.h&&this.h(4,this.c),l=!0),s=o.a;r&&(n!==(a=s.b.d.c?0:1)&&(n=a,this.l&&this.l(!!n,this.c))),this.k&&this.k(s.a.d,this.c),(s=s.e)!==o.a;);l&&this.i&&this.i(this.c)}if(this.r){for(l=(i=this.b).a.b;l!==i.a;l=r)if(r=l.b,!l.c){for(o=(n=l.a).e,s=void 0;o=(s=o).e,(s.d=null)===s.b.d&&(s.c===s?m(s.a,null):(s.a.c=s.c,d(s,J(s))),(a=s.b).c===a?m(a.a,null):(a.a.c=a.c,d(a,J(a))),p(s)),s!==n;);n=l.d,((l=l.b).d=n).b=l}return this.r(this.b),void(this.c=this.b=null)}}this.b=this.c=null},this.libtess={GluTesselator:X,windingRule:{GLU_TESS_WINDING_ODD:100130,GLU_TESS_WINDING_NONZERO:100131,GLU_TESS_WINDING_POSITIVE:100132,GLU_TESS_WINDING_NEGATIVE:100133,GLU_TESS_WINDING_ABS_GEQ_TWO:100134},primitiveType:{GL_LINE_LOOP:2,GL_TRIANGLES:4,GL_TRIANGLE_STRIP:5,GL_TRIANGLE_FAN:6},errorType:{GLU_TESS_MISSING_BEGIN_POLYGON:100151,GLU_TESS_MISSING_END_POLYGON:100153,GLU_TESS_MISSING_BEGIN_CONTOUR:100152,GLU_TESS_MISSING_END_CONTOUR:100154,GLU_TESS_COORD_TOO_LARGE:100155,GLU_TESS_NEED_COMBINE_CALLBACK:100156},gluEnum:{GLU_TESS_MESH:100112,GLU_TESS_TOLERANCE:100142,GLU_TESS_WINDING_RULE:100140,GLU_TESS_BOUNDARY_ONLY:100141,GLU_INVALID_ENUM:100900,GLU_INVALID_VALUE:100901,GLU_TESS_BEGIN:100100,GLU_TESS_VERTEX:100101,GLU_TESS_END:100102,GLU_TESS_ERROR:100103,GLU_TESS_EDGE_FLAG:100104,GLU_TESS_COMBINE:100105,GLU_TESS_BEGIN_DATA:100106,GLU_TESS_VERTEX_DATA:100107,GLU_TESS_END_DATA:100108,GLU_TESS_ERROR_DATA:100109,GLU_TESS_EDGE_FLAG_DATA:100110,GLU_TESS_COMBINE_DATA:100111}},X.prototype.gluDeleteTess=X.prototype.x,X.prototype.gluTessProperty=X.prototype.B,X.prototype.gluGetTessProperty=X.prototype.y,X.prototype.gluTessNormal=X.prototype.A,X.prototype.gluTessCallback=X.prototype.z,X.prototype.gluTessVertex=X.prototype.C,X.prototype.gluTessBeginPolygon=X.prototype.u,X.prototype.gluTessBeginContour=X.prototype.t,X.prototype.gluTessEndContour=X.prototype.v,X.prototype.gluTessEndPolygon=X.prototype.w,void 0!==t&&(t.exports=this.libtess)},{}],11:[function(e,t,r){"use strict";function L(e,t,r,i){for(var n=e[t++],a=1<<n,o=1+a,s=1+o,l=n+1,u=(1<<l)-1,h=0,c=0,f=0,d=e[t++],p=new Int32Array(4096),m=null;;){for(;h<16&&0!==d;)c|=e[t++]<<h,h+=8,1===d?d=e[t++]:--d;if(h<l)break;var v=c&u;if(c>>=l,h-=l,v!=a){if(v==o)break;for(var y=v<s?v:m,g=0,b=y;a<b;)b=p[b]>>8,++g;var _=b;if(i<f+g+(y!==v?1:0))return void console.log("Warning, gif stream longer than expected.");r[f++]=_;var x=f+=g;for(y!==v&&(r[f++]=_),b=y;g--;)b=p[b],r[--x]=255&b,b>>=8;null!==m&&s<4096&&(p[s++]=m<<8|_,u+1<=s&&l<12&&(++l,u=u<<1|1)),m=v}else s=1+o,u=(1<<(l=n+1))-1,m=null}return f!==i&&console.log("Warning, gif stream shorter than expected."),r}try{r.GifWriter=function(y,e,t,r){var g=0,i=void 0===(r=void 0===r?{}:r).loop?null:r.loop,b=void 0===r.palette?null:r.palette;if(e<=0||t<=0||65535<e||65535<t)throw new Error("Width/Height invalid.");function _(e){var t=e.length;if(t<2||256<t||t&t-1)throw new Error("Invalid code/color length, must be power of 2 and 2 .. 256.");return t}y[g++]=71,y[g++]=73,y[g++]=70,y[g++]=56,y[g++]=57,y[g++]=97;var n=0,a=0;if(null!==b){for(var o=_(b);o>>=1;)++n;if(o=1<<n,--n,void 0!==r.background){if(o<=(a=r.background))throw new Error("Background index out of range.");if(0===a)throw new Error("Background index explicitly passed as 0.")}}if(y[g++]=255&e,y[g++]=e>>8&255,y[g++]=255&t,y[g++]=t>>8&255,y[g++]=(null!==b?128:0)|n,y[g++]=a,y[g++]=0,null!==b)for(var s=0,l=b.length;s<l;++s){var u=b[s];y[g++]=u>>16&255,y[g++]=u>>8&255,y[g++]=255&u}if(null!==i){if(i<0||65535<i)throw new Error("Loop count invalid.");y[g++]=33,y[g++]=255,y[g++]=11,y[g++]=78,y[g++]=69,y[g++]=84,y[g++]=83,y[g++]=67,y[g++]=65,y[g++]=80,y[g++]=69,y[g++]=50,y[g++]=46,y[g++]=48,y[g++]=3,y[g++]=1,y[g++]=255&i,y[g++]=i>>8&255,y[g++]=0}var x=!1;this.addFrame=function(e,t,r,i,n,a){if(!0===x&&(--g,x=!1),a=void 0===a?{}:a,e<0||t<0||65535<e||65535<t)throw new Error("x/y invalid.");if(r<=0||i<=0||65535<r||65535<i)throw new Error("Width/Height invalid.");if(n.length<r*i)throw new Error("Not enough pixels for the frame size.");var o=!0,s=a.palette;if(null==s&&(o=!1,s=b),null==s)throw new Error("Must supply either a local or global palette.");for(var l=_(s),u=0;l>>=1;)++u;l=1<<u;var h=void 0===a.delay?0:a.delay,c=void 0===a.disposal?0:a.disposal;if(c<0||3<c)throw new Error("Disposal out of range.");var f=!1,d=0;if(void 0!==a.transparent&&null!==a.transparent&&(f=!0,(d=a.transparent)<0||l<=d))throw new Error("Transparent color index.");if(0===c&&!f&&0===h||(y[g++]=33,y[g++]=249,y[g++]=4,y[g++]=c<<2|(!0===f?1:0),y[g++]=255&h,y[g++]=h>>8&255,y[g++]=d,y[g++]=0),y[g++]=44,y[g++]=255&e,y[g++]=e>>8&255,y[g++]=255&t,y[g++]=t>>8&255,y[g++]=255&r,y[g++]=r>>8&255,y[g++]=255&i,y[g++]=i>>8&255,y[g++]=!0===o?128|u-1:0,!0===o)for(var p=0,m=s.length;p<m;++p){var v=s[p];y[g++]=v>>16&255,y[g++]=v>>8&255,y[g++]=255&v}return g=function(t,r,e,i){t[r++]=e;var n=r++,a=1<<e,o=a-1,s=1+a,l=1+s,u=e+1,h=0,c=0;function f(e){for(;e<=h;)t[r++]=255&c,c>>=8,h-=8,r===n+256&&(t[n]=255,n=r++)}function d(e){c|=e<<h,h+=u,f(8)}var p=i[0]&o,m={};d(a);for(var v=1,y=i.length;v<y;++v){var g=i[v]&o,b=p<<8|g,_=m[b];if(void 0===_){for(c|=p<<h,h+=u;8<=h;)t[r++]=255&c,c>>=8,h-=8,r===n+256&&(t[n]=255,n=r++);4096===l?(d(a),l=1+s,u=e+1,m={}):(1<<u<=l&&++u,m[b]=l++),p=g}else p=_}d(p),d(s),f(1),n+1===r?t[n]=0:(t[n]=r-n-1,t[r++]=0);return r}(y,g,u<2?2:u,n)},this.end=function(){return!1===x&&(y[g++]=59,x=!0),g},this.getOutputBuffer=function(){return y},this.setOutputBuffer=function(e){y=e},this.getOutputBufferPosition=function(){return g},this.setOutputBufferPosition=function(e){g=e}},r.GifReader=function(x){var e=0;if(71!==x[e++]||73!==x[e++]||70!==x[e++]||56!==x[e++]||56!=(x[e++]+1&253)||97!==x[e++])throw new Error("Invalid GIF 87a/89a header.");var w=x[e++]|x[e++]<<8,t=x[e++]|x[e++]<<8,r=x[e++],i=r>>7,n=1<<1+(7&r);x[e++],x[e++];var a=null,o=null;i&&(a=e,e+=3*(o=n));var s=!0,l=[],u=0,h=null,c=0,f=null;for(this.width=w,this.height=t;s&&e<x.length;)switch(x[e++]){case 33:switch(x[e++]){case 255:if(11!==x[e]||78==x[e+1]&&69==x[e+2]&&84==x[e+3]&&83==x[e+4]&&67==x[e+5]&&65==x[e+6]&&80==x[e+7]&&69==x[e+8]&&50==x[e+9]&&46==x[e+10]&&48==x[e+11]&&3==x[e+12]&&1==x[e+13]&&0==x[e+16])e+=14,f=x[e++]|x[e++]<<8,e++;else for(e+=12;;){if(!(0<=(C=x[e++])))throw Error("Invalid block size");if(0===C)break;e+=C}break;case 249:if(4!==x[e++]||0!==x[e+4])throw new Error("Invalid graphics extension block.");var d=x[e++];u=x[e++]|x[e++]<<8,h=x[e++],0==(1&d)&&(h=null),c=d>>2&7,e++;break;case 254:for(;;){if(!(0<=(C=x[e++])))throw Error("Invalid block size");if(0===C)break;e+=C}break;default:throw new Error("Unknown graphic control label: 0x"+x[e-1].toString(16))}break;case 44:var p=x[e++]|x[e++]<<8,m=x[e++]|x[e++]<<8,v=x[e++]|x[e++]<<8,y=x[e++]|x[e++]<<8,g=x[e++],b=g>>6&1,_=1<<1+(7&g),S=a,M=o,T=!1;if(g>>7){T=!0;S=e,e+=3*(M=_)}var E=e;for(e++;;){var C;if(!(0<=(C=x[e++])))throw Error("Invalid block size");if(0===C)break;e+=C}l.push({x:p,y:m,width:v,height:y,has_local_palette:T,palette_offset:S,palette_size:M,data_offset:E,data_length:e-E,transparent_index:h,interlaced:!!b,delay:u,disposal:c});break;case 59:s=!1;break;default:throw new Error("Unknown gif block: 0x"+x[e-1].toString(16))}this.numFrames=function(){return l.length},this.loopCount=function(){return f},this.frameInfo=function(e){if(e<0||e>=l.length)throw new Error("Frame index out of range.");return l[e]},this.decodeAndBlitFrameBGRA=function(e,t){var r=this.frameInfo(e),i=r.width*r.height,n=new Uint8Array(i);L(x,r.data_offset,n,i);var a=r.palette_offset,o=r.transparent_index;null===o&&(o=256);var s=r.width,l=w-s,u=s,h=4*(r.y*w+r.x),c=4*((r.y+r.height)*w+r.x),f=h,d=4*l;!0===r.interlaced&&(d+=4*w*7);for(var p=8,m=0,v=n.length;m<v;++m){var y=n[m];if(0===u&&(u=s,c<=(f+=d)&&(d=4*l+4*w*(p-1),f=h+(s+l)*(p<<1),p>>=1)),y===o)f+=4;else{var g=x[a+3*y],b=x[a+3*y+1],_=x[a+3*y+2];t[f++]=_,t[f++]=b,t[f++]=g,t[f++]=255}--u}},this.decodeAndBlitFrameRGBA=function(e,t){var r=this.frameInfo(e),i=r.width*r.height,n=new Uint8Array(i);L(x,r.data_offset,n,i);var a=r.palette_offset,o=r.transparent_index;null===o&&(o=256);var s=r.width,l=w-s,u=s,h=4*(r.y*w+r.x),c=4*((r.y+r.height)*w+r.x),f=h,d=4*l;!0===r.interlaced&&(d+=4*w*7);for(var p=8,m=0,v=n.length;m<v;++m){var y=n[m];if(0===u&&(u=s,c<=(f+=d)&&(d=4*l+4*w*(p-1),f=h+(s+l)*(p<<1),p>>=1)),y===o)f+=4;else{var g=x[a+3*y],b=x[a+3*y+1],_=x[a+3*y+2];t[f++]=g,t[f++]=b,t[f++]=_,t[f++]=255}--u}}}}catch(e){}},{}],12:[function(jr,t,r){(function(Gr){var e;e=this,function(T){"use strict";function e(e){if(null==this)throw TypeError();var t=String(this),r=t.length,i=e?Number(e):0;if(i!=i&&(i=0),!(i<0||r<=i)){var n,a=t.charCodeAt(i);return 55296<=a&&a<=56319&&i+1<r&&56320<=(n=t.charCodeAt(i+1))&&n<=57343?1024*(a-55296)+n-56320+65536:a}}var t;String.prototype.codePointAt||((t=function(){try{var e={},t=Object.defineProperty,r=t(e,e,e)&&t}catch(e){}return r}())?t(String.prototype,"codePointAt",{value:e,configurable:!0,writable:!0}):String.prototype.codePointAt=e);var l=0,a=-3;function r(){this.table=new Uint16Array(16),this.trans=new Uint16Array(288)}function o(e,t){this.source=e,this.sourceIndex=0,this.tag=0,this.bitcount=0,this.dest=t,this.destLen=0,this.ltree=new r,this.dtree=new r}var s=new r,u=new r,h=new Uint8Array(30),c=new Uint16Array(30),f=new Uint8Array(30),d=new Uint16Array(30),p=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),m=new r,v=new Uint8Array(320);function i(e,t,r,i){var n,a;for(n=0;n<r;++n)e[n]=0;for(n=0;n<30-r;++n)e[n+r]=n/r|0;for(a=i,n=0;n<30;++n)t[n]=a,a+=1<<e[n]}var y=new Uint16Array(16);function g(e,t,r,i){var n,a;for(n=0;n<16;++n)e.table[n]=0;for(n=0;n<i;++n)e.table[t[r+n]]++;for(n=a=e.table[0]=0;n<16;++n)y[n]=a,a+=e.table[n];for(n=0;n<i;++n)t[r+n]&&(e.trans[y[t[r+n]]++]=n)}function b(e){e.bitcount--||(e.tag=e.source[e.sourceIndex++],e.bitcount=7);var t=1&e.tag;return e.tag>>>=1,t}function _(e,t,r){if(!t)return r;for(;e.bitcount<24;)e.tag|=e.source[e.sourceIndex++]<<e.bitcount,e.bitcount+=8;var i=e.tag&65535>>>16-t;return e.tag>>>=t,e.bitcount-=t,i+r}function x(e,t){for(;e.bitcount<24;)e.tag|=e.source[e.sourceIndex++]<<e.bitcount,e.bitcount+=8;for(var r=0,i=0,n=0,a=e.tag;i=2*i+(1&a),a>>>=1,++n,r+=t.table[n],0<=(i-=t.table[n]););return e.tag=a,e.bitcount-=n,t.trans[r+i]}function w(e,t,r){var i,n,a,o,s,l;for(i=_(e,5,257),n=_(e,5,1),a=_(e,4,4),o=0;o<19;++o)v[o]=0;for(o=0;o<a;++o){var u=_(e,3,0);v[p[o]]=u}for(g(m,v,0,19),s=0;s<i+n;){var h=x(e,m);switch(h){case 16:var c=v[s-1];for(l=_(e,2,3);l;--l)v[s++]=c;break;case 17:for(l=_(e,3,3);l;--l)v[s++]=0;break;case 18:for(l=_(e,7,11);l;--l)v[s++]=0;break;default:v[s++]=h}}g(t,v,0,i),g(r,v,i,n)}function S(e,t,r){for(;;){var i,n,a,o,s=x(e,t);if(256===s)return l;if(s<256)e.dest[e.destLen++]=s;else for(i=_(e,h[s-=257],c[s]),n=x(e,r),o=a=e.destLen-_(e,f[n],d[n]);o<a+i;++o)e.dest[e.destLen++]=e.dest[o]}}function M(e){for(var t,r;8<e.bitcount;)e.sourceIndex--,e.bitcount-=8;if((t=256*(t=e.source[e.sourceIndex+1])+e.source[e.sourceIndex])!==(65535&~(256*e.source[e.sourceIndex+3]+e.source[e.sourceIndex+2])))return a;for(e.sourceIndex+=4,r=t;r;--r)e.dest[e.destLen++]=e.source[e.sourceIndex++];return e.bitcount=0,l}!function(e,t){var r;for(r=0;r<7;++r)e.table[r]=0;for(e.table[7]=24,e.table[8]=152,e.table[9]=112,r=0;r<24;++r)e.trans[r]=256+r;for(r=0;r<144;++r)e.trans[24+r]=r;for(r=0;r<8;++r)e.trans[168+r]=280+r;for(r=0;r<112;++r)e.trans[176+r]=144+r;for(r=0;r<5;++r)t.table[r]=0;for(t.table[5]=32,r=0;r<32;++r)t.trans[r]=r}(s,u),i(h,c,4,3),i(f,d,2,1),h[28]=0,c[28]=258;var n=function(e,t){var r,i,n=new o(e,t);do{switch(r=b(n),_(n,2,0)){case 0:i=M(n);break;case 1:i=S(n,s,u);break;case 2:w(n,n.ltree,n.dtree),i=S(n,n.ltree,n.dtree);break;default:i=a}if(i!==l)throw new Error("Data error")}while(!r);return n.destLen<n.dest.length?"function"==typeof n.dest.slice?n.dest.slice(0,n.destLen):n.dest.subarray(0,n.destLen):n.dest};function E(e,t,r,i,n){return Math.pow(1-n,3)*e+3*Math.pow(1-n,2)*n*t+3*(1-n)*Math.pow(n,2)*r+Math.pow(n,3)*i}function C(){this.x1=Number.NaN,this.y1=Number.NaN,this.x2=Number.NaN,this.y2=Number.NaN}function I(){this.commands=[],this.fill="black",this.stroke=null,this.strokeWidth=1}function L(e){throw new Error(e)}function O(e,t){e||L(t)}C.prototype.isEmpty=function(){return isNaN(this.x1)||isNaN(this.y1)||isNaN(this.x2)||isNaN(this.y2)},C.prototype.addPoint=function(e,t){"number"==typeof e&&((isNaN(this.x1)||isNaN(this.x2))&&(this.x1=e,this.x2=e),e<this.x1&&(this.x1=e),e>this.x2&&(this.x2=e)),"number"==typeof t&&((isNaN(this.y1)||isNaN(this.y2))&&(this.y1=t,this.y2=t),t<this.y1&&(this.y1=t),t>this.y2&&(this.y2=t))},C.prototype.addX=function(e){this.addPoint(e,null)},C.prototype.addY=function(e){this.addPoint(null,e)},C.prototype.addBezier=function(e,t,r,i,n,a,o,s){var l=this,u=[e,t],h=[r,i],c=[n,a],f=[o,s];this.addPoint(e,t),this.addPoint(o,s);for(var d=0;d<=1;d++){var p=6*u[d]-12*h[d]+6*c[d],m=-3*u[d]+9*h[d]-9*c[d]+3*f[d],v=3*h[d]-3*u[d];if(0!=m){var y=Math.pow(p,2)-4*v*m;if(!(y<0)){var g=(-p+Math.sqrt(y))/(2*m);0<g&&g<1&&(0===d&&l.addX(E(u[d],h[d],c[d],f[d],g)),1===d&&l.addY(E(u[d],h[d],c[d],f[d],g)));var b=(-p-Math.sqrt(y))/(2*m);0<b&&b<1&&(0===d&&l.addX(E(u[d],h[d],c[d],f[d],b)),1===d&&l.addY(E(u[d],h[d],c[d],f[d],b)))}}else{if(0==p)continue;var _=-v/p;0<_&&_<1&&(0===d&&l.addX(E(u[d],h[d],c[d],f[d],_)),1===d&&l.addY(E(u[d],h[d],c[d],f[d],_)))}}},C.prototype.addQuad=function(e,t,r,i,n,a){var o=e+2/3*(r-e),s=t+2/3*(i-t),l=o+1/3*(n-e),u=s+1/3*(a-t);this.addBezier(e,t,o,s,l,u,n,a)},I.prototype.moveTo=function(e,t){this.commands.push({type:"M",x:e,y:t})},I.prototype.lineTo=function(e,t){this.commands.push({type:"L",x:e,y:t})},I.prototype.curveTo=I.prototype.bezierCurveTo=function(e,t,r,i,n,a){this.commands.push({type:"C",x1:e,y1:t,x2:r,y2:i,x:n,y:a})},I.prototype.quadTo=I.prototype.quadraticCurveTo=function(e,t,r,i){this.commands.push({type:"Q",x1:e,y1:t,x:r,y:i})},I.prototype.close=I.prototype.closePath=function(){this.commands.push({type:"Z"})},I.prototype.extend=function(e){if(e.commands)e=e.commands;else if(e instanceof C){var t=e;return this.moveTo(t.x1,t.y1),this.lineTo(t.x2,t.y1),this.lineTo(t.x2,t.y2),this.lineTo(t.x1,t.y2),void this.close()}Array.prototype.push.apply(this.commands,e)},I.prototype.getBoundingBox=function(){for(var e=new C,t=0,r=0,i=0,n=0,a=0;a<this.commands.length;a++){var o=this.commands[a];switch(o.type){case"M":e.addPoint(o.x,o.y),t=i=o.x,r=n=o.y;break;case"L":e.addPoint(o.x,o.y),i=o.x,n=o.y;break;case"Q":e.addQuad(i,n,o.x1,o.y1,o.x,o.y),i=o.x,n=o.y;break;case"C":e.addBezier(i,n,o.x1,o.y1,o.x2,o.y2,o.x,o.y),i=o.x,n=o.y;break;case"Z":i=t,n=r;break;default:throw new Error("Unexpected path command "+o.type)}}return e.isEmpty()&&e.addPoint(0,0),e},I.prototype.draw=function(e){e.beginPath();for(var t=0;t<this.commands.length;t+=1){var r=this.commands[t];"M"===r.type?e.moveTo(r.x,r.y):"L"===r.type?e.lineTo(r.x,r.y):"C"===r.type?e.bezierCurveTo(r.x1,r.y1,r.x2,r.y2,r.x,r.y):"Q"===r.type?e.quadraticCurveTo(r.x1,r.y1,r.x,r.y):"Z"===r.type&&e.closePath()}this.fill&&(e.fillStyle=this.fill,e.fill()),this.stroke&&(e.strokeStyle=this.stroke,e.lineWidth=this.strokeWidth,e.stroke())},I.prototype.toPathData=function(a){function e(){for(var e,t=arguments,r="",i=0;i<arguments.length;i+=1){var n=t[i];0<=n&&0<i&&(r+=" "),r+=(e=n,Math.round(e)===e?""+Math.round(e):e.toFixed(a))}return r}a=void 0!==a?a:2;for(var t="",r=0;r<this.commands.length;r+=1){var i=this.commands[r];"M"===i.type?t+="M"+e(i.x,i.y):"L"===i.type?t+="L"+e(i.x,i.y):"C"===i.type?t+="C"+e(i.x1,i.y1,i.x2,i.y2,i.x,i.y):"Q"===i.type?t+="Q"+e(i.x1,i.y1,i.x,i.y):"Z"===i.type&&(t+="Z")}return t},I.prototype.toSVG=function(e){var t='<path d="';return t+=this.toPathData(e),t+='"',this.fill&&"black"!==this.fill&&(null===this.fill?t+=' fill="none"':t+=' fill="'+this.fill+'"'),this.stroke&&(t+=' stroke="'+this.stroke+'" stroke-width="'+this.strokeWidth+'"'),t+="/>"},I.prototype.toDOMElement=function(e){var t=this.toPathData(e),r=document.createElementNS("http://www.w3.org/2000/svg","path");return r.setAttribute("d",t),r};var P={fail:L,argument:O,assert:O},R=2147483648,D={},k={},A={};function U(e){return function(){return e}}k.BYTE=function(e){return P.argument(0<=e&&e<=255,"Byte value should be between 0 and 255."),[e]},A.BYTE=U(1),k.CHAR=function(e){return[e.charCodeAt(0)]},A.CHAR=U(1),k.CHARARRAY=function(e){for(var t=[],r=0;r<e.length;r+=1)t[r]=e.charCodeAt(r);return t},A.CHARARRAY=function(e){return e.length},k.USHORT=function(e){return[e>>8&255,255&e]},A.USHORT=U(2),k.SHORT=function(e){return 32768<=e&&(e=-(65536-e)),[e>>8&255,255&e]},A.SHORT=U(2),k.UINT24=function(e){return[e>>16&255,e>>8&255,255&e]},A.UINT24=U(3),k.ULONG=function(e){return[e>>24&255,e>>16&255,e>>8&255,255&e]},A.ULONG=U(4),k.LONG=function(e){return R<=e&&(e=-(2*R-e)),[e>>24&255,e>>16&255,e>>8&255,255&e]},A.LONG=U(4),k.FIXED=k.ULONG,A.FIXED=A.ULONG,k.FWORD=k.SHORT,A.FWORD=A.SHORT,k.UFWORD=k.USHORT,A.UFWORD=A.USHORT,k.LONGDATETIME=function(e){return[0,0,0,0,e>>24&255,e>>16&255,e>>8&255,255&e]},A.LONGDATETIME=U(8),k.TAG=function(e){return P.argument(4===e.length,"Tag should be exactly 4 ASCII characters."),[e.charCodeAt(0),e.charCodeAt(1),e.charCodeAt(2),e.charCodeAt(3)]},A.TAG=U(4),k.Card8=k.BYTE,A.Card8=A.BYTE,k.Card16=k.USHORT,A.Card16=A.USHORT,k.OffSize=k.BYTE,A.OffSize=A.BYTE,k.SID=k.USHORT,A.SID=A.USHORT,k.NUMBER=function(e){return-107<=e&&e<=107?[e+139]:108<=e&&e<=1131?[247+((e-=108)>>8),255&e]:-1131<=e&&e<=-108?[251+((e=-e-108)>>8),255&e]:-32768<=e&&e<=32767?k.NUMBER16(e):k.NUMBER32(e)},A.NUMBER=function(e){return k.NUMBER(e).length},k.NUMBER16=function(e){return[28,e>>8&255,255&e]},A.NUMBER16=U(3),k.NUMBER32=function(e){return[29,e>>24&255,e>>16&255,e>>8&255,255&e]},A.NUMBER32=U(5),k.REAL=function(e){var t=e.toString(),r=/\.(\d*?)(?:9{5,20}|0{5,20})\d{0,2}(?:e(.+)|$)/.exec(t);if(r){var i=parseFloat("1e"+((r[2]?+r[2]:0)+r[1].length));t=(Math.round(e*i)/i).toString()}for(var n="",a=0,o=t.length;a<o;a+=1){var s=t[a];n+="e"===s?"-"===t[++a]?"c":"b":"."===s?"a":"-"===s?"e":s}for(var l=[30],u=0,h=(n+=1&n.length?"f":"ff").length;u<h;u+=2)l.push(parseInt(n.substr(u,2),16));return l},A.REAL=function(e){return k.REAL(e).length},k.NAME=k.CHARARRAY,A.NAME=A.CHARARRAY,k.STRING=k.CHARARRAY,A.STRING=A.CHARARRAY,D.UTF8=function(e,t,r){for(var i=[],n=r,a=0;a<n;a++,t+=1)i[a]=e.getUint8(t);return String.fromCharCode.apply(null,i)},D.UTF16=function(e,t,r){for(var i=[],n=r/2,a=0;a<n;a++,t+=2)i[a]=e.getUint16(t);return String.fromCharCode.apply(null,i)},k.UTF16=function(e){for(var t=[],r=0;r<e.length;r+=1){var i=e.charCodeAt(r);t[t.length]=i>>8&255,t[t.length]=255&i}return t},A.UTF16=function(e){return 2*e.length};var N={"x-mac-croatian":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊©⁄€‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ","x-mac-cyrillic":"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю","x-mac-gaelic":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØḂ±≤≥ḃĊċḊḋḞḟĠġṀæøṁṖṗɼƒſṠ«»… ÀÃÕŒœ–—“”‘’ṡẛÿŸṪ€‹›Ŷŷṫ·Ỳỳ⁊ÂÊÁËÈÍÎÏÌÓÔ♣ÒÚÛÙıÝýŴŵẄẅẀẁẂẃ","x-mac-greek":"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦€ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ­","x-mac-icelandic":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ","x-mac-inuit":"ᐃᐄᐅᐆᐊᐋᐱᐲᐳᐴᐸᐹᑉᑎᑏᑐᑑᑕᑖᑦᑭᑮᑯᑰᑲᑳᒃᒋᒌᒍᒎᒐᒑ°ᒡᒥᒦ•¶ᒧ®©™ᒨᒪᒫᒻᓂᓃᓄᓅᓇᓈᓐᓯᓰᓱᓲᓴᓵᔅᓕᓖᓗᓘᓚᓛᓪᔨᔩᔪᔫᔭ… ᔮᔾᕕᕖᕗ–—“”‘’ᕘᕙᕚᕝᕆᕇᕈᕉᕋᕌᕐᕿᖀᖁᖂᖃᖄᖅᖏᖐᖑᖒᖓᖔᖕᙱᙲᙳᙴᙵᙶᖖᖠᖡᖢᖣᖤᖥᖦᕼŁł","x-mac-ce":"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ",macintosh:"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ","x-mac-romanian":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂȘ∞±≤≥¥µ∂∑∏π∫ªºΩăș¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›Țț‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ","x-mac-turkish":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙˆ˜¯˘˙˚¸˝˛ˇ"};D.MACSTRING=function(e,t,r,i){var n=N[i];if(void 0!==n){for(var a="",o=0;o<r;o++){var s=e.getUint8(t+o);a+=s<=127?String.fromCharCode(s):n[127&s]}return a}};var F,B="function"==typeof WeakMap&&new WeakMap;function G(e){return-128<=e&&e<=127}function j(e,t,r){for(var i=0,n=e.length;t<n&&i<64&&0===e[t];)++t,++i;return r.push(128|i-1),t}function V(e,t,r){for(var i=0,n=e.length,a=t;a<n&&i<64;){var o=e[a];if(!G(o))break;if(0===o&&a+1<n&&0===e[a+1])break;++a,++i}r.push(i-1);for(var s=t;s<a;++s)r.push(e[s]+256&255);return a}function z(e,t,r){for(var i=0,n=e.length,a=t;a<n&&i<64;){var o=e[a];if(0===o)break;if(G(o)&&a+1<n&&G(e[a+1]))break;++a,++i}r.push(64|i-1);for(var s=t;s<a;++s){var l=e[s];r.push(l+65536>>8&255,l+256&255)}return a}k.MACSTRING=function(e,t){var r=function(e){if(!F)for(var t in F={},N)F[t]=new String(t);var r=F[e];if(void 0!==r){if(B){var i=B.get(r);if(void 0!==i)return i}var n=N[e];if(void 0!==n){for(var a={},o=0;o<n.length;o++)a[n.charCodeAt(o)]=o+128;return B&&B.set(r,a),a}}}(t);if(void 0!==r){for(var i=[],n=0;n<e.length;n++){var a=e.charCodeAt(n);if(128<=a&&void 0===(a=r[a]))return;i[n]=a}return i}},A.MACSTRING=function(e,t){var r=k.MACSTRING(e,t);return void 0!==r?r.length:0},k.VARDELTAS=function(e){for(var t=0,r=[];t<e.length;){var i=e[t];t=0===i?j(e,t,r):-128<=i&&i<=127?V(e,t,r):z(e,t,r)}return r},k.INDEX=function(e){for(var t=1,r=[t],i=[],n=0;n<e.length;n+=1){var a=k.OBJECT(e[n]);Array.prototype.push.apply(i,a),t+=a.length,r.push(t)}if(0===i.length)return[0,0];for(var o=[],s=1+Math.floor(Math.log(t)/Math.log(2))/8|0,l=[void 0,k.BYTE,k.USHORT,k.UINT24,k.ULONG][s],u=0;u<r.length;u+=1){var h=l(r[u]);Array.prototype.push.apply(o,h)}return Array.prototype.concat(k.Card16(e.length),k.OffSize(s),o,i)},A.INDEX=function(e){return k.INDEX(e).length},k.DICT=function(e){for(var t=[],r=Object.keys(e),i=r.length,n=0;n<i;n+=1){var a=parseInt(r[n],0),o=e[a];t=(t=t.concat(k.OPERAND(o.value,o.type))).concat(k.OPERATOR(a))}return t},A.DICT=function(e){return k.DICT(e).length},k.OPERATOR=function(e){return e<1200?[e]:[12,e-1200]},k.OPERAND=function(e,t){var r=[];if(Array.isArray(t))for(var i=0;i<t.length;i+=1)P.argument(e.length===t.length,"Not enough arguments given for type"+t),r=r.concat(k.OPERAND(e[i],t[i]));else if("SID"===t)r=r.concat(k.NUMBER(e));else if("offset"===t)r=r.concat(k.NUMBER32(e));else if("number"===t)r=r.concat(k.NUMBER(e));else{if("real"!==t)throw new Error("Unknown operand type "+t);r=r.concat(k.REAL(e))}return r},k.OP=k.BYTE,A.OP=A.BYTE;var H="function"==typeof WeakMap&&new WeakMap;function W(e,t,r){for(var i=0;i<t.length;i+=1){var n=t[i];this[n.name]=n.value}if(this.tableName=e,this.fields=t,r)for(var a=Object.keys(r),o=0;o<a.length;o+=1){var s=a[o],l=r[s];void 0!==this[s]&&(this[s]=l)}}function q(e,t,r){void 0===r&&(r=t.length);var i=new Array(t.length+1);i[0]={name:e+"Count",type:"USHORT",value:r};for(var n=0;n<t.length;n++)i[n+1]={name:e+n,type:"USHORT",value:t[n]};return i}function X(e,t,r){var i=t.length,n=new Array(i+1);n[0]={name:e+"Count",type:"USHORT",value:i};for(var a=0;a<i;a++)n[a+1]={name:e+a,type:"TABLE",value:r(t[a],a)};return n}function Y(e,t,r){var i=t.length,n=[];n[0]={name:e+"Count",type:"USHORT",value:i};for(var a=0;a<i;a++)n=n.concat(r(t[a],a));return n}function Z(e){1===e.format?W.call(this,"coverageTable",[{name:"coverageFormat",type:"USHORT",value:1}].concat(q("glyph",e.glyphs))):P.assert(!1,"Can't create coverage table format 2 yet.")}function Q(e){W.call(this,"scriptListTable",Y("scriptRecord",e,function(e,t){var r=e.script,i=r.defaultLangSys;return P.assert(!!i,"Unable to write GSUB: script "+e.tag+" has no default language system."),[{name:"scriptTag"+t,type:"TAG",value:e.tag},{name:"script"+t,type:"TABLE",value:new W("scriptTable",[{name:"defaultLangSys",type:"TABLE",value:new W("defaultLangSys",[{name:"lookupOrder",type:"USHORT",value:0},{name:"reqFeatureIndex",type:"USHORT",value:i.reqFeatureIndex}].concat(q("featureIndex",i.featureIndexes)))}].concat(Y("langSys",r.langSysRecords,function(e,t){var r=e.langSys;return[{name:"langSysTag"+t,type:"TAG",value:e.tag},{name:"langSys"+t,type:"TABLE",value:new W("langSys",[{name:"lookupOrder",type:"USHORT",value:0},{name:"reqFeatureIndex",type:"USHORT",value:r.reqFeatureIndex}].concat(q("featureIndex",r.featureIndexes)))}]})))}]}))}function K(e){W.call(this,"featureListTable",Y("featureRecord",e,function(e,t){var r=e.feature;return[{name:"featureTag"+t,type:"TAG",value:e.tag},{name:"feature"+t,type:"TABLE",value:new W("featureTable",[{name:"featureParams",type:"USHORT",value:r.featureParams}].concat(q("lookupListIndex",r.lookupListIndexes)))}]}))}function J(e,r){W.call(this,"lookupListTable",X("lookup",e,function(e){var t=r[e.lookupType];return P.assert(!!t,"Unable to write GSUB lookup type "+e.lookupType+" tables."),new W("lookupTable",[{name:"lookupType",type:"USHORT",value:e.lookupType},{name:"lookupFlag",type:"USHORT",value:e.lookupFlag}].concat(X("subtable",e.subtables,t)))}))}k.CHARSTRING=function(e){if(H){var t=H.get(e);if(void 0!==t)return t}for(var r=[],i=e.length,n=0;n<i;n+=1){var a=e[n];r=r.concat(k[a.type](a.value))}return H&&H.set(e,r),r},A.CHARSTRING=function(e){return k.CHARSTRING(e).length},k.OBJECT=function(e){var t=k[e.type];return P.argument(void 0!==t,"No encoding function for type "+e.type),t(e.value)},A.OBJECT=function(e){var t=A[e.type];return P.argument(void 0!==t,"No sizeOf function for type "+e.type),t(e.value)},k.TABLE=function(e){for(var t=[],r=e.fields.length,i=[],n=[],a=0;a<r;a+=1){var o=e.fields[a],s=k[o.type];P.argument(void 0!==s,"No encoding function for field type "+o.type+" ("+o.name+")");var l=e[o.name];void 0===l&&(l=o.value);var u=s(l);"TABLE"===o.type?(n.push(t.length),t=t.concat([0,0]),i.push(u)):t=t.concat(u)}for(var h=0;h<i.length;h+=1){var c=n[h],f=t.length;P.argument(f<65536,"Table "+e.tableName+" too big."),t[c]=f>>8,t[c+1]=255&f,t=t.concat(i[h])}return t},A.TABLE=function(e){for(var t=0,r=e.fields.length,i=0;i<r;i+=1){var n=e.fields[i],a=A[n.type];P.argument(void 0!==a,"No sizeOf function for field type "+n.type+" ("+n.name+")");var o=e[n.name];void 0===o&&(o=n.value),t+=a(o),"TABLE"===n.type&&(t+=2)}return t},k.RECORD=k.TABLE,A.RECORD=A.TABLE,k.LITERAL=function(e){return e},A.LITERAL=function(e){return e.length},W.prototype.encode=function(){return k.TABLE(this)},W.prototype.sizeOf=function(){return A.TABLE(this)};var $={Table:W,Record:W,Coverage:(Z.prototype=Object.create(W.prototype)).constructor=Z,ScriptList:(Q.prototype=Object.create(W.prototype)).constructor=Q,FeatureList:(K.prototype=Object.create(W.prototype)).constructor=K,LookupList:(J.prototype=Object.create(W.prototype)).constructor=J,ushortList:q,tableList:X,recordList:Y};function ee(e,t){return e.getUint8(t)}function te(e,t){return e.getUint16(t,!1)}function re(e,t){return e.getUint32(t,!1)}function ie(e,t){return e.getInt16(t,!1)+e.getUint16(t+2,!1)/65535}var ne={byte:1,uShort:2,short:2,uLong:4,fixed:4,longDateTime:8,tag:4};function ae(e,t){this.data=e,this.offset=t,this.relativeOffset=0}ae.prototype.parseByte=function(){var e=this.data.getUint8(this.offset+this.relativeOffset);return this.relativeOffset+=1,e},ae.prototype.parseChar=function(){var e=this.data.getInt8(this.offset+this.relativeOffset);return this.relativeOffset+=1,e},ae.prototype.parseCard8=ae.prototype.parseByte,ae.prototype.parseCard16=ae.prototype.parseUShort=function(){var e=this.data.getUint16(this.offset+this.relativeOffset);return this.relativeOffset+=2,e},ae.prototype.parseSID=ae.prototype.parseUShort,ae.prototype.parseOffset16=ae.prototype.parseUShort,ae.prototype.parseShort=function(){var e=this.data.getInt16(this.offset+this.relativeOffset);return this.relativeOffset+=2,e},ae.prototype.parseF2Dot14=function(){var e=this.data.getInt16(this.offset+this.relativeOffset)/16384;return this.relativeOffset+=2,e},ae.prototype.parseOffset32=ae.prototype.parseULong=function(){var e=re(this.data,this.offset+this.relativeOffset);return this.relativeOffset+=4,e},ae.prototype.parseFixed=function(){var e=ie(this.data,this.offset+this.relativeOffset);return this.relativeOffset+=4,e},ae.prototype.parseString=function(e){var t=this.data,r=this.offset+this.relativeOffset,i="";this.relativeOffset+=e;for(var n=0;n<e;n++)i+=String.fromCharCode(t.getUint8(r+n));return i},ae.prototype.parseTag=function(){return this.parseString(4)},ae.prototype.parseLongDateTime=function(){var e=re(this.data,this.offset+this.relativeOffset+4);return e-=2082844800,this.relativeOffset+=8,e},ae.prototype.parseVersion=function(e){var t=te(this.data,this.offset+this.relativeOffset),r=te(this.data,this.offset+this.relativeOffset+2);return this.relativeOffset+=4,void 0===e&&(e=4096),t+r/e/10},ae.prototype.skip=function(e,t){void 0===t&&(t=1),this.relativeOffset+=ne[e]*t},ae.prototype.parseULongList=function(e){void 0===e&&(e=this.parseULong());for(var t=new Array(e),r=this.data,i=this.offset+this.relativeOffset,n=0;n<e;n++)t[n]=r.getUint32(i),i+=4;return this.relativeOffset+=4*e,t},ae.prototype.parseOffset16List=ae.prototype.parseUShortList=function(e){void 0===e&&(e=this.parseUShort());for(var t=new Array(e),r=this.data,i=this.offset+this.relativeOffset,n=0;n<e;n++)t[n]=r.getUint16(i),i+=2;return this.relativeOffset+=2*e,t},ae.prototype.parseShortList=function(e){for(var t=new Array(e),r=this.data,i=this.offset+this.relativeOffset,n=0;n<e;n++)t[n]=r.getInt16(i),i+=2;return this.relativeOffset+=2*e,t},ae.prototype.parseByteList=function(e){for(var t=new Array(e),r=this.data,i=this.offset+this.relativeOffset,n=0;n<e;n++)t[n]=r.getUint8(i++);return this.relativeOffset+=e,t},ae.prototype.parseList=function(e,t){t||(t=e,e=this.parseUShort());for(var r=new Array(e),i=0;i<e;i++)r[i]=t.call(this);return r},ae.prototype.parseList32=function(e,t){t||(t=e,e=this.parseULong());for(var r=new Array(e),i=0;i<e;i++)r[i]=t.call(this);return r},ae.prototype.parseRecordList=function(e,t){t||(t=e,e=this.parseUShort());for(var r=new Array(e),i=Object.keys(t),n=0;n<e;n++){for(var a={},o=0;o<i.length;o++){var s=i[o],l=t[s];a[s]=l.call(this)}r[n]=a}return r},ae.prototype.parseRecordList32=function(e,t){t||(t=e,e=this.parseULong());for(var r=new Array(e),i=Object.keys(t),n=0;n<e;n++){for(var a={},o=0;o<i.length;o++){var s=i[o],l=t[s];a[s]=l.call(this)}r[n]=a}return r},ae.prototype.parseStruct=function(e){if("function"==typeof e)return e.call(this);for(var t=Object.keys(e),r={},i=0;i<t.length;i++){var n=t[i],a=e[n];r[n]=a.call(this)}return r},ae.prototype.parseValueRecord=function(e){if(void 0===e&&(e=this.parseUShort()),0!==e){var t={};return 1&e&&(t.xPlacement=this.parseShort()),2&e&&(t.yPlacement=this.parseShort()),4&e&&(t.xAdvance=this.parseShort()),8&e&&(t.yAdvance=this.parseShort()),16&e&&(t.xPlaDevice=void 0,this.parseShort()),32&e&&(t.yPlaDevice=void 0,this.parseShort()),64&e&&(t.xAdvDevice=void 0,this.parseShort()),128&e&&(t.yAdvDevice=void 0,this.parseShort()),t}},ae.prototype.parseValueRecordList=function(){for(var e=this.parseUShort(),t=this.parseUShort(),r=new Array(t),i=0;i<t;i++)r[i]=this.parseValueRecord(e);return r},ae.prototype.parsePointer=function(e){var t=this.parseOffset16();if(0<t)return new ae(this.data,this.offset+t).parseStruct(e)},ae.prototype.parsePointer32=function(e){var t=this.parseOffset32();if(0<t)return new ae(this.data,this.offset+t).parseStruct(e)},ae.prototype.parseListOfLists=function(e){for(var t=this,r=this.parseOffset16List(),i=r.length,n=this.relativeOffset,a=new Array(i),o=0;o<i;o++){var s=r[o];if(0!==s)if(t.relativeOffset=s,e){for(var l=t.parseOffset16List(),u=new Array(l.length),h=0;h<l.length;h++)t.relativeOffset=s+l[h],u[h]=e.call(t);a[o]=u}else a[o]=t.parseUShortList();else a[o]=void 0}return this.relativeOffset=n,a},ae.prototype.parseCoverage=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort(),r=this.parseUShort();if(1===t)return{format:1,glyphs:this.parseUShortList(r)};if(2!==t)throw new Error("0x"+e.toString(16)+": Coverage format must be 1 or 2.");for(var i=new Array(r),n=0;n<r;n++)i[n]={start:this.parseUShort(),end:this.parseUShort(),index:this.parseUShort()};return{format:2,ranges:i}},ae.prototype.parseClassDef=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort();if(1===t)return{format:1,startGlyph:this.parseUShort(),classes:this.parseUShortList()};if(2===t)return{format:2,ranges:this.parseRecordList({start:ae.uShort,end:ae.uShort,classId:ae.uShort})};throw new Error("0x"+e.toString(16)+": ClassDef format must be 1 or 2.")},ae.list=function(e,t){return function(){return this.parseList(e,t)}},ae.list32=function(e,t){return function(){return this.parseList32(e,t)}},ae.recordList=function(e,t){return function(){return this.parseRecordList(e,t)}},ae.recordList32=function(e,t){return function(){return this.parseRecordList32(e,t)}},ae.pointer=function(e){return function(){return this.parsePointer(e)}},ae.pointer32=function(e){return function(){return this.parsePointer32(e)}},ae.tag=ae.prototype.parseTag,ae.byte=ae.prototype.parseByte,ae.uShort=ae.offset16=ae.prototype.parseUShort,ae.uShortList=ae.prototype.parseUShortList,ae.uLong=ae.offset32=ae.prototype.parseULong,ae.uLongList=ae.prototype.parseULongList,ae.struct=ae.prototype.parseStruct,ae.coverage=ae.prototype.parseCoverage,ae.classDef=ae.prototype.parseClassDef;var oe={reserved:ae.uShort,reqFeatureIndex:ae.uShort,featureIndexes:ae.uShortList};ae.prototype.parseScriptList=function(){return this.parsePointer(ae.recordList({tag:ae.tag,script:ae.pointer({defaultLangSys:ae.pointer(oe),langSysRecords:ae.recordList({tag:ae.tag,langSys:ae.pointer(oe)})})}))||[]},ae.prototype.parseFeatureList=function(){return this.parsePointer(ae.recordList({tag:ae.tag,feature:ae.pointer({featureParams:ae.offset16,lookupListIndexes:ae.uShortList})}))||[]},ae.prototype.parseLookupList=function(i){return this.parsePointer(ae.list(ae.pointer(function(){var e=this.parseUShort();P.argument(1<=e&&e<=9,"GPOS/GSUB lookup type "+e+" unknown.");var t=this.parseUShort(),r=16&t;return{lookupType:e,lookupFlag:t,subtables:this.parseList(ae.pointer(i[e])),markFilteringSet:r?this.parseUShort():void 0}})))||[]},ae.prototype.parseFeatureVariationsList=function(){return this.parsePointer32(function(){var e=this.parseUShort(),t=this.parseUShort();return P.argument(1===e&&t<1,"GPOS/GSUB feature variations table unknown."),this.parseRecordList32({conditionSetOffset:ae.offset32,featureTableSubstitutionOffset:ae.offset32})})||[]};var se={getByte:ee,getCard8:ee,getUShort:te,getCard16:te,getShort:function(e,t){return e.getInt16(t,!1)},getULong:re,getFixed:ie,getTag:function(e,t){for(var r="",i=t;i<t+4;i+=1)r+=String.fromCharCode(e.getInt8(i));return r},getOffset:function(e,t,r){for(var i=0,n=0;n<r;n+=1)i<<=8,i+=e.getUint8(t+n);return i},getBytes:function(e,t,r){for(var i=[],n=t;n<r;n+=1)i.push(e.getUint8(n));return i},bytesToString:function(e){for(var t="",r=0;r<e.length;r+=1)t+=String.fromCharCode(e[r]);return t},Parser:ae};var le={parse:function(e,t){var r={};r.version=se.getUShort(e,t),P.argument(0===r.version,"cmap table version should be 0."),r.numTables=se.getUShort(e,t+2);for(var i=-1,n=r.numTables-1;0<=n;--n){var a=se.getUShort(e,t+4+8*n),o=se.getUShort(e,t+4+8*n+2);if(3===a&&(0===o||1===o||10===o)||0===a&&(0===o||1===o||2===o||3===o||4===o)){i=se.getULong(e,t+4+8*n+4);break}}if(-1===i)throw new Error("No valid cmap sub-tables found.");var s=new se.Parser(e,t+i);if(r.format=s.parseUShort(),12===r.format)!function(e,t){var r;t.parseUShort(),e.length=t.parseULong(),e.language=t.parseULong(),e.groupCount=r=t.parseULong(),e.glyphIndexMap={};for(var i=0;i<r;i+=1)for(var n=t.parseULong(),a=t.parseULong(),o=t.parseULong(),s=n;s<=a;s+=1)e.glyphIndexMap[s]=o,o++}(r,s);else{if(4!==r.format)throw new Error("Only format 4 and 12 cmap tables are supported (found format "+r.format+").");!function(e,t,r,i,n){var a;e.length=t.parseUShort(),e.language=t.parseUShort(),e.segCount=a=t.parseUShort()>>1,t.skip("uShort",3),e.glyphIndexMap={};for(var o=new se.Parser(r,i+n+14),s=new se.Parser(r,i+n+16+2*a),l=new se.Parser(r,i+n+16+4*a),u=new se.Parser(r,i+n+16+6*a),h=i+n+16+8*a,c=0;c<a-1;c+=1)for(var f=void 0,d=o.parseUShort(),p=s.parseUShort(),m=l.parseShort(),v=u.parseUShort(),y=p;y<=d;y+=1)0!==v?(h=u.offset+u.relativeOffset-2,h+=v,h+=2*(y-p),0!==(f=se.getUShort(r,h))&&(f=f+m&65535)):f=y+m&65535,e.glyphIndexMap[y]=f}(r,s,e,t,i)}return r},make:function(e){var t,r=!0;for(t=e.length-1;0<t;--t){if(65535<e.get(t).unicode){console.log("Adding CMAP format 12 (needed!)"),r=!1;break}}var i=[{name:"version",type:"USHORT",value:0},{name:"numTables",type:"USHORT",value:r?1:2},{name:"platformID",type:"USHORT",value:3},{name:"encodingID",type:"USHORT",value:1},{name:"offset",type:"ULONG",value:r?12:20}];r||(i=i.concat([{name:"cmap12PlatformID",type:"USHORT",value:3},{name:"cmap12EncodingID",type:"USHORT",value:10},{name:"cmap12Offset",type:"ULONG",value:0}])),i=i.concat([{name:"format",type:"USHORT",value:4},{name:"cmap4Length",type:"USHORT",value:0},{name:"language",type:"USHORT",value:0},{name:"segCountX2",type:"USHORT",value:0},{name:"searchRange",type:"USHORT",value:0},{name:"entrySelector",type:"USHORT",value:0},{name:"rangeShift",type:"USHORT",value:0}]);var n,a,o,s=new $.Table("cmap",i);for(s.segments=[],t=0;t<e.length;t+=1){for(var l=e.get(t),u=0;u<l.unicodes.length;u+=1)n=s,a=l.unicodes[u],o=t,n.segments.push({end:a,start:a,delta:-(a-o),offset:0,glyphIndex:o});s.segments=s.segments.sort(function(e,t){return e.start-t.start})}s.segments.push({end:65535,start:65535,delta:1,offset:0});var h=s.segments.length,c=0,f=[],d=[],p=[],m=[],v=[],y=[];for(t=0;t<h;t+=1){var g=s.segments[t];g.end<=65535&&g.start<=65535?(f=f.concat({name:"end_"+t,type:"USHORT",value:g.end}),d=d.concat({name:"start_"+t,type:"USHORT",value:g.start}),p=p.concat({name:"idDelta_"+t,type:"SHORT",value:g.delta}),m=m.concat({name:"idRangeOffset_"+t,type:"USHORT",value:g.offset}),void 0!==g.glyphId&&(v=v.concat({name:"glyph_"+t,type:"USHORT",value:g.glyphId}))):c+=1,r||void 0===g.glyphIndex||(y=(y=(y=y.concat({name:"cmap12Start_"+t,type:"ULONG",value:g.start})).concat({name:"cmap12End_"+t,type:"ULONG",value:g.end})).concat({name:"cmap12Glyph_"+t,type:"ULONG",value:g.glyphIndex}))}if(s.segCountX2=2*(h-c),s.searchRange=2*Math.pow(2,Math.floor(Math.log(h-c)/Math.log(2))),s.entrySelector=Math.log(s.searchRange/2)/Math.log(2),s.rangeShift=s.segCountX2-s.searchRange,s.fields=s.fields.concat(f),s.fields.push({name:"reservedPad",type:"USHORT",value:0}),s.fields=s.fields.concat(d),s.fields=s.fields.concat(p),s.fields=s.fields.concat(m),s.fields=s.fields.concat(v),s.cmap4Length=14+2*f.length+2+2*d.length+2*p.length+2*m.length+2*v.length,!r){var b=16+4*y.length;s.cmap12Offset=20+s.cmap4Length,s.fields=s.fields.concat([{name:"cmap12Format",type:"USHORT",value:12},{name:"cmap12Reserved",type:"USHORT",value:0},{name:"cmap12Length",type:"ULONG",value:b},{name:"cmap12Language",type:"ULONG",value:0},{name:"cmap12nGroups",type:"ULONG",value:y.length/3}]),s.fields=s.fields.concat(y)}return s}},ue=[".notdef","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","endash","dagger","daggerdbl","periodcentered","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","questiondown","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","ring","cedilla","hungarumlaut","ogonek","caron","emdash","AE","ordfeminine","Lslash","Oslash","OE","ordmasculine","ae","dotlessi","lslash","oslash","oe","germandbls","onesuperior","logicalnot","mu","trademark","Eth","onehalf","plusminus","Thorn","onequarter","divide","brokenbar","degree","thorn","threequarters","twosuperior","registered","minus","eth","multiply","threesuperior","copyright","Aacute","Acircumflex","Adieresis","Agrave","Aring","Atilde","Ccedilla","Eacute","Ecircumflex","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Ntilde","Oacute","Ocircumflex","Odieresis","Ograve","Otilde","Scaron","Uacute","Ucircumflex","Udieresis","Ugrave","Yacute","Ydieresis","Zcaron","aacute","acircumflex","adieresis","agrave","aring","atilde","ccedilla","eacute","ecircumflex","edieresis","egrave","iacute","icircumflex","idieresis","igrave","ntilde","oacute","ocircumflex","odieresis","ograve","otilde","scaron","uacute","ucircumflex","udieresis","ugrave","yacute","ydieresis","zcaron","exclamsmall","Hungarumlautsmall","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","266 ff","onedotenleader","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","commasuperior","threequartersemdash","periodsuperior","questionsmall","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","ffi","ffl","parenleftinferior","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","exclamdownsmall","centoldstyle","Lslashsmall","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","Dotaccentsmall","Macronsmall","figuredash","hypheninferior","Ogoneksmall","Ringsmall","Cedillasmall","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall","001.000","001.001","001.002","001.003","Black","Bold","Book","Light","Medium","Regular","Roman","Semibold"],he=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","","endash","dagger","daggerdbl","periodcentered","","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","","questiondown","","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","","ring","cedilla","","hungarumlaut","ogonek","caron","emdash","","","","","","","","","","","","","","","","","AE","","ordfeminine","","","","","Lslash","Oslash","OE","ordmasculine","","","","","","ae","","","","dotlessi","","","lslash","oslash","oe","germandbls"],ce=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclamsmall","Hungarumlautsmall","","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","questionsmall","","asuperior","bsuperior","centsuperior","dsuperior","esuperior","","","isuperior","","","lsuperior","msuperior","nsuperior","osuperior","","","rsuperior","ssuperior","tsuperior","","ff","fi","fl","ffi","ffl","parenleftinferior","","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdownsmall","centoldstyle","Lslashsmall","","","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","","Dotaccentsmall","","","Macronsmall","","","figuredash","hypheninferior","","","Ogoneksmall","Ringsmall","Cedillasmall","","","","onequarter","onehalf","threequarters","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","","","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall"],fe=[".notdef",".null","nonmarkingreturn","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quotesingle","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","grave","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","Adieresis","Aring","Ccedilla","Eacute","Ntilde","Odieresis","Udieresis","aacute","agrave","acircumflex","adieresis","atilde","aring","ccedilla","eacute","egrave","ecircumflex","edieresis","iacute","igrave","icircumflex","idieresis","ntilde","oacute","ograve","ocircumflex","odieresis","otilde","uacute","ugrave","ucircumflex","udieresis","dagger","degree","cent","sterling","section","bullet","paragraph","germandbls","registered","copyright","trademark","acute","dieresis","notequal","AE","Oslash","infinity","plusminus","lessequal","greaterequal","yen","mu","partialdiff","summation","product","pi","integral","ordfeminine","ordmasculine","Omega","ae","oslash","questiondown","exclamdown","logicalnot","radical","florin","approxequal","Delta","guillemotleft","guillemotright","ellipsis","nonbreakingspace","Agrave","Atilde","Otilde","OE","oe","endash","emdash","quotedblleft","quotedblright","quoteleft","quoteright","divide","lozenge","ydieresis","Ydieresis","fraction","currency","guilsinglleft","guilsinglright","fi","fl","daggerdbl","periodcentered","quotesinglbase","quotedblbase","perthousand","Acircumflex","Ecircumflex","Aacute","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Oacute","Ocircumflex","apple","Ograve","Uacute","Ucircumflex","Ugrave","dotlessi","circumflex","tilde","macron","breve","dotaccent","ring","cedilla","hungarumlaut","ogonek","caron","Lslash","lslash","Scaron","scaron","Zcaron","zcaron","brokenbar","Eth","eth","Yacute","yacute","Thorn","thorn","minus","multiply","onesuperior","twosuperior","threesuperior","onehalf","onequarter","threequarters","franc","Gbreve","gbreve","Idotaccent","Scedilla","scedilla","Cacute","cacute","Ccaron","ccaron","dcroat"];function de(e){this.font=e}function pe(e){this.cmap=e}function me(e,t){this.encoding=e,this.charset=t}function ve(e){switch(e.version){case 1:this.names=fe.slice();break;case 2:this.names=new Array(e.numberOfGlyphs);for(var t=0;t<e.numberOfGlyphs;t++)e.glyphNameIndex[t]<fe.length?this.names[t]=fe[e.glyphNameIndex[t]]:this.names[t]=e.names[e.glyphNameIndex[t]-fe.length];break;case 2.5:this.names=new Array(e.numberOfGlyphs);for(var r=0;r<e.numberOfGlyphs;r++)this.names[r]=fe[r+e.glyphNameIndex[r]];break;case 3:default:this.names=[]}}de.prototype.charToGlyphIndex=function(e){var t=e.codePointAt(0),r=this.font.glyphs;if(r)for(var i=0;i<r.length;i+=1)for(var n=r.get(i),a=0;a<n.unicodes.length;a+=1)if(n.unicodes[a]===t)return i;return null},pe.prototype.charToGlyphIndex=function(e){return this.cmap.glyphIndexMap[e.codePointAt(0)]||0},me.prototype.charToGlyphIndex=function(e){var t=e.codePointAt(0),r=this.encoding[t];return this.charset.indexOf(r)},ve.prototype.nameToGlyphIndex=function(e){return this.names.indexOf(e)},ve.prototype.glyphIndexToName=function(e){return this.names[e]};var ye={line:function(e,t,r,i,n){e.beginPath(),e.moveTo(t,r),e.lineTo(i,n),e.stroke()}};function ge(e){this.bindConstructorValues(e)}function be(t,e,r){Object.defineProperty(t,e,{get:function(){return t.path,t[r]},set:function(e){t[r]=e},enumerable:!0,configurable:!0})}function _e(e,t){if(this.font=e,this.glyphs={},Array.isArray(t))for(var r=0;r<t.length;r++)this.glyphs[r]=t[r];this.length=t&&t.length||0}ge.prototype.bindConstructorValues=function(e){var t,r;this.index=e.index||0,this.name=e.name||null,this.unicode=e.unicode||void 0,this.unicodes=e.unicodes||void 0!==e.unicode?[e.unicode]:[],e.xMin&&(this.xMin=e.xMin),e.yMin&&(this.yMin=e.yMin),e.xMax&&(this.xMax=e.xMax),e.yMax&&(this.yMax=e.yMax),e.advanceWidth&&(this.advanceWidth=e.advanceWidth),Object.defineProperty(this,"path",(t=e.path,r=t||new I,{configurable:!0,get:function(){return"function"==typeof r&&(r=r()),r},set:function(e){r=e}}))},ge.prototype.addUnicode=function(e){0===this.unicodes.length&&(this.unicode=e),this.unicodes.push(e)},ge.prototype.getBoundingBox=function(){return this.path.getBoundingBox()},ge.prototype.getPath=function(e,t,r,i,n){var a,o;e=void 0!==e?e:0,t=void 0!==t?t:0,r=void 0!==r?r:72;var s=(i=i||{}).xScale,l=i.yScale;if(i.hinting&&n&&n.hinting&&(o=this.path&&n.hinting.exec(this,r)),o)a=n.hinting.getCommands(o),e=Math.round(e),t=Math.round(t),s=l=1;else{a=this.path.commands;var u=1/this.path.unitsPerEm*r;void 0===s&&(s=u),void 0===l&&(l=u)}for(var h=new I,c=0;c<a.length;c+=1){var f=a[c];"M"===f.type?h.moveTo(e+f.x*s,t+-f.y*l):"L"===f.type?h.lineTo(e+f.x*s,t+-f.y*l):"Q"===f.type?h.quadraticCurveTo(e+f.x1*s,t+-f.y1*l,e+f.x*s,t+-f.y*l):"C"===f.type?h.curveTo(e+f.x1*s,t+-f.y1*l,e+f.x2*s,t+-f.y2*l,e+f.x*s,t+-f.y*l):"Z"===f.type&&h.closePath()}return h},ge.prototype.getContours=function(){if(void 0===this.points)return[];for(var e=[],t=[],r=0;r<this.points.length;r+=1){var i=this.points[r];t.push(i),i.lastPointOfContour&&(e.push(t),t=[])}return P.argument(0===t.length,"There are still points left in the current contour."),e},ge.prototype.getMetrics=function(){for(var e=this.path.commands,t=[],r=[],i=0;i<e.length;i+=1){var n=e[i];"Z"!==n.type&&(t.push(n.x),r.push(n.y)),"Q"!==n.type&&"C"!==n.type||(t.push(n.x1),r.push(n.y1)),"C"===n.type&&(t.push(n.x2),r.push(n.y2))}var a={xMin:Math.min.apply(null,t),yMin:Math.min.apply(null,r),xMax:Math.max.apply(null,t),yMax:Math.max.apply(null,r),leftSideBearing:this.leftSideBearing};return isFinite(a.xMin)||(a.xMin=0),isFinite(a.xMax)||(a.xMax=this.advanceWidth),isFinite(a.yMin)||(a.yMin=0),isFinite(a.yMax)||(a.yMax=0),a.rightSideBearing=this.advanceWidth-a.leftSideBearing-(a.xMax-a.xMin),a},ge.prototype.draw=function(e,t,r,i,n){this.getPath(t,r,i,n).draw(e)},ge.prototype.drawPoints=function(o,e,t,r){function i(e,t,r,i){var n=2*Math.PI;o.beginPath();for(var a=0;a<e.length;a+=1)o.moveTo(t+e[a].x*i,r+e[a].y*i),o.arc(t+e[a].x*i,r+e[a].y*i,2,0,n,!1);o.closePath(),o.fill()}e=void 0!==e?e:0,t=void 0!==t?t:0,r=void 0!==r?r:24;for(var n=1/this.path.unitsPerEm*r,a=[],s=[],l=this.path,u=0;u<l.commands.length;u+=1){var h=l.commands[u];void 0!==h.x&&a.push({x:h.x,y:-h.y}),void 0!==h.x1&&s.push({x:h.x1,y:-h.y1}),void 0!==h.x2&&s.push({x:h.x2,y:-h.y2})}o.fillStyle="blue",i(a,e,t,n),o.fillStyle="red",i(s,e,t,n)},ge.prototype.drawMetrics=function(e,t,r,i){var n;t=void 0!==t?t:0,r=void 0!==r?r:0,i=void 0!==i?i:24,n=1/this.path.unitsPerEm*i,e.lineWidth=1,e.strokeStyle="black",ye.line(e,t,-1e4,t,1e4),ye.line(e,-1e4,r,1e4,r);var a=this.xMin||0,o=this.yMin||0,s=this.xMax||0,l=this.yMax||0,u=this.advanceWidth||0;e.strokeStyle="blue",ye.line(e,t+a*n,-1e4,t+a*n,1e4),ye.line(e,t+s*n,-1e4,t+s*n,1e4),ye.line(e,-1e4,r+-o*n,1e4,r+-o*n),ye.line(e,-1e4,r+-l*n,1e4,r+-l*n),e.strokeStyle="green",ye.line(e,t+u*n,-1e4,t+u*n,1e4)},_e.prototype.get=function(e){return"function"==typeof this.glyphs[e]&&(this.glyphs[e]=this.glyphs[e]()),this.glyphs[e]},_e.prototype.push=function(e,t){this.glyphs[e]=t,this.length++};var xe={GlyphSet:_e,glyphLoader:function(e,t){return new ge({index:t,font:e})},ttfGlyphLoader:function(r,e,i,n,a,o){return function(){var t=new ge({index:e,font:r});return t.path=function(){i(t,n,a);var e=o(r.glyphs,t);return e.unitsPerEm=r.unitsPerEm,e},be(t,"xMin","_xMin"),be(t,"xMax","_xMax"),be(t,"yMin","_yMin"),be(t,"yMax","_yMax"),t}},cffGlyphLoader:function(r,e,i,n){return function(){var t=new ge({index:e,font:r});return t.path=function(){var e=i(r,t,n);return e.unitsPerEm=r.unitsPerEm,e},t}}};function we(e,t){if(e===t)return!0;if(Array.isArray(e)&&Array.isArray(t)){if(e.length!==t.length)return!1;for(var r=0;r<e.length;r+=1)if(!we(e[r],t[r]))return!1;return!0}return!1}function Se(e){return e.length<1240?107:e.length<33900?1131:32768}function Me(e,t,r){var i,n,a=[],o=[],s=se.getCard16(e,t);if(0!==s){var l=se.getByte(e,t+2);i=t+(s+1)*l+2;for(var u=t+3,h=0;h<s+1;h+=1)a.push(se.getOffset(e,u,l)),u+=l;n=i+a[s]}else n=t+2;for(var c=0;c<a.length-1;c+=1){var f=se.getBytes(e,i+a[c],i+a[c+1]);r&&(f=r(f)),o.push(f)}return{objects:o,startOffset:t,endOffset:n}}function Te(e,t){if(28===t)return e.parseByte()<<8|e.parseByte();if(29===t)return e.parseByte()<<24|e.parseByte()<<16|e.parseByte()<<8|e.parseByte();if(30===t)return function(e){for(var t="",r=["0","1","2","3","4","5","6","7","8","9",".","E","E-",null,"-"];;){var i=e.parseByte(),n=i>>4,a=15&i;if(15==n)break;if(t+=r[n],15==a)break;t+=r[a]}return parseFloat(t)}(e);if(32<=t&&t<=246)return t-139;if(247<=t&&t<=250)return 256*(t-247)+e.parseByte()+108;if(251<=t&&t<=254)return 256*-(t-251)-e.parseByte()-108;throw new Error("Invalid b0 "+t)}function Ee(e,t,r){t=void 0!==t?t:0;var i=new se.Parser(e,t),n=[],a=[];for(r=void 0!==r?r:e.length;i.relativeOffset<r;){var o=i.parseByte();o<=21?(12===o&&(o=1200+i.parseByte()),n.push([o,a]),a=[]):a.push(Te(i,o))}return function(e){for(var t={},r=0;r<e.length;r+=1){var i=e[r][0],n=e[r][1],a=void 0;if(a=1===n.length?n[0]:n,t.hasOwnProperty(i)&&!isNaN(t[i]))throw new Error("Object "+t+" already has key "+i);t[i]=a}return t}(n)}function Ce(e,t){return t=t<=390?ue[t]:e[t-391]}function Le(e,t,r){for(var i,n={},a=0;a<t.length;a+=1){var o=t[a];if(Array.isArray(o.type)){var s=[];s.length=o.type.length;for(var l=0;l<o.type.length;l++)void 0===(i=void 0!==e[o.op]?e[o.op][l]:void 0)&&(i=void 0!==o.value&&void 0!==o.value[l]?o.value[l]:null),"SID"===o.type[l]&&(i=Ce(r,i)),s[l]=i;n[o.name]=s}else void 0===(i=e[o.op])&&(i=void 0!==o.value?o.value:null),"SID"===o.type&&(i=Ce(r,i)),n[o.name]=i}return n}var Oe=[{name:"version",op:0,type:"SID"},{name:"notice",op:1,type:"SID"},{name:"copyright",op:1200,type:"SID"},{name:"fullName",op:2,type:"SID"},{name:"familyName",op:3,type:"SID"},{name:"weight",op:4,type:"SID"},{name:"isFixedPitch",op:1201,type:"number",value:0},{name:"italicAngle",op:1202,type:"number",value:0},{name:"underlinePosition",op:1203,type:"number",value:-100},{name:"underlineThickness",op:1204,type:"number",value:50},{name:"paintType",op:1205,type:"number",value:0},{name:"charstringType",op:1206,type:"number",value:2},{name:"fontMatrix",op:1207,type:["real","real","real","real","real","real"],value:[.001,0,0,.001,0,0]},{name:"uniqueId",op:13,type:"number"},{name:"fontBBox",op:5,type:["number","number","number","number"],value:[0,0,0,0]},{name:"strokeWidth",op:1208,type:"number",value:0},{name:"xuid",op:14,type:[],value:null},{name:"charset",op:15,type:"offset",value:0},{name:"encoding",op:16,type:"offset",value:0},{name:"charStrings",op:17,type:"offset",value:0},{name:"private",op:18,type:["number","offset"],value:[0,0]},{name:"ros",op:1230,type:["SID","SID","number"]},{name:"cidFontVersion",op:1231,type:"number",value:0},{name:"cidFontRevision",op:1232,type:"number",value:0},{name:"cidFontType",op:1233,type:"number",value:0},{name:"cidCount",op:1234,type:"number",value:8720},{name:"uidBase",op:1235,type:"number"},{name:"fdArray",op:1236,type:"offset"},{name:"fdSelect",op:1237,type:"offset"},{name:"fontName",op:1238,type:"SID"}],Pe=[{name:"subrs",op:19,type:"offset",value:0},{name:"defaultWidthX",op:20,type:"number",value:0},{name:"nominalWidthX",op:21,type:"number",value:0}];function Re(e,t,r,i){return Le(Ee(e,t,r),Pe,i)}function De(e,t,r,i){for(var n,a,o=[],s=0;s<r.length;s+=1){var l=new DataView(new Uint8Array(r[s]).buffer),u=(a=i,Le(Ee(n=l,0,n.byteLength),Oe,a));u._subrs=[],u._subrsBias=0;var h=u.private[0],c=u.private[1];if(0!==h&&0!==c){var f=Re(e,c+t,h,i);if(u._defaultWidthX=f.defaultWidthX,u._nominalWidthX=f.nominalWidthX,0!==f.subrs){var d=Me(e,c+f.subrs+t);u._subrs=d.objects,u._subrsBias=Se(u._subrs)}u._privateDict=f}o.push(u)}return o}function ke(v,y,e){var g,b,_,x,w,S,t,M,T=new I,E=[],C=0,L=!1,O=!1,P=0,R=0;if(v.isCIDFont){var r=v.tables.cff.topDict._fdSelect[y.index],i=v.tables.cff.topDict._fdArray[r];w=i._subrs,S=i._subrsBias,t=i._defaultWidthX,M=i._nominalWidthX}else w=v.tables.cff.topDict._subrs,S=v.tables.cff.topDict._subrsBias,t=v.tables.cff.topDict._defaultWidthX,M=v.tables.cff.topDict._nominalWidthX;var D=t;function k(e,t){O&&T.closePath(),T.moveTo(e,t),O=!0}function A(){E.length%2==0||L||(D=E.shift()+M),C+=E.length>>1,E.length=0,L=!0}return function e(t){for(var r,i,n,a,o,s,l,u,h,c,f,d,p=0;p<t.length;){var m=t[p];switch(p+=1,m){case 1:case 3:A();break;case 4:1<E.length&&!L&&(D=E.shift()+M,L=!0),R+=E.pop(),k(P,R);break;case 5:for(;0<E.length;)P+=E.shift(),R+=E.shift(),T.lineTo(P,R);break;case 6:for(;0<E.length&&(P+=E.shift(),T.lineTo(P,R),0!==E.length);)R+=E.shift(),T.lineTo(P,R);break;case 7:for(;0<E.length&&(R+=E.shift(),T.lineTo(P,R),0!==E.length);)P+=E.shift(),T.lineTo(P,R);break;case 8:for(;0<E.length;)g=P+E.shift(),b=R+E.shift(),_=g+E.shift(),x=b+E.shift(),P=_+E.shift(),R=x+E.shift(),T.curveTo(g,b,_,x,P,R);break;case 10:o=E.pop()+S,(s=w[o])&&e(s);break;case 11:return;case 12:switch(m=t[p],p+=1,m){case 35:g=P+E.shift(),b=R+E.shift(),_=g+E.shift(),x=b+E.shift(),l=_+E.shift(),u=x+E.shift(),h=l+E.shift(),c=u+E.shift(),f=h+E.shift(),d=c+E.shift(),P=f+E.shift(),R=d+E.shift(),E.shift(),T.curveTo(g,b,_,x,l,u),T.curveTo(h,c,f,d,P,R);break;case 34:g=P+E.shift(),b=R,_=g+E.shift(),x=b+E.shift(),l=_+E.shift(),u=x,h=l+E.shift(),c=x,f=h+E.shift(),d=R,P=f+E.shift(),T.curveTo(g,b,_,x,l,u),T.curveTo(h,c,f,d,P,R);break;case 36:g=P+E.shift(),b=R+E.shift(),_=g+E.shift(),x=b+E.shift(),l=_+E.shift(),u=x,h=l+E.shift(),c=x,f=h+E.shift(),d=c+E.shift(),P=f+E.shift(),T.curveTo(g,b,_,x,l,u),T.curveTo(h,c,f,d,P,R);break;case 37:g=P+E.shift(),b=R+E.shift(),_=g+E.shift(),x=b+E.shift(),l=_+E.shift(),u=x+E.shift(),h=l+E.shift(),c=u+E.shift(),f=h+E.shift(),d=c+E.shift(),Math.abs(f-P)>Math.abs(d-R)?P=f+E.shift():R=d+E.shift(),T.curveTo(g,b,_,x,l,u),T.curveTo(h,c,f,d,P,R);break;default:console.log("Glyph "+y.index+": unknown operator 1200"+m),E.length=0}break;case 14:0<E.length&&!L&&(D=E.shift()+M,L=!0),O&&(T.closePath(),O=!1);break;case 18:A();break;case 19:case 20:A(),p+=C+7>>3;break;case 21:2<E.length&&!L&&(D=E.shift()+M,L=!0),R+=E.pop(),k(P+=E.pop(),R);break;case 22:1<E.length&&!L&&(D=E.shift()+M,L=!0),k(P+=E.pop(),R);break;case 23:A();break;case 24:for(;2<E.length;)g=P+E.shift(),b=R+E.shift(),_=g+E.shift(),x=b+E.shift(),P=_+E.shift(),R=x+E.shift(),T.curveTo(g,b,_,x,P,R);P+=E.shift(),R+=E.shift(),T.lineTo(P,R);break;case 25:for(;6<E.length;)P+=E.shift(),R+=E.shift(),T.lineTo(P,R);g=P+E.shift(),b=R+E.shift(),_=g+E.shift(),x=b+E.shift(),P=_+E.shift(),R=x+E.shift(),T.curveTo(g,b,_,x,P,R);break;case 26:for(E.length%2&&(P+=E.shift());0<E.length;)g=P,b=R+E.shift(),_=g+E.shift(),x=b+E.shift(),P=_,R=x+E.shift(),T.curveTo(g,b,_,x,P,R);break;case 27:for(E.length%2&&(R+=E.shift());0<E.length;)g=P+E.shift(),b=R,_=g+E.shift(),x=b+E.shift(),P=_+E.shift(),R=x,T.curveTo(g,b,_,x,P,R);break;case 28:r=t[p],i=t[p+1],E.push((r<<24|i<<16)>>16),p+=2;break;case 29:o=E.pop()+v.gsubrsBias,(s=v.gsubrs[o])&&e(s);break;case 30:for(;0<E.length&&(g=P,b=R+E.shift(),_=g+E.shift(),x=b+E.shift(),P=_+E.shift(),R=x+(1===E.length?E.shift():0),T.curveTo(g,b,_,x,P,R),0!==E.length);)g=P+E.shift(),b=R,_=g+E.shift(),x=b+E.shift(),R=x+E.shift(),P=_+(1===E.length?E.shift():0),T.curveTo(g,b,_,x,P,R);break;case 31:for(;0<E.length&&(g=P+E.shift(),b=R,_=g+E.shift(),x=b+E.shift(),R=x+E.shift(),P=_+(1===E.length?E.shift():0),T.curveTo(g,b,_,x,P,R),0!==E.length);)g=P,b=R+E.shift(),_=g+E.shift(),x=b+E.shift(),P=_+E.shift(),R=x+(1===E.length?E.shift():0),T.curveTo(g,b,_,x,P,R);break;default:m<32?console.log("Glyph "+y.index+": unknown operator "+m):m<247?E.push(m-139):m<251?(r=t[p],p+=1,E.push(256*(m-247)+r+108)):m<255?(r=t[p],p+=1,E.push(256*-(m-251)-r-108)):(r=t[p],i=t[p+1],n=t[p+2],a=t[p+3],p+=4,E.push((r<<24|i<<16|n<<8|a)/65536))}}}(e),y.advanceWidth=D,T}function Ae(e,t){var r,i=ue.indexOf(e);return 0<=i&&(r=i),0<=(i=t.indexOf(e))?r=i+ue.length:(r=ue.length+t.length,t.push(e)),r}function Ie(e,t,r){for(var i={},n=0;n<e.length;n+=1){var a=e[n],o=t[a.name];void 0===o||we(o,a.value)||("SID"===a.type&&(o=Ae(o,r)),i[a.op]={name:a.name,type:a.type,value:o})}return i}function Ue(e,t){var r=new $.Record("Top DICT",[{name:"dict",type:"DICT",value:{}}]);return r.dict=Ie(Oe,e,t),r}function Ne(e){var t=new $.Record("Top DICT INDEX",[{name:"topDicts",type:"INDEX",value:[]}]);return t.topDicts=[{name:"topDict_0",type:"TABLE",value:e}],t}function Fe(e){var t=[],r=e.path;t.push({name:"width",type:"NUMBER",value:e.advanceWidth});for(var i=0,n=0,a=0;a<r.commands.length;a+=1){var o=void 0,s=void 0,l=r.commands[a];if("Q"===l.type){l={type:"C",x:l.x,y:l.y,x1:1/3*i+2/3*l.x1,y1:1/3*n+2/3*l.y1,x2:1/3*l.x+2/3*l.x1,y2:1/3*l.y+2/3*l.y1}}if("M"===l.type)o=Math.round(l.x-i),s=Math.round(l.y-n),t.push({name:"dx",type:"NUMBER",value:o}),t.push({name:"dy",type:"NUMBER",value:s}),t.push({name:"rmoveto",type:"OP",value:21}),i=Math.round(l.x),n=Math.round(l.y);else if("L"===l.type)o=Math.round(l.x-i),s=Math.round(l.y-n),t.push({name:"dx",type:"NUMBER",value:o}),t.push({name:"dy",type:"NUMBER",value:s}),t.push({name:"rlineto",type:"OP",value:5}),i=Math.round(l.x),n=Math.round(l.y);else if("C"===l.type){var u=Math.round(l.x1-i),h=Math.round(l.y1-n),c=Math.round(l.x2-l.x1),f=Math.round(l.y2-l.y1);o=Math.round(l.x-l.x2),s=Math.round(l.y-l.y2),t.push({name:"dx1",type:"NUMBER",value:u}),t.push({name:"dy1",type:"NUMBER",value:h}),t.push({name:"dx2",type:"NUMBER",value:c}),t.push({name:"dy2",type:"NUMBER",value:f}),t.push({name:"dx",type:"NUMBER",value:o}),t.push({name:"dy",type:"NUMBER",value:s}),t.push({name:"rrcurveto",type:"OP",value:8}),i=Math.round(l.x),n=Math.round(l.y)}}return t.push({name:"endchar",type:"OP",value:14}),t}var Be={parse:function(e,t,r){r.tables.cff={};var i,n,a,o=Me(e,(i=e,n=t,(a={}).formatMajor=se.getCard8(i,n),a.formatMinor=se.getCard8(i,n+1),a.size=se.getCard8(i,n+2),a.offsetSize=se.getCard8(i,n+3),a.startOffset=n,a.endOffset=n+4,a).endOffset,se.bytesToString),s=Me(e,o.endOffset),l=Me(e,s.endOffset,se.bytesToString),u=Me(e,l.endOffset);r.gsubrs=u.objects,r.gsubrsBias=Se(r.gsubrs);var h=De(e,t,s.objects,l.objects);if(1!==h.length)throw new Error("CFF table has too many fonts in 'FontSet' - count of fonts NameIndex.length = "+h.length);var c=h[0];if((r.tables.cff.topDict=c)._privateDict&&(r.defaultWidthX=c._privateDict.defaultWidthX,r.nominalWidthX=c._privateDict.nominalWidthX),void 0!==c.ros[0]&&void 0!==c.ros[1]&&(r.isCIDFont=!0),r.isCIDFont){var f=c.fdArray,d=c.fdSelect;if(0===f||0===d)throw new Error("Font is marked as a CID font, but FDArray and/or FDSelect information is missing");var p=De(e,t,Me(e,f+=t).objects,l.objects);c._fdArray=p,d+=t,c._fdSelect=function(e,t,r,i){var n,a=[],o=new se.Parser(e,t),s=o.parseCard8();if(0===s)for(var l=0;l<r;l++){if(i<=(n=o.parseCard8()))throw new Error("CFF table CID Font FDSelect has bad FD index value "+n+" (FD count "+i+")");a.push(n)}else{if(3!==s)throw new Error("CFF Table CID Font FDSelect table has unsupported format "+s);var u,h=o.parseCard16(),c=o.parseCard16();if(0!==c)throw new Error("CFF Table CID Font FDSelect format 3 range has bad initial GID "+c);for(var f=0;f<h;f++){if(n=o.parseCard8(),u=o.parseCard16(),i<=n)throw new Error("CFF table CID Font FDSelect has bad FD index value "+n+" (FD count "+i+")");if(r<u)throw new Error("CFF Table CID Font FDSelect format 3 range has bad GID "+u);for(;c<u;c++)a.push(n);c=u}if(u!==r)throw new Error("CFF Table CID Font FDSelect format 3 range has bad final GID "+u)}return a}(e,d,r.numGlyphs,p.length)}var m=t+c.private[1],v=Re(e,m,c.private[0],l.objects);if(r.defaultWidthX=v.defaultWidthX,r.nominalWidthX=v.nominalWidthX,0!==v.subrs){var y=Me(e,m+v.subrs);r.subrs=y.objects,r.subrsBias=Se(r.subrs)}else r.subrs=[],r.subrsBias=0;var g=Me(e,t+c.charStrings);r.nGlyphs=g.objects.length;var b=function(e,t,r,i){var n,a,o=new se.Parser(e,t);--r;var s=[".notdef"],l=o.parseCard8();if(0===l)for(var u=0;u<r;u+=1)n=o.parseSID(),s.push(Ce(i,n));else if(1===l)for(;s.length<=r;){n=o.parseSID(),a=o.parseCard8();for(var h=0;h<=a;h+=1)s.push(Ce(i,n)),n+=1}else{if(2!==l)throw new Error("Unknown charset format "+l);for(;s.length<=r;){n=o.parseSID(),a=o.parseCard16();for(var c=0;c<=a;c+=1)s.push(Ce(i,n)),n+=1}}return s}(e,t+c.charset,r.nGlyphs,l.objects);0===c.encoding?r.cffEncoding=new me(he,b):1===c.encoding?r.cffEncoding=new me(ce,b):r.cffEncoding=function(e,t,r){var i,n={},a=new se.Parser(e,t),o=a.parseCard8();if(0===o)for(var s=a.parseCard8(),l=0;l<s;l+=1)n[i=a.parseCard8()]=l;else{if(1!==o)throw new Error("Unknown encoding format "+o);var u=a.parseCard8();i=1;for(var h=0;h<u;h+=1)for(var c=a.parseCard8(),f=a.parseCard8(),d=c;d<=c+f;d+=1)n[d]=i,i+=1}return new me(n,r)}(e,t+c.encoding,b),r.encoding=r.encoding||r.cffEncoding,r.glyphs=new xe.GlyphSet(r);for(var _=0;_<r.nGlyphs;_+=1){var x=g.objects[_];r.glyphs.push(_,xe.cffGlyphLoader(r,_,ke,x))}},make:function(e,t){for(var r,i=new $.Table("CFF ",[{name:"header",type:"RECORD"},{name:"nameIndex",type:"RECORD"},{name:"topDictIndex",type:"RECORD"},{name:"stringIndex",type:"RECORD"},{name:"globalSubrIndex",type:"RECORD"},{name:"charsets",type:"RECORD"},{name:"charStringsIndex",type:"RECORD"},{name:"privateDict",type:"RECORD"}]),n=1/t.unitsPerEm,a={version:t.version,fullName:t.fullName,familyName:t.familyName,weight:t.weightName,fontBBox:t.fontBBox||[0,0,0,0],fontMatrix:[n,0,0,n,0,0],charset:999,encoding:0,charStrings:999,private:[0,999]},o=[],s=1;s<e.length;s+=1)r=e.get(s),o.push(r.name);var l=[];i.header=new $.Record("Header",[{name:"major",type:"Card8",value:1},{name:"minor",type:"Card8",value:0},{name:"hdrSize",type:"Card8",value:4},{name:"major",type:"Card8",value:1}]),i.nameIndex=function(e){var t=new $.Record("Name INDEX",[{name:"names",type:"INDEX",value:[]}]);t.names=[];for(var r=0;r<e.length;r+=1)t.names.push({name:"name_"+r,type:"NAME",value:e[r]});return t}([t.postScriptName]);var u,h,c,f=Ue(a,l);i.topDictIndex=Ne(f),i.globalSubrIndex=new $.Record("Global Subr INDEX",[{name:"subrs",type:"INDEX",value:[]}]),i.charsets=function(e,t){for(var r=new $.Record("Charsets",[{name:"format",type:"Card8",value:0}]),i=0;i<e.length;i+=1){var n=Ae(e[i],t);r.fields.push({name:"glyph_"+i,type:"SID",value:n})}return r}(o,l),i.charStringsIndex=function(e){for(var t=new $.Record("CharStrings INDEX",[{name:"charStrings",type:"INDEX",value:[]}]),r=0;r<e.length;r+=1){var i=e.get(r),n=Fe(i);t.charStrings.push({name:i.name,type:"CHARSTRING",value:n})}return t}(e),i.privateDict=(u={},h=l,(c=new $.Record("Private DICT",[{name:"dict",type:"DICT",value:{}}])).dict=Ie(Pe,u,h),c),i.stringIndex=function(e){var t=new $.Record("String INDEX",[{name:"strings",type:"INDEX",value:[]}]);t.strings=[];for(var r=0;r<e.length;r+=1)t.strings.push({name:"string_"+r,type:"STRING",value:e[r]});return t}(l);var d=i.header.sizeOf()+i.nameIndex.sizeOf()+i.topDictIndex.sizeOf()+i.stringIndex.sizeOf()+i.globalSubrIndex.sizeOf();return a.charset=d,a.encoding=0,a.charStrings=a.charset+i.charsets.sizeOf(),a.private[1]=a.charStrings+i.charStringsIndex.sizeOf(),f=Ue(a,l),i.topDictIndex=Ne(f),i}};var Ge={parse:function(e,t){var r={},i=new se.Parser(e,t);return r.version=i.parseVersion(),r.fontRevision=Math.round(1e3*i.parseFixed())/1e3,r.checkSumAdjustment=i.parseULong(),r.magicNumber=i.parseULong(),P.argument(1594834165===r.magicNumber,"Font header has wrong magic number."),r.flags=i.parseUShort(),r.unitsPerEm=i.parseUShort(),r.created=i.parseLongDateTime(),r.modified=i.parseLongDateTime(),r.xMin=i.parseShort(),r.yMin=i.parseShort(),r.xMax=i.parseShort(),r.yMax=i.parseShort(),r.macStyle=i.parseUShort(),r.lowestRecPPEM=i.parseUShort(),r.fontDirectionHint=i.parseShort(),r.indexToLocFormat=i.parseShort(),r.glyphDataFormat=i.parseShort(),r},make:function(e){var t=Math.round((new Date).getTime()/1e3)+2082844800,r=t;return e.createdTimestamp&&(r=e.createdTimestamp+2082844800),new $.Table("head",[{name:"version",type:"FIXED",value:65536},{name:"fontRevision",type:"FIXED",value:65536},{name:"checkSumAdjustment",type:"ULONG",value:0},{name:"magicNumber",type:"ULONG",value:1594834165},{name:"flags",type:"USHORT",value:0},{name:"unitsPerEm",type:"USHORT",value:1e3},{name:"created",type:"LONGDATETIME",value:r},{name:"modified",type:"LONGDATETIME",value:t},{name:"xMin",type:"SHORT",value:0},{name:"yMin",type:"SHORT",value:0},{name:"xMax",type:"SHORT",value:0},{name:"yMax",type:"SHORT",value:0},{name:"macStyle",type:"USHORT",value:0},{name:"lowestRecPPEM",type:"USHORT",value:0},{name:"fontDirectionHint",type:"SHORT",value:2},{name:"indexToLocFormat",type:"SHORT",value:0},{name:"glyphDataFormat",type:"SHORT",value:0}],e)}};var je={parse:function(e,t){var r={},i=new se.Parser(e,t);return r.version=i.parseVersion(),r.ascender=i.parseShort(),r.descender=i.parseShort(),r.lineGap=i.parseShort(),r.advanceWidthMax=i.parseUShort(),r.minLeftSideBearing=i.parseShort(),r.minRightSideBearing=i.parseShort(),r.xMaxExtent=i.parseShort(),r.caretSlopeRise=i.parseShort(),r.caretSlopeRun=i.parseShort(),r.caretOffset=i.parseShort(),i.relativeOffset+=8,r.metricDataFormat=i.parseShort(),r.numberOfHMetrics=i.parseUShort(),r},make:function(e){return new $.Table("hhea",[{name:"version",type:"FIXED",value:65536},{name:"ascender",type:"FWORD",value:0},{name:"descender",type:"FWORD",value:0},{name:"lineGap",type:"FWORD",value:0},{name:"advanceWidthMax",type:"UFWORD",value:0},{name:"minLeftSideBearing",type:"FWORD",value:0},{name:"minRightSideBearing",type:"FWORD",value:0},{name:"xMaxExtent",type:"FWORD",value:0},{name:"caretSlopeRise",type:"SHORT",value:1},{name:"caretSlopeRun",type:"SHORT",value:0},{name:"caretOffset",type:"SHORT",value:0},{name:"reserved1",type:"SHORT",value:0},{name:"reserved2",type:"SHORT",value:0},{name:"reserved3",type:"SHORT",value:0},{name:"reserved4",type:"SHORT",value:0},{name:"metricDataFormat",type:"SHORT",value:0},{name:"numberOfHMetrics",type:"USHORT",value:0}],e)}};var Ve={parse:function(e,t,r,i,n){for(var a,o,s=new se.Parser(e,t),l=0;l<i;l+=1){l<r&&(a=s.parseUShort(),o=s.parseShort());var u=n.get(l);u.advanceWidth=a,u.leftSideBearing=o}},make:function(e){for(var t=new $.Table("hmtx",[]),r=0;r<e.length;r+=1){var i=e.get(r),n=i.advanceWidth||0,a=i.leftSideBearing||0;t.fields.push({name:"advanceWidth_"+r,type:"USHORT",value:n}),t.fields.push({name:"leftSideBearing_"+r,type:"SHORT",value:a})}return t}};var ze={make:function(e){for(var t=new $.Table("ltag",[{name:"version",type:"ULONG",value:1},{name:"flags",type:"ULONG",value:0},{name:"numTags",type:"ULONG",value:e.length}]),r="",i=12+4*e.length,n=0;n<e.length;++n){var a=r.indexOf(e[n]);a<0&&(a=r.length,r+=e[n]),t.fields.push({name:"offset "+n,type:"USHORT",value:i+a}),t.fields.push({name:"length "+n,type:"USHORT",value:e[n].length})}return t.fields.push({name:"stringPool",type:"CHARARRAY",value:r}),t},parse:function(e,t){var r=new se.Parser(e,t),i=r.parseULong();P.argument(1===i,"Unsupported ltag table version."),r.skip("uLong",1);for(var n=r.parseULong(),a=[],o=0;o<n;o++){for(var s="",l=t+r.parseUShort(),u=r.parseUShort(),h=l;h<l+u;++h)s+=String.fromCharCode(e.getInt8(h));a.push(s)}return a}};var He={parse:function(e,t){var r={},i=new se.Parser(e,t);return r.version=i.parseVersion(),r.numGlyphs=i.parseUShort(),1===r.version&&(r.maxPoints=i.parseUShort(),r.maxContours=i.parseUShort(),r.maxCompositePoints=i.parseUShort(),r.maxCompositeContours=i.parseUShort(),r.maxZones=i.parseUShort(),r.maxTwilightPoints=i.parseUShort(),r.maxStorage=i.parseUShort(),r.maxFunctionDefs=i.parseUShort(),r.maxInstructionDefs=i.parseUShort(),r.maxStackElements=i.parseUShort(),r.maxSizeOfInstructions=i.parseUShort(),r.maxComponentElements=i.parseUShort(),r.maxComponentDepth=i.parseUShort()),r},make:function(e){return new $.Table("maxp",[{name:"version",type:"FIXED",value:20480},{name:"numGlyphs",type:"USHORT",value:e}])}},We=["copyright","fontFamily","fontSubfamily","uniqueID","fullName","version","postScriptName","trademark","manufacturer","designer","description","manufacturerURL","designerURL","license","licenseURL","reserved","preferredFamily","preferredSubfamily","compatibleFullName","sampleText","postScriptFindFontName","wwsFamily","wwsSubfamily"],qe={0:"en",1:"fr",2:"de",3:"it",4:"nl",5:"sv",6:"es",7:"da",8:"pt",9:"no",10:"he",11:"ja",12:"ar",13:"fi",14:"el",15:"is",16:"mt",17:"tr",18:"hr",19:"zh-Hant",20:"ur",21:"hi",22:"th",23:"ko",24:"lt",25:"pl",26:"hu",27:"es",28:"lv",29:"se",30:"fo",31:"fa",32:"ru",33:"zh",34:"nl-BE",35:"ga",36:"sq",37:"ro",38:"cz",39:"sk",40:"si",41:"yi",42:"sr",43:"mk",44:"bg",45:"uk",46:"be",47:"uz",48:"kk",49:"az-Cyrl",50:"az-Arab",51:"hy",52:"ka",53:"mo",54:"ky",55:"tg",56:"tk",57:"mn-CN",58:"mn",59:"ps",60:"ks",61:"ku",62:"sd",63:"bo",64:"ne",65:"sa",66:"mr",67:"bn",68:"as",69:"gu",70:"pa",71:"or",72:"ml",73:"kn",74:"ta",75:"te",76:"si",77:"my",78:"km",79:"lo",80:"vi",81:"id",82:"tl",83:"ms",84:"ms-Arab",85:"am",86:"ti",87:"om",88:"so",89:"sw",90:"rw",91:"rn",92:"ny",93:"mg",94:"eo",128:"cy",129:"eu",130:"ca",131:"la",132:"qu",133:"gn",134:"ay",135:"tt",136:"ug",137:"dz",138:"jv",139:"su",140:"gl",141:"af",142:"br",143:"iu",144:"gd",145:"gv",146:"ga",147:"to",148:"el-polyton",149:"kl",150:"az",151:"nn"},Xe={0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:5,11:1,12:4,13:0,14:6,15:0,16:0,17:0,18:0,19:2,20:4,21:9,22:21,23:3,24:29,25:29,26:29,27:29,28:29,29:0,30:0,31:4,32:7,33:25,34:0,35:0,36:0,37:0,38:29,39:29,40:0,41:5,42:7,43:7,44:7,45:7,46:7,47:7,48:7,49:7,50:4,51:24,52:23,53:7,54:7,55:7,56:7,57:27,58:7,59:4,60:4,61:4,62:4,63:26,64:9,65:9,66:9,67:13,68:13,69:11,70:10,71:12,72:17,73:16,74:14,75:15,76:18,77:19,78:20,79:22,80:30,81:0,82:0,83:0,84:4,85:28,86:28,87:28,88:0,89:0,90:0,91:0,92:0,93:0,94:0,128:0,129:0,130:0,131:0,132:0,133:0,134:0,135:7,136:4,137:26,138:0,139:0,140:0,141:0,142:0,143:28,144:0,145:0,146:0,147:0,148:6,149:0,150:0,151:0},Ye={1078:"af",1052:"sq",1156:"gsw",1118:"am",5121:"ar-DZ",15361:"ar-BH",3073:"ar",2049:"ar-IQ",11265:"ar-JO",13313:"ar-KW",12289:"ar-LB",4097:"ar-LY",6145:"ary",8193:"ar-OM",16385:"ar-QA",1025:"ar-SA",10241:"ar-SY",7169:"aeb",14337:"ar-AE",9217:"ar-YE",1067:"hy",1101:"as",2092:"az-Cyrl",1068:"az",1133:"ba",1069:"eu",1059:"be",2117:"bn",1093:"bn-IN",8218:"bs-Cyrl",5146:"bs",1150:"br",1026:"bg",1027:"ca",3076:"zh-HK",5124:"zh-MO",2052:"zh",4100:"zh-SG",1028:"zh-TW",1155:"co",1050:"hr",4122:"hr-BA",1029:"cs",1030:"da",1164:"prs",1125:"dv",2067:"nl-BE",1043:"nl",3081:"en-AU",10249:"en-BZ",4105:"en-CA",9225:"en-029",16393:"en-IN",6153:"en-IE",8201:"en-JM",17417:"en-MY",5129:"en-NZ",13321:"en-PH",18441:"en-SG",7177:"en-ZA",11273:"en-TT",2057:"en-GB",1033:"en",12297:"en-ZW",1061:"et",1080:"fo",1124:"fil",1035:"fi",2060:"fr-BE",3084:"fr-CA",1036:"fr",5132:"fr-LU",6156:"fr-MC",4108:"fr-CH",1122:"fy",1110:"gl",1079:"ka",3079:"de-AT",1031:"de",5127:"de-LI",4103:"de-LU",2055:"de-CH",1032:"el",1135:"kl",1095:"gu",1128:"ha",1037:"he",1081:"hi",1038:"hu",1039:"is",1136:"ig",1057:"id",1117:"iu",2141:"iu-Latn",2108:"ga",1076:"xh",1077:"zu",1040:"it",2064:"it-CH",1041:"ja",1099:"kn",1087:"kk",1107:"km",1158:"quc",1159:"rw",1089:"sw",1111:"kok",1042:"ko",1088:"ky",1108:"lo",1062:"lv",1063:"lt",2094:"dsb",1134:"lb",1071:"mk",2110:"ms-BN",1086:"ms",1100:"ml",1082:"mt",1153:"mi",1146:"arn",1102:"mr",1148:"moh",1104:"mn",2128:"mn-CN",1121:"ne",1044:"nb",2068:"nn",1154:"oc",1096:"or",1123:"ps",1045:"pl",1046:"pt",2070:"pt-PT",1094:"pa",1131:"qu-BO",2155:"qu-EC",3179:"qu",1048:"ro",1047:"rm",1049:"ru",9275:"smn",4155:"smj-NO",5179:"smj",3131:"se-FI",1083:"se",2107:"se-SE",8251:"sms",6203:"sma-NO",7227:"sms",1103:"sa",7194:"sr-Cyrl-BA",3098:"sr",6170:"sr-Latn-BA",2074:"sr-Latn",1132:"nso",1074:"tn",1115:"si",1051:"sk",1060:"sl",11274:"es-AR",16394:"es-BO",13322:"es-CL",9226:"es-CO",5130:"es-CR",7178:"es-DO",12298:"es-EC",17418:"es-SV",4106:"es-GT",18442:"es-HN",2058:"es-MX",19466:"es-NI",6154:"es-PA",15370:"es-PY",10250:"es-PE",20490:"es-PR",3082:"es",1034:"es",21514:"es-US",14346:"es-UY",8202:"es-VE",2077:"sv-FI",1053:"sv",1114:"syr",1064:"tg",2143:"tzm",1097:"ta",1092:"tt",1098:"te",1054:"th",1105:"bo",1055:"tr",1090:"tk",1152:"ug",1058:"uk",1070:"hsb",1056:"ur",2115:"uz-Cyrl",1091:"uz",1066:"vi",1106:"cy",1160:"wo",1157:"sah",1144:"ii",1130:"yo"};function Ze(e,t,r){switch(e){case 0:if(65535===t)return"und";if(r)return r[t];break;case 1:return qe[t];case 3:return Ye[t]}}var Qe="utf-16",Ke={0:"macintosh",1:"x-mac-japanese",2:"x-mac-chinesetrad",3:"x-mac-korean",6:"x-mac-greek",7:"x-mac-cyrillic",9:"x-mac-devanagai",10:"x-mac-gurmukhi",11:"x-mac-gujarati",12:"x-mac-oriya",13:"x-mac-bengali",14:"x-mac-tamil",15:"x-mac-telugu",16:"x-mac-kannada",17:"x-mac-malayalam",18:"x-mac-sinhalese",19:"x-mac-burmese",20:"x-mac-khmer",21:"x-mac-thai",22:"x-mac-lao",23:"x-mac-georgian",24:"x-mac-armenian",25:"x-mac-chinesesimp",26:"x-mac-tibetan",27:"x-mac-mongolian",28:"x-mac-ethiopic",29:"x-mac-ce",30:"x-mac-vietnamese",31:"x-mac-extarabic"},Je={15:"x-mac-icelandic",17:"x-mac-turkish",18:"x-mac-croatian",24:"x-mac-ce",25:"x-mac-ce",26:"x-mac-ce",27:"x-mac-ce",28:"x-mac-ce",30:"x-mac-icelandic",37:"x-mac-romanian",38:"x-mac-ce",39:"x-mac-ce",40:"x-mac-ce",143:"x-mac-inuit",146:"x-mac-gaelic"};function $e(e,t,r){switch(e){case 0:return Qe;case 1:return Je[r]||Ke[t];case 3:if(1===t||10===t)return Qe}}function et(e){var t={};for(var r in e)t[e[r]]=parseInt(r);return t}function tt(e,t,r,i,n,a){return new $.Record("NameRecord",[{name:"platformID",type:"USHORT",value:e},{name:"encodingID",type:"USHORT",value:t},{name:"languageID",type:"USHORT",value:r},{name:"nameID",type:"USHORT",value:i},{name:"length",type:"USHORT",value:n},{name:"offset",type:"USHORT",value:a}])}function rt(e,t){var r=function(e,t){var r=e.length,i=t.length-r+1;e:for(var n=0;n<i;n++)for(;n<i;n++){for(var a=0;a<r;a++)if(t[n+a]!==e[a])continue e;return n}return-1}(e,t);if(r<0){r=t.length;for(var i=0,n=e.length;i<n;++i)t.push(e[i])}return r}var it={parse:function(e,t,r){for(var i={},n=new se.Parser(e,t),a=n.parseUShort(),o=n.parseUShort(),s=n.offset+n.parseUShort(),l=0;l<o;l++){var u=n.parseUShort(),h=n.parseUShort(),c=n.parseUShort(),f=n.parseUShort(),d=We[f]||f,p=n.parseUShort(),m=n.parseUShort(),v=Ze(u,c,r),y=$e(u,h,c);if(void 0!==y&&void 0!==v){var g=void 0;if(g=y===Qe?D.UTF16(e,s+m,p):D.MACSTRING(e,s+m,p,y)){var b=i[d];void 0===b&&(b=i[d]={}),b[v]=g}}}return 1===a&&n.parseUShort(),i},make:function(e,t){var r,i=[],n={},a=et(We);for(var o in e){var s=a[o];if(void 0===s&&(s=o),r=parseInt(s),isNaN(r))throw new Error('Name table entry "'+o+'" does not exist, see nameTableNames for complete list.');n[r]=e[o],i.push(r)}for(var l=et(qe),u=et(Ye),h=[],c=[],f=0;f<i.length;f++){var d=n[r=i[f]];for(var p in d){var m=d[p],v=1,y=l[p],g=Xe[y],b=$e(v,g,y),_=k.MACSTRING(m,b);void 0===_&&(v=0,(y=t.indexOf(p))<0&&(y=t.length,t.push(p)),g=4,_=k.UTF16(m));var x=rt(_,c);h.push(tt(v,g,y,r,_.length,x));var w=u[p];if(void 0!==w){var S=k.UTF16(m),M=rt(S,c);h.push(tt(3,1,w,r,S.length,M))}}}h.sort(function(e,t){return e.platformID-t.platformID||e.encodingID-t.encodingID||e.languageID-t.languageID||e.nameID-t.nameID});for(var T=new $.Table("name",[{name:"format",type:"USHORT",value:0},{name:"count",type:"USHORT",value:h.length},{name:"stringOffset",type:"USHORT",value:6+12*h.length}]),E=0;E<h.length;E++)T.fields.push({name:"record_"+E,type:"RECORD",value:h[E]});return T.fields.push({name:"strings",type:"LITERAL",value:c}),T}},nt=[{begin:0,end:127},{begin:128,end:255},{begin:256,end:383},{begin:384,end:591},{begin:592,end:687},{begin:688,end:767},{begin:768,end:879},{begin:880,end:1023},{begin:11392,end:11519},{begin:1024,end:1279},{begin:1328,end:1423},{begin:1424,end:1535},{begin:42240,end:42559},{begin:1536,end:1791},{begin:1984,end:2047},{begin:2304,end:2431},{begin:2432,end:2559},{begin:2560,end:2687},{begin:2688,end:2815},{begin:2816,end:2943},{begin:2944,end:3071},{begin:3072,end:3199},{begin:3200,end:3327},{begin:3328,end:3455},{begin:3584,end:3711},{begin:3712,end:3839},{begin:4256,end:4351},{begin:6912,end:7039},{begin:4352,end:4607},{begin:7680,end:7935},{begin:7936,end:8191},{begin:8192,end:8303},{begin:8304,end:8351},{begin:8352,end:8399},{begin:8400,end:8447},{begin:8448,end:8527},{begin:8528,end:8591},{begin:8592,end:8703},{begin:8704,end:8959},{begin:8960,end:9215},{begin:9216,end:9279},{begin:9280,end:9311},{begin:9312,end:9471},{begin:9472,end:9599},{begin:9600,end:9631},{begin:9632,end:9727},{begin:9728,end:9983},{begin:9984,end:10175},{begin:12288,end:12351},{begin:12352,end:12447},{begin:12448,end:12543},{begin:12544,end:12591},{begin:12592,end:12687},{begin:43072,end:43135},{begin:12800,end:13055},{begin:13056,end:13311},{begin:44032,end:55215},{begin:55296,end:57343},{begin:67840,end:67871},{begin:19968,end:40959},{begin:57344,end:63743},{begin:12736,end:12783},{begin:64256,end:64335},{begin:64336,end:65023},{begin:65056,end:65071},{begin:65040,end:65055},{begin:65104,end:65135},{begin:65136,end:65279},{begin:65280,end:65519},{begin:65520,end:65535},{begin:3840,end:4095},{begin:1792,end:1871},{begin:1920,end:1983},{begin:3456,end:3583},{begin:4096,end:4255},{begin:4608,end:4991},{begin:5024,end:5119},{begin:5120,end:5759},{begin:5760,end:5791},{begin:5792,end:5887},{begin:6016,end:6143},{begin:6144,end:6319},{begin:10240,end:10495},{begin:40960,end:42127},{begin:5888,end:5919},{begin:66304,end:66351},{begin:66352,end:66383},{begin:66560,end:66639},{begin:118784,end:119039},{begin:119808,end:120831},{begin:1044480,end:1048573},{begin:65024,end:65039},{begin:917504,end:917631},{begin:6400,end:6479},{begin:6480,end:6527},{begin:6528,end:6623},{begin:6656,end:6687},{begin:11264,end:11359},{begin:11568,end:11647},{begin:19904,end:19967},{begin:43008,end:43055},{begin:65536,end:65663},{begin:65856,end:65935},{begin:66432,end:66463},{begin:66464,end:66527},{begin:66640,end:66687},{begin:66688,end:66735},{begin:67584,end:67647},{begin:68096,end:68191},{begin:119552,end:119647},{begin:73728,end:74751},{begin:119648,end:119679},{begin:7040,end:7103},{begin:7168,end:7247},{begin:7248,end:7295},{begin:43136,end:43231},{begin:43264,end:43311},{begin:43312,end:43359},{begin:43520,end:43615},{begin:65936,end:65999},{begin:66e3,end:66047},{begin:66208,end:66271},{begin:127024,end:127135}];var at={parse:function(e,t){var r={},i=new se.Parser(e,t);r.version=i.parseUShort(),r.xAvgCharWidth=i.parseShort(),r.usWeightClass=i.parseUShort(),r.usWidthClass=i.parseUShort(),r.fsType=i.parseUShort(),r.ySubscriptXSize=i.parseShort(),r.ySubscriptYSize=i.parseShort(),r.ySubscriptXOffset=i.parseShort(),r.ySubscriptYOffset=i.parseShort(),r.ySuperscriptXSize=i.parseShort(),r.ySuperscriptYSize=i.parseShort(),r.ySuperscriptXOffset=i.parseShort(),r.ySuperscriptYOffset=i.parseShort(),r.yStrikeoutSize=i.parseShort(),r.yStrikeoutPosition=i.parseShort(),r.sFamilyClass=i.parseShort(),r.panose=[];for(var n=0;n<10;n++)r.panose[n]=i.parseByte();return r.ulUnicodeRange1=i.parseULong(),r.ulUnicodeRange2=i.parseULong(),r.ulUnicodeRange3=i.parseULong(),r.ulUnicodeRange4=i.parseULong(),r.achVendID=String.fromCharCode(i.parseByte(),i.parseByte(),i.parseByte(),i.parseByte()),r.fsSelection=i.parseUShort(),r.usFirstCharIndex=i.parseUShort(),r.usLastCharIndex=i.parseUShort(),r.sTypoAscender=i.parseShort(),r.sTypoDescender=i.parseShort(),r.sTypoLineGap=i.parseShort(),r.usWinAscent=i.parseUShort(),r.usWinDescent=i.parseUShort(),1<=r.version&&(r.ulCodePageRange1=i.parseULong(),r.ulCodePageRange2=i.parseULong()),2<=r.version&&(r.sxHeight=i.parseShort(),r.sCapHeight=i.parseShort(),r.usDefaultChar=i.parseUShort(),r.usBreakChar=i.parseUShort(),r.usMaxContent=i.parseUShort()),r},make:function(e){return new $.Table("OS/2",[{name:"version",type:"USHORT",value:3},{name:"xAvgCharWidth",type:"SHORT",value:0},{name:"usWeightClass",type:"USHORT",value:0},{name:"usWidthClass",type:"USHORT",value:0},{name:"fsType",type:"USHORT",value:0},{name:"ySubscriptXSize",type:"SHORT",value:650},{name:"ySubscriptYSize",type:"SHORT",value:699},{name:"ySubscriptXOffset",type:"SHORT",value:0},{name:"ySubscriptYOffset",type:"SHORT",value:140},{name:"ySuperscriptXSize",type:"SHORT",value:650},{name:"ySuperscriptYSize",type:"SHORT",value:699},{name:"ySuperscriptXOffset",type:"SHORT",value:0},{name:"ySuperscriptYOffset",type:"SHORT",value:479},{name:"yStrikeoutSize",type:"SHORT",value:49},{name:"yStrikeoutPosition",type:"SHORT",value:258},{name:"sFamilyClass",type:"SHORT",value:0},{name:"bFamilyType",type:"BYTE",value:0},{name:"bSerifStyle",type:"BYTE",value:0},{name:"bWeight",type:"BYTE",value:0},{name:"bProportion",type:"BYTE",value:0},{name:"bContrast",type:"BYTE",value:0},{name:"bStrokeVariation",type:"BYTE",value:0},{name:"bArmStyle",type:"BYTE",value:0},{name:"bLetterform",type:"BYTE",value:0},{name:"bMidline",type:"BYTE",value:0},{name:"bXHeight",type:"BYTE",value:0},{name:"ulUnicodeRange1",type:"ULONG",value:0},{name:"ulUnicodeRange2",type:"ULONG",value:0},{name:"ulUnicodeRange3",type:"ULONG",value:0},{name:"ulUnicodeRange4",type:"ULONG",value:0},{name:"achVendID",type:"CHARARRAY",value:"XXXX"},{name:"fsSelection",type:"USHORT",value:0},{name:"usFirstCharIndex",type:"USHORT",value:0},{name:"usLastCharIndex",type:"USHORT",value:0},{name:"sTypoAscender",type:"SHORT",value:0},{name:"sTypoDescender",type:"SHORT",value:0},{name:"sTypoLineGap",type:"SHORT",value:0},{name:"usWinAscent",type:"USHORT",value:0},{name:"usWinDescent",type:"USHORT",value:0},{name:"ulCodePageRange1",type:"ULONG",value:0},{name:"ulCodePageRange2",type:"ULONG",value:0},{name:"sxHeight",type:"SHORT",value:0},{name:"sCapHeight",type:"SHORT",value:0},{name:"usDefaultChar",type:"USHORT",value:0},{name:"usBreakChar",type:"USHORT",value:0},{name:"usMaxContext",type:"USHORT",value:0}],e)},unicodeRanges:nt,getUnicodeRange:function(e){for(var t=0;t<nt.length;t+=1){var r=nt[t];if(e>=r.begin&&e<r.end)return t}return-1}};var ot={parse:function(e,t){var r={},i=new se.Parser(e,t);switch(r.version=i.parseVersion(),r.italicAngle=i.parseFixed(),r.underlinePosition=i.parseShort(),r.underlineThickness=i.parseShort(),r.isFixedPitch=i.parseULong(),r.minMemType42=i.parseULong(),r.maxMemType42=i.parseULong(),r.minMemType1=i.parseULong(),r.maxMemType1=i.parseULong(),r.version){case 1:r.names=fe.slice();break;case 2:r.numberOfGlyphs=i.parseUShort(),r.glyphNameIndex=new Array(r.numberOfGlyphs);for(var n=0;n<r.numberOfGlyphs;n++)r.glyphNameIndex[n]=i.parseUShort();r.names=[];for(var a=0;a<r.numberOfGlyphs;a++)if(r.glyphNameIndex[a]>=fe.length){var o=i.parseChar();r.names.push(i.parseString(o))}break;case 2.5:r.numberOfGlyphs=i.parseUShort(),r.offset=new Array(r.numberOfGlyphs);for(var s=0;s<r.numberOfGlyphs;s++)r.offset[s]=i.parseChar()}return r},make:function(){return new $.Table("post",[{name:"version",type:"FIXED",value:196608},{name:"italicAngle",type:"FIXED",value:0},{name:"underlinePosition",type:"FWORD",value:0},{name:"underlineThickness",type:"FWORD",value:0},{name:"isFixedPitch",type:"ULONG",value:0},{name:"minMemType42",type:"ULONG",value:0},{name:"maxMemType42",type:"ULONG",value:0},{name:"minMemType1",type:"ULONG",value:0},{name:"maxMemType1",type:"ULONG",value:0}])}},st=new Array(9);st[1]=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort();return 1===t?{substFormat:1,coverage:this.parsePointer(ae.coverage),deltaGlyphId:this.parseUShort()}:2===t?{substFormat:2,coverage:this.parsePointer(ae.coverage),substitute:this.parseOffset16List()}:void P.assert(!1,"0x"+e.toString(16)+": lookup type 1 format must be 1 or 2.")},st[2]=function(){var e=this.parseUShort();return P.argument(1===e,"GSUB Multiple Substitution Subtable identifier-format must be 1"),{substFormat:e,coverage:this.parsePointer(ae.coverage),sequences:this.parseListOfLists()}},st[3]=function(){var e=this.parseUShort();return P.argument(1===e,"GSUB Alternate Substitution Subtable identifier-format must be 1"),{substFormat:e,coverage:this.parsePointer(ae.coverage),alternateSets:this.parseListOfLists()}},st[4]=function(){var e=this.parseUShort();return P.argument(1===e,"GSUB ligature table identifier-format must be 1"),{substFormat:e,coverage:this.parsePointer(ae.coverage),ligatureSets:this.parseListOfLists(function(){return{ligGlyph:this.parseUShort(),components:this.parseUShortList(this.parseUShort()-1)}})}};var lt={sequenceIndex:ae.uShort,lookupListIndex:ae.uShort};st[5]=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort();if(1===t)return{substFormat:t,coverage:this.parsePointer(ae.coverage),ruleSets:this.parseListOfLists(function(){var e=this.parseUShort(),t=this.parseUShort();return{input:this.parseUShortList(e-1),lookupRecords:this.parseRecordList(t,lt)}})};if(2===t)return{substFormat:t,coverage:this.parsePointer(ae.coverage),classDef:this.parsePointer(ae.classDef),classSets:this.parseListOfLists(function(){var e=this.parseUShort(),t=this.parseUShort();return{classes:this.parseUShortList(e-1),lookupRecords:this.parseRecordList(t,lt)}})};if(3===t){var r=this.parseUShort(),i=this.parseUShort();return{substFormat:t,coverages:this.parseList(r,ae.pointer(ae.coverage)),lookupRecords:this.parseRecordList(i,lt)}}P.assert(!1,"0x"+e.toString(16)+": lookup type 5 format must be 1, 2 or 3.")},st[6]=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort();return 1===t?{substFormat:1,coverage:this.parsePointer(ae.coverage),chainRuleSets:this.parseListOfLists(function(){return{backtrack:this.parseUShortList(),input:this.parseUShortList(this.parseShort()-1),lookahead:this.parseUShortList(),lookupRecords:this.parseRecordList(lt)}})}:2===t?{substFormat:2,coverage:this.parsePointer(ae.coverage),backtrackClassDef:this.parsePointer(ae.classDef),inputClassDef:this.parsePointer(ae.classDef),lookaheadClassDef:this.parsePointer(ae.classDef),chainClassSet:this.parseListOfLists(function(){return{backtrack:this.parseUShortList(),input:this.parseUShortList(this.parseShort()-1),lookahead:this.parseUShortList(),lookupRecords:this.parseRecordList(lt)}})}:3===t?{substFormat:3,backtrackCoverage:this.parseList(ae.pointer(ae.coverage)),inputCoverage:this.parseList(ae.pointer(ae.coverage)),lookaheadCoverage:this.parseList(ae.pointer(ae.coverage)),lookupRecords:this.parseRecordList(lt)}:void P.assert(!1,"0x"+e.toString(16)+": lookup type 6 format must be 1, 2 or 3.")},st[7]=function(){var e=this.parseUShort();P.argument(1===e,"GSUB Extension Substitution subtable identifier-format must be 1");var t=this.parseUShort(),r=new ae(this.data,this.offset+this.parseULong());return{substFormat:1,lookupType:t,extension:st[t].call(r)}},st[8]=function(){var e=this.parseUShort();return P.argument(1===e,"GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1"),{substFormat:e,coverage:this.parsePointer(ae.coverage),backtrackCoverage:this.parseList(ae.pointer(ae.coverage)),lookaheadCoverage:this.parseList(ae.pointer(ae.coverage)),substitutes:this.parseUShortList()}};var ut=new Array(9);ut[1]=function(e){return 1===e.substFormat?new $.Table("substitutionTable",[{name:"substFormat",type:"USHORT",value:1},{name:"coverage",type:"TABLE",value:new $.Coverage(e.coverage)},{name:"deltaGlyphID",type:"USHORT",value:e.deltaGlyphId}]):new $.Table("substitutionTable",[{name:"substFormat",type:"USHORT",value:2},{name:"coverage",type:"TABLE",value:new $.Coverage(e.coverage)}].concat($.ushortList("substitute",e.substitute)))},ut[3]=function(e){return P.assert(1===e.substFormat,"Lookup type 3 substFormat must be 1."),new $.Table("substitutionTable",[{name:"substFormat",type:"USHORT",value:1},{name:"coverage",type:"TABLE",value:new $.Coverage(e.coverage)}].concat($.tableList("altSet",e.alternateSets,function(e){return new $.Table("alternateSetTable",$.ushortList("alternate",e))})))},ut[4]=function(e){return P.assert(1===e.substFormat,"Lookup type 4 substFormat must be 1."),new $.Table("substitutionTable",[{name:"substFormat",type:"USHORT",value:1},{name:"coverage",type:"TABLE",value:new $.Coverage(e.coverage)}].concat($.tableList("ligSet",e.ligatureSets,function(e){return new $.Table("ligatureSetTable",$.tableList("ligature",e,function(e){return new $.Table("ligatureTable",[{name:"ligGlyph",type:"USHORT",value:e.ligGlyph}].concat($.ushortList("component",e.components,e.components.length+1)))}))})))};var ht={parse:function(e,t){var r=new ae(e,t=t||0),i=r.parseVersion(1);return P.argument(1===i||1.1===i,"Unsupported GSUB table version."),1===i?{version:i,scripts:r.parseScriptList(),features:r.parseFeatureList(),lookups:r.parseLookupList(st)}:{version:i,scripts:r.parseScriptList(),features:r.parseFeatureList(),lookups:r.parseLookupList(st),variations:r.parseFeatureVariationsList()}},make:function(e){return new $.Table("GSUB",[{name:"version",type:"ULONG",value:65536},{name:"scripts",type:"TABLE",value:new $.ScriptList(e.scripts)},{name:"features",type:"TABLE",value:new $.FeatureList(e.features)},{name:"lookups",type:"TABLE",value:new $.LookupList(e.lookups,ut)}])}};var ct={parse:function(e,t){var r=new se.Parser(e,t),i=r.parseULong();P.argument(1===i,"Unsupported META table version."),r.parseULong(),r.parseULong();for(var n=r.parseULong(),a={},o=0;o<n;o++){var s=r.parseTag(),l=r.parseULong(),u=r.parseULong(),h=D.UTF8(e,t+l,u);a[s]=h}return a},make:function(e){var t=Object.keys(e).length,r="",i=16+12*t,n=new $.Table("meta",[{name:"version",type:"ULONG",value:1},{name:"flags",type:"ULONG",value:0},{name:"offset",type:"ULONG",value:i},{name:"numTags",type:"ULONG",value:t}]);for(var a in e){var o=r.length;r+=e[a],n.fields.push({name:"tag "+a,type:"TAG",value:a}),n.fields.push({name:"offset "+a,type:"ULONG",value:i+o}),n.fields.push({name:"length "+a,type:"ULONG",value:e[a].length})}return n.fields.push({name:"stringPool",type:"CHARARRAY",value:r}),n}};function ft(e){return Math.log(e)/Math.log(2)|0}function dt(e){for(;e.length%4!=0;)e.push(0);for(var t=0,r=0;r<e.length;r+=4)t+=(e[r]<<24)+(e[r+1]<<16)+(e[r+2]<<8)+e[r+3];return t%=Math.pow(2,32)}function pt(e,t,r,i){return new $.Record("Table Record",[{name:"tag",type:"TAG",value:void 0!==e?e:""},{name:"checkSum",type:"ULONG",value:void 0!==t?t:0},{name:"offset",type:"ULONG",value:void 0!==r?r:0},{name:"length",type:"ULONG",value:void 0!==i?i:0}])}function mt(e){var t=new $.Table("sfnt",[{name:"version",type:"TAG",value:"OTTO"},{name:"numTables",type:"USHORT",value:0},{name:"searchRange",type:"USHORT",value:0},{name:"entrySelector",type:"USHORT",value:0},{name:"rangeShift",type:"USHORT",value:0}]);t.tables=e,t.numTables=e.length;var r=Math.pow(2,ft(t.numTables));t.searchRange=16*r,t.entrySelector=ft(r),t.rangeShift=16*t.numTables-t.searchRange;for(var i=[],n=[],a=t.sizeOf()+pt().sizeOf()*t.numTables;a%4!=0;)a+=1,n.push({name:"padding",type:"BYTE",value:0});for(var o=0;o<e.length;o+=1){var s=e[o];P.argument(4===s.tableName.length,"Table name"+s.tableName+" is invalid.");var l=s.sizeOf(),u=pt(s.tableName,dt(s.encode()),a,l);for(i.push({name:u.tag+" Table Record",type:"RECORD",value:u}),n.push({name:s.tableName+" table",type:"RECORD",value:s}),a+=l,P.argument(!isNaN(a),"Something went wrong calculating the offset.");a%4!=0;)a+=1,n.push({name:"padding",type:"BYTE",value:0})}return i.sort(function(e,t){return e.value.tag>t.value.tag?1:-1}),t.fields=t.fields.concat(i),t.fields=t.fields.concat(n),t}function vt(e,t,r){for(var i=0;i<t.length;i+=1){var n=e.charToGlyphIndex(t[i]);if(0<n)return e.glyphs.get(n).getMetrics()}return r}var yt={make:mt,fontToTable:function(e){for(var t,r=[],i=[],n=[],a=[],o=[],s=[],l=[],u=0,h=0,c=0,f=0,d=0,p=0;p<e.glyphs.length;p+=1){var m=e.glyphs.get(p),v=0|m.unicode;if(isNaN(m.advanceWidth))throw new Error("Glyph "+m.name+" ("+p+"): advanceWidth is not a number.");(v<t||void 0===t)&&0<v&&(t=v),u<v&&(u=v);var y=at.getUnicodeRange(v);if(y<32)h|=1<<y;else if(y<64)c|=1<<y-32;else if(y<96)f|=1<<y-64;else{if(!(y<123))throw new Error("Unicode ranges bits > 123 are reserved for internal usage");d|=1<<y-96}if(".notdef"!==m.name){var g=m.getMetrics();r.push(g.xMin),i.push(g.yMin),n.push(g.xMax),a.push(g.yMax),s.push(g.leftSideBearing),l.push(g.rightSideBearing),o.push(m.advanceWidth)}}var b={xMin:Math.min.apply(null,r),yMin:Math.min.apply(null,i),xMax:Math.max.apply(null,n),yMax:Math.max.apply(null,a),advanceWidthMax:Math.max.apply(null,o),advanceWidthAvg:function(e){for(var t=0,r=0;r<e.length;r+=1)t+=e[r];return t/e.length}(o),minLeftSideBearing:Math.min.apply(null,s),maxLeftSideBearing:Math.max.apply(null,s),minRightSideBearing:Math.min.apply(null,l)};b.ascender=e.ascender,b.descender=e.descender;var _=Ge.make({flags:3,unitsPerEm:e.unitsPerEm,xMin:b.xMin,yMin:b.yMin,xMax:b.xMax,yMax:b.yMax,lowestRecPPEM:3,createdTimestamp:e.createdTimestamp}),x=je.make({ascender:b.ascender,descender:b.descender,advanceWidthMax:b.advanceWidthMax,minLeftSideBearing:b.minLeftSideBearing,minRightSideBearing:b.minRightSideBearing,xMaxExtent:b.maxLeftSideBearing+(b.xMax-b.xMin),numberOfHMetrics:e.glyphs.length}),w=He.make(e.glyphs.length),S=at.make({xAvgCharWidth:Math.round(b.advanceWidthAvg),usWeightClass:e.tables.os2.usWeightClass,usWidthClass:e.tables.os2.usWidthClass,usFirstCharIndex:t,usLastCharIndex:u,ulUnicodeRange1:h,ulUnicodeRange2:c,ulUnicodeRange3:f,ulUnicodeRange4:d,fsSelection:e.tables.os2.fsSelection,sTypoAscender:b.ascender,sTypoDescender:b.descender,sTypoLineGap:0,usWinAscent:b.yMax,usWinDescent:Math.abs(b.yMin),ulCodePageRange1:1,sxHeight:vt(e,"xyvw",{yMax:Math.round(b.ascender/2)}).yMax,sCapHeight:vt(e,"HIKLEFJMNTZBDPRAGOQSUVWXY",b).yMax,usDefaultChar:e.hasChar(" ")?32:0,usBreakChar:e.hasChar(" ")?32:0}),M=Ve.make(e.glyphs),T=le.make(e.glyphs),E=e.getEnglishName("fontFamily"),C=e.getEnglishName("fontSubfamily"),L=E+" "+C,O=e.getEnglishName("postScriptName");O=O||E.replace(/\s/g,"")+"-"+C;var P={};for(var R in e.names)P[R]=e.names[R];P.uniqueID||(P.uniqueID={en:e.getEnglishName("manufacturer")+":"+L}),P.postScriptName||(P.postScriptName={en:O}),P.preferredFamily||(P.preferredFamily=e.names.fontFamily),P.preferredSubfamily||(P.preferredSubfamily=e.names.fontSubfamily);var D=[],k=it.make(P,D),A=0<D.length?ze.make(D):void 0,I=ot.make(),U=Be.make(e.glyphs,{version:e.getEnglishName("version"),fullName:L,familyName:E,weightName:C,postScriptName:O,unitsPerEm:e.unitsPerEm,fontBBox:[0,b.yMin,b.ascender,b.advanceWidthMax]}),N=e.metas&&0<Object.keys(e.metas).length?ct.make(e.metas):void 0,F=[_,x,w,S,k,T,I,U,M];A&&F.push(A),e.tables.gsub&&F.push(ht.make(e.tables.gsub)),N&&F.push(N);for(var B=mt(F),G=dt(B.encode()),j=B.fields,V=!1,z=0;z<j.length;z+=1)if("head table"===j[z].name){j[z].value.checkSumAdjustment=2981146554-G,V=!0;break}if(!V)throw new Error("Could not find head table with checkSum to adjust.");return B},computeCheckSum:dt};function gt(e,t){for(var r=0,i=e.length-1;r<=i;){var n=r+i>>>1,a=e[n].tag;if(a===t)return n;a<t?r=1+n:i=n-1}return-r-1}function bt(e,t){for(var r=0,i=e.length-1;r<=i;){var n=r+i>>>1,a=e[n];if(a===t)return n;a<t?r=1+n:i=n-1}return-r-1}function _t(e,t){for(var r,i=0,n=e.length-1;i<=n;){var a=i+n>>>1,o=(r=e[a]).start;if(o===t)return r;o<t?i=1+a:n=a-1}if(0<i)return t>(r=e[i-1]).end?0:r}function xt(e,t){this.font=e,this.tableName=t}function wt(e){xt.call(this,e,"gpos")}function St(e){xt.call(this,e,"gsub")}function Mt(e,t){var r=e.length;if(r!==t.length)return!1;for(var i=0;i<r;i++)if(e[i]!==t[i])return!1;return!0}function Tt(e,t,r){for(var i=e.subtables,n=0;n<i.length;n++){var a=i[n];if(a.substFormat===t)return a}if(r)return i.push(r),r}function Et(e){for(var t=new ArrayBuffer(e.length),r=new Uint8Array(t),i=0;i<e.length;++i)r[i]=e[i];return t}function Ct(e,t){if(!e)throw t}function Lt(e,t,r,i,n){var a;return a=0<(t&i)?(a=e.parseByte(),0==(t&n)&&(a=-a),r+a):0<(t&n)?r:r+e.parseShort()}function Ot(e,t,r){var i,n,a=new se.Parser(t,r);if(e.numberOfContours=a.parseShort(),e._xMin=a.parseShort(),e._yMin=a.parseShort(),e._xMax=a.parseShort(),e._yMax=a.parseShort(),0<e.numberOfContours){for(var o=e.endPointIndices=[],s=0;s<e.numberOfContours;s+=1)o.push(a.parseUShort());e.instructionLength=a.parseUShort(),e.instructions=[];for(var l=0;l<e.instructionLength;l+=1)e.instructions.push(a.parseByte());var u=o[o.length-1]+1;i=[];for(var h=0;h<u;h+=1)if(n=a.parseByte(),i.push(n),0<(8&n))for(var c=a.parseByte(),f=0;f<c;f+=1)i.push(n),h+=1;if(P.argument(i.length===u,"Bad flags."),0<o.length){var d,p=[];if(0<u){for(var m=0;m<u;m+=1)n=i[m],(d={}).onCurve=!!(1&n),d.lastPointOfContour=0<=o.indexOf(m),p.push(d);for(var v=0,y=0;y<u;y+=1)n=i[y],(d=p[y]).x=Lt(a,n,v,2,16),v=d.x;for(var g=0,b=0;b<u;b+=1)n=i[b],(d=p[b]).y=Lt(a,n,g,4,32),g=d.y}e.points=p}else e.points=[]}else if(0===e.numberOfContours)e.points=[];else{e.isComposite=!0,e.points=[],e.components=[];for(var _=!0;_;){i=a.parseUShort();var x={glyphIndex:a.parseUShort(),xScale:1,scale01:0,scale10:0,yScale:1,dx:0,dy:0};0<(1&i)?0<(2&i)?(x.dx=a.parseShort(),x.dy=a.parseShort()):x.matchedPoints=[a.parseUShort(),a.parseUShort()]:0<(2&i)?(x.dx=a.parseChar(),x.dy=a.parseChar()):x.matchedPoints=[a.parseByte(),a.parseByte()],0<(8&i)?x.xScale=x.yScale=a.parseF2Dot14():0<(64&i)?(x.xScale=a.parseF2Dot14(),x.yScale=a.parseF2Dot14()):0<(128&i)&&(x.xScale=a.parseF2Dot14(),x.scale01=a.parseF2Dot14(),x.scale10=a.parseF2Dot14(),x.yScale=a.parseF2Dot14()),e.components.push(x),_=!!(32&i)}if(256&i){e.instructionLength=a.parseUShort(),e.instructions=[];for(var w=0;w<e.instructionLength;w+=1)e.instructions.push(a.parseByte())}}}function Pt(e,t){for(var r=[],i=0;i<e.length;i+=1){var n=e[i],a={x:t.xScale*n.x+t.scale01*n.y+t.dx,y:t.scale10*n.x+t.yScale*n.y+t.dy,onCurve:n.onCurve,lastPointOfContour:n.lastPointOfContour};r.push(a)}return r}function Rt(e){var t=new I;if(!e)return t;for(var r=function(e){for(var t=[],r=[],i=0;i<e.length;i+=1){var n=e[i];r.push(n),n.lastPointOfContour&&(t.push(r),r=[])}return P.argument(0===r.length,"There are still points left in the current contour."),t}(e),i=0;i<r.length;++i){var n=r[i],a=null,o=n[n.length-1],s=n[0];if(o.onCurve)t.moveTo(o.x,o.y);else if(s.onCurve)t.moveTo(s.x,s.y);else{var l={x:.5*(o.x+s.x),y:.5*(o.y+s.y)};t.moveTo(l.x,l.y)}for(var u=0;u<n.length;++u)if(a=o,o=s,s=n[(u+1)%n.length],o.onCurve)t.lineTo(o.x,o.y);else{var h=s;a.onCurve||{x:.5*(o.x+a.x),y:.5*(o.y+a.y)},s.onCurve||(h={x:.5*(o.x+s.x),y:.5*(o.y+s.y)}),t.quadraticCurveTo(o.x,o.y,h.x,h.y)}t.closePath()}return t}function Dt(e,t){if(t.isComposite)for(var r=0;r<t.components.length;r+=1){var i=t.components[r],n=e.get(i.glyphIndex);if(n.getPath(),n.points){var a=void 0;if(void 0===i.matchedPoints)a=Pt(n.points,i);else{if(i.matchedPoints[0]>t.points.length-1||i.matchedPoints[1]>n.points.length-1)throw Error("Matched points out of range in "+t.name);var o=t.points[i.matchedPoints[0]],s=n.points[i.matchedPoints[1]],l={xScale:i.xScale,scale01:i.scale01,scale10:i.scale10,yScale:i.yScale,dx:0,dy:0};s=Pt([s],l)[0],l.dx=o.x-s.x,l.dy=o.y-s.y,a=Pt(n.points,l)}t.points=t.points.concat(a)}}return Rt(t.points)}(wt.prototype=xt.prototype={searchTag:gt,binSearch:bt,getTable:function(e){var t=this.font.tables[this.tableName];return!t&&e&&(t=this.font.tables[this.tableName]=this.createDefaultTable()),t},getScriptNames:function(){var e=this.getTable();return e?e.scripts.map(function(e){return e.tag}):[]},getDefaultScriptName:function(){var e=this.getTable();if(e){for(var t=!1,r=0;r<e.scripts.length;r++){var i=e.scripts[r].tag;if("DFLT"===i)return i;"latn"===i&&(t=!0)}return t?"latn":void 0}},getScriptTable:function(e,t){var r=this.getTable(t);if(r){e=e||"DFLT";var i=r.scripts,n=gt(r.scripts,e);if(0<=n)return i[n].script;if(t){var a={tag:e,script:{defaultLangSys:{reserved:0,reqFeatureIndex:65535,featureIndexes:[]},langSysRecords:[]}};return i.splice(-1-n,0,a),a.script}}},getLangSysTable:function(e,t,r){var i=this.getScriptTable(e,r);if(i){if(!t||"dflt"===t||"DFLT"===t)return i.defaultLangSys;var n=gt(i.langSysRecords,t);if(0<=n)return i.langSysRecords[n].langSys;if(r){var a={tag:t,langSys:{reserved:0,reqFeatureIndex:65535,featureIndexes:[]}};return i.langSysRecords.splice(-1-n,0,a),a.langSys}}},getFeatureTable:function(e,t,r,i){var n=this.getLangSysTable(e,t,i);if(n){for(var a,o=n.featureIndexes,s=this.font.tables[this.tableName].features,l=0;l<o.length;l++)if((a=s[o[l]]).tag===r)return a.feature;if(i){var u=s.length;return P.assert(0===u||r>=s[u-1].tag,"Features must be added in alphabetical order."),a={tag:r,feature:{params:0,lookupListIndexes:[]}},s.push(a),o.push(u),a.feature}}},getLookupTables:function(e,t,r,i,n){var a=this.getFeatureTable(e,t,r,n),o=[];if(a){for(var s,l=a.lookupListIndexes,u=this.font.tables[this.tableName].lookups,h=0;h<l.length;h++)(s=u[l[h]]).lookupType===i&&o.push(s);if(0===o.length&&n){s={lookupType:i,lookupFlag:0,subtables:[],markFilteringSet:void 0};var c=u.length;return u.push(s),l.push(c),[s]}}return o},getGlyphClass:function(e,t){switch(e.format){case 1:return e.startGlyph<=t&&t<e.startGlyph+e.classes.length?e.classes[t-e.startGlyph]:0;case 2:var r=_t(e.ranges,t);return r?r.classId:0}},getCoverageIndex:function(e,t){switch(e.format){case 1:var r=bt(e.glyphs,t);return 0<=r?r:-1;case 2:var i=_t(e.ranges,t);return i?i.index+t-i.start:-1}},expandCoverage:function(e){if(1===e.format)return e.glyphs;for(var t=[],r=e.ranges,i=0;i<r.length;i++)for(var n=r[i],a=n.start,o=n.end,s=a;s<=o;s++)t.push(s);return t}}).init=function(){var e=this.getDefaultScriptName();this.defaultKerningTables=this.getKerningTables(e)},wt.prototype.getKerningValue=function(e,t,r){for(var i=0;i<e.length;i++)for(var n=e[i].subtables,a=0;a<n.length;a++){var o=n[a],s=this.getCoverageIndex(o.coverage,t);if(!(s<0))switch(o.posFormat){case 1:for(var l=o.pairSets[s],u=0;u<l.length;u++){var h=l[u];if(h.secondGlyph===r)return h.value1&&h.value1.xAdvance||0}break;case 2:var c=this.getGlyphClass(o.classDef1,t),f=this.getGlyphClass(o.classDef2,r),d=o.classRecords[c][f];return d.value1&&d.value1.xAdvance||0}}return 0},wt.prototype.getKerningTables=function(e,t){if(this.font.tables.gpos)return this.getLookupTables(e,t,"kern",2)},(St.prototype=xt.prototype).createDefaultTable=function(){return{version:1,scripts:[{tag:"DFLT",script:{defaultLangSys:{reserved:0,reqFeatureIndex:65535,featureIndexes:[]},langSysRecords:[]}}],features:[],lookups:[]}},St.prototype.getSingle=function(e,t,r){for(var i=[],n=this.getLookupTables(t,r,e,1),a=0;a<n.length;a++)for(var o=n[a].subtables,s=0;s<o.length;s++){var l=o[s],u=this.expandCoverage(l.coverage),h=void 0;if(1===l.substFormat){var c=l.deltaGlyphId;for(h=0;h<u.length;h++){var f=u[h];i.push({sub:f,by:f+c})}}else{var d=l.substitute;for(h=0;h<u.length;h++)i.push({sub:u[h],by:d[h]})}}return i},St.prototype.getAlternates=function(e,t,r){for(var i=[],n=this.getLookupTables(t,r,e,3),a=0;a<n.length;a++)for(var o=n[a].subtables,s=0;s<o.length;s++)for(var l=o[s],u=this.expandCoverage(l.coverage),h=l.alternateSets,c=0;c<u.length;c++)i.push({sub:u[c],by:h[c]});return i},St.prototype.getLigatures=function(e,t,r){for(var i=[],n=this.getLookupTables(t,r,e,4),a=0;a<n.length;a++)for(var o=n[a].subtables,s=0;s<o.length;s++)for(var l=o[s],u=this.expandCoverage(l.coverage),h=l.ligatureSets,c=0;c<u.length;c++)for(var f=u[c],d=h[c],p=0;p<d.length;p++){var m=d[p];i.push({sub:[f].concat(m.components),by:m.ligGlyph})}return i},St.prototype.addSingle=function(e,t,r,i){var n=Tt(this.getLookupTables(r,i,e,1,!0)[0],2,{substFormat:2,coverage:{format:1,glyphs:[]},substitute:[]});P.assert(1===n.coverage.format,"Ligature: unable to modify coverage table format "+n.coverage.format);var a=t.sub,o=this.binSearch(n.coverage.glyphs,a);o<0&&(o=-1-o,n.coverage.glyphs.splice(o,0,a),n.substitute.splice(o,0,0)),n.substitute[o]=t.by},St.prototype.addAlternate=function(e,t,r,i){var n=Tt(this.getLookupTables(r,i,e,3,!0)[0],1,{substFormat:1,coverage:{format:1,glyphs:[]},alternateSets:[]});P.assert(1===n.coverage.format,"Ligature: unable to modify coverage table format "+n.coverage.format);var a=t.sub,o=this.binSearch(n.coverage.glyphs,a);o<0&&(o=-1-o,n.coverage.glyphs.splice(o,0,a),n.alternateSets.splice(o,0,0)),n.alternateSets[o]=t.by},St.prototype.addLigature=function(e,t,r,i){var n=this.getLookupTables(r,i,e,4,!0)[0],a=n.subtables[0];a||(a={substFormat:1,coverage:{format:1,glyphs:[]},ligatureSets:[]},n.subtables[0]=a),P.assert(1===a.coverage.format,"Ligature: unable to modify coverage table format "+a.coverage.format);var o=t.sub[0],s=t.sub.slice(1),l={ligGlyph:t.by,components:s},u=this.binSearch(a.coverage.glyphs,o);if(0<=u){for(var h=a.ligatureSets[u],c=0;c<h.length;c++)if(Mt(h[c].components,s))return;h.push(l)}else u=-1-u,a.coverage.glyphs.splice(u,0,o),a.ligatureSets.splice(u,0,[l])},St.prototype.getFeature=function(e,t,r){if(/ss\d\d/.test(e))return this.getSingle(e,t,r);switch(e){case"aalt":case"salt":return this.getSingle(e,t,r).concat(this.getAlternates(e,t,r));case"dlig":case"liga":case"rlig":return this.getLigatures(e,t,r)}},St.prototype.add=function(e,t,r,i){if(/ss\d\d/.test(e))return this.addSingle(e,t,r,i);switch(e){case"aalt":case"salt":return"number"==typeof t.by?this.addSingle(e,t,r,i):this.addAlternate(e,t,r,i);case"dlig":case"liga":case"rlig":return this.addLigature(e,t,r,i)}};var kt,At,It,Ut,Nt={getPath:Rt,parse:function(e,t,r,i){for(var n=new xe.GlyphSet(i),a=0;a<r.length-1;a+=1){var o=r[a];o!==r[a+1]?n.push(a,xe.ttfGlyphLoader(i,a,Ot,e,t+o,Dt)):n.push(a,xe.glyphLoader(i,a))}return n}};function Ft(e){this.font=e,this.getCommands=function(e){return Nt.getPath(e).commands},this._fpgmState=this._prepState=void 0,this._errorState=0}function Bt(e){return e}function Gt(e){return Math.sign(e)*Math.round(Math.abs(e))}function jt(e){return Math.sign(e)*Math.round(Math.abs(2*e))/2}function Vt(e){return Math.sign(e)*(Math.round(Math.abs(e)+.5)-.5)}function zt(e){return Math.sign(e)*Math.ceil(Math.abs(e))}function Ht(e){return Math.sign(e)*Math.floor(Math.abs(e))}function Wt(e){var t=this.srPeriod,r=this.srPhase,i=1;return e<0&&(e=-e,i=-1),e+=this.srThreshold-r,e=Math.trunc(e/t)*t,(e+=r)<0?r*i:e*i}var qt={x:1,y:0,axis:"x",distance:function(e,t,r,i){return(r?e.xo:e.x)-(i?t.xo:t.x)},interpolate:function(e,t,r,i){var n,a,o,s,l,u,h;if(!i||i===this)return n=e.xo-t.xo,a=e.xo-r.xo,l=t.x-t.xo,u=r.x-r.xo,0===(h=(o=Math.abs(n))+(s=Math.abs(a)))?void(e.x=e.xo+(l+u)/2):void(e.x=e.xo+(l*s+u*o)/h);n=i.distance(e,t,!0,!0),a=i.distance(e,r,!0,!0),l=i.distance(t,t,!1,!0),u=i.distance(r,r,!1,!0),0!==(h=(o=Math.abs(n))+(s=Math.abs(a)))?qt.setRelative(e,e,(l*s+u*o)/h,i,!0):qt.setRelative(e,e,(l+u)/2,i,!0)},normalSlope:Number.NEGATIVE_INFINITY,setRelative:function(e,t,r,i,n){if(i&&i!==this){var a=n?t.xo:t.x,o=n?t.yo:t.y,s=a+r*i.x,l=o+r*i.y;e.x=s+(e.y-l)/i.normalSlope}else e.x=(n?t.xo:t.x)+r},slope:0,touch:function(e){e.xTouched=!0},touched:function(e){return e.xTouched},untouch:function(e){e.xTouched=!1}},Xt={x:0,y:1,axis:"y",distance:function(e,t,r,i){return(r?e.yo:e.y)-(i?t.yo:t.y)},interpolate:function(e,t,r,i){var n,a,o,s,l,u,h;if(!i||i===this)return n=e.yo-t.yo,a=e.yo-r.yo,l=t.y-t.yo,u=r.y-r.yo,0===(h=(o=Math.abs(n))+(s=Math.abs(a)))?void(e.y=e.yo+(l+u)/2):void(e.y=e.yo+(l*s+u*o)/h);n=i.distance(e,t,!0,!0),a=i.distance(e,r,!0,!0),l=i.distance(t,t,!1,!0),u=i.distance(r,r,!1,!0),0!==(h=(o=Math.abs(n))+(s=Math.abs(a)))?Xt.setRelative(e,e,(l*s+u*o)/h,i,!0):Xt.setRelative(e,e,(l+u)/2,i,!0)},normalSlope:0,setRelative:function(e,t,r,i,n){if(i&&i!==this){var a=n?t.xo:t.x,o=n?t.yo:t.y,s=a+r*i.x,l=o+r*i.y;e.y=l+i.normalSlope*(e.x-s)}else e.y=(n?t.yo:t.y)+r},slope:Number.POSITIVE_INFINITY,touch:function(e){e.yTouched=!0},touched:function(e){return e.yTouched},untouch:function(e){e.yTouched=!1}};function Yt(e,t){this.x=e,this.y=t,this.axis=void 0,this.slope=t/e,this.normalSlope=-e/t,Object.freeze(this)}function Zt(e,t){var r=Math.sqrt(e*e+t*t);return t/=r,1===(e/=r)&&0===t?qt:0===e&&1===t?Xt:new Yt(e,t)}function Qt(e,t,r,i){this.x=this.xo=Math.round(64*e)/64,this.y=this.yo=Math.round(64*t)/64,this.lastPointOfContour=r,this.onCurve=i,this.prevPointOnContour=void 0,this.nextPointOnContour=void 0,this.xTouched=!1,this.yTouched=!1,Object.preventExtensions(this)}Object.freeze(qt),Object.freeze(Xt),Yt.prototype.distance=function(e,t,r,i){return this.x*qt.distance(e,t,r,i)+this.y*Xt.distance(e,t,r,i)},Yt.prototype.interpolate=function(e,t,r,i){var n,a,o,s,l,u,h;o=i.distance(e,t,!0,!0),s=i.distance(e,r,!0,!0),n=i.distance(t,t,!1,!0),a=i.distance(r,r,!1,!0),0!==(h=(l=Math.abs(o))+(u=Math.abs(s)))?this.setRelative(e,e,(n*u+a*l)/h,i,!0):this.setRelative(e,e,(n+a)/2,i,!0)},Yt.prototype.setRelative=function(e,t,r,i,n){i=i||this;var a=n?t.xo:t.x,o=n?t.yo:t.y,s=a+r*i.x,l=o+r*i.y,u=i.normalSlope,h=this.slope,c=e.x,f=e.y;e.x=(h*c-u*s+l-f)/(h-u),e.y=h*(e.x-c)+f},Yt.prototype.touch=function(e){e.xTouched=!0,e.yTouched=!0},Qt.prototype.nextTouched=function(e){for(var t=this.nextPointOnContour;!e.touched(t)&&t!==this;)t=t.nextPointOnContour;return t},Qt.prototype.prevTouched=function(e){for(var t=this.prevPointOnContour;!e.touched(t)&&t!==this;)t=t.prevPointOnContour;return t};var Kt=Object.freeze(new Qt(0,0)),Jt={cvCutIn:17/16,deltaBase:9,deltaShift:.125,loop:1,minDis:1,autoFlip:!0};function $t(e,t){switch(this.env=e,this.stack=[],this.prog=t,e){case"glyf":this.zp0=this.zp1=this.zp2=1,this.rp0=this.rp1=this.rp2=0;case"prep":this.fv=this.pv=this.dpv=qt,this.round=Gt}}function er(e){for(var t=e.tZone=new Array(e.gZone.length),r=0;r<t.length;r++)t[r]=new Qt(0,0)}function tr(e,t){var r,i=e.prog,n=e.ip,a=1;do{if(88===(r=i[++n]))a++;else if(89===r)a--;else if(64===r)n+=i[n+1]+1;else if(65===r)n+=2*i[n+1]+1;else if(176<=r&&r<=183)n+=r-176+1;else if(184<=r&&r<=191)n+=2*(r-184+1);else if(t&&1===a&&27===r)break}while(0<a);e.ip=n}function rr(e,t){T.DEBUG&&console.log(t.step,"SVTCA["+e.axis+"]"),t.fv=t.pv=t.dpv=e}function ir(e,t){T.DEBUG&&console.log(t.step,"SPVTCA["+e.axis+"]"),t.pv=t.dpv=e}function nr(e,t){T.DEBUG&&console.log(t.step,"SFVTCA["+e.axis+"]"),t.fv=e}function ar(e,t){var r,i,n=t.stack,a=n.pop(),o=n.pop(),s=t.z2[a],l=t.z1[o];T.DEBUG&&console.log("SPVTL["+e+"]",a,o),i=e?(r=s.y-l.y,l.x-s.x):(r=l.x-s.x,l.y-s.y),t.pv=t.dpv=Zt(r,i)}function or(e,t){var r,i,n=t.stack,a=n.pop(),o=n.pop(),s=t.z2[a],l=t.z1[o];T.DEBUG&&console.log("SFVTL["+e+"]",a,o),i=e?(r=s.y-l.y,l.x-s.x):(r=l.x-s.x,l.y-s.y),t.fv=Zt(r,i)}function sr(e){T.DEBUG&&console.log(e.step,"POP[]"),e.stack.pop()}function lr(e,t){var r=t.stack.pop(),i=t.z0[r],n=t.fv,a=t.pv;T.DEBUG&&console.log(t.step,"MDAP["+e+"]",r);var o=a.distance(i,Kt);e&&(o=t.round(o)),n.setRelative(i,Kt,o,a),n.touch(i),t.rp0=t.rp1=r}function ur(e,t){var r,i,n,a=t.z2,o=a.length-2;T.DEBUG&&console.log(t.step,"IUP["+e.axis+"]");for(var s=0;s<o;s++)r=a[s],e.touched(r)||(i=r.prevTouched(e))!==r&&(i===(n=r.nextTouched(e))&&e.setRelative(r,r,e.distance(i,i,!1,!0),e,!0),e.interpolate(r,i,n,e))}function hr(e,t){for(var r=t.stack,i=e?t.rp1:t.rp2,n=(e?t.z0:t.z1)[i],a=t.fv,o=t.pv,s=t.loop,l=t.z2;s--;){var u=r.pop(),h=l[u],c=o.distance(n,n,!1,!0);a.setRelative(h,h,c,o),a.touch(h),T.DEBUG&&console.log(t.step,(1<t.loop?"loop "+(t.loop-s)+": ":"")+"SHP["+(e?"rp1":"rp2")+"]",u)}t.loop=1}function cr(e,t){var r=t.stack,i=e?t.rp1:t.rp2,n=(e?t.z0:t.z1)[i],a=t.fv,o=t.pv,s=r.pop(),l=t.z2[t.contours[s]],u=l;T.DEBUG&&console.log(t.step,"SHC["+e+"]",s);for(var h=o.distance(n,n,!1,!0);u!==n&&a.setRelative(u,u,h,o),(u=u.nextPointOnContour)!==l;);}function fr(e,t){var r,i,n=t.stack,a=e?t.rp1:t.rp2,o=(e?t.z0:t.z1)[a],s=t.fv,l=t.pv,u=n.pop();switch(T.DEBUG&&console.log(t.step,"SHZ["+e+"]",u),u){case 0:r=t.tZone;break;case 1:r=t.gZone;break;default:throw new Error("Invalid zone")}for(var h=l.distance(o,o,!1,!0),c=r.length-2,f=0;f<c;f++)i=r[f],s.setRelative(i,i,h,l)}function dr(e,t){var r=t.stack,i=r.pop()/64,n=r.pop(),a=t.z1[n],o=t.z0[t.rp0],s=t.fv,l=t.pv;s.setRelative(a,o,i,l),s.touch(a),T.DEBUG&&console.log(t.step,"MSIRP["+e+"]",i,n),t.rp1=t.rp0,t.rp2=n,e&&(t.rp0=n)}function pr(e,t){var r=t.stack,i=r.pop(),n=r.pop(),a=t.z0[n],o=t.fv,s=t.pv,l=t.cvt[i];T.DEBUG&&console.log(t.step,"MIAP["+e+"]",i,"(",l,")",n);var u=s.distance(a,Kt);e&&(Math.abs(u-l)<t.cvCutIn&&(u=l),u=t.round(u)),o.setRelative(a,Kt,u,s),0===t.zp0&&(a.xo=a.x,a.yo=a.y),o.touch(a),t.rp0=t.rp1=n}function mr(e,t){var r=t.stack,i=r.pop(),n=t.z2[i];T.DEBUG&&console.log(t.step,"GC["+e+"]",i),r.push(64*t.dpv.distance(n,Kt,e,!1))}function vr(e,t){var r=t.stack,i=r.pop(),n=r.pop(),a=t.z1[i],o=t.z0[n],s=t.dpv.distance(o,a,e,e);T.DEBUG&&console.log(t.step,"MD["+e+"]",i,n,"->",s),t.stack.push(Math.round(64*s))}function yr(e,t){var r=t.stack,i=r.pop(),n=t.fv,a=t.pv,o=t.ppem,s=t.deltaBase+16*(e-1),l=t.deltaShift,u=t.z0;T.DEBUG&&console.log(t.step,"DELTAP["+e+"]",i,r);for(var h=0;h<i;h++){var c=r.pop(),f=r.pop();if(s+((240&f)>>4)===o){var d=(15&f)-8;0<=d&&d++,T.DEBUG&&console.log(t.step,"DELTAPFIX",c,"by",d*l);var p=u[c];n.setRelative(p,p,d*l,a)}}}function gr(e,t){var r=t.stack,i=r.pop();T.DEBUG&&console.log(t.step,"ROUND[]"),r.push(64*t.round(i/64))}function br(e,t){var r=t.stack,i=r.pop(),n=t.ppem,a=t.deltaBase+16*(e-1),o=t.deltaShift;T.DEBUG&&console.log(t.step,"DELTAC["+e+"]",i,r);for(var s=0;s<i;s++){var l=r.pop(),u=r.pop();if(a+((240&u)>>4)===n){var h=(15&u)-8;0<=h&&h++;var c=h*o;T.DEBUG&&console.log(t.step,"DELTACFIX",l,"by",c),t.cvt[l]+=c}}}function _r(e,t){var r,i,n=t.stack,a=n.pop(),o=n.pop(),s=t.z2[a],l=t.z1[o];T.DEBUG&&console.log(t.step,"SDPVTL["+e+"]",a,o),i=e?(r=s.y-l.y,l.x-s.x):(r=l.x-s.x,l.y-s.y),t.dpv=Zt(r,i)}function xr(e,t){var r=t.stack,i=t.prog,n=t.ip;T.DEBUG&&console.log(t.step,"PUSHB["+e+"]");for(var a=0;a<e;a++)r.push(i[++n]);t.ip=n}function wr(e,t){var r=t.ip,i=t.prog,n=t.stack;T.DEBUG&&console.log(t.ip,"PUSHW["+e+"]");for(var a=0;a<e;a++){var o=i[++r]<<8|i[++r];32768&o&&(o=-(1+(65535^o))),n.push(o)}t.ip=r}function Sr(e,t,r,i,n,a){var o,s,l,u,h=a.stack,c=e&&h.pop(),f=h.pop(),d=a.rp0,p=a.z0[d],m=a.z1[f],v=a.minDis,y=a.fv,g=a.dpv;l=0<=(s=o=g.distance(m,p,!0,!0))?1:-1,s=Math.abs(s),e&&(u=a.cvt[c],i&&Math.abs(s-u)<a.cvCutIn&&(s=u)),r&&s<v&&(s=v),i&&(s=a.round(s)),y.setRelative(m,p,l*s,g),y.touch(m),T.DEBUG&&console.log(a.step,(e?"MIRP[":"MDRP[")+(t?"M":"m")+(r?">":"_")+(i?"R":"_")+(0===n?"Gr":1===n?"Bl":2===n?"Wh":"")+"]",e?c+"("+a.cvt[c]+","+u+")":"",f,"(d =",o,"->",l*s,")"),a.rp1=a.rp0,a.rp2=f,t&&(a.rp0=f)}Ft.prototype.exec=function(e,t){if("number"!=typeof t)throw new Error("Point size is not a number!");if(!(2<this._errorState)){var r=this.font,i=this._prepState;if(!i||i.ppem!==t){var n=this._fpgmState;if(!n){$t.prototype=Jt,(n=this._fpgmState=new $t("fpgm",r.tables.fpgm)).funcs=[],n.font=r,T.DEBUG&&(console.log("---EXEC FPGM---"),n.step=-1);try{At(n)}catch(e){return console.log("Hinting error in FPGM:"+e),void(this._errorState=3)}}$t.prototype=n,(i=this._prepState=new $t("prep",r.tables.prep)).ppem=t;var a=r.tables.cvt;if(a)for(var o=i.cvt=new Array(a.length),s=t/r.unitsPerEm,l=0;l<a.length;l++)o[l]=a[l]*s;else i.cvt=[];T.DEBUG&&(console.log("---EXEC PREP---"),i.step=-1);try{At(i)}catch(e){this._errorState<2&&console.log("Hinting error in PREP:"+e),this._errorState=2}}if(!(1<this._errorState))try{return It(e,i)}catch(e){return this._errorState<1&&(console.log("Hinting error:"+e),console.log("Note: further hinting errors are silenced")),void(this._errorState=1)}}},It=function(e,t){var r,i,n,a=t.ppem/t.font.unitsPerEm,o=a,s=e.components;if($t.prototype=t,s){var l=t.font;i=[],r=[];for(var u=0;u<s.length;u++){var h=s[u],c=l.glyphs.get(h.glyphIndex);n=new $t("glyf",c.instructions),T.DEBUG&&(console.log("---EXEC COMP "+u+"---"),n.step=-1),Ut(c,n,a,o);for(var f=Math.round(h.dx*a),d=Math.round(h.dy*o),p=n.gZone,m=n.contours,v=0;v<p.length;v++){var y=p[v];y.xTouched=y.yTouched=!1,y.xo=y.x=y.x+f,y.yo=y.y=y.y+d}var g=i.length;i.push.apply(i,p);for(var b=0;b<m.length;b++)r.push(m[b]+g)}e.instructions&&!n.inhibitGridFit&&((n=new $t("glyf",e.instructions)).gZone=n.z0=n.z1=n.z2=i,n.contours=r,i.push(new Qt(0,0),new Qt(Math.round(e.advanceWidth*a),0)),T.DEBUG&&(console.log("---EXEC COMPOSITE---"),n.step=-1),At(n),i.length-=2)}else n=new $t("glyf",e.instructions),T.DEBUG&&(console.log("---EXEC GLYPH---"),n.step=-1),Ut(e,n,a,o),i=n.gZone;return i},Ut=function(e,t,r,i){for(var n,a,o,s=e.points||[],l=s.length,u=t.gZone=t.z0=t.z1=t.z2=[],h=t.contours=[],c=0;c<l;c++)n=s[c],u[c]=new Qt(n.x*r,n.y*i,n.lastPointOfContour,n.onCurve);for(var f=0;f<l;f++)n=u[f],a||(a=n,h.push(f)),n.lastPointOfContour?((n.nextPointOnContour=a).prevPointOnContour=n,a=void 0):(o=u[f+1],(n.nextPointOnContour=o).prevPointOnContour=n);if(!t.inhibitGridFit){if(T.DEBUG){console.log("PROCESSING GLYPH",t.stack);for(var d=0;d<l;d++)console.log(d,u[d].x,u[d].y)}if(u.push(new Qt(0,0),new Qt(Math.round(e.advanceWidth*r),0)),At(t),u.length-=2,T.DEBUG){console.log("FINISHED GLYPH",t.stack);for(var p=0;p<l;p++)console.log(p,u[p].x,u[p].y)}}},At=function(e){var t=e.prog;if(t){var r,i=t.length;for(e.ip=0;e.ip<i;e.ip++){if(T.DEBUG&&e.step++,!(r=kt[t[e.ip]]))throw new Error("unknown instruction: 0x"+Number(t[e.ip]).toString(16));r(e)}}},kt=[rr.bind(void 0,Xt),rr.bind(void 0,qt),ir.bind(void 0,Xt),ir.bind(void 0,qt),nr.bind(void 0,Xt),nr.bind(void 0,qt),ar.bind(void 0,0),ar.bind(void 0,1),or.bind(void 0,0),or.bind(void 0,1),function(e){var t=e.stack,r=t.pop(),i=t.pop();T.DEBUG&&console.log(e.step,"SPVFS[]",r,i),e.pv=e.dpv=Zt(i,r)},function(e){var t=e.stack,r=t.pop(),i=t.pop();T.DEBUG&&console.log(e.step,"SPVFS[]",r,i),e.fv=Zt(i,r)},function(e){var t=e.stack,r=e.pv;T.DEBUG&&console.log(e.step,"GPV[]"),t.push(16384*r.x),t.push(16384*r.y)},function(e){var t=e.stack,r=e.fv;T.DEBUG&&console.log(e.step,"GFV[]"),t.push(16384*r.x),t.push(16384*r.y)},function(e){e.fv=e.pv,T.DEBUG&&console.log(e.step,"SFVTPV[]")},function(e){var t=e.stack,r=t.pop(),i=t.pop(),n=t.pop(),a=t.pop(),o=t.pop(),s=e.z0,l=e.z1,u=s[r],h=s[i],c=l[n],f=l[a],d=e.z2[o];T.DEBUG&&console.log("ISECT[], ",r,i,n,a,o);var p=u.x,m=u.y,v=h.x,y=h.y,g=c.x,b=c.y,_=f.x,x=f.y,w=(p-v)*(b-x)-(m-y)*(g-_),S=p*y-m*v,M=g*x-b*_;d.x=(S*(g-_)-M*(p-v))/w,d.y=(S*(b-x)-M*(m-y))/w},function(e){e.rp0=e.stack.pop(),T.DEBUG&&console.log(e.step,"SRP0[]",e.rp0)},function(e){e.rp1=e.stack.pop(),T.DEBUG&&console.log(e.step,"SRP1[]",e.rp1)},function(e){e.rp2=e.stack.pop(),T.DEBUG&&console.log(e.step,"SRP2[]",e.rp2)},function(e){var t=e.stack.pop();switch(T.DEBUG&&console.log(e.step,"SZP0[]",t),e.zp0=t){case 0:e.tZone||er(e),e.z0=e.tZone;break;case 1:e.z0=e.gZone;break;default:throw new Error("Invalid zone pointer")}},function(e){var t=e.stack.pop();switch(T.DEBUG&&console.log(e.step,"SZP1[]",t),e.zp1=t){case 0:e.tZone||er(e),e.z1=e.tZone;break;case 1:e.z1=e.gZone;break;default:throw new Error("Invalid zone pointer")}},function(e){var t=e.stack.pop();switch(T.DEBUG&&console.log(e.step,"SZP2[]",t),e.zp2=t){case 0:e.tZone||er(e),e.z2=e.tZone;break;case 1:e.z2=e.gZone;break;default:throw new Error("Invalid zone pointer")}},function(e){var t=e.stack.pop();switch(T.DEBUG&&console.log(e.step,"SZPS[]",t),e.zp0=e.zp1=e.zp2=t,t){case 0:e.tZone||er(e),e.z0=e.z1=e.z2=e.tZone;break;case 1:e.z0=e.z1=e.z2=e.gZone;break;default:throw new Error("Invalid zone pointer")}},function(e){e.loop=e.stack.pop(),T.DEBUG&&console.log(e.step,"SLOOP[]",e.loop)},function(e){T.DEBUG&&console.log(e.step,"RTG[]"),e.round=Gt},function(e){T.DEBUG&&console.log(e.step,"RTHG[]"),e.round=Vt},function(e){var t=e.stack.pop();T.DEBUG&&console.log(e.step,"SMD[]",t),e.minDis=t/64},function(e){T.DEBUG&&console.log(e.step,"ELSE[]"),tr(e,!1)},function(e){var t=e.stack.pop();T.DEBUG&&console.log(e.step,"JMPR[]",t),e.ip+=t-1},function(e){var t=e.stack.pop();T.DEBUG&&console.log(e.step,"SCVTCI[]",t),e.cvCutIn=t/64},void 0,void 0,function(e){var t=e.stack;T.DEBUG&&console.log(e.step,"DUP[]"),t.push(t[t.length-1])},sr,function(e){T.DEBUG&&console.log(e.step,"CLEAR[]"),e.stack.length=0},function(e){var t=e.stack,r=t.pop(),i=t.pop();T.DEBUG&&console.log(e.step,"SWAP[]"),t.push(r),t.push(i)},function(e){var t=e.stack;T.DEBUG&&console.log(e.step,"DEPTH[]"),t.push(t.length)},function(e){var t=e.stack,r=t.pop();T.DEBUG&&console.log(e.step,"CINDEX[]",r),t.push(t[t.length-r])},function(e){var t=e.stack,r=t.pop();T.DEBUG&&console.log(e.step,"MINDEX[]",r),t.push(t.splice(t.length-r,1)[0])},void 0,void 0,void 0,function(e){var t=e.stack,r=t.pop(),i=t.pop();T.DEBUG&&console.log(e.step,"LOOPCALL[]",r,i);var n=e.ip,a=e.prog;e.prog=e.funcs[r];for(var o=0;o<i;o++)At(e),T.DEBUG&&console.log(++e.step,o+1<i?"next loopcall":"done loopcall",o);e.ip=n,e.prog=a},function(e){var t=e.stack.pop();T.DEBUG&&console.log(e.step,"CALL[]",t);var r=e.ip,i=e.prog;e.prog=e.funcs[t],At(e),e.ip=r,e.prog=i,T.DEBUG&&console.log(++e.step,"returning from",t)},function(e){if("fpgm"!==e.env)throw new Error("FDEF not allowed here");var t=e.stack,r=e.prog,i=e.ip,n=t.pop(),a=i;for(T.DEBUG&&console.log(e.step,"FDEF[]",n);45!==r[++i];);e.ip=i,e.funcs[n]=r.slice(a+1,i)},void 0,lr.bind(void 0,0),lr.bind(void 0,1),ur.bind(void 0,Xt),ur.bind(void 0,qt),hr.bind(void 0,0),hr.bind(void 0,1),cr.bind(void 0,0),cr.bind(void 0,1),fr.bind(void 0,0),fr.bind(void 0,1),function(e){for(var t=e.stack,r=e.loop,i=e.fv,n=t.pop()/64,a=e.z2;r--;){var o=t.pop(),s=a[o];T.DEBUG&&console.log(e.step,(1<e.loop?"loop "+(e.loop-r)+": ":"")+"SHPIX[]",o,n),i.setRelative(s,s,n),i.touch(s)}e.loop=1},function(e){for(var t=e.stack,r=e.rp1,i=e.rp2,n=e.loop,a=e.z0[r],o=e.z1[i],s=e.fv,l=e.dpv,u=e.z2;n--;){var h=t.pop(),c=u[h];T.DEBUG&&console.log(e.step,(1<e.loop?"loop "+(e.loop-n)+": ":"")+"IP[]",h,r,"<->",i),s.interpolate(c,a,o,l),s.touch(c)}e.loop=1},dr.bind(void 0,0),dr.bind(void 0,1),function(e){for(var t=e.stack,r=e.rp0,i=e.z0[r],n=e.loop,a=e.fv,o=e.pv,s=e.z1;n--;){var l=t.pop(),u=s[l];T.DEBUG&&console.log(e.step,(1<e.loop?"loop "+(e.loop-n)+": ":"")+"ALIGNRP[]",l),a.setRelative(u,i,0,o),a.touch(u)}e.loop=1},function(e){T.DEBUG&&console.log(e.step,"RTDG[]"),e.round=jt},pr.bind(void 0,0),pr.bind(void 0,1),function(e){var t=e.prog,r=e.ip,i=e.stack,n=t[++r];T.DEBUG&&console.log(e.step,"NPUSHB[]",n);for(var a=0;a<n;a++)i.push(t[++r]);e.ip=r},function(e){var t=e.ip,r=e.prog,i=e.stack,n=r[++t];T.DEBUG&&console.log(e.step,"NPUSHW[]",n);for(var a=0;a<n;a++){var o=r[++t]<<8|r[++t];32768&o&&(o=-(1+(65535^o))),i.push(o)}e.ip=t},function(e){var t=e.stack,r=e.store;r=r||(e.store=[]);var i=t.pop(),n=t.pop();T.DEBUG&&console.log(e.step,"WS",i,n),r[n]=i},function(e){var t=e.stack,r=e.store,i=t.pop();T.DEBUG&&console.log(e.step,"RS",i);var n=r&&r[i]||0;t.push(n)},function(e){var t=e.stack,r=t.pop(),i=t.pop();T.DEBUG&&console.log(e.step,"WCVTP",r,i),e.cvt[i]=r/64},function(e){var t=e.stack,r=t.pop();T.DEBUG&&console.log(e.step,"RCVT",r),t.push(64*e.cvt[r])},mr.bind(void 0,0),mr.bind(void 0,1),void 0,vr.bind(void 0,0),vr.bind(void 0,1),function(e){T.DEBUG&&console.log(e.step,"MPPEM[]"),e.stack.push(e.ppem)},void 0,function(e){T.DEBUG&&console.log(e.step,"FLIPON[]"),e.autoFlip=!0},void 0,void 0,function(e){var t=e.stack,r=t.pop(),i=t.pop();T.DEBUG&&console.log(e.step,"LT[]",r,i),t.push(i<r?1:0)},function(e){var t=e.stack,r=t.pop(),i=t.pop();T.DEBUG&&console.log(e.step,"LTEQ[]",r,i),t.push(i<=r?1:0)},function(e){var t=e.stack,r=t.pop(),i=t.pop();T.DEBUG&&console.log(e.step,"GT[]",r,i),t.push(r<i?1:0)},function(e){var t=e.stack,r=t.pop(),i=t.pop();T.DEBUG&&console.log(e.step,"GTEQ[]",r,i),t.push(r<=i?1:0)},function(e){var t=e.stack,r=t.pop(),i=t.pop();T.DEBUG&&console.log(e.step,"EQ[]",r,i),t.push(r===i?1:0)},function(e){var t=e.stack,r=t.pop(),i=t.pop();T.DEBUG&&console.log(e.step,"NEQ[]",r,i),t.push(r!==i?1:0)},function(e){var t=e.stack,r=t.pop();T.DEBUG&&console.log(e.step,"ODD[]",r),t.push(Math.trunc(r)%2?1:0)},function(e){var t=e.stack,r=t.pop();T.DEBUG&&console.log(e.step,"EVEN[]",r),t.push(Math.trunc(r)%2?0:1)},function(e){var t=e.stack.pop();T.DEBUG&&console.log(e.step,"IF[]",t),t||(tr(e,!0),T.DEBUG&&console.log(e.step,"EIF[]"))},function(e){T.DEBUG&&console.log(e.step,"EIF[]")},function(e){var t=e.stack,r=t.pop(),i=t.pop();T.DEBUG&&console.log(e.step,"AND[]",r,i),t.push(r&&i?1:0)},function(e){var t=e.stack,r=t.pop(),i=t.pop();T.DEBUG&&console.log(e.step,"OR[]",r,i),t.push(r||i?1:0)},function(e){var t=e.stack,r=t.pop();T.DEBUG&&console.log(e.step,"NOT[]",r),t.push(r?0:1)},yr.bind(void 0,1),function(e){var t=e.stack.pop();T.DEBUG&&console.log(e.step,"SDB[]",t),e.deltaBase=t},function(e){var t=e.stack.pop();T.DEBUG&&console.log(e.step,"SDS[]",t),e.deltaShift=Math.pow(.5,t)},function(e){var t=e.stack,r=t.pop(),i=t.pop();T.DEBUG&&console.log(e.step,"ADD[]",r,i),t.push(i+r)},function(e){var t=e.stack,r=t.pop(),i=t.pop();T.DEBUG&&console.log(e.step,"SUB[]",r,i),t.push(i-r)},function(e){var t=e.stack,r=t.pop(),i=t.pop();T.DEBUG&&console.log(e.step,"DIV[]",r,i),t.push(64*i/r)},function(e){var t=e.stack,r=t.pop(),i=t.pop();T.DEBUG&&console.log(e.step,"MUL[]",r,i),t.push(i*r/64)},function(e){var t=e.stack,r=t.pop();T.DEBUG&&console.log(e.step,"ABS[]",r),t.push(Math.abs(r))},function(e){var t=e.stack,r=t.pop();T.DEBUG&&console.log(e.step,"NEG[]",r),t.push(-r)},function(e){var t=e.stack,r=t.pop();T.DEBUG&&console.log(e.step,"FLOOR[]",r),t.push(64*Math.floor(r/64))},function(e){var t=e.stack,r=t.pop();T.DEBUG&&console.log(e.step,"CEILING[]",r),t.push(64*Math.ceil(r/64))},gr.bind(void 0,0),gr.bind(void 0,1),gr.bind(void 0,2),gr.bind(void 0,3),void 0,void 0,void 0,void 0,function(e){var t=e.stack,r=t.pop(),i=t.pop();T.DEBUG&&console.log(e.step,"WCVTF[]",r,i),e.cvt[i]=r*e.ppem/e.font.unitsPerEm},yr.bind(void 0,2),yr.bind(void 0,3),br.bind(void 0,1),br.bind(void 0,2),br.bind(void 0,3),function(e){var t,r=e.stack.pop();switch(T.DEBUG&&console.log(e.step,"SROUND[]",r),e.round=Wt,192&r){case 0:t=.5;break;case 64:t=1;break;case 128:t=2;break;default:throw new Error("invalid SROUND value")}switch(e.srPeriod=t,48&r){case 0:e.srPhase=0;break;case 16:e.srPhase=.25*t;break;case 32:e.srPhase=.5*t;break;case 48:e.srPhase=.75*t;break;default:throw new Error("invalid SROUND value")}r&=15,e.srThreshold=0===r?0:(r/8-.5)*t},function(e){var t,r=e.stack.pop();switch(T.DEBUG&&console.log(e.step,"S45ROUND[]",r),e.round=Wt,192&r){case 0:t=Math.sqrt(2)/2;break;case 64:t=Math.sqrt(2);break;case 128:t=2*Math.sqrt(2);break;default:throw new Error("invalid S45ROUND value")}switch(e.srPeriod=t,48&r){case 0:e.srPhase=0;break;case 16:e.srPhase=.25*t;break;case 32:e.srPhase=.5*t;break;case 48:e.srPhase=.75*t;break;default:throw new Error("invalid S45ROUND value")}r&=15,e.srThreshold=0===r?0:(r/8-.5)*t},void 0,void 0,function(e){T.DEBUG&&console.log(e.step,"ROFF[]"),e.round=Bt},void 0,function(e){T.DEBUG&&console.log(e.step,"RUTG[]"),e.round=zt},function(e){T.DEBUG&&console.log(e.step,"RDTG[]"),e.round=Ht},sr,sr,void 0,void 0,void 0,void 0,void 0,function(e){var t=e.stack.pop();T.DEBUG&&console.log(e.step,"SCANCTRL[]",t)},_r.bind(void 0,0),_r.bind(void 0,1),function(e){var t=e.stack,r=t.pop(),i=0;T.DEBUG&&console.log(e.step,"GETINFO[]",r),1&r&&(i=35),32&r&&(i|=4096),t.push(i)},void 0,function(e){var t=e.stack,r=t.pop(),i=t.pop(),n=t.pop();T.DEBUG&&console.log(e.step,"ROLL[]"),t.push(i),t.push(r),t.push(n)},function(e){var t=e.stack,r=t.pop(),i=t.pop();T.DEBUG&&console.log(e.step,"MAX[]",r,i),t.push(Math.max(i,r))},function(e){var t=e.stack,r=t.pop(),i=t.pop();T.DEBUG&&console.log(e.step,"MIN[]",r,i),t.push(Math.min(i,r))},function(e){var t=e.stack.pop();T.DEBUG&&console.log(e.step,"SCANTYPE[]",t)},function(e){var t=e.stack.pop(),r=e.stack.pop();switch(T.DEBUG&&console.log(e.step,"INSTCTRL[]",t,r),t){case 1:return void(e.inhibitGridFit=!!r);case 2:return void(e.ignoreCvt=!!r);default:throw new Error("invalid INSTCTRL[] selector")}},void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,xr.bind(void 0,1),xr.bind(void 0,2),xr.bind(void 0,3),xr.bind(void 0,4),xr.bind(void 0,5),xr.bind(void 0,6),xr.bind(void 0,7),xr.bind(void 0,8),wr.bind(void 0,1),wr.bind(void 0,2),wr.bind(void 0,3),wr.bind(void 0,4),wr.bind(void 0,5),wr.bind(void 0,6),wr.bind(void 0,7),wr.bind(void 0,8),Sr.bind(void 0,0,0,0,0,0),Sr.bind(void 0,0,0,0,0,1),Sr.bind(void 0,0,0,0,0,2),Sr.bind(void 0,0,0,0,0,3),Sr.bind(void 0,0,0,0,1,0),Sr.bind(void 0,0,0,0,1,1),Sr.bind(void 0,0,0,0,1,2),Sr.bind(void 0,0,0,0,1,3),Sr.bind(void 0,0,0,1,0,0),Sr.bind(void 0,0,0,1,0,1),Sr.bind(void 0,0,0,1,0,2),Sr.bind(void 0,0,0,1,0,3),Sr.bind(void 0,0,0,1,1,0),Sr.bind(void 0,0,0,1,1,1),Sr.bind(void 0,0,0,1,1,2),Sr.bind(void 0,0,0,1,1,3),Sr.bind(void 0,0,1,0,0,0),Sr.bind(void 0,0,1,0,0,1),Sr.bind(void 0,0,1,0,0,2),Sr.bind(void 0,0,1,0,0,3),Sr.bind(void 0,0,1,0,1,0),Sr.bind(void 0,0,1,0,1,1),Sr.bind(void 0,0,1,0,1,2),Sr.bind(void 0,0,1,0,1,3),Sr.bind(void 0,0,1,1,0,0),Sr.bind(void 0,0,1,1,0,1),Sr.bind(void 0,0,1,1,0,2),Sr.bind(void 0,0,1,1,0,3),Sr.bind(void 0,0,1,1,1,0),Sr.bind(void 0,0,1,1,1,1),Sr.bind(void 0,0,1,1,1,2),Sr.bind(void 0,0,1,1,1,3),Sr.bind(void 0,1,0,0,0,0),Sr.bind(void 0,1,0,0,0,1),Sr.bind(void 0,1,0,0,0,2),Sr.bind(void 0,1,0,0,0,3),Sr.bind(void 0,1,0,0,1,0),Sr.bind(void 0,1,0,0,1,1),Sr.bind(void 0,1,0,0,1,2),Sr.bind(void 0,1,0,0,1,3),Sr.bind(void 0,1,0,1,0,0),Sr.bind(void 0,1,0,1,0,1),Sr.bind(void 0,1,0,1,0,2),Sr.bind(void 0,1,0,1,0,3),Sr.bind(void 0,1,0,1,1,0),Sr.bind(void 0,1,0,1,1,1),Sr.bind(void 0,1,0,1,1,2),Sr.bind(void 0,1,0,1,1,3),Sr.bind(void 0,1,1,0,0,0),Sr.bind(void 0,1,1,0,0,1),Sr.bind(void 0,1,1,0,0,2),Sr.bind(void 0,1,1,0,0,3),Sr.bind(void 0,1,1,0,1,0),Sr.bind(void 0,1,1,0,1,1),Sr.bind(void 0,1,1,0,1,2),Sr.bind(void 0,1,1,0,1,3),Sr.bind(void 0,1,1,1,0,0),Sr.bind(void 0,1,1,1,0,1),Sr.bind(void 0,1,1,1,0,2),Sr.bind(void 0,1,1,1,0,3),Sr.bind(void 0,1,1,1,1,0),Sr.bind(void 0,1,1,1,1,1),Sr.bind(void 0,1,1,1,1,2),Sr.bind(void 0,1,1,1,1,3)];var Mr=Array.from||function(e){return e.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]?|[^\uD800-\uDFFF]|./g)||[]};function Tr(e){(e=e||{}).empty||(Ct(e.familyName,"When creating a new Font object, familyName is required."),Ct(e.styleName,"When creating a new Font object, styleName is required."),Ct(e.unitsPerEm,"When creating a new Font object, unitsPerEm is required."),Ct(e.ascender,"When creating a new Font object, ascender is required."),Ct(e.descender,"When creating a new Font object, descender is required."),Ct(e.descender<0,"Descender should be negative (e.g. -512)."),this.names={fontFamily:{en:e.familyName||" "},fontSubfamily:{en:e.styleName||" "},fullName:{en:e.fullName||e.familyName+" "+e.styleName},postScriptName:{en:e.postScriptName||(e.familyName+e.styleName).replace(/\s/g,"")},designer:{en:e.designer||" "},designerURL:{en:e.designerURL||" "},manufacturer:{en:e.manufacturer||" "},manufacturerURL:{en:e.manufacturerURL||" "},license:{en:e.license||" "},licenseURL:{en:e.licenseURL||" "},version:{en:e.version||"Version 0.1"},description:{en:e.description||" "},copyright:{en:e.copyright||" "},trademark:{en:e.trademark||" "}},this.unitsPerEm=e.unitsPerEm||1e3,this.ascender=e.ascender,this.descender=e.descender,this.createdTimestamp=e.createdTimestamp,this.tables={os2:{usWeightClass:e.weightClass||this.usWeightClasses.MEDIUM,usWidthClass:e.widthClass||this.usWidthClasses.MEDIUM,fsSelection:e.fsSelection||this.fsSelectionValues.REGULAR}}),this.supported=!0,this.glyphs=new xe.GlyphSet(this,e.glyphs||[]),this.encoding=new de(this),this.position=new wt(this),this.substitution=new St(this),this.tables=this.tables||{},Object.defineProperty(this,"hinting",{get:function(){return this._hinting?this._hinting:"truetype"===this.outlinesFormat?this._hinting=new Ft(this):void 0}})}function Er(e,t){var r=JSON.stringify(e),i=256;for(var n in t){var a=parseInt(n);if(a&&!(a<256)){if(JSON.stringify(t[n])===r)return a;i<=a&&(i=a+1)}}return t[i]=e,i}function Cr(e,t,r,i){for(var n=[{name:"nameID_"+e,type:"USHORT",value:Er(t.name,i)},{name:"flags_"+e,type:"USHORT",value:0}],a=0;a<r.length;++a){var o=r[a].tag;n.push({name:"axis_"+e+" "+o,type:"FIXED",value:t.coordinates[o]<<16})}return n}function Lr(e,t,r,i){var n={},a=new se.Parser(e,t);n.name=i[a.parseUShort()]||{},a.skip("uShort",1),n.coordinates={};for(var o=0;o<r.length;++o)n.coordinates[r[o].tag]=a.parseFixed();return n}Tr.prototype.hasChar=function(e){return null!==this.encoding.charToGlyphIndex(e)},Tr.prototype.charToGlyphIndex=function(e){return this.encoding.charToGlyphIndex(e)},Tr.prototype.charToGlyph=function(e){var t=this.charToGlyphIndex(e),r=this.glyphs.get(t);return r=r||this.glyphs.get(0)},Tr.prototype.stringToGlyphs=function(e,t){t=t||this.defaultRenderOptions;for(var r=Mr(e),i=[],n=0;n<r.length;n+=1){var a=r[n];i.push(this.charToGlyphIndex(a))}var o=i.length;if(t.features){var s=t.script||this.substitution.getDefaultScriptName(),l=[];t.features.liga&&(l=l.concat(this.substitution.getFeature("liga",s,t.language))),t.features.rlig&&(l=l.concat(this.substitution.getFeature("rlig",s,t.language)));for(var u=0;u<o;u+=1)for(var h=0;h<l.length;h++){for(var c=l[h],f=c.sub,d=f.length,p=0;p<d&&f[p]===i[u+p];)p++;p===d&&(i.splice(u,d,c.by),o=o-d+1)}}for(var m=new Array(o),v=this.glyphs.get(0),y=0;y<o;y+=1)m[y]=this.glyphs.get(i[y])||v;return m},Tr.prototype.nameToGlyphIndex=function(e){return this.glyphNames.nameToGlyphIndex(e)},Tr.prototype.nameToGlyph=function(e){var t=this.nameToGlyphIndex(e),r=this.glyphs.get(t);return r=r||this.glyphs.get(0)},Tr.prototype.glyphIndexToName=function(e){return this.glyphNames.glyphIndexToName?this.glyphNames.glyphIndexToName(e):""},Tr.prototype.getKerningValue=function(e,t){e=e.index||e,t=t.index||t;var r=this.position.defaultKerningTables;return r?this.position.getKerningValue(r,e,t):this.kerningPairs[e+","+t]||0},Tr.prototype.defaultRenderOptions={kerning:!0,features:{liga:!0,rlig:!0}},Tr.prototype.forEachGlyph=function(e,t,r,i,n,a){t=void 0!==t?t:0,r=void 0!==r?r:0,i=void 0!==i?i:72,n=n||this.defaultRenderOptions;var o,s=1/this.unitsPerEm*i,l=this.stringToGlyphs(e,n);if(n.kerning){var u=n.script||this.position.getDefaultScriptName();o=this.position.getKerningTables(u,n.language)}for(var h=0;h<l.length;h+=1){var c=l[h];if(a.call(this,c,t,r,i,n),c.advanceWidth&&(t+=c.advanceWidth*s),n.kerning&&h<l.length-1)t+=(o?this.position.getKerningValue(o,c.index,l[h+1].index):this.getKerningValue(c,l[h+1]))*s;n.letterSpacing?t+=n.letterSpacing*i:n.tracking&&(t+=n.tracking/1e3*i)}return t},Tr.prototype.getPath=function(e,t,r,i,a){var o=new I;return this.forEachGlyph(e,t,r,i,a,function(e,t,r,i){var n=e.getPath(t,r,i,a,this);o.extend(n)}),o},Tr.prototype.getPaths=function(e,t,r,i,a){var o=[];return this.forEachGlyph(e,t,r,i,a,function(e,t,r,i){var n=e.getPath(t,r,i,a,this);o.push(n)}),o},Tr.prototype.getAdvanceWidth=function(e,t,r){return this.forEachGlyph(e,0,0,t,r,function(){})},Tr.prototype.draw=function(e,t,r,i,n,a){this.getPath(t,r,i,n,a).draw(e)},Tr.prototype.drawPoints=function(n,e,t,r,i,a){this.forEachGlyph(e,t,r,i,a,function(e,t,r,i){e.drawPoints(n,t,r,i)})},Tr.prototype.drawMetrics=function(n,e,t,r,i,a){this.forEachGlyph(e,t,r,i,a,function(e,t,r,i){e.drawMetrics(n,t,r,i)})},Tr.prototype.getEnglishName=function(e){var t=this.names[e];if(t)return t.en},Tr.prototype.validate=function(){var r=this;function e(e){var t=r.getEnglishName(e);t&&t.trim().length}e("fontFamily"),e("weightName"),e("manufacturer"),e("copyright"),e("version"),this.unitsPerEm},Tr.prototype.toTables=function(){return yt.fontToTable(this)},Tr.prototype.toBuffer=function(){return console.warn("Font.toBuffer is deprecated. Use Font.toArrayBuffer instead."),this.toArrayBuffer()},Tr.prototype.toArrayBuffer=function(){for(var e=this.toTables().encode(),t=new ArrayBuffer(e.length),r=new Uint8Array(t),i=0;i<e.length;i++)r[i]=e[i];return t},Tr.prototype.download=function(t){var e=this.getEnglishName("fontFamily"),r=this.getEnglishName("fontSubfamily");t=t||e.replace(/\s/g,"")+"-"+r+".otf";var n=this.toArrayBuffer();if("undefined"!=typeof window)window.requestFileSystem=window.requestFileSystem||window.webkitRequestFileSystem,window.requestFileSystem(window.TEMPORARY,n.byteLength,function(e){e.root.getFile(t,{create:!0},function(i){i.createWriter(function(e){var t=new DataView(n),r=new Blob([t],{type:"font/opentype"});e.write(r),e.addEventListener("writeend",function(){location.href=i.toURL()},!1)})})},function(e){throw new Error(e.name+": "+e.message)});else{var i=jr("fs"),a=function(e){for(var t=new Gr(e.byteLength),r=new Uint8Array(e),i=0;i<t.length;++i)t[i]=r[i];return t}(n);i.writeFileSync(t,a)}},Tr.prototype.fsSelectionValues={ITALIC:1,UNDERSCORE:2,NEGATIVE:4,OUTLINED:8,STRIKEOUT:16,BOLD:32,REGULAR:64,USER_TYPO_METRICS:128,WWS:256,OBLIQUE:512},Tr.prototype.usWidthClasses={ULTRA_CONDENSED:1,EXTRA_CONDENSED:2,CONDENSED:3,SEMI_CONDENSED:4,MEDIUM:5,SEMI_EXPANDED:6,EXPANDED:7,EXTRA_EXPANDED:8,ULTRA_EXPANDED:9},Tr.prototype.usWeightClasses={THIN:100,EXTRA_LIGHT:200,LIGHT:300,NORMAL:400,MEDIUM:500,SEMI_BOLD:600,BOLD:700,EXTRA_BOLD:800,BLACK:900};var Or={make:function(e,t){var r,i,n,a,o=new $.Table("fvar",[{name:"version",type:"ULONG",value:65536},{name:"offsetToData",type:"USHORT",value:0},{name:"countSizePairs",type:"USHORT",value:2},{name:"axisCount",type:"USHORT",value:e.axes.length},{name:"axisSize",type:"USHORT",value:20},{name:"instanceCount",type:"USHORT",value:e.instances.length},{name:"instanceSize",type:"USHORT",value:4+4*e.axes.length}]);o.offsetToData=o.sizeOf();for(var s=0;s<e.axes.length;s++)o.fields=o.fields.concat((r=s,i=e.axes[s],n=t,a=Er(i.name,n),[{name:"tag_"+r,type:"TAG",value:i.tag},{name:"minValue_"+r,type:"FIXED",value:i.minValue<<16},{name:"defaultValue_"+r,type:"FIXED",value:i.defaultValue<<16},{name:"maxValue_"+r,type:"FIXED",value:i.maxValue<<16},{name:"flags_"+r,type:"USHORT",value:0},{name:"nameID_"+r,type:"USHORT",value:a}]));for(var l=0;l<e.instances.length;l++)o.fields=o.fields.concat(Cr(l,e.instances[l],e.axes,t));return o},parse:function(e,t,r){var i=new se.Parser(e,t),n=i.parseULong();P.argument(65536===n,"Unsupported fvar table version.");var a=i.parseOffset16();i.skip("uShort",1);for(var o,s,l,u,h,c=i.parseUShort(),f=i.parseUShort(),d=i.parseUShort(),p=i.parseUShort(),m=[],v=0;v<c;v++)m.push((o=e,s=t+a+v*f,l=r,h=u=void 0,u={},h=new se.Parser(o,s),u.tag=h.parseTag(),u.minValue=h.parseFixed(),u.defaultValue=h.parseFixed(),u.maxValue=h.parseFixed(),h.skip("uShort",1),u.name=l[h.parseUShort()]||{},u));for(var y=[],g=t+a+c*f,b=0;b<d;b++)y.push(Lr(e,g+b*p,m,r));return{axes:m,instances:y}}},Pr=new Array(10);Pr[1]=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort();return 1===t?{posFormat:1,coverage:this.parsePointer(ae.coverage),value:this.parseValueRecord()}:2===t?{posFormat:2,coverage:this.parsePointer(ae.coverage),values:this.parseValueRecordList()}:void P.assert(!1,"0x"+e.toString(16)+": GPOS lookup type 1 format must be 1 or 2.")},Pr[2]=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort();P.assert(1===t||2===t,"0x"+e.toString(16)+": GPOS lookup type 2 format must be 1 or 2.");var r=this.parsePointer(ae.coverage),i=this.parseUShort(),n=this.parseUShort();if(1===t)return{posFormat:t,coverage:r,valueFormat1:i,valueFormat2:n,pairSets:this.parseList(ae.pointer(ae.list(function(){return{secondGlyph:this.parseUShort(),value1:this.parseValueRecord(i),value2:this.parseValueRecord(n)}})))};if(2===t){var a=this.parsePointer(ae.classDef),o=this.parsePointer(ae.classDef),s=this.parseUShort(),l=this.parseUShort();return{posFormat:t,coverage:r,valueFormat1:i,valueFormat2:n,classDef1:a,classDef2:o,class1Count:s,class2Count:l,classRecords:this.parseList(s,ae.list(l,function(){return{value1:this.parseValueRecord(i),value2:this.parseValueRecord(n)}}))}}},Pr[3]=function(){return{error:"GPOS Lookup 3 not supported"}},Pr[4]=function(){return{error:"GPOS Lookup 4 not supported"}},Pr[5]=function(){return{error:"GPOS Lookup 5 not supported"}},Pr[6]=function(){return{error:"GPOS Lookup 6 not supported"}},Pr[7]=function(){return{error:"GPOS Lookup 7 not supported"}},Pr[8]=function(){return{error:"GPOS Lookup 8 not supported"}},Pr[9]=function(){return{error:"GPOS Lookup 9 not supported"}};var Rr=new Array(10);var Dr={parse:function(e,t){var r=new ae(e,t=t||0),i=r.parseVersion(1);return P.argument(1===i||1.1===i,"Unsupported GPOS table version "+i),1===i?{version:i,scripts:r.parseScriptList(),features:r.parseFeatureList(),lookups:r.parseLookupList(Pr)}:{version:i,scripts:r.parseScriptList(),features:r.parseFeatureList(),lookups:r.parseLookupList(Pr),variations:r.parseFeatureVariationsList()}},make:function(e){return new $.Table("GPOS",[{name:"version",type:"ULONG",value:65536},{name:"scripts",type:"TABLE",value:new $.ScriptList(e.scripts)},{name:"features",type:"TABLE",value:new $.FeatureList(e.features)},{name:"lookups",type:"TABLE",value:new $.LookupList(e.lookups,Rr)}])}};var kr={parse:function(e,t){var r=new se.Parser(e,t),i=r.parseUShort();if(0===i)return function(e){var t={};e.skip("uShort");var r=e.parseUShort();P.argument(0===r,"Unsupported kern sub-table version."),e.skip("uShort",2);var i=e.parseUShort();e.skip("uShort",3);for(var n=0;n<i;n+=1){var a=e.parseUShort(),o=e.parseUShort(),s=e.parseShort();t[a+","+o]=s}return t}(r);if(1===i)return function(e){var t={};e.skip("uShort"),1<e.parseULong()&&console.warn("Only the first kern subtable is supported."),e.skip("uLong");var r=255&e.parseUShort();if(e.skip("uShort"),0==r){var i=e.parseUShort();e.skip("uShort",3);for(var n=0;n<i;n+=1){var a=e.parseUShort(),o=e.parseUShort(),s=e.parseShort();t[a+","+o]=s}}return t}(r);throw new Error("Unsupported kern table version ("+i+").")}};var Ar={parse:function(e,t,r,i){for(var n=new se.Parser(e,t),a=i?n.parseUShort:n.parseULong,o=[],s=0;s<r+1;s+=1){var l=a.call(n);i&&(l*=2),o.push(l)}return o}};function Ir(e,r){jr("fs").readFile(e,function(e,t){if(e)return r(e.message);r(null,Et(t))})}function Ur(e,t){var r=new XMLHttpRequest;r.open("get",e,!0),r.responseType="arraybuffer",r.onload=function(){return r.response?t(null,r.response):t("Font could not be loaded: "+r.statusText)},r.onerror=function(){t("Font could not be loaded")},r.send()}function Nr(e,t){for(var r=[],i=12,n=0;n<t;n+=1){var a=se.getTag(e,i),o=se.getULong(e,i+4),s=se.getULong(e,i+8),l=se.getULong(e,i+12);r.push({tag:a,checksum:o,offset:s,length:l,compression:!1}),i+=16}return r}function Fr(e,t){if("WOFF"!==t.compression)return{data:e,offset:t.offset};var r=new Uint8Array(e.buffer,t.offset+2,t.compressedLength-2),i=new Uint8Array(t.length);if(n(r,i),i.byteLength!==t.length)throw new Error("Decompression error: "+t.tag+" decompressed length doesn't match recorded length");return{data:new DataView(i.buffer,0),offset:0}}function Br(e){var t,r,i,n,a,o,s,l,u,h,c,f,d,p,m=new Tr({empty:!0}),v=new DataView(e,0),y=[],g=se.getTag(v,0);if(g===String.fromCharCode(0,1,0,0)||"true"===g||"typ1"===g)m.outlinesFormat="truetype",y=Nr(v,i=se.getUShort(v,4));else if("OTTO"===g)m.outlinesFormat="cff",y=Nr(v,i=se.getUShort(v,4));else{if("wOFF"!==g)throw new Error("Unsupported OpenType signature "+g);var b=se.getTag(v,4);if(b===String.fromCharCode(0,1,0,0))m.outlinesFormat="truetype";else{if("OTTO"!==b)throw new Error("Unsupported OpenType flavor "+g);m.outlinesFormat="cff"}y=function(e,t){for(var r=[],i=44,n=0;n<t;n+=1){var a=se.getTag(e,i),o=se.getULong(e,i+4),s=se.getULong(e,i+8),l=se.getULong(e,i+12),u=void 0;u=s<l&&"WOFF",r.push({tag:a,offset:o,compression:u,compressedLength:s,length:l}),i+=20}return r}(v,i=se.getUShort(v,12))}for(var _=0;_<i;_+=1){var x=y[_],w=void 0;switch(x.tag){case"cmap":w=Fr(v,x),m.tables.cmap=le.parse(w.data,w.offset),m.encoding=new pe(m.tables.cmap);break;case"cvt ":w=Fr(v,x),p=new se.Parser(w.data,w.offset),m.tables.cvt=p.parseShortList(x.length/2);break;case"fvar":a=x;break;case"fpgm":w=Fr(v,x),p=new se.Parser(w.data,w.offset),m.tables.fpgm=p.parseByteList(x.length);break;case"head":w=Fr(v,x),m.tables.head=Ge.parse(w.data,w.offset),m.unitsPerEm=m.tables.head.unitsPerEm,t=m.tables.head.indexToLocFormat;break;case"hhea":w=Fr(v,x),m.tables.hhea=je.parse(w.data,w.offset),m.ascender=m.tables.hhea.ascender,m.descender=m.tables.hhea.descender,m.numberOfHMetrics=m.tables.hhea.numberOfHMetrics;break;case"hmtx":u=x;break;case"ltag":w=Fr(v,x),r=ze.parse(w.data,w.offset);break;case"maxp":w=Fr(v,x),m.tables.maxp=He.parse(w.data,w.offset),m.numGlyphs=m.tables.maxp.numGlyphs;break;case"name":f=x;break;case"OS/2":w=Fr(v,x),m.tables.os2=at.parse(w.data,w.offset);break;case"post":w=Fr(v,x),m.tables.post=ot.parse(w.data,w.offset),m.glyphNames=new ve(m.tables.post);break;case"prep":w=Fr(v,x),p=new se.Parser(w.data,w.offset),m.tables.prep=p.parseByteList(x.length);break;case"glyf":o=x;break;case"loca":c=x;break;case"CFF ":n=x;break;case"kern":h=x;break;case"GPOS":s=x;break;case"GSUB":l=x;break;case"meta":d=x}}var S=Fr(v,f);if(m.tables.name=it.parse(S.data,S.offset,r),m.names=m.tables.name,o&&c){var M=0===t,T=Fr(v,c),E=Ar.parse(T.data,T.offset,m.numGlyphs,M),C=Fr(v,o);m.glyphs=Nt.parse(C.data,C.offset,E,m)}else{if(!n)throw new Error("Font doesn't contain TrueType or CFF outlines.");var L=Fr(v,n);Be.parse(L.data,L.offset,m)}var O=Fr(v,u);if(Ve.parse(O.data,O.offset,m.numberOfHMetrics,m.numGlyphs,m.glyphs),function(e){for(var t,r=e.tables.cmap.glyphIndexMap,i=Object.keys(r),n=0;n<i.length;n+=1){var a=i[n],o=r[a];(t=e.glyphs.get(o)).addUnicode(parseInt(a))}for(var s=0;s<e.glyphs.length;s+=1)t=e.glyphs.get(s),e.cffEncoding?e.isCIDFont?t.name="gid"+s:t.name=e.cffEncoding.charset[s]:e.glyphNames.names&&(t.name=e.glyphNames.glyphIndexToName(s))}(m),h){var P=Fr(v,h);m.kerningPairs=kr.parse(P.data,P.offset)}else m.kerningPairs={};if(s){var R=Fr(v,s);m.tables.gpos=Dr.parse(R.data,R.offset),m.position.init()}if(l){var D=Fr(v,l);m.tables.gsub=ht.parse(D.data,D.offset)}if(a){var k=Fr(v,a);m.tables.fvar=Or.parse(k.data,k.offset,m.names)}if(d){var A=Fr(v,d);m.tables.meta=ct.parse(A.data,A.offset),m.metas=m.tables.meta}return m}T.Font=Tr,T.Glyph=ge,T.Path=I,T.BoundingBox=C,T._parse=se,T.parse=Br,T.load=function(e,i){("undefined"==typeof window?Ir:Ur)(e,function(e,t){if(e)return i(e);var r;try{r=Br(t)}catch(e){return i(e,null)}return i(null,r)})},T.loadSync=function(e){return Br(Et(jr("fs").readFileSync(e)))},Object.defineProperty(T,"__esModule",{value:!0})}("object"==typeof r&&void 0!==t?r:e.opentype={})}).call(this,jr("buffer").Buffer)},{buffer:4,fs:2}],13:[function(e,t,u){(function(n){function a(e,t){for(var r=0,i=e.length-1;0<=i;i--){var n=e[i];"."===n?e.splice(i,1):".."===n?(e.splice(i,1),r++):r&&(e.splice(i,1),r--)}if(t)for(;r--;)e.unshift("..");return e}function o(e,t){if(e.filter)return e.filter(t);for(var r=[],i=0;i<e.length;i++)t(e[i],i,e)&&r.push(e[i]);return r}u.resolve=function(){for(var e="",t=!1,r=arguments.length-1;-1<=r&&!t;r--){var i=0<=r?arguments[r]:n.cwd();if("string"!=typeof i)throw new TypeError("Arguments to path.resolve must be strings");i&&(e=i+"/"+e,t="/"===i.charAt(0))}return(t?"/":"")+(e=a(o(e.split("/"),function(e){return!!e}),!t).join("/"))||"."},u.normalize=function(e){var t=u.isAbsolute(e),r="/"===i(e,-1);return(e=a(o(e.split("/"),function(e){return!!e}),!t).join("/"))||t||(e="."),e&&r&&(e+="/"),(t?"/":"")+e},u.isAbsolute=function(e){return"/"===e.charAt(0)},u.join=function(){var e=Array.prototype.slice.call(arguments,0);return u.normalize(o(e,function(e,t){if("string"!=typeof e)throw new TypeError("Arguments to path.join must be strings");return e}).join("/"))},u.relative=function(e,t){function r(e){for(var t=0;t<e.length&&""===e[t];t++);for(var r=e.length-1;0<=r&&""===e[r];r--);return r<t?[]:e.slice(t,r-t+1)}e=u.resolve(e).substr(1),t=u.resolve(t).substr(1);for(var i=r(e.split("/")),n=r(t.split("/")),a=Math.min(i.length,n.length),o=a,s=0;s<a;s++)if(i[s]!==n[s]){o=s;break}var l=[];for(s=o;s<i.length;s++)l.push("..");return(l=l.concat(n.slice(o))).join("/")},u.sep="/",u.delimiter=":",u.dirname=function(e){if("string"!=typeof e&&(e+=""),0===e.length)return".";for(var t=e.charCodeAt(0),r=47===t,i=-1,n=!0,a=e.length-1;1<=a;--a)if(47===(t=e.charCodeAt(a))){if(!n){i=a;break}}else n=!1;return-1===i?r?"/":".":r&&1===i?"/":e.slice(0,i)},u.basename=function(e,t){var r=function(e){"string"!=typeof e&&(e+="");var t,r=0,i=-1,n=!0;for(t=e.length-1;0<=t;--t)if(47===e.charCodeAt(t)){if(!n){r=t+1;break}}else-1===i&&(n=!1,i=t+1);return-1===i?"":e.slice(r,i)}(e);return t&&r.substr(-1*t.length)===t&&(r=r.substr(0,r.length-t.length)),r},u.extname=function(e){"string"!=typeof e&&(e+="");for(var t=-1,r=0,i=-1,n=!0,a=0,o=e.length-1;0<=o;--o){var s=e.charCodeAt(o);if(47===s){if(n)continue;r=o+1;break}-1===i&&(n=!1,i=o+1),46===s?-1===t?t=o:1!==a&&(a=1):-1!==t&&(a=-1)}return-1===t||-1===i||0===a||1===a&&t===i-1&&t===r+1?"":e.slice(t,i)};var i="b"==="ab".substr(-1)?function(e,t,r){return e.substr(t,r)}:function(e,t,r){return t<0&&(t=e.length+t),e.substr(t,r)}}).call(this,e("_process"))},{_process:14}],14:[function(e,t,r){var i,n,a=t.exports={};function o(){throw new Error("setTimeout has not been defined")}function s(){throw new Error("clearTimeout has not been defined")}function l(t){if(i===setTimeout)return setTimeout(t,0);if((i===o||!i)&&setTimeout)return i=setTimeout,setTimeout(t,0);try{return i(t,0)}catch(e){try{return i.call(null,t,0)}catch(e){return i.call(this,t,0)}}}!function(){try{i="function"==typeof setTimeout?setTimeout:o}catch(e){i=o}try{n="function"==typeof clearTimeout?clearTimeout:s}catch(e){n=s}}();var u,h=[],c=!1,f=-1;function d(){c&&u&&(c=!1,u.length?h=u.concat(h):f=-1,h.length&&p())}function p(){if(!c){var e=l(d);c=!0;for(var t=h.length;t;){for(u=h,h=[];++f<t;)u&&u[f].run();f=-1,t=h.length}u=null,c=!1,function(t){if(n===clearTimeout)return clearTimeout(t);if((n===s||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(t);try{n(t)}catch(e){try{return n.call(null,t)}catch(e){return n.call(this,t)}}}(e)}}function m(e,t){this.fun=e,this.array=t}function v(){}a.nextTick=function(e){var t=new Array(arguments.length-1);if(1<arguments.length)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];h.push(new m(e,t)),1!==h.length||c||l(p)},m.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=v,a.addListener=v,a.once=v,a.off=v,a.removeListener=v,a.removeAllListeners=v,a.emit=v,a.prependListener=v,a.prependOnceListener=v,a.listeners=function(e){return[]},a.binding=function(e){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(e){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},{}],15:[function(e,t,r){!function(e){"use strict";if(!e.fetch){var t="URLSearchParams"in e,r="Symbol"in e&&"iterator"in Symbol,o="FileReader"in e&&"Blob"in e&&function(){try{return new Blob,!0}catch(e){return!1}}(),i="FormData"in e,n="ArrayBuffer"in e;if(n)var a=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],s=function(e){return e&&DataView.prototype.isPrototypeOf(e)},l=ArrayBuffer.isView||function(e){return e&&-1<a.indexOf(Object.prototype.toString.call(e))};p.prototype.append=function(e,t){e=c(e),t=f(t);var r=this.map[e];this.map[e]=r?r+","+t:t},p.prototype.delete=function(e){delete this.map[c(e)]},p.prototype.get=function(e){return e=c(e),this.has(e)?this.map[e]:null},p.prototype.has=function(e){return this.map.hasOwnProperty(c(e))},p.prototype.set=function(e,t){this.map[c(e)]=f(t)},p.prototype.forEach=function(e,t){for(var r in this.map)this.map.hasOwnProperty(r)&&e.call(t,this.map[r],r,this)},p.prototype.keys=function(){var r=[];return this.forEach(function(e,t){r.push(t)}),d(r)},p.prototype.values=function(){var t=[];return this.forEach(function(e){t.push(e)}),d(t)},p.prototype.entries=function(){var r=[];return this.forEach(function(e,t){r.push([t,e])}),d(r)},r&&(p.prototype[Symbol.iterator]=p.prototype.entries);var u=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];_.prototype.clone=function(){return new _(this,{body:this._bodyInit})},b.call(_.prototype),b.call(w.prototype),w.prototype.clone=function(){return new w(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new p(this.headers),url:this.url})},w.error=function(){var e=new w(null,{status:0,statusText:""});return e.type="error",e};var h=[301,302,303,307,308];w.redirect=function(e,t){if(-1===h.indexOf(t))throw new RangeError("Invalid status code");return new w(null,{status:t,headers:{location:e}})},e.Headers=p,e.Request=_,e.Response=w,e.fetch=function(r,n){return new Promise(function(i,e){var t=new _(r,n),a=new XMLHttpRequest;a.onload=function(){var e,n,t={status:a.status,statusText:a.statusText,headers:(e=a.getAllResponseHeaders()||"",n=new p,e.replace(/\r?\n[\t ]+/g," ").split(/\r?\n/).forEach(function(e){var t=e.split(":"),r=t.shift().trim();if(r){var i=t.join(":").trim();n.append(r,i)}}),n)};t.url="responseURL"in a?a.responseURL:t.headers.get("X-Request-URL");var r="response"in a?a.response:a.responseText;i(new w(r,t))},a.onerror=function(){e(new TypeError("Network request failed"))},a.ontimeout=function(){e(new TypeError("Network request failed"))},a.open(t.method,t.url,!0),"include"===t.credentials?a.withCredentials=!0:"omit"===t.credentials&&(a.withCredentials=!1),"responseType"in a&&o&&(a.responseType="blob"),t.headers.forEach(function(e,t){a.setRequestHeader(t,e)}),a.send(void 0===t._bodyInit?null:t._bodyInit)})},e.fetch.polyfill=!0}function c(e){if("string"!=typeof e&&(e=String(e)),/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(e))throw new TypeError("Invalid character in header field name");return e.toLowerCase()}function f(e){return"string"!=typeof e&&(e=String(e)),e}function d(t){var e={next:function(){var e=t.shift();return{done:void 0===e,value:e}}};return r&&(e[Symbol.iterator]=function(){return e}),e}function p(t){this.map={},t instanceof p?t.forEach(function(e,t){this.append(t,e)},this):Array.isArray(t)?t.forEach(function(e){this.append(e[0],e[1])},this):t&&Object.getOwnPropertyNames(t).forEach(function(e){this.append(e,t[e])},this)}function m(e){if(e.bodyUsed)return Promise.reject(new TypeError("Already read"));e.bodyUsed=!0}function v(r){return new Promise(function(e,t){r.onload=function(){e(r.result)},r.onerror=function(){t(r.error)}})}function y(e){var t=new FileReader,r=v(t);return t.readAsArrayBuffer(e),r}function g(e){if(e.slice)return e.slice(0);var t=new Uint8Array(e.byteLength);return t.set(new Uint8Array(e)),t.buffer}function b(){return this.bodyUsed=!1,this._initBody=function(e){if(this._bodyInit=e)if("string"==typeof e)this._bodyText=e;else if(o&&Blob.prototype.isPrototypeOf(e))this._bodyBlob=e;else if(i&&FormData.prototype.isPrototypeOf(e))this._bodyFormData=e;else if(t&&URLSearchParams.prototype.isPrototypeOf(e))this._bodyText=e.toString();else if(n&&o&&s(e))this._bodyArrayBuffer=g(e.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer]);else{if(!n||!ArrayBuffer.prototype.isPrototypeOf(e)&&!l(e))throw new Error("unsupported BodyInit type");this._bodyArrayBuffer=g(e)}else this._bodyText="";this.headers.get("content-type")||("string"==typeof e?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):t&&URLSearchParams.prototype.isPrototypeOf(e)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},o&&(this.blob=function(){var e=m(this);if(e)return e;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?m(this)||Promise.resolve(this._bodyArrayBuffer):this.blob().then(y)}),this.text=function(){var e,t,r,i=m(this);if(i)return i;if(this._bodyBlob)return e=this._bodyBlob,t=new FileReader,r=v(t),t.readAsText(e),r;if(this._bodyArrayBuffer)return Promise.resolve(function(e){for(var t=new Uint8Array(e),r=new Array(t.length),i=0;i<t.length;i++)r[i]=String.fromCharCode(t[i]);return r.join("")}(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},i&&(this.formData=function(){return this.text().then(x)}),this.json=function(){return this.text().then(JSON.parse)},this}function _(e,t){var r,i,n=(t=t||{}).body;if(e instanceof _){if(e.bodyUsed)throw new TypeError("Already read");this.url=e.url,this.credentials=e.credentials,t.headers||(this.headers=new p(e.headers)),this.method=e.method,this.mode=e.mode,n||null==e._bodyInit||(n=e._bodyInit,e.bodyUsed=!0)}else this.url=String(e);if(this.credentials=t.credentials||this.credentials||"omit",!t.headers&&this.headers||(this.headers=new p(t.headers)),this.method=(r=t.method||this.method||"GET",i=r.toUpperCase(),-1<u.indexOf(i)?i:r),this.mode=t.mode||this.mode||null,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&n)throw new TypeError("Body not allowed for GET or HEAD requests");this._initBody(n)}function x(e){var n=new FormData;return e.trim().split("&").forEach(function(e){if(e){var t=e.split("="),r=t.shift().replace(/\+/g," "),i=t.join("=").replace(/\+/g," ");n.append(decodeURIComponent(r),decodeURIComponent(i))}}),n}function w(e,t){t=t||{},this.type="default",this.status=void 0===t.status?200:t.status,this.ok=200<=this.status&&this.status<300,this.statusText="statusText"in t?t.statusText:"OK",this.headers=new p(t.headers),this.url=t.url||"",this._initBody(e)}}("undefined"!=typeof self?self:this)},{}],16:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var l,i=a(e("../core/main")),n=a(e("../color/color_conversion"));function a(e){return e&&e.__esModule?e:{default:e}}var u=[{h:0,s:0,b:.8275,name:"gray"},{h:0,s:0,b:.8627,name:"gray"},{h:0,s:0,b:.7529,name:"gray"},{h:.0167,s:.1176,b:1,name:"light pink"}],h=[{h:0,s:0,b:0,name:"black"},{h:0,s:0,b:.5,name:"gray"},{h:0,s:0,b:1,name:"white"},{h:0,s:.5,b:.5,name:"dark maroon"},{h:0,s:.5,b:1,name:"salmon pink"},{h:0,s:1,b:0,name:"black"},{h:0,s:1,b:.5,name:"dark red"},{h:0,s:1,b:1,name:"red"},{h:5,s:0,b:1,name:"very light peach"},{h:5,s:.5,b:.5,name:"brown"},{h:5,s:.5,b:1,name:"peach"},{h:5,s:1,b:.5,name:"brick red"},{h:5,s:1,b:1,name:"crimson"},{h:10,s:0,b:1,name:"light peach"},{h:10,s:.5,b:.5,name:"brown"},{h:10,s:.5,b:1,name:"light orange"},{h:10,s:1,b:.5,name:"brown"},{h:10,s:1,b:1,name:"orange"},{h:15,s:0,b:1,name:"very light yellow"},{h:15,s:.5,b:.5,name:"olive green"},{h:15,s:.5,b:1,name:"light yellow"},{h:15,s:1,b:0,name:"dark olive green"},{h:15,s:1,b:.5,name:"olive green"},{h:15,s:1,b:1,name:"yellow"},{h:20,s:0,b:1,name:"very light yellow"},{h:20,s:.5,b:.5,name:"olive green"},{h:20,s:.5,b:1,name:"light yellow green"},{h:20,s:1,b:0,name:"dark olive green"},{h:20,s:1,b:.5,name:"dark yellow green"},{h:20,s:1,b:1,name:"yellow green"},{h:25,s:.5,b:.5,name:"dark yellow green"},{h:25,s:.5,b:1,name:"light green"},{h:25,s:1,b:.5,name:"dark green"},{h:25,s:1,b:1,name:"green"},{h:30,s:.5,b:1,name:"light green"},{h:30,s:1,b:.5,name:"dark green"},{h:30,s:1,b:1,name:"green"},{h:35,s:0,b:.5,name:"light green"},{h:35,s:0,b:1,name:"very light green"},{h:35,s:.5,b:.5,name:"dark green"},{h:35,s:.5,b:1,name:"light green"},{h:35,s:1,b:0,name:"very dark green"},{h:35,s:1,b:.5,name:"dark green"},{h:35,s:1,b:1,name:"green"},{h:40,s:0,b:1,name:"very light green"},{h:40,s:.5,b:.5,name:"dark green"},{h:40,s:.5,b:1,name:"light green"},{h:40,s:1,b:.5,name:"dark green"},{h:40,s:1,b:1,name:"green"},{h:45,s:.5,b:1,name:"light turquoise"},{h:45,s:1,b:.5,name:"dark turquoise"},{h:45,s:1,b:1,name:"turquoise"},{h:50,s:0,b:1,name:"light sky blue"},{h:50,s:.5,b:.5,name:"dark cyan"},{h:50,s:.5,b:1,name:"light cyan"},{h:50,s:1,b:.5,name:"dark cyan"},{h:50,s:1,b:1,name:"cyan"},{h:55,s:0,b:1,name:"light sky blue"},{h:55,s:.5,b:1,name:"light sky blue"},{h:55,s:1,b:.5,name:"dark blue"},{h:55,s:1,b:1,name:"sky blue"},{h:60,s:0,b:.5,name:"gray"},{h:60,s:0,b:1,name:"very light blue"},{h:60,s:.5,b:.5,name:"blue"},{h:60,s:.5,b:1,name:"light blue"},{h:60,s:1,b:.5,name:"navy blue"},{h:60,s:1,b:1,name:"blue"},{h:65,s:0,b:1,name:"lavender"},{h:65,s:.5,b:.5,name:"navy blue"},{h:65,s:.5,b:1,name:"light purple"},{h:65,s:1,b:.5,name:"dark navy blue"},{h:65,s:1,b:1,name:"blue"},{h:70,s:0,b:1,name:"lavender"},{h:70,s:.5,b:.5,name:"navy blue"},{h:70,s:.5,b:1,name:"lavender blue"},{h:70,s:1,b:.5,name:"dark navy blue"},{h:70,s:1,b:1,name:"blue"},{h:75,s:.5,b:1,name:"lavender"},{h:75,s:1,b:.5,name:"dark purple"},{h:75,s:1,b:1,name:"purple"},{h:80,s:.5,b:1,name:"pinkish purple"},{h:80,s:1,b:.5,name:"dark purple"},{h:80,s:1,b:1,name:"purple"},{h:85,s:0,b:1,name:"light pink"},{h:85,s:.5,b:.5,name:"purple"},{h:85,s:.5,b:1,name:"light fuchsia"},{h:85,s:1,b:.5,name:"dark fuchsia"},{h:85,s:1,b:1,name:"fuchsia"},{h:90,s:.5,b:.5,name:"dark fuchsia"},{h:90,s:.5,b:1,name:"hot pink"},{h:90,s:1,b:.5,name:"dark fuchsia"},{h:90,s:1,b:1,name:"fuchsia"},{h:95,s:0,b:1,name:"pink"},{h:95,s:.5,b:1,name:"light pink"},{h:95,s:1,b:.5,name:"dark magenta"},{h:95,s:1,b:1,name:"magenta"}];i.default.prototype._rgbColorName=function(e){var t=n.default._rgbaToHSBA(e);return function(e){var t;if(0!==e[0]){e[0]=Math.round(100*e[0]);var r=e[0].toString().split(""),i=r.length-1;r[i]=parseInt(r[i]),r[i]<2.5?r[i]=0:2.5<=r[i]&&r[i]<7.5&&(r[i]=5),2===r.length?(r[0]=parseInt(r[0]),7.5<=r[i]&&(r[i]=0,r[0]=r[0]+1),e[0]=10*r[0]+r[1]):7.5<=r[i]?e[0]=10:e[0]=r[i]}e[2]=e[2]/255;for(var n=e.length-1;1<=n;n--)e[n]<=.25?e[n]=0:.25<e[n]&&e[n]<.75?e[n]=.5:e[n]=1;if(0===e[0]&&0===e[1]&&1===e[2]){for(var a=2;0<=a;a--)l[a]=Math.round(1e4*l[a])/1e4;for(var o=0;o<u.length;o++){if(u[o].h===l[0]&&u[o].s===l[1]&&u[o].b===l[2]){t=u[o].name;break}t="white"}}else for(var s=0;s<h.length;s++)if(h[s].h===e[0]&&h[s].s===e[1]&&h[s].b===e[2]){t=h[s].name;break}return t}([(l=t)[0],t[1],t[2]])};var o=i.default;r.default=o},{"../color/color_conversion":22,"../core/main":36}],17:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,o=(i=e("../core/main"))&&i.__esModule?i:{default:i};var l="_Description",u="_fallbackDesc",h="_fallbackTable",c="_Label",f="_labelDesc",d="_labelTable";function s(e){if("label"===e||"fallback"===e)throw new Error("description should not be LABEL or FALLBACK");return e.endsWith(".")||e.endsWith(";")||e.endsWith(",")||e.endsWith("?")||e.endsWith("!")||(e+="."),e}o.default.prototype.describe=function(e,t){if(o.default._validateParameters("describe",arguments),"string"==typeof e){var r=this.canvas.id;e=s(e),this.dummyDOM||(this.dummyDOM=document.getElementById(r).parentNode),this.descriptions||(this.descriptions={}),this.descriptions.fallback?this.descriptions.fallback.innerHTML!==e&&(this.descriptions.fallback.innerHTML=e):this._describeHTML("fallback",e),t===this.LABEL&&(this.descriptions.label?this.descriptions.label.innerHTML!==e&&(this.descriptions.label.innerHTML=e):this._describeHTML("label",e))}},o.default.prototype.describeElement=function(e,t,r){if(o.default._validateParameters("describeElement",arguments),"string"==typeof t&&"string"==typeof e){var i=this.canvas.id;t=s(t);var n=function(e){if("label"===e||"fallback"===e)throw new Error("element name should not be LABEL or FALLBACK");e.endsWith(".")||e.endsWith(";")||e.endsWith(",")?e=e.replace(/.$/,":"):e.endsWith(":")||(e+=":");return e}(e);e=e.replace(/[^a-zA-Z0-9 ]/g,"");var a='<th scope="row">'.concat(n,"</th><td>").concat(t,"</td>");this.dummyDOM||(this.dummyDOM=document.getElementById(i).parentNode),this.descriptions?this.descriptions.fallbackElements||(this.descriptions.fallbackElements={}):this.descriptions={fallbackElements:{}},this.descriptions.fallbackElements[e]?this.descriptions.fallbackElements[e].innerHTML!==a&&(this.descriptions.fallbackElements[e].innerHTML=a):this._describeElementHTML("fallback",e,a),r===this.LABEL&&(this.descriptions.labelElements||(this.descriptions.labelElements={}),this.descriptions.labelElements[e]?this.descriptions.labelElements[e].innerHTML!==a&&(this.descriptions.labelElements[e].innerHTML=a):this._describeElementHTML("label",e,a))}},o.default.prototype._describeHTML=function(e,t){var r=this.canvas.id;if("fallback"===e){if(this.dummyDOM.querySelector("#".concat(r+l)))this.dummyDOM.querySelector("#"+r+h).insertAdjacentHTML("beforebegin",'<p id="'.concat(r+u,'"></p>'));else{var i='<div id="'.concat(r).concat(l,'" role="region" aria-label="Canvas Description"><p id="').concat(r).concat(u,'"></p></div>');this.dummyDOM.querySelector("#".concat(r,"accessibleOutput"))?this.dummyDOM.querySelector("#".concat(r,"accessibleOutput")).insertAdjacentHTML("beforebegin",i):this.dummyDOM.querySelector("#".concat(r)).innerHTML=i}return this.descriptions.fallback=this.dummyDOM.querySelector("#".concat(r).concat(u)),void(this.descriptions.fallback.innerHTML=t)}if("label"===e){if(this.dummyDOM.querySelector("#".concat(r+c)))this.dummyDOM.querySelector("#".concat(r+d))&&this.dummyDOM.querySelector("#".concat(r+d)).insertAdjacentHTML("beforebegin",'<p id="'.concat(r).concat(f,'"></p>'));else{var n='<div id="'.concat(r).concat(c,'" class="p5Label"><p id="').concat(r).concat(f,'"></p></div>');this.dummyDOM.querySelector("#".concat(r,"accessibleOutputLabel"))?this.dummyDOM.querySelector("#".concat(r,"accessibleOutputLabel")).insertAdjacentHTML("beforebegin",n):this.dummyDOM.querySelector("#"+r).insertAdjacentHTML("afterend",n)}return this.descriptions.label=this.dummyDOM.querySelector("#"+r+f),void(this.descriptions.label.innerHTML=t)}},o.default.prototype._describeElementHTML=function(e,t,r){var i=this.canvas.id;if("fallback"===e){if(this.dummyDOM.querySelector("#".concat(i+l)))this.dummyDOM.querySelector("#"+i+h)||this.dummyDOM.querySelector("#"+i+u).insertAdjacentHTML("afterend",'<table id="'.concat(i).concat(h,'"><caption>Canvas elements and their descriptions</caption></table>'));else{var n='<div id="'.concat(i).concat(l,'" role="region" aria-label="Canvas Description"><table id="').concat(i).concat(h,'"><caption>Canvas elements and their descriptions</caption></table></div>');this.dummyDOM.querySelector("#".concat(i,"accessibleOutput"))?this.dummyDOM.querySelector("#".concat(i,"accessibleOutput")).insertAdjacentHTML("beforebegin",n):this.dummyDOM.querySelector("#"+i).innerHTML=n}var a=document.createElement("tr");return a.id=i+"_fte_"+t,this.dummyDOM.querySelector("#"+i+h).appendChild(a),this.descriptions.fallbackElements[t]=this.dummyDOM.querySelector("#".concat(i).concat("_fte_").concat(t)),void(this.descriptions.fallbackElements[t].innerHTML=r)}if("label"===e){if(this.dummyDOM.querySelector("#".concat(i+c)))this.dummyDOM.querySelector("#".concat(i+d))||this.dummyDOM.querySelector("#"+i+f).insertAdjacentHTML("afterend",'<table id="'.concat(i+d,'"></table>'));else{var o='<div id="'.concat(i).concat(c,'" class="p5Label"><table id="').concat(i).concat(d,'"></table></div>');this.dummyDOM.querySelector("#".concat(i,"accessibleOutputLabel"))?this.dummyDOM.querySelector("#".concat(i,"accessibleOutputLabel")).insertAdjacentHTML("beforebegin",o):this.dummyDOM.querySelector("#"+i).insertAdjacentHTML("afterend",o)}var s=document.createElement("tr");s.id=i+"_lte_"+t,this.dummyDOM.querySelector("#"+i+d).appendChild(s),this.descriptions.labelElements[t]=this.dummyDOM.querySelector("#".concat(i).concat("_lte_").concat(t)),this.descriptions.labelElements[t].innerHTML=r}};var n=o.default;r.default=n},{"../core/main":36}],18:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,n=(i=e("../core/main"))&&i.__esModule?i:{default:i};n.default.prototype._updateGridOutput=function(e){if(this.dummyDOM.querySelector("#".concat(e,"_summary"))){var t=this._accessibleOutputs[e],r=function(e,t){var r="",i="",n=0;for(var a in t){var o=0;for(var s in t[a]){var l='<li id="'.concat(e,"shape").concat(n,'">').concat(t[a][s].color," ").concat(a,",");"line"===a?l+=" location = ".concat(t[a][s].pos,", length = ").concat(t[a][s].length," pixels"):(l+=" location = ".concat(t[a][s].pos),"point"!==a&&(l+=", area = ".concat(t[a][s].area," %")),l+="</li>"),r+=l,o++,n++}i=1<o?"".concat(i," ").concat(o," ").concat(a,"s"):"".concat(i," ").concat(o," ").concat(a)}return{numShapes:[n,i],details:r}}(e,this.ingredients.shapes),i=function(e,t,r,i){var n="".concat(t," canvas, ").concat(r," by ").concat(i," pixels, contains ").concat(e[0]);n=1===e[0]?"".concat(n," shape: ").concat(e[1]):"".concat(n," shapes: ").concat(e[1]);return n}(r.numShapes,this.ingredients.colors.background,this.width,this.height),n=function(e,t){var r=0,i="",n=Array.apply(null,Array(10)).map(function(){});for(var a in n)n[a]=Array.apply(null,Array(10)).map(function(){});for(var o in t)for(var s in t[o]){var l=void 0;l="line"!==o?'<a href="#'.concat(e,"shape").concat(r,'">').concat(t[o][s].color," ").concat(o,"</a>"):'<a href="#'.concat(e,"shape").concat(r,'">').concat(t[o][s].color," ").concat(o," midpoint</a>"),n[t[o][s].loc.locY][t[o][s].loc.locX]?n[t[o][s].loc.locY][t[o][s].loc.locX]=n[t[o][s].loc.locY][t[o][s].loc.locX]+"  "+l:n[t[o][s].loc.locY][t[o][s].loc.locX]=l,r++}for(var u in n){var h="<tr>";for(var c in n[u])h+="<td>",void 0!==n[u][c]&&(h+=n[u][c]),h+="</td>";i=i+h+"</tr>"}return i}(e,this.ingredients.shapes);i!==t.summary.innerHTML&&(t.summary.innerHTML=i),n!==t.map.innerHTML&&(t.map.innerHTML=n),r.details!==t.shapeDetails.innerHTML&&(t.shapeDetails.innerHTML=r.details),this._accessibleOutputs[e]=t}};var a=n.default;r.default=a},{"../core/main":36}],19:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,n=(i=e("../core/main"))&&i.__esModule?i:{default:i};function l(e,t,r){return e[0]<.4*t?e[1]<.4*r?"top left":e[1]>.6*r?"bottom left":"mid left":e[0]>.6*t?e[1]<.4*r?"top right":e[1]>.6*r?"bottom right":"mid right":e[1]<.4*r?"top middle":e[1]>.6*r?"bottom middle":"middle"}function u(e,t,r){var i=Math.floor(e[0]/t*10),n=Math.floor(e[1]/r*10);return 10===i&&--i,10===n&&--n,{locX:i,locY:n}}n.default.prototype.textOutput=function(e){n.default._validateParameters("textOutput",arguments),this._accessibleOutputs.text||(this._accessibleOutputs.text=!0,this._createOutput("textOutput","Fallback"),e===this.LABEL&&(this._accessibleOutputs.textLabel=!0,this._createOutput("textOutput","Label")))},n.default.prototype.gridOutput=function(e){n.default._validateParameters("gridOutput",arguments),this._accessibleOutputs.grid||(this._accessibleOutputs.grid=!0,this._createOutput("gridOutput","Fallback"),e===this.LABEL&&(this._accessibleOutputs.gridLabel=!0,this._createOutput("gridOutput","Label")))},n.default.prototype._addAccsOutput=function(){return this._accessibleOutputs||(this._accessibleOutputs={text:!1,grid:!1,textLabel:!1,gridLabel:!1}),this._accessibleOutputs.grid||this._accessibleOutputs.text},n.default.prototype._createOutput=function(e,t){var r,i,n,a=this.canvas.id;this.ingredients||(this.ingredients={shapes:{},colors:{background:"white",fill:"white",stroke:"black"},pShapes:""}),this.dummyDOM||(this.dummyDOM=document.getElementById(a).parentNode);var o="";"Fallback"===t?(r=a+e,i=a+"accessibleOutput",this.dummyDOM.querySelector("#".concat(i))||(this.dummyDOM.querySelector("#".concat(a,"_Description"))?this.dummyDOM.querySelector("#".concat(a,"_Description")).insertAdjacentHTML("afterend",'<div id="'.concat(i,'" role="region" aria-label="Canvas Outputs"></div>')):this.dummyDOM.querySelector("#".concat(a)).innerHTML='<div id="'.concat(i,'" role="region" aria-label="Canvas Outputs"></div>'))):"Label"===t&&(r=a+e+(o=t),i=a+"accessibleOutput"+t,this.dummyDOM.querySelector("#".concat(i))||(this.dummyDOM.querySelector("#".concat(a,"_Label"))?this.dummyDOM.querySelector("#".concat(a,"_Label")).insertAdjacentHTML("afterend",'<div id="'.concat(i,'"></div>')):this.dummyDOM.querySelector("#".concat(a)).insertAdjacentHTML("afterend",'<div id="'.concat(i,'"></div>')))),this._accessibleOutputs[r]={},"textOutput"===e?(o="#".concat(a,"gridOutput").concat(o),n='<div id="'.concat(r,'">Text Output<div id="').concat(r,'Summary" aria-label="text output summary"><p id="').concat(r,'_summary"></p><ul id="').concat(r,'_list"></ul></div><table id="').concat(r,'_shapeDetails" summary="text output shape details"></table></div>'),this.dummyDOM.querySelector(o)?this.dummyDOM.querySelector(o).insertAdjacentHTML("beforebegin",n):this.dummyDOM.querySelector("#".concat(i)).innerHTML=n,this._accessibleOutputs[r].list=this.dummyDOM.querySelector("#".concat(r,"_list"))):"gridOutput"===e&&(o="#".concat(a,"textOutput").concat(o),n='<div id="'.concat(r,'">Grid Output<p id="').concat(r,'_summary" aria-label="grid output summary"><table id="').concat(r,'_map" summary="grid output content"></table><ul id="').concat(r,'_shapeDetails" aria-label="grid output shape details"></ul></div>'),this.dummyDOM.querySelector(o)?this.dummyDOM.querySelector(o).insertAdjacentHTML("afterend",n):this.dummyDOM.querySelector("#".concat(i)).innerHTML=n,this._accessibleOutputs[r].map=this.dummyDOM.querySelector("#".concat(r,"_map"))),this._accessibleOutputs[r].shapeDetails=this.dummyDOM.querySelector("#".concat(r,"_shapeDetails")),this._accessibleOutputs[r].summary=this.dummyDOM.querySelector("#".concat(r,"_summary"))},n.default.prototype._updateAccsOutput=function(){var e=this.canvas.id;JSON.stringify(this.ingredients.shapes)!==this.ingredients.pShapes&&(this.ingredients.pShapes=JSON.stringify(this.ingredients.shapes),this._accessibleOutputs.text&&this._updateTextOutput(e+"textOutput"),this._accessibleOutputs.grid&&this._updateGridOutput(e+"gridOutput"),this._accessibleOutputs.textLabel&&this._updateTextOutput(e+"textOutputLabel"),this._accessibleOutputs.gridLabel&&this._updateGridOutput(e+"gridOutputLabel"))},n.default.prototype._accsBackground=function(e){this.ingredients.pShapes=JSON.stringify(this.ingredients.shapes),this.ingredients.shapes={},this.ingredients.colors.backgroundRGBA!==e&&(this.ingredients.colors.backgroundRGBA=e,this.ingredients.colors.background=this._rgbColorName(e))},n.default.prototype._accsCanvasColors=function(e,t){"fill"===e?this.ingredients.colors.fillRGBA!==t&&(this.ingredients.colors.fillRGBA=t,this.ingredients.colors.fill=this._rgbColorName(t)):"stroke"===e&&this.ingredients.colors.strokeRGBA!==t&&(this.ingredients.colors.strokeRGBA=t,this.ingredients.colors.stroke=this._rgbColorName(t))},n.default.prototype._accsOutput=function(e,t){"ellipse"===e&&t[2]===t[3]?e="circle":"rectangle"===e&&t[2]===t[3]&&(e="square");var r={},i=!0,n=function(e,t){var r,i;i="rectangle"===e||"ellipse"===e||"arc"===e||"circle"===e||"square"===e?(r=Math.round(t[0]+t[2]/2),Math.round(t[1]+t[3]/2)):"triangle"===e?(r=(t[0]+t[2]+t[4])/3,(t[1]+t[3]+t[5])/3):"quadrilateral"===e?(r=(t[0]+t[2]+t[4]+t[6])/4,(t[1]+t[3]+t[5]+t[7])/4):"line"===e?(r=(t[0]+t[2])/2,(t[1]+t[3])/2):(r=t[0],t[1]);return[r,i]}(e,t);if("line"===e){r.color=this.ingredients.colors.stroke,r.length=Math.round(this.dist(t[0],t[1],t[2],t[3]));var a=l([t[0],[1]],this.width,this.height),o=l([t[2],[3]],this.width,this.height);r.loc=u(n,this.width,this.height),r.pos=a===o?"at ".concat(a):"from ".concat(a," to ").concat(o)}else"point"===e?r.color=this.ingredients.colors.stroke:(r.color=this.ingredients.colors.fill,r.area=function(e,t,r,i){var n=0;if("arc"===e){var a=((t[5]-t[4])%(2*Math.PI)+2*Math.PI)%(2*Math.PI);if(n=a*t[2]*t[3]/8,"open"===t[6]||"chord"===t[6]){var o=t[0],s=t[1],l=t[0]+t[2]/2*Math.cos(t[4]).toFixed(2),u=t[1]+t[3]/2*Math.sin(t[4]).toFixed(2),h=t[0]+t[2]/2*Math.cos(t[5]).toFixed(2),c=t[1]+t[3]/2*Math.sin(t[5]).toFixed(2),f=Math.abs(o*(u-c)+l*(c-s)+h*(s-u))/2;a>Math.PI?n+=f:n-=f}}else"ellipse"===e||"circle"===e?n=3.14*t[2]/2*t[3]/2:"line"===e?n=0:"point"===e?n=0:"quadrilateral"===e?n=Math.abs((t[6]+t[0])*(t[7]-t[1])+(t[0]+t[2])*(t[1]-t[3])+(t[2]+t[4])*(t[3]-t[5])+(t[4]+t[6])*(t[5]-t[7]))/2:"rectangle"===e||"square"===e?n=t[2]*t[3]:"triangle"===e&&(n=Math.abs(t[0]*(t[3]-t[5])+t[2]*(t[5]-t[1])+t[4]*(t[1]-t[3]))/2);return Math.round(100*n/(r*i))}(e,t,this.width,this.height)),r.pos=l(n,this.width,this.height),r.loc=u(n,this.width,this.height);if(this.ingredients.shapes[e]){if(this.ingredients.shapes[e]!==[r]){for(var s in this.ingredients.shapes[e])JSON.stringify(this.ingredients.shapes[e][s])===JSON.stringify(r)&&(i=!1);!0===i&&this.ingredients.shapes[e].push(r)}}else this.ingredients.shapes[e]=[r]};var a=n.default;r.default=a},{"../core/main":36}],20:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,n=(i=e("../core/main"))&&i.__esModule?i:{default:i};n.default.prototype._updateTextOutput=function(e){if(this.dummyDOM.querySelector("#".concat(e,"_summary"))){var t=this._accessibleOutputs[e],r=function(e,t){var r="",i=0;for(var n in t)for(var a in t[n]){var o='<li><a href="#'.concat(e,"shape").concat(i,'">').concat(t[n][a].color," ").concat(n,"</a>");"line"===n?o+=", ".concat(t[n][a].pos,", ").concat(t[n][a].length," pixels long.</li>"):(o+=", at ".concat(t[n][a].pos),"point"!==n&&(o+=", covering ".concat(t[n][a].area,"% of the canvas")),o+=".</li>"),r+=o,i++}return{numShapes:i,listShapes:r}}(e,this.ingredients.shapes),i=function(e,t,r,i){var n="Your output is a, ".concat(r," by ").concat(i," pixels, ").concat(t," canvas containing the following");n=1===e?"".concat(n," shape:"):"".concat(n," ").concat(e," shapes:");return n}(r.numShapes,this.ingredients.colors.background,this.width,this.height),n=function(e,t){var r="",i=0;for(var n in t)for(var a in t[n]){var o='<tr id="'.concat(e,"shape").concat(i,'"><th>').concat(t[n][a].color," ").concat(n,"</th>");"line"===n?o+="<td>location = ".concat(t[n][a].pos,"</td><td>length = ").concat(t[n][a].length," pixels</td></tr>"):(o+="<td>location = ".concat(t[n][a].pos,"</td>"),"point"!==n&&(o+="<td> area = ".concat(t[n][a].area,"%</td>")),o+="</tr>"),r+=o,i++}return r}(e,this.ingredients.shapes);i!==t.summary.innerHTML&&(t.summary.innerHTML=i),r.listShapes!==t.list.innerHTML&&(t.list.innerHTML=r.listShapes),n!==t.shapeDetails.innerHTML&&(t.shapeDetails.innerHTML=n),this._accessibleOutputs[e]=t}};var a=n.default;r.default=a},{"../core/main":36}],21:[function(e,t,r){"use strict";var i,n=(i=e("./core/main"))&&i.__esModule?i:{default:i};e("./core/constants"),e("./core/environment"),e("./core/friendly_errors/stacktrace"),e("./core/friendly_errors/validate_params"),e("./core/friendly_errors/file_errors"),e("./core/friendly_errors/fes_core"),e("./core/helpers"),e("./core/legacy"),e("./core/preload"),e("./core/p5.Element"),e("./core/p5.Graphics"),e("./core/p5.Renderer"),e("./core/p5.Renderer2D"),e("./core/rendering"),e("./core/shim"),e("./core/structure"),e("./core/transform"),e("./core/shape/2d_primitives"),e("./core/shape/attributes"),e("./core/shape/curves"),e("./core/shape/vertex"),e("./accessibility/outputs"),e("./accessibility/textOutput"),e("./accessibility/gridOutput"),e("./accessibility/color_namer"),e("./color/color_conversion"),e("./color/creating_reading"),e("./color/p5.Color"),e("./color/setting"),e("./data/p5.TypedDict"),e("./data/local_storage.js"),e("./dom/dom"),e("./accessibility/describe"),e("./events/acceleration"),e("./events/keyboard"),e("./events/mouse"),e("./events/touch"),e("./image/filters"),e("./image/image"),e("./image/loading_displaying"),e("./image/p5.Image"),e("./image/pixels"),e("./io/files"),e("./io/p5.Table"),e("./io/p5.TableRow"),e("./io/p5.XML"),e("./math/calculation"),e("./math/math"),e("./math/noise"),e("./math/p5.Vector"),e("./math/random"),e("./math/trigonometry"),e("./typography/attributes"),e("./typography/loading_displaying"),e("./typography/p5.Font"),e("./utilities/array_functions"),e("./utilities/conversion"),e("./utilities/string_functions"),e("./utilities/time_date"),e("./webgl/3d_primitives"),e("./webgl/interaction"),e("./webgl/light"),e("./webgl/loading"),e("./webgl/material"),e("./webgl/p5.Camera"),e("./webgl/p5.Geometry"),e("./webgl/p5.Matrix"),e("./webgl/p5.RendererGL.Immediate"),e("./webgl/p5.RendererGL"),e("./webgl/p5.RendererGL.Retained"),e("./webgl/p5.Shader"),e("./webgl/p5.RenderBuffer"),e("./webgl/p5.Texture"),e("./webgl/text"),e("./core/init"),t.exports=n.default},{"./accessibility/color_namer":16,"./accessibility/describe":17,"./accessibility/gridOutput":18,"./accessibility/outputs":19,"./accessibility/textOutput":20,"./color/color_conversion":22,"./color/creating_reading":23,"./color/p5.Color":24,"./color/setting":25,"./core/constants":26,"./core/environment":27,"./core/friendly_errors/fes_core":28,"./core/friendly_errors/file_errors":29,"./core/friendly_errors/stacktrace":30,"./core/friendly_errors/validate_params":31,"./core/helpers":32,"./core/init":33,"./core/legacy":35,"./core/main":36,"./core/p5.Element":37,"./core/p5.Graphics":38,"./core/p5.Renderer":39,"./core/p5.Renderer2D":40,"./core/preload":41,"./core/rendering":42,"./core/shape/2d_primitives":43,"./core/shape/attributes":44,"./core/shape/curves":45,"./core/shape/vertex":46,"./core/shim":47,"./core/structure":48,"./core/transform":49,"./data/local_storage.js":50,"./data/p5.TypedDict":51,"./dom/dom":52,"./events/acceleration":53,"./events/keyboard":54,"./events/mouse":55,"./events/touch":56,"./image/filters":57,"./image/image":58,"./image/loading_displaying":59,"./image/p5.Image":60,"./image/pixels":61,"./io/files":62,"./io/p5.Table":63,"./io/p5.TableRow":64,"./io/p5.XML":65,"./math/calculation":66,"./math/math":67,"./math/noise":68,"./math/p5.Vector":69,"./math/random":70,"./math/trigonometry":71,"./typography/attributes":72,"./typography/loading_displaying":73,"./typography/p5.Font":74,"./utilities/array_functions":75,"./utilities/conversion":76,"./utilities/string_functions":77,"./utilities/time_date":78,"./webgl/3d_primitives":79,"./webgl/interaction":80,"./webgl/light":81,"./webgl/loading":82,"./webgl/material":83,"./webgl/p5.Camera":84,"./webgl/p5.Geometry":85,"./webgl/p5.Matrix":86,"./webgl/p5.RenderBuffer":87,"./webgl/p5.RendererGL":90,"./webgl/p5.RendererGL.Immediate":88,"./webgl/p5.RendererGL.Retained":89,"./webgl/p5.Shader":91,"./webgl/p5.Texture":92,"./webgl/text":93}],22:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,n=(i=e("../core/main"))&&i.__esModule?i:{default:i};n.default.ColorConversion={},n.default.ColorConversion._hsbaToHSLA=function(e){var t=e[0],r=e[1],i=e[2],n=(2-r)*i/2;return 0!=n&&(1==n?r=0:n<.5?r/=2-r:r=r*i/(2-2*n)),[t,r,n,e[3]]},n.default.ColorConversion._hsbaToRGBA=function(e){var t=6*e[0],r=e[1],i=e[2],n=[];if(0===r)n=[i,i,i,e[3]];else{var a,o,s,l=Math.floor(t),u=i*(1-r),h=i*(1-r*(t-l)),c=i*(1-r*(1+l-t));s=1===l?(a=h,o=i,u):2===l?(a=u,o=i,c):3===l?(a=u,o=h,i):4===l?(a=c,o=u,i):5===l?(a=i,o=u,h):(a=i,o=c,u),n=[a,o,s,e[3]]}return n},n.default.ColorConversion._hslaToHSBA=function(e){var t,r=e[0],i=e[1],n=e[2];return[r,i=2*((t=n<.5?(1+i)*n:n+i-n*i)-n)/t,t,e[3]]},n.default.ColorConversion._hslaToRGBA=function(e){var t=6*e[0],r=e[1],i=e[2],n=[];if(0===r)n=[i,i,i,e[3]];else{var a,o=2*i-(a=i<.5?(1+r)*i:i+r-i*r),s=function(e,t,r){return e<0?e+=6:6<=e&&(e-=6),e<1?t+(r-t)*e:e<3?r:e<4?t+(r-t)*(4-e):t};n=[s(2+t,o,a),s(t,o,a),s(t-2,o,a),e[3]]}return n},n.default.ColorConversion._rgbaToHSBA=function(e){var t,r,i=e[0],n=e[1],a=e[2],o=Math.max(i,n,a),s=o-Math.min(i,n,a);return 0==s?r=t=0:(r=s/o,i===o?t=(n-a)/s:n===o?t=2+(a-i)/s:a===o&&(t=4+(i-n)/s),t<0?t+=6:6<=t&&(t-=6)),[t/6,r,o,e[3]]},n.default.ColorConversion._rgbaToHSLA=function(e){var t,r,i=e[0],n=e[1],a=e[2],o=Math.max(i,n,a),s=Math.min(i,n,a),l=o+s,u=o-s;return 0==u?r=t=0:(r=l<1?u/l:u/(2-l),i===o?t=(n-a)/u:n===o?t=2+(a-i)/u:a===o&&(t=4+(i-n)/u),t<0?t+=6:6<=t&&(t-=6)),[t/6,r,l/2,e[3]]};var a=n.default.ColorConversion;r.default=a},{"../core/main":36}],23:[function(e,t,r){"use strict";function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,c=(i=e("../core/main"))&&i.__esModule?i:{default:i},f=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var a=i?Object.getOwnPropertyDescriptor(e,n):null;a&&(a.get||a.set)?Object.defineProperty(r,n,a):r[n]=e[n]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}e("./p5.Color"),e("../core/friendly_errors/validate_params"),e("../core/friendly_errors/file_errors"),e("../core/friendly_errors/fes_core"),c.default.prototype.alpha=function(e){return c.default._validateParameters("alpha",arguments),this.color(e)._getAlpha()},c.default.prototype.blue=function(e){return c.default._validateParameters("blue",arguments),this.color(e)._getBlue()},c.default.prototype.brightness=function(e){return c.default._validateParameters("brightness",arguments),this.color(e)._getBrightness()},c.default.prototype.color=function(){if(c.default._validateParameters("color",arguments),arguments[0]instanceof c.default.Color)return arguments[0];var e=arguments[0]instanceof Array?arguments[0]:arguments;return new c.default.Color(this,e)},c.default.prototype.green=function(e){return c.default._validateParameters("green",arguments),this.color(e)._getGreen()},c.default.prototype.hue=function(e){return c.default._validateParameters("hue",arguments),this.color(e)._getHue()},c.default.prototype.lerpColor=function(e,t,r){c.default._validateParameters("lerpColor",arguments);var i,n,a,o,s,l,u=this._colorMode,h=this._colorMaxes;if(u===f.RGB)s=e.levels.map(function(e){return e/255}),l=t.levels.map(function(e){return e/255});else if(u===f.HSB)e._getBrightness(),t._getBrightness(),s=e.hsba,l=t.hsba;else{if(u!==f.HSL)throw new Error("".concat(u,"cannot be used for interpolation."));e._getLightness(),t._getLightness(),s=e.hsla,l=t.hsla}return r=Math.max(Math.min(r,1),0),void 0===this.lerp&&(this.lerp=function(e,t,r){return r*(t-e)+e}),i=this.lerp(s[0],l[0],r),n=this.lerp(s[1],l[1],r),a=this.lerp(s[2],l[2],r),o=this.lerp(s[3],l[3],r),i*=h[u][0],n*=h[u][1],a*=h[u][2],o*=h[u][3],this.color(i,n,a,o)},c.default.prototype.lightness=function(e){return c.default._validateParameters("lightness",arguments),this.color(e)._getLightness()},c.default.prototype.red=function(e){return c.default._validateParameters("red",arguments),this.color(e)._getRed()},c.default.prototype.saturation=function(e){return c.default._validateParameters("saturation",arguments),this.color(e)._getSaturation()};var n=c.default;r.default=n},{"../core/constants":26,"../core/friendly_errors/fes_core":28,"../core/friendly_errors/file_errors":29,"../core/friendly_errors/validate_params":31,"../core/main":36,"./p5.Color":24}],24:[function(e,t,r){"use strict";function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var c=i(e("../core/main")),f=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var a=i?Object.getOwnPropertyDescriptor(e,n):null;a&&(a.get||a.set)?Object.defineProperty(r,n,a):r[n]=e[n]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants")),d=i(e("./color_conversion"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}function i(e){return e&&e.__esModule?e:{default:e}}c.default.Color=function(e,t){if(this._storeModeAndMaxes(e._colorMode,e._colorMaxes),this.mode!==f.RGB&&this.mode!==f.HSL&&this.mode!==f.HSB)throw new Error("".concat(this.mode," is an invalid colorMode."));return this._array=c.default.Color._parseInputs.apply(this,t),this._calculateLevels(),this},c.default.Color.prototype.toString=function(e){var t=this.levels,r=this._array,i=r[3];switch(e){case"#rrggbb":return"#".concat(t[0]<16?"0".concat(t[0].toString(16)):t[0].toString(16),t[1]<16?"0".concat(t[1].toString(16)):t[1].toString(16),t[2]<16?"0".concat(t[2].toString(16)):t[2].toString(16));case"#rrggbbaa":return"#".concat(t[0]<16?"0".concat(t[0].toString(16)):t[0].toString(16),t[1]<16?"0".concat(t[1].toString(16)):t[1].toString(16),t[2]<16?"0".concat(t[2].toString(16)):t[2].toString(16),t[3]<16?"0".concat(t[2].toString(16)):t[3].toString(16));case"#rgb":return"#".concat(Math.round(15*r[0]).toString(16),Math.round(15*r[1]).toString(16),Math.round(15*r[2]).toString(16));case"#rgba":return"#".concat(Math.round(15*r[0]).toString(16),Math.round(15*r[1]).toString(16),Math.round(15*r[2]).toString(16),Math.round(15*r[3]).toString(16));case"rgb":return"rgb(".concat(t[0],", ",t[1],", ",t[2],")");case"rgb%":return"rgb(".concat((100*r[0]).toPrecision(3),"%, ",(100*r[1]).toPrecision(3),"%, ",(100*r[2]).toPrecision(3),"%)");case"rgba%":return"rgba(".concat((100*r[0]).toPrecision(3),"%, ",(100*r[1]).toPrecision(3),"%, ",(100*r[2]).toPrecision(3),"%, ",(100*r[3]).toPrecision(3),"%)");case"hsb":case"hsv":return this.hsba||(this.hsba=d.default._rgbaToHSBA(this._array)),"hsb(".concat(this.hsba[0]*this.maxes[f.HSB][0],", ",this.hsba[1]*this.maxes[f.HSB][1],", ",this.hsba[2]*this.maxes[f.HSB][2],")");case"hsb%":case"hsv%":return this.hsba||(this.hsba=d.default._rgbaToHSBA(this._array)),"hsb(".concat((100*this.hsba[0]).toPrecision(3),"%, ",(100*this.hsba[1]).toPrecision(3),"%, ",(100*this.hsba[2]).toPrecision(3),"%)");case"hsba":case"hsva":return this.hsba||(this.hsba=d.default._rgbaToHSBA(this._array)),"hsba(".concat(this.hsba[0]*this.maxes[f.HSB][0],", ",this.hsba[1]*this.maxes[f.HSB][1],", ",this.hsba[2]*this.maxes[f.HSB][2],", ",i,")");case"hsba%":case"hsva%":return this.hsba||(this.hsba=d.default._rgbaToHSBA(this._array)),"hsba(".concat((100*this.hsba[0]).toPrecision(3),"%, ",(100*this.hsba[1]).toPrecision(3),"%, ",(100*this.hsba[2]).toPrecision(3),"%, ",(100*i).toPrecision(3),"%)");case"hsl":return this.hsla||(this.hsla=d.default._rgbaToHSLA(this._array)),"hsl(".concat(this.hsla[0]*this.maxes[f.HSL][0],", ",this.hsla[1]*this.maxes[f.HSL][1],", ",this.hsla[2]*this.maxes[f.HSL][2],")");case"hsl%":return this.hsla||(this.hsla=d.default._rgbaToHSLA(this._array)),"hsl(".concat((100*this.hsla[0]).toPrecision(3),"%, ",(100*this.hsla[1]).toPrecision(3),"%, ",(100*this.hsla[2]).toPrecision(3),"%)");case"hsla":return this.hsla||(this.hsla=d.default._rgbaToHSLA(this._array)),"hsla(".concat(this.hsla[0]*this.maxes[f.HSL][0],", ",this.hsla[1]*this.maxes[f.HSL][1],", ",this.hsla[2]*this.maxes[f.HSL][2],", ",i,")");case"hsla%":return this.hsla||(this.hsla=d.default._rgbaToHSLA(this._array)),"hsl(".concat((100*this.hsla[0]).toPrecision(3),"%, ",(100*this.hsla[1]).toPrecision(3),"%, ",(100*this.hsla[2]).toPrecision(3),"%, ",(100*i).toPrecision(3),"%)");case"rgba":default:return"rgba(".concat(t[0],",",t[1],",",t[2],",",i,")")}},c.default.Color.prototype.setRed=function(e){this._array[0]=e/this.maxes[f.RGB][0],this._calculateLevels()},c.default.Color.prototype.setGreen=function(e){this._array[1]=e/this.maxes[f.RGB][1],this._calculateLevels()},c.default.Color.prototype.setBlue=function(e){this._array[2]=e/this.maxes[f.RGB][2],this._calculateLevels()},c.default.Color.prototype.setAlpha=function(e){this._array[3]=e/this.maxes[this.mode][3],this._calculateLevels()},c.default.Color.prototype._calculateLevels=function(){for(var e=this._array,t=this.levels=new Array(e.length),r=e.length-1;0<=r;--r)t[r]=Math.round(255*e[r])},c.default.Color.prototype._getAlpha=function(){return this._array[3]*this.maxes[this.mode][3]},c.default.Color.prototype._storeModeAndMaxes=function(e,t){this.mode=e,this.maxes=t},c.default.Color.prototype._getMode=function(){return this.mode},c.default.Color.prototype._getMaxes=function(){return this.maxes},c.default.Color.prototype._getBlue=function(){return this._array[2]*this.maxes[f.RGB][2]},c.default.Color.prototype._getBrightness=function(){return this.hsba||(this.hsba=d.default._rgbaToHSBA(this._array)),this.hsba[2]*this.maxes[f.HSB][2]},c.default.Color.prototype._getGreen=function(){return this._array[1]*this.maxes[f.RGB][1]},c.default.Color.prototype._getHue=function(){return this.mode===f.HSB?(this.hsba||(this.hsba=d.default._rgbaToHSBA(this._array)),this.hsba[0]*this.maxes[f.HSB][0]):(this.hsla||(this.hsla=d.default._rgbaToHSLA(this._array)),this.hsla[0]*this.maxes[f.HSL][0])},c.default.Color.prototype._getLightness=function(){return this.hsla||(this.hsla=d.default._rgbaToHSLA(this._array)),this.hsla[2]*this.maxes[f.HSL][2]},c.default.Color.prototype._getRed=function(){return this._array[0]*this.maxes[f.RGB][0]},c.default.Color.prototype._getSaturation=function(){return this.mode===f.HSB?(this.hsba||(this.hsba=d.default._rgbaToHSBA(this._array)),this.hsba[1]*this.maxes[f.HSB][1]):(this.hsla||(this.hsla=d.default._rgbaToHSLA(this._array)),this.hsla[1]*this.maxes[f.HSL][1])};var p={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",rebeccapurple:"#663399",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"},n=/\s*/,a=/(\d{1,3})/,l=/((?:\d+(?:\.\d+)?)|(?:\.\d+))/,u=new RegExp("".concat(l.source,"%")),m={HEX3:/^#([a-f0-9])([a-f0-9])([a-f0-9])$/i,HEX4:/^#([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])$/i,HEX6:/^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i,HEX8:/^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i,RGB:new RegExp(["^rgb\\(",a.source,",",a.source,",",a.source,"\\)$"].join(n.source),"i"),RGB_PERCENT:new RegExp(["^rgb\\(",u.source,",",u.source,",",u.source,"\\)$"].join(n.source),"i"),RGBA:new RegExp(["^rgba\\(",a.source,",",a.source,",",a.source,",",l.source,"\\)$"].join(n.source),"i"),RGBA_PERCENT:new RegExp(["^rgba\\(",u.source,",",u.source,",",u.source,",",l.source,"\\)$"].join(n.source),"i"),HSL:new RegExp(["^hsl\\(",a.source,",",u.source,",",u.source,"\\)$"].join(n.source),"i"),HSLA:new RegExp(["^hsla\\(",a.source,",",u.source,",",u.source,",",l.source,"\\)$"].join(n.source),"i"),HSB:new RegExp(["^hsb\\(",a.source,",",u.source,",",u.source,"\\)$"].join(n.source),"i"),HSBA:new RegExp(["^hsba\\(",a.source,",",u.source,",",u.source,",",l.source,"\\)$"].join(n.source),"i")};c.default.Color._parseInputs=function(e,t,r,i){var n,a=arguments.length,o=this.mode,s=this.maxes[o],l=[];if(3<=a){for(l[0]=e/s[0],l[1]=t/s[1],l[2]=r/s[2],l[3]="number"==typeof i?i/s[3]:1,n=l.length-1;0<=n;--n){var u=l[n];u<0?l[n]=0:1<u&&(l[n]=1)}return o===f.HSL?d.default._hslaToRGBA(l):o===f.HSB?d.default._hsbaToRGBA(l):l}if(1===a&&"string"==typeof e){var h=e.trim().toLowerCase();if(p[h])return c.default.Color._parseInputs.call(this,p[h]);if(m.HEX3.test(h))return(l=m.HEX3.exec(h).slice(1).map(function(e){return parseInt(e+e,16)/255}))[3]=1,l;if(m.HEX6.test(h))return(l=m.HEX6.exec(h).slice(1).map(function(e){return parseInt(e,16)/255}))[3]=1,l;if(m.HEX4.test(h))return l=m.HEX4.exec(h).slice(1).map(function(e){return parseInt(e+e,16)/255});if(m.HEX8.test(h))return l=m.HEX8.exec(h).slice(1).map(function(e){return parseInt(e,16)/255});if(m.RGB.test(h))return(l=m.RGB.exec(h).slice(1).map(function(e){return e/255}))[3]=1,l;if(m.RGB_PERCENT.test(h))return(l=m.RGB_PERCENT.exec(h).slice(1).map(function(e){return parseFloat(e)/100}))[3]=1,l;if(m.RGBA.test(h))return l=m.RGBA.exec(h).slice(1).map(function(e,t){return 3===t?parseFloat(e):e/255});if(m.RGBA_PERCENT.test(h))return l=m.RGBA_PERCENT.exec(h).slice(1).map(function(e,t){return 3===t?parseFloat(e):parseFloat(e)/100});if(m.HSL.test(h)?(l=m.HSL.exec(h).slice(1).map(function(e,t){return 0===t?parseInt(e,10)/360:parseInt(e,10)/100}))[3]=1:m.HSLA.test(h)&&(l=m.HSLA.exec(h).slice(1).map(function(e,t){return 0===t?parseInt(e,10)/360:3===t?parseFloat(e):parseInt(e,10)/100})),(l=l.map(function(e){return Math.max(Math.min(e,1),0)})).length)return d.default._hslaToRGBA(l);if(m.HSB.test(h)?(l=m.HSB.exec(h).slice(1).map(function(e,t){return 0===t?parseInt(e,10)/360:parseInt(e,10)/100}))[3]=1:m.HSBA.test(h)&&(l=m.HSBA.exec(h).slice(1).map(function(e,t){return 0===t?parseInt(e,10)/360:3===t?parseFloat(e):parseInt(e,10)/100})),l.length){for(n=l.length-1;0<=n;--n)l[n]=Math.max(Math.min(l[n],1),0);return d.default._hsbaToRGBA(l)}l=[1,1,1,1]}else{if(1!==a&&2!==a||"number"!=typeof e)throw new Error("".concat(arguments,"is not a valid color representation."));l[0]=e/s[2],l[1]=e/s[2],l[2]=e/s[2],l[3]="number"==typeof t?t/s[3]:1,l=l.map(function(e){return Math.max(Math.min(e,1),0)})}return l};var h=c.default.Color;r.default=h},{"../core/constants":26,"../core/main":36,"./color_conversion":22}],25:[function(e,t,r){"use strict";function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,s=(i=e("../core/main"))&&i.__esModule?i:{default:i},l=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=u();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var a=i?Object.getOwnPropertyDescriptor(e,n):null;a&&(a.get||a.set)?Object.defineProperty(r,n,a):r[n]=e[n]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants"));function u(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return u=function(){return e},e}e("./p5.Color"),s.default.prototype.background=function(){var e;return(e=this._renderer).background.apply(e,arguments),this},s.default.prototype.clear=function(){return this._renderer.clear(),this},s.default.prototype.colorMode=function(e,t,r,i,n){if(s.default._validateParameters("colorMode",arguments),e===l.RGB||e===l.HSB||e===l.HSL){this._colorMode=e;var a=this._colorMaxes[e];2===arguments.length?(a[0]=t,a[1]=t,a[2]=t,a[3]=t):4===arguments.length?(a[0]=t,a[1]=r,a[2]=i):5===arguments.length&&(a[0]=t,a[1]=r,a[2]=i,a[3]=n)}return this},s.default.prototype.fill=function(){var e;return this._renderer._setProperty("_fillSet",!0),this._renderer._setProperty("_doFill",!0),(e=this._renderer).fill.apply(e,arguments),this},s.default.prototype.noFill=function(){return this._renderer._setProperty("_doFill",!1),this},s.default.prototype.noStroke=function(){return this._renderer._setProperty("_doStroke",!1),this},s.default.prototype.stroke=function(){var e;return this._renderer._setProperty("_strokeSet",!0),this._renderer._setProperty("_doStroke",!0),(e=this._renderer).stroke.apply(e,arguments),this},s.default.prototype.erase=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:255,t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:255;return this._renderer.erase(e,t),this},s.default.prototype.noErase=function(){return this._renderer.noErase(),this};var n=s.default;r.default=n},{"../core/constants":26,"../core/main":36,"./p5.Color":24}],26:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.FILL=r.STROKE=r.CURVE=r.BEZIER=r.QUADRATIC=r.LINEAR=r._CTX_MIDDLE=r._DEFAULT_LEADMULT=r._DEFAULT_TEXT_FILL=r.BOLDITALIC=r.BOLD=r.ITALIC=r.NORMAL=r.BLUR=r.ERODE=r.DILATE=r.POSTERIZE=r.INVERT=r.OPAQUE=r.GRAY=r.THRESHOLD=r.BURN=r.DODGE=r.SOFT_LIGHT=r.HARD_LIGHT=r.OVERLAY=r.REPLACE=r.SCREEN=r.MULTIPLY=r.EXCLUSION=r.SUBTRACT=r.DIFFERENCE=r.LIGHTEST=r.DARKEST=r.ADD=r.REMOVE=r.BLEND=r.UP_ARROW=r.TAB=r.SHIFT=r.RIGHT_ARROW=r.RETURN=r.OPTION=r.LEFT_ARROW=r.ESCAPE=r.ENTER=r.DOWN_ARROW=r.DELETE=r.CONTROL=r.BACKSPACE=r.ALT=r.AUTO=r.HSL=r.HSB=r.RGB=r.MITER=r.BEVEL=r.ROUND=r.SQUARE=r.PROJECT=r.PIE=r.CHORD=r.OPEN=r.CLOSE=r.TESS=r.QUAD_STRIP=r.QUADS=r.TRIANGLE_STRIP=r.TRIANGLE_FAN=r.TRIANGLES=r.LINE_LOOP=r.LINE_STRIP=r.LINES=r.POINTS=r.BASELINE=r.BOTTOM=r.TOP=r.CENTER=r.LEFT=r.RIGHT=r.RADIUS=r.CORNERS=r.CORNER=r.RAD_TO_DEG=r.DEG_TO_RAD=r.RADIANS=r.DEGREES=r.TWO_PI=r.TAU=r.QUARTER_PI=r.PI=r.HALF_PI=r.WAIT=r.TEXT=r.MOVE=r.HAND=r.CROSS=r.ARROW=r.WEBGL=r.P2D=void 0,r.FALLBACK=r.LABEL=r.AXES=r.GRID=r._DEFAULT_FILL=r._DEFAULT_STROKE=r.PORTRAIT=r.LANDSCAPE=r.MIRROR=r.CLAMP=r.REPEAT=r.NEAREST=r.IMAGE=r.IMMEDIATE=r.TEXTURE=void 0;var i=Math.PI;r.P2D="p2d";r.WEBGL="webgl";r.ARROW="default";r.CROSS="crosshair";r.HAND="pointer";r.MOVE="move";r.TEXT="text";r.WAIT="wait";var n=i/2;r.HALF_PI=n;var a=i;r.PI=a;var o=i/4;r.QUARTER_PI=o;var s=2*i;r.TAU=s;var l=2*i;r.TWO_PI=l;r.DEGREES="degrees";r.RADIANS="radians";var u=i/180;r.DEG_TO_RAD=u;var h=180/i;r.RAD_TO_DEG=h;r.CORNER="corner";r.CORNERS="corners";r.RADIUS="radius";r.RIGHT="right";r.LEFT="left";r.CENTER="center";r.TOP="top";r.BOTTOM="bottom";r.BASELINE="alphabetic";r.POINTS=0;r.LINES=1;r.LINE_STRIP=3;r.LINE_LOOP=2;r.TRIANGLES=4;r.TRIANGLE_FAN=6;r.TRIANGLE_STRIP=5;r.QUADS="quads";r.QUAD_STRIP="quad_strip";r.TESS="tess";r.CLOSE="close";r.OPEN="open";r.CHORD="chord";r.PIE="pie";r.PROJECT="square";r.SQUARE="butt";r.ROUND="round";r.BEVEL="bevel";r.MITER="miter";r.RGB="rgb";r.HSB="hsb";r.HSL="hsl";r.AUTO="auto";r.ALT=18;r.BACKSPACE=8;r.CONTROL=17;r.DELETE=46;r.DOWN_ARROW=40;r.ENTER=13;r.ESCAPE=27;r.LEFT_ARROW=37;r.OPTION=18;r.RETURN=13;r.RIGHT_ARROW=39;r.SHIFT=16;r.TAB=9;r.UP_ARROW=38;r.BLEND="source-over";r.REMOVE="destination-out";r.ADD="lighter";r.DARKEST="darken";r.LIGHTEST="lighten";r.DIFFERENCE="difference";r.SUBTRACT="subtract";r.EXCLUSION="exclusion";r.MULTIPLY="multiply";r.SCREEN="screen";r.REPLACE="copy";r.OVERLAY="overlay";r.HARD_LIGHT="hard-light";r.SOFT_LIGHT="soft-light";r.DODGE="color-dodge";r.BURN="color-burn";r.THRESHOLD="threshold";r.GRAY="gray";r.OPAQUE="opaque";r.INVERT="invert";r.POSTERIZE="posterize";r.DILATE="dilate";r.ERODE="erode";r.BLUR="blur";r.NORMAL="normal";r.ITALIC="italic";r.BOLD="bold";r.BOLDITALIC="bold italic";r._DEFAULT_TEXT_FILL="#000000";r._DEFAULT_LEADMULT=1.25;r._CTX_MIDDLE="middle";r.LINEAR="linear";r.QUADRATIC="quadratic";r.BEZIER="bezier";r.CURVE="curve";r.STROKE="stroke";r.FILL="fill";r.TEXTURE="texture";r.IMMEDIATE="immediate";r.IMAGE="image";r.NEAREST="nearest";r.REPEAT="repeat";r.CLAMP="clamp";r.MIRROR="mirror";r.LANDSCAPE="landscape";r.PORTRAIT="portrait";r._DEFAULT_STROKE="#000000";r._DEFAULT_FILL="#FFFFFF";r.GRID="grid";r.AXES="axes";r.LABEL="label";r.FALLBACK="fallback"},{}],27:[function(e,t,r){"use strict";function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,n=(i=e("./main"))&&i.__esModule?i:{default:i},a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var a=i?Object.getOwnPropertyDescriptor(e,n):null;a&&(a.get||a.set)?Object.defineProperty(r,n,a):r[n]=e[n]}r.default=e,t&&t.set(e,r);return r}(e("./constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}var l=[a.ARROW,a.CROSS,a.HAND,a.MOVE,a.TEXT,a.WAIT];n.default.prototype._frameRate=0,n.default.prototype._lastFrameTime=window.performance.now(),n.default.prototype._targetFrameRate=60;var u=window.print;function h(){return window.innerWidth||document.documentElement&&document.documentElement.clientWidth||document.body&&document.body.clientWidth||0}function c(){return window.innerHeight||document.documentElement&&document.documentElement.clientHeight||document.body&&document.body.clientHeight||0}n.default.prototype.print=function(){var e;arguments.length?(e=console).log.apply(e,arguments):u()},n.default.prototype.frameCount=0,n.default.prototype.deltaTime=0,n.default.prototype.focused=document.hasFocus(),n.default.prototype.cursor=function(e,t,r){var i="auto",n=this._curElement.elt;if(l.includes(e))i=e;else if("string"==typeof e){var a="";t&&r&&"number"==typeof t&&"number"==typeof r&&(a="".concat(t," ").concat(r)),i="http://"===e.substring(0,7)||"https://"===e.substring(0,8)?"url(".concat(e,") ").concat(a,", auto"):/\.(cur|jpg|jpeg|gif|png|CUR|JPG|JPEG|GIF|PNG)$/.test(e)?"url(".concat(e,") ").concat(a,", auto"):e}n.style.cursor=i},n.default.prototype.frameRate=function(e){return n.default._validateParameters("frameRate",arguments),"number"!=typeof e||e<0?this._frameRate:(this._setProperty("_targetFrameRate",e),0===e&&this._setProperty("_frameRate",e),this)},n.default.prototype.getFrameRate=function(){return this.frameRate()},n.default.prototype.setFrameRate=function(e){return this.frameRate(e)},n.default.prototype.noCursor=function(){this._curElement.elt.style.cursor="none"},n.default.prototype.displayWidth=screen.width,n.default.prototype.displayHeight=screen.height,n.default.prototype.windowWidth=h(),n.default.prototype.windowHeight=c(),n.default.prototype._onresize=function(e){this._setProperty("windowWidth",h()),this._setProperty("windowHeight",c());var t,r=this._isGlobal?window:this;"function"==typeof r.windowResized&&(void 0===(t=r.windowResized(e))||t||e.preventDefault())},n.default.prototype.width=0,n.default.prototype.height=0,n.default.prototype.fullscreen=function(e){if(n.default._validateParameters("fullscreen",arguments),void 0===e)return document.fullscreenElement||document.webkitFullscreenElement||document.mozFullScreenElement||document.msFullscreenElement;e?function(e){if(!(document.fullscreenEnabled||document.webkitFullscreenEnabled||document.mozFullScreenEnabled||document.msFullscreenEnabled))throw new Error("Fullscreen not enabled in this browser.");e.requestFullscreen?e.requestFullscreen():e.mozRequestFullScreen?e.mozRequestFullScreen():e.webkitRequestFullscreen?e.webkitRequestFullscreen():e.msRequestFullscreen&&e.msRequestFullscreen()}(document.documentElement):document.exitFullscreen?document.exitFullscreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitExitFullscreen?document.webkitExitFullscreen():document.msExitFullscreen&&document.msExitFullscreen()},n.default.prototype.pixelDensity=function(e){var t;return n.default._validateParameters("pixelDensity",arguments),"number"==typeof e?(e!==this._pixelDensity&&(this._pixelDensity=e),(t=this).resizeCanvas(this.width,this.height,!0)):t=this._pixelDensity,t},n.default.prototype.displayDensity=function(){return window.devicePixelRatio},n.default.prototype.getURL=function(){return location.href},n.default.prototype.getURLPath=function(){return location.pathname.split("/").filter(function(e){return""!==e})},n.default.prototype.getURLParams=function(){for(var e,t=/[?&]([^&=]+)(?:[&=])([^&=]+)/gim,r={};null!=(e=t.exec(location.search));)e.index===t.lastIndex&&t.lastIndex++,r[e[1]]=e[2];return r};var f=n.default;r.default=f},{"./constants":26,"./main":36}],28:[function(r,e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i,n=(i=r("../main"))&&i.__esModule?i:{default:i};r("../internationalization");var a=null,o=null;n.default._friendlyError=n.default._checkForUserDefinedFunctions=n.default._fesErrorMonitor=function(){},a=null;var s="https://github.com/processing/p5.js/wiki/p5.js-overview#why-cant-i-assign-variables-using-p5-functions-and-variables-before-setup";o=function(){function e(r){return Object.getOwnPropertyNames(r).filter(function(e){return"_"!==e[0]&&(!(e in t)&&(t[e]=!0))}).map(function(e){var t;return t="function"==typeof r[e]?"function":e===e.toUpperCase()?"constant":"variable",{name:e,type:t}})}var t={};(a=[].concat(e(n.default.prototype),e(r("../constants")))).sort(function(e,t){return t.name.length-e.name.length})};function l(r,i){i=i||console.log.bind(console),a||o(),a.some(function(e){if(r.message&&null!==r.message.match("\\W?".concat(e.name,"\\W"))){var t="function"===e.type?"".concat(e.name,"()"):e.name;return i("Did you just try to use p5.js's ".concat(t," ").concat(e.type,"? If so, you may want to move it into your sketch's setup() function.\n\nFor more details, see: ").concat(s)),!0}})}n.default.prototype._helpForMisusedAtTopLevelCode=l,"complete"!==document.readyState&&(window.addEventListener("error",l,!1),window.addEventListener("load",function(){window.removeEventListener("error",l,!1)}));var u=n.default;t.default=u},{"../constants":26,"../internationalization":34,"../main":36,"./browser_errors":void 0}],29:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,n=(i=e("../main"))&&i.__esModule?i:{default:i};e("../internationalization");n.default._friendlyFileLoadError=function(){};var a=n.default;r.default=a},{"../internationalization":34,"../main":36}],30:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,n=(i=e("../main"))&&i.__esModule?i:{default:i};function a(){var t=/(^|@)\S+:\d+/,r=/^\s*at .*(\S+:\d+|\(native\))/m,i=/^(eval@)?(\[native code])?$/;return{parse:function(e){return void 0!==e.stacktrace||void 0!==e["opera#sourceloc"]?this.parseOpera(e):e.stack&&e.stack.match(r)?this.parseV8OrIE(e):e.stack?this.parseFFOrSafari(e):void 0},extractLocation:function(e){if(-1===e.indexOf(":"))return[e];var t=/(.+?)(?::(\d+))?(?::(\d+))?$/.exec(e.replace(/[()]/g,""));return[t[1],t[2]||void 0,t[3]||void 0]},parseV8OrIE:function(e){return e.stack.split("\n").filter(function(e){return!!e.match(r)},this).map(function(e){-1<e.indexOf("(eval ")&&(e=e.replace(/eval code/g,"eval").replace(/(\(eval at [^()]*)|(\),.*$)/g,""));var t=e.replace(/^\s+/,"").replace(/\(eval code/g,"("),r=t.match(/ (\((.+):(\d+):(\d+)\)$)/),i=(t=r?t.replace(r[0],""):t).split(/\s+/).slice(1),n=this.extractLocation(r?r[1]:i.pop());return{functionName:i.join(" ")||void 0,fileName:-1<["eval","<anonymous>"].indexOf(n[0])?void 0:n[0],lineNumber:n[1],columnNumber:n[2],source:e}},this)},parseFFOrSafari:function(e){return e.stack.split("\n").filter(function(e){return!e.match(i)},this).map(function(e){if(-1<e.indexOf(" > eval")&&(e=e.replace(/ line (\d+)(?: > eval line \d+)* > eval:\d+:\d+/g,":$1")),-1===e.indexOf("@")&&-1===e.indexOf(":"))return{functionName:e};var t=/((.*".+"[^@]*)?[^@]*)(?:@)/,r=e.match(t),i=r&&r[1]?r[1]:void 0,n=this.extractLocation(e.replace(t,""));return{functionName:i,fileName:n[0],lineNumber:n[1],columnNumber:n[2],source:e}},this)},parseOpera:function(e){return!e.stacktrace||-1<e.message.indexOf("\n")&&e.message.split("\n").length>e.stacktrace.split("\n").length?this.parseOpera9(e):e.stack?this.parseOpera11(e):this.parseOpera10(e)},parseOpera9:function(e){for(var t=/Line (\d+).*script (?:in )?(\S+)/i,r=e.message.split("\n"),i=[],n=2,a=r.length;n<a;n+=2){var o=t.exec(r[n]);o&&i.push({fileName:o[2],lineNumber:o[1],source:r[n]})}return i},parseOpera10:function(e){for(var t=/Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i,r=e.stacktrace.split("\n"),i=[],n=0,a=r.length;n<a;n+=2){var o=t.exec(r[n]);o&&i.push({functionName:o[3]||void 0,fileName:o[2],lineNumber:o[1],source:r[n]})}return i},parseOpera11:function(e){return e.stack.split("\n").filter(function(e){return!!e.match(t)&&!e.match(/^Error created at/)},this).map(function(e){var t,r=e.split("@"),i=this.extractLocation(r.pop()),n=r.shift()||"",a=n.replace(/<anonymous function(: (\w+))?>/,"$2").replace(/\([^)]*\)/g,"")||void 0;return n.match(/\(([^)]*)\)/)&&(t=n.replace(/^[^(]+\(([^)]*)\)$/,"$1")),{functionName:a,args:void 0===t||"[arguments not available]"===t?void 0:t.split(","),fileName:i[0],lineNumber:i[1],columnNumber:i[2],source:e}},this)}}}n.default._getErrorStackParser=function(){return new a};var o=n.default;r.default=o},{"../main":36}],31:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,n=(i=e("../main"))&&i.__esModule?i:{default:i};(function(e){if(e&&e.__esModule)return;if(null===e||"object"!==s(e)&&"function"!=typeof e)return;var t=o();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var a=i?Object.getOwnPropertyDescriptor(e,n):null;a&&(a.get||a.set)?Object.defineProperty(r,n,a):r[n]=e[n]}r.default=e,t&&t.set(e,r)})(e("../constants")),e("../internationalization");function o(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return o=function(){return e},e}function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}n.default._validateParameters=n.default._clearValidateParamsCache=function(){};var a=n.default;r.default=a},{"../../../docs/parameterData.json":void 0,"../constants":26,"../internationalization":34,"../main":36}],32:[function(e,t,r){"use strict";function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var a=i?Object.getOwnPropertyDescriptor(e,n):null;a&&(a.get||a.set)?Object.defineProperty(r,n,a):r[n]=e[n]}r.default=e,t&&t.set(e,r);return r}(e("./constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}var i={modeAdjust:function(e,t,r,i,n){return n===a.CORNER?{x:e,y:t,w:r,h:i}:n===a.CORNERS?{x:e,y:t,w:r-e,h:i-t}:n===a.RADIUS?{x:e-r,y:t-i,w:2*r,h:2*i}:n===a.CENTER?{x:e-.5*r,y:t-.5*i,w:r,h:i}:void 0}};r.default=i},{"./constants":26}],33:[function(e,t,r){"use strict";var i,n=(i=e("../core/main"))&&i.__esModule?i:{default:i};e("./internationalization");var a=Promise.resolve();Promise.all([new Promise(function(e,t){"complete"===document.readyState?e():window.addEventListener("load",e,!1)}),a]).then(function(){void 0===window._setupDone?window.mocha||(window.setup&&"function"==typeof window.setup||window.draw&&"function"==typeof window.draw)&&!n.default.instance&&new n.default:console.warn("p5.js seems to have been imported multiple times. Please remove the duplicate import")})},{"../core/main":36,"./internationalization":34}],34:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.initialize=r.translator=void 0;var a,o,i=s(e("i18next")),n=s(e("i18next-browser-languagedetector"));function s(e){return e&&e.__esModule?e:{default:e}}function l(e,t){for(var r=0;r<t.length;r++){var i=t[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}var u=function(){function r(e,t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,r),this.init(e,t)}var e,t,i;return e=r,(t=[{key:"fetchWithTimeout",value:function(e,t,r){var i=2<arguments.length&&void 0!==r?r:2e3;return Promise.race([fetch(e,t),new Promise(function(e,t){return setTimeout(function(){return t(new Error("timeout"))},i)})])}},{key:"init",value:function(e,t){var r=1<arguments.length&&void 0!==t?t:{};this.services=e,this.options=r}},{key:"read",value:function(e,t,r){var i=this.options.loadPath;if(e===this.options.fallback)r(null,a[e][t]);else if(o.includes(e)){var n=this.services.interpolator.interpolate(i,{lng:e,ns:t});this.loadUrl(n,r)}else r("Not found",!1)}},{key:"loadUrl",value:function(t,r){this.fetchWithTimeout(t).then(function(e){if(!e.ok)throw new Error("failed loading ".concat(t));return e.json()},function(){throw new Error("failed loading ".concat(t))}).then(function(e){return r(null,e)}).catch(r)}}])&&l(e.prototype,t),i&&l(e,i),r}();u.type="backend";var h=function(e,t){console.debug("p5.js translator called before translations were loaded"),i.default.t(e,t)};r.translator=h;r.initialize=function(){return i.default.use(n.default).use(u).init({fallbackLng:"en",nestingPrefix:"$tr(",nestingSuffix:")",defaultNS:"translation",returnEmptyString:!1,interpolation:{escapeValue:!1},detection:{checkWhitelist:!1,order:["querystring","navigator","htmlTag","path","subdomain"],caches:[]},backend:{fallback:"en",loadPath:"https://cdn.jsdelivr.net/npm/p5/translations/{{lng}}/{{ns}}.json"},partialBundledLanguages:!0,resources:a}).then(function(e){r.translator=h=e},function(e){return console.debug("Translations failed to load (".concat(e,")"))})}},{"../../translations":void 0,"../../translations/dev":void 0,i18next:3,"i18next-browser-languagedetector":3}],35:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,n=(i=e("./main"))&&i.__esModule?i:{default:i};n.default.prototype.pushStyle=function(){throw new Error("pushStyle() not used, see push()")},n.default.prototype.popStyle=function(){throw new Error("popStyle() not used, see pop()")},n.default.prototype.popMatrix=function(){throw new Error("popMatrix() not used, see pop()")},n.default.prototype.pushMatrix=function(){throw new Error("pushMatrix() not used, see push()")};var a=n.default;r.default=a},{"./main":36}],36:[function(e,t,r){"use strict";function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0,e("./shim");var i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var a=i?Object.getOwnPropertyDescriptor(e,n):null;a&&(a.get||a.set)?Object.defineProperty(r,n,a):r[n]=e[n]}r.default=e,t&&t.set(e,r);return r}(e("./constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}function n(e,t){for(var r=0;r<t.length;r++){var i=t[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}var a=function(){function _(e,t,r){var f=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,_),this._accessibleOutputs={text:!1,grid:!1,textLabel:!1,gridLabel:!1},this._setupDone=!1,this._pixelDensity=Math.ceil(window.devicePixelRatio)||1,this._userNode=t,this._curElement=null,this._elements=[],this._glAttributes=null,this._requestAnimId=0,this._preloadCount=0,this._isGlobal=!1,this._loop=!0,this._initializeInstanceVariables(),this._defaultCanvasSize={width:100,height:100},this._events={mousemove:null,mousedown:null,mouseup:null,dragend:null,dragover:null,click:null,dblclick:null,mouseover:null,mouseout:null,keydown:null,keyup:null,keypress:null,touchstart:null,touchmove:null,touchend:null,resize:null,blur:null},this._millisStart=-1,this._lcg_random_state=null,this._gaussian_previous=!1,this._events.wheel=null,this._loadingScreenId="p5_loading",this._registeredMethods={};var i=Object.getOwnPropertyNames(_.prototype._registeredMethods),n=!0,a=!1,o=void 0;try{for(var s,l=i[Symbol.iterator]();!(n=(s=l.next()).done);n=!0){var u=s.value;this._registeredMethods[u]=_.prototype._registeredMethods[u].slice()}}catch(e){a=!0,o=e}finally{try{n||null==l.return||l.return()}finally{if(a)throw o}}window.DeviceOrientationEvent&&(this._events.deviceorientation=null),window.DeviceMotionEvent&&!window._isNodeWebkit&&(this._events.devicemotion=null),this._start=function(){f._userNode&&"string"==typeof f._userNode&&(f._userNode=document.getElementById(f._userNode));var e=f._isGlobal?window:f;if(e.preload){var t=document.getElementById(f._loadingScreenId);if(!t)(t=document.createElement("div")).innerHTML="Loading...",t.style.position="absolute",t.id=f._loadingScreenId,(f._userNode||document.body).appendChild(t);var r=f._preloadMethods;for(var i in r){r[i]=r[i]||_;var n=r[i];n!==_.prototype&&n!==_||(f._isGlobal&&(window[i]=f._wrapPreload(f,i)),n=f),f._registeredPreloadMethods[i]=n[i],n[i]=f._wrapPreload(n,i)}e.preload(),f._runIfPreloadsAreDone()}else f._setup(),f._draw()},this._runIfPreloadsAreDone=function(){var e=this._isGlobal?window:this;if(0===e._preloadCount){var t=document.getElementById(e._loadingScreenId);t&&t.parentNode.removeChild(t),this._setupDone||(this._lastFrameTime=window.performance.now(),e._setup(),e._draw())}},this._decrementPreload=function(){var e=this._isGlobal?window:this;"function"==typeof e.preload&&(e._setProperty("_preloadCount",e._preloadCount-1),e._runIfPreloadsAreDone())},this._wrapPreload=function(i,n){var a=this;return function(){a._incrementPreload();for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return a._registeredPreloadMethods[n].apply(i,t)}},this._incrementPreload=function(){var e=this._isGlobal?window:this;e._setProperty("_preloadCount",e._preloadCount+1)},this._setup=function(){f.createCanvas(f._defaultCanvasSize.width,f._defaultCanvasSize.height,"p2d");var e=f._isGlobal?window:f;if("function"==typeof e.preload)for(var t in f._preloadMethods)e[t]=f._preloadMethods[t][t],e[t]&&f&&(e[t]=e[t].bind(f));f._millisStart=window.performance.now(),"function"==typeof e.setup&&e.setup();var r=document.getElementsByTagName("canvas"),i=!0,n=!1,a=void 0;try{for(var o,s=r[Symbol.iterator]();!(i=(o=s.next()).done);i=!0){var l=o.value;"true"===l.dataset.hidden&&(l.style.visibility="",delete l.dataset.hidden)}}catch(e){n=!0,a=e}finally{try{i||null==s.return||s.return()}finally{if(n)throw a}}f._lastFrameTime=window.performance.now(),f._setupDone=!0,(f._accessibleOutputs.grid||f._accessibleOutputs.text)&&f._updateAccsOutput()},this._draw=function(){var e=window.performance.now(),t=e-f._lastFrameTime,r=1e3/f._targetFrameRate;(!f._loop||r-5<=t)&&(f.redraw(),f._frameRate=1e3/(e-f._lastFrameTime),f.deltaTime=e-f._lastFrameTime,f._setProperty("deltaTime",f.deltaTime),f._lastFrameTime=e,void 0!==f._updateMouseCoords&&(f._updateMouseCoords(),f._setProperty("movedX",0),f._setProperty("movedY",0))),f._loop&&(f._requestAnimId=window.requestAnimationFrame(f._draw))},this._setProperty=function(e,t){f[e]=t,f._isGlobal&&(window[e]=t)},this.remove=function(){var e=document.getElementById(f._loadingScreenId);if(e&&(e.parentNode.removeChild(e),f._incrementPreload()),f._curElement){for(var t in f._loop=!1,f._requestAnimId&&window.cancelAnimationFrame(f._requestAnimId),f._events)window.removeEventListener(t,f._events[t]);var r=!0,i=!1,n=void 0;try{for(var a,o=f._elements[Symbol.iterator]();!(r=(a=o.next()).done);r=!0){var s=a.value;for(var l in s.elt&&s.elt.parentNode&&s.elt.parentNode.removeChild(s.elt),s._events)s.elt.removeEventListener(l,s._events[l])}}catch(e){i=!0,n=e}finally{try{r||null==o.return||o.return()}finally{if(i)throw n}}var u=f;f._registeredMethods.remove.forEach(function(e){void 0!==e&&e.call(u)})}if(f._isGlobal){for(var h in _.prototype)try{delete window[h]}catch(e){window[h]=void 0}for(var c in f)if(f.hasOwnProperty(c))try{delete window[c]}catch(e){window[c]=void 0}_.instance=null}},this._registeredMethods.init.forEach(function(e){void 0!==e&&e.call(this)},this),this._setupPromisePreloads();var h=this._createFriendlyGlobalFunctionBinder();if(e)e(this),_._checkForUserDefinedFunctions(this);else{for(var c in this._isGlobal=!0,_.instance=this,_.prototype)if("function"==typeof _.prototype[c]){var d=c.substring(2);this._events.hasOwnProperty(d)||(Math.hasOwnProperty(c)&&Math[c]===_.prototype[c]?h(c,_.prototype[c]):h(c,_.prototype[c].bind(this)))}else h(c,_.prototype[c]);for(var p in this)this.hasOwnProperty(p)&&h(p,this[p])}for(var m in this._events){var v=this["_on".concat(m)];if(v){var y=v.bind(this);window.addEventListener(m,y,{passive:!1}),this._events[m]=y}}function g(){f._setProperty("focused",!0)}function b(){f._setProperty("focused",!1)}window.addEventListener("focus",g),window.addEventListener("blur",b),this.registerMethod("remove",function(){window.removeEventListener("focus",g),window.removeEventListener("blur",b)}),"complete"===document.readyState?this._start():window.addEventListener("load",this._start.bind(this),!1)}var e,t,r;return e=_,(t=[{key:"_initializeInstanceVariables",value:function(){this._styles=[],this._bezierDetail=20,this._curveDetail=20,this._colorMode=i.RGB,this._colorMaxes={rgb:[255,255,255,255],hsb:[360,100,100,1],hsl:[360,100,100,1]},this._downKeys={}}},{key:"registerPreloadMethod",value:function(e,t){_.prototype._preloadMethods.hasOwnProperty(e)||(_.prototype._preloadMethods[e]=t)}},{key:"registerMethod",value:function(e,t){var r=this||_.prototype;r._registeredMethods.hasOwnProperty(e)||(r._registeredMethods[e]=[]),r._registeredMethods[e].push(t)}},{key:"_createFriendlyGlobalFunctionBinder",value:function(e){var t=0<arguments.length&&void 0!==e?e:{},r=t.globalObject||window;t.log||console.log.bind(console);return function(e,t){r[e]=t}}}])&&n(e.prototype,t),r&&n(e,r),_}();for(var l in a.instance=null,a.disableFriendlyErrors=!1,i)a.prototype[l]=i[l];a.prototype._preloadMethods={loadJSON:a.prototype,loadImage:a.prototype,loadStrings:a.prototype,loadXML:a.prototype,loadBytes:a.prototype,loadTable:a.prototype,loadFont:a.prototype,loadModel:a.prototype,loadShader:a.prototype},a.prototype._registeredMethods={init:[],pre:[],post:[],remove:[]},a.prototype._registeredPreloadMethods={};var u=a;r.default=u},{"./constants":26,"./shim":47}],37:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,n=(i=e("./main"))&&i.__esModule?i:{default:i};n.default.Element=function(e,t){this.elt=e,this._pInst=this._pixelsState=t,this._events={},this.width=this.elt.offsetWidth,this.height=this.elt.offsetHeight},n.default.Element.prototype.parent=function(e){return void 0===e?this.elt.parentNode:("string"==typeof e?("#"===e[0]&&(e=e.substring(1)),e=document.getElementById(e)):e instanceof n.default.Element&&(e=e.elt),e.appendChild(this.elt),this)},n.default.Element.prototype.id=function(e){return void 0===e?this.elt.id:(this.elt.id=e,this.width=this.elt.offsetWidth,this.height=this.elt.offsetHeight,this)},n.default.Element.prototype.class=function(e){return void 0===e?this.elt.className:(this.elt.className=e,this)},n.default.Element.prototype.mousePressed=function(t){return n.default.Element._adjustListener("mousedown",function(e){return this._pInst._setProperty("mouseIsPressed",!0),this._pInst._setMouseButton(e),t.call(this)},this),this},n.default.Element.prototype.doubleClicked=function(e){return n.default.Element._adjustListener("dblclick",e,this),this},n.default.Element.prototype.mouseWheel=function(e){return n.default.Element._adjustListener("wheel",e,this),this},n.default.Element.prototype.mouseReleased=function(e){return n.default.Element._adjustListener("mouseup",e,this),this},n.default.Element.prototype.mouseClicked=function(e){return n.default.Element._adjustListener("click",e,this),this},n.default.Element.prototype.mouseMoved=function(e){return n.default.Element._adjustListener("mousemove",e,this),this},n.default.Element.prototype.mouseOver=function(e){return n.default.Element._adjustListener("mouseover",e,this),this},n.default.Element.prototype.mouseOut=function(e){return n.default.Element._adjustListener("mouseout",e,this),this},n.default.Element.prototype.touchStarted=function(e){return n.default.Element._adjustListener("touchstart",e,this),this},n.default.Element.prototype.touchMoved=function(e){return n.default.Element._adjustListener("touchmove",e,this),this},n.default.Element.prototype.touchEnded=function(e){return n.default.Element._adjustListener("touchend",e,this),this},n.default.Element.prototype.dragOver=function(e){return n.default.Element._adjustListener("dragover",e,this),this},n.default.Element.prototype.dragLeave=function(e){return n.default.Element._adjustListener("dragleave",e,this),this},n.default.Element._adjustListener=function(e,t,r){return!1===t?n.default.Element._detachListener(e,r):n.default.Element._attachListener(e,t,r),this},n.default.Element._attachListener=function(e,t,r){r._events[e]&&n.default.Element._detachListener(e,r);var i=t.bind(r);r.elt.addEventListener(e,i,!1),r._events[e]=i},n.default.Element._detachListener=function(e,t){var r=t._events[e];t.elt.removeEventListener(e,r,!1),t._events[e]=null},n.default.Element.prototype._setProperty=function(e,t){this[e]=t};var a=n.default.Element;r.default=a},{"./main":36}],38:[function(e,t,r){"use strict";function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,s=(i=e("./main"))&&i.__esModule?i:{default:i},l=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=u();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var a=i?Object.getOwnPropertyDescriptor(e,n):null;a&&(a.get||a.set)?Object.defineProperty(r,n,a):r[n]=e[n]}r.default=e,t&&t.set(e,r);return r}(e("./constants"));function u(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return u=function(){return e},e}s.default.Graphics=function(e,t,r,i){var n=r||l.P2D;this.canvas=document.createElement("canvas");var a=i._userNode||document.body;for(var o in a.appendChild(this.canvas),s.default.Element.call(this,this.canvas,i),s.default.prototype)this[o]||("function"==typeof s.default.prototype[o]?this[o]=s.default.prototype[o].bind(this):this[o]=s.default.prototype[o]);return s.default.prototype._initializeInstanceVariables.apply(this),this.width=e,this.height=t,this._pixelDensity=i._pixelDensity,n===l.WEBGL?this._renderer=new s.default.RendererGL(this.canvas,this,!1):this._renderer=new s.default.Renderer2D(this.canvas,this,!1),i._elements.push(this),Object.defineProperty(this,"deltaTime",{get:function(){return this._pInst.deltaTime}}),this._renderer.resize(e,t),this._renderer._applyDefaults(),this},s.default.Graphics.prototype=Object.create(s.default.Element.prototype),s.default.Graphics.prototype.reset=function(){this._renderer.resetMatrix(),this._renderer.isP3D&&this._renderer._update()},s.default.Graphics.prototype.remove=function(){this.elt.parentNode&&this.elt.parentNode.removeChild(this.elt);var e=this._pInst._elements.indexOf(this);for(var t in-1!==e&&this._pInst._elements.splice(e,1),this._events)this.elt.removeEventListener(t,this._events[t])};var n=s.default.Graphics;r.default=n},{"./constants":26,"./main":36}],39:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,l=(i=e("./main"))&&i.__esModule?i:{default:i},T=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==s(e)&&"function"!=typeof e)return{default:e};var t=o();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var a=i?Object.getOwnPropertyDescriptor(e,n):null;a&&(a.get||a.set)?Object.defineProperty(r,n,a):r[n]=e[n]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants"));function o(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return o=function(){return e},e}function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function u(e){var t=0,r=0;if(e.offsetParent)for(;t+=e.offsetLeft,r+=e.offsetTop,e=e.offsetParent;);else t+=e.offsetLeft,r+=e.offsetTop;return[t,r]}l.default.Renderer=function(e,t,r){l.default.Element.call(this,e,t),this.canvas=e,this._pixelsState=t,r?(this._isMainCanvas=!0,this._pInst._setProperty("_curElement",this),this._pInst._setProperty("canvas",this.canvas),this._pInst._setProperty("width",this.width),this._pInst._setProperty("height",this.height)):(this.canvas.style.display="none",this._styles=[]),this._textSize=12,this._textLeading=15,this._textFont="sans-serif",this._textStyle=T.NORMAL,this._textAscent=null,this._textDescent=null,this._textAlign=T.LEFT,this._textBaseline=T.BASELINE,this._rectMode=T.CORNER,this._ellipseMode=T.CENTER,this._curveTightness=0,this._imageMode=T.CORNER,this._tint=null,this._doStroke=!0,this._doFill=!0,this._strokeSet=!1,this._fillSet=!1},l.default.Renderer.prototype=Object.create(l.default.Element.prototype),l.default.Renderer.prototype.push=function(){return{properties:{_doStroke:this._doStroke,_strokeSet:this._strokeSet,_doFill:this._doFill,_fillSet:this._fillSet,_tint:this._tint,_imageMode:this._imageMode,_rectMode:this._rectMode,_ellipseMode:this._ellipseMode,_textFont:this._textFont,_textLeading:this._textLeading,_textSize:this._textSize,_textAlign:this._textAlign,_textBaseline:this._textBaseline,_textStyle:this._textStyle}}},l.default.Renderer.prototype.pop=function(e){e.properties&&Object.assign(this,e.properties)},l.default.Renderer.prototype.resize=function(e,t){this.width=e,this.height=t,this.elt.width=e*this._pInst._pixelDensity,this.elt.height=t*this._pInst._pixelDensity,this.elt.style.width="".concat(e,"px"),this.elt.style.height="".concat(t,"px"),this._isMainCanvas&&(this._pInst._setProperty("width",this.width),this._pInst._setProperty("height",this.height))},l.default.Renderer.prototype.get=function(e,t,r,i){var n=this._pixelsState,a=n._pixelDensity,o=this.canvas;if(void 0===e&&void 0===t)e=t=0,r=n.width,i=n.height;else if(e*=a,t*=a,void 0===r&&void 0===i)return e<0||t<0||e>=o.width||t>=o.height?[0,0,0,0]:this._getPixel(e,t);var s=new l.default.Image(r,i);return s.canvas.getContext("2d").drawImage(o,e,t,r*a,i*a,0,0,r,i),s},l.default.Renderer.prototype.textLeading=function(e){return"number"==typeof e?(this._setProperty("_textLeading",e),this._pInst):this._textLeading},l.default.Renderer.prototype.textSize=function(e){return"number"==typeof e?(this._setProperty("_textSize",e),this._setProperty("_textLeading",e*T._DEFAULT_LEADMULT),this._applyTextProperties()):this._textSize},l.default.Renderer.prototype.textStyle=function(e){return e?(e!==T.NORMAL&&e!==T.ITALIC&&e!==T.BOLD&&e!==T.BOLDITALIC||this._setProperty("_textStyle",e),this._applyTextProperties()):this._textStyle},l.default.Renderer.prototype.textAscent=function(){return null===this._textAscent&&this._updateTextMetrics(),this._textAscent},l.default.Renderer.prototype.textDescent=function(){return null===this._textDescent&&this._updateTextMetrics(),this._textDescent},l.default.Renderer.prototype.textAlign=function(e,t){return void 0!==e?(this._setProperty("_textAlign",e),void 0!==t&&this._setProperty("_textBaseline",t),this._applyTextProperties()):{horizontal:this._textAlign,vertical:this._textBaseline}},l.default.Renderer.prototype.text=function(e,t,r,i,n){var a,o,s,l,u,h,c,f,d,p=this._pInst,m=Number.MAX_VALUE;if((this._doFill||this._doStroke)&&void 0!==e){if("string"!=typeof e&&(e=e.toString()),a=(e=e.replace(/(\t)/g,"  ")).split("\n"),void 0!==i){for(s=f=0;s<a.length;s++){for(u="",c=a[s].split(" "),o=0;o<c.length;o++)if(h="".concat(u+c[o]," "),i<this.textWidth(h)){for(var v=c[o],y=0;y<v.length;y++)h="".concat(u+v[y]),i<this.textWidth(h)&&0<u.length?(u="".concat(v[y]),f+=p.textLeading()):u=h;u="".concat(u," ")}else u=h;s<a.length-1&&(f+=p.textLeading())}switch(this._rectMode===T.CENTER&&(t-=i/2,r-=n/2),this._textAlign){case T.CENTER:t+=i/2;break;case T.RIGHT:t+=i}var g=!1;if(void 0!==n){switch(this._textBaseline){case T.BOTTOM:d=r+(n-f),r=Math.max(d,r);break;case T.CENTER:d=r+(n-f)/2,r=Math.max(d,r);break;case T.BASELINE:g=!0,this._textBaseline=T.TOP}m=r+n-p.textAscent()}for(s=0;s<a.length;s++){for(u="",c=a[s].split(" "),o=0;o<c.length;o++)if(h="".concat(u+c[o]," "),i<this.textWidth(h)){for(var b=c[o],_=0;_<b.length;_++)if(h="".concat(u+b[_]),i<this.textWidth(h)&&0<u.length){var x=u.slice(-1),w="\n"!==x&&" "!==x;u="".concat(u).concat(w?"-":""),this._renderText(p,u,t,r,m),r+=p.textLeading(),u="".concat(b[_])}else u=h;u="".concat(u," ")}else u=h;this._renderText(p,u,t,r,m),r+=p.textLeading(),g&&(this._textBaseline=T.BASELINE)}}else{var S=0,M=p.textAlign().vertical;for(M===T.CENTER?S=(a.length-1)*p.textLeading()/2:M===T.BOTTOM&&(S=(a.length-1)*p.textLeading()),l=0;l<a.length;l++)this._renderText(p,a[l],t,r-S,m),r+=p.textLeading()}return p}},l.default.Renderer.prototype._applyDefaults=function(){return this},l.default.Renderer.prototype._isOpenType=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:this._textFont;return"object"===s(e)&&e.font&&e.font.supported},l.default.Renderer.prototype._updateTextMetrics=function(){if(this._isOpenType())return this._setProperty("_textAscent",this._textFont._textAscent()),this._setProperty("_textDescent",this._textFont._textDescent()),this;var e=document.createElement("span");e.style.fontFamily=this._textFont,e.style.fontSize="".concat(this._textSize,"px"),e.innerHTML="ABCjgq|";var t=document.createElement("div");t.style.display="inline-block",t.style.width="1px",t.style.height="0px";var r=document.createElement("div");r.appendChild(e),r.appendChild(t),r.style.height="0px",r.style.overflow="hidden",document.body.appendChild(r),t.style.verticalAlign="baseline";var i=u(t),n=u(e),a=i[1]-n[1];t.style.verticalAlign="bottom",i=u(t),n=u(e);var o=i[1]-n[1]-a;return document.body.removeChild(r),this._setProperty("_textAscent",a),this._setProperty("_textDescent",o),this};var n=l.default.Renderer;r.default=n},{"../core/constants":26,"./main":36}],40:[function(e,t,r){"use strict";function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var c=i(e("./main")),p=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var a=i?Object.getOwnPropertyDescriptor(e,n):null;a&&(a.get||a.set)?Object.defineProperty(r,n,a):r[n]=e[n]}r.default=e,t&&t.set(e,r);return r}(e("./constants")),f=i(e("../image/filters"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}function i(e){return e&&e.__esModule?e:{default:e}}e("./p5.Renderer");var v="rgba(0,0,0,0)";c.default.Renderer2D=function(e,t,r){return c.default.Renderer.call(this,e,t,r),this.drawingContext=this.canvas.getContext("2d"),this._pInst._setProperty("drawingContext",this.drawingContext),this},c.default.Renderer2D.prototype=Object.create(c.default.Renderer.prototype),c.default.Renderer2D.prototype._applyDefaults=function(){this._cachedFillStyle=this._cachedStrokeStyle=void 0,this._cachedBlendMode=p.BLEND,this._setFill(p._DEFAULT_FILL),this._setStroke(p._DEFAULT_STROKE),this.drawingContext.lineCap=p.ROUND,this.drawingContext.font="normal 12px sans-serif"},c.default.Renderer2D.prototype.resize=function(e,t){c.default.Renderer.prototype.resize.call(this,e,t),this.drawingContext.scale(this._pInst._pixelDensity,this._pInst._pixelDensity)},c.default.Renderer2D.prototype.background=function(){if(this.drawingContext.save(),this.resetMatrix(),(arguments.length<=0?void 0:arguments[0])instanceof c.default.Image)this._pInst.image(arguments.length<=0?void 0:arguments[0],0,0,this.width,this.height);else{var e,t=this._getFill(),r=(e=this._pInst).color.apply(e,arguments);this._pInst._addAccsOutput()&&this._pInst._accsBackground(r.levels);var i=r.toString();this._setFill(i),this._isErasing&&this.blendMode(this._cachedBlendMode),this.drawingContext.fillRect(0,0,this.width,this.height),this._setFill(t),this._isErasing&&this._pInst.erase()}this.drawingContext.restore()},c.default.Renderer2D.prototype.clear=function(){this.drawingContext.save(),this.resetMatrix(),this.drawingContext.clearRect(0,0,this.width,this.height),this.drawingContext.restore()},c.default.Renderer2D.prototype.fill=function(){var e,t=(e=this._pInst).color.apply(e,arguments);this._setFill(t.toString()),this._pInst._addAccsOutput()&&this._pInst._accsCanvasColors("fill",t.levels)},c.default.Renderer2D.prototype.stroke=function(){var e,t=(e=this._pInst).color.apply(e,arguments);this._setStroke(t.toString()),this._pInst._addAccsOutput()&&this._pInst._accsCanvasColors("stroke",t.levels)},c.default.Renderer2D.prototype.erase=function(e,t){if(!this._isErasing){this._cachedFillStyle=this.drawingContext.fillStyle;var r=this._pInst.color(255,e).toString();this.drawingContext.fillStyle=r,this._cachedStrokeStyle=this.drawingContext.strokeStyle;var i=this._pInst.color(255,t).toString();this.drawingContext.strokeStyle=i;var n=this._cachedBlendMode;this.blendMode(p.REMOVE),this._cachedBlendMode=n,this._isErasing=!0}},c.default.Renderer2D.prototype.noErase=function(){this._isErasing&&(this.drawingContext.fillStyle=this._cachedFillStyle,this.drawingContext.strokeStyle=this._cachedStrokeStyle,this.blendMode(this._cachedBlendMode),this._isErasing=!1)},c.default.Renderer2D.prototype.image=function(e,t,r,i,n,a,o,s,l){var u;e.gifProperties&&e._animateGif(this._pInst);try{this._tint&&(c.default.MediaElement&&e instanceof c.default.MediaElement&&e.loadPixels(),e.canvas&&(u=this._getTintedImageCanvas(e))),u=u||(e.canvas||e.elt);var h=1;e.width&&0<e.width&&(h=u.width/e.width),this._isErasing&&this.blendMode(this._cachedBlendMode),this.drawingContext.drawImage(u,h*t,h*r,h*i,h*n,a,o,s,l),this._isErasing&&this._pInst.erase()}catch(e){if("NS_ERROR_NOT_AVAILABLE"!==e.name)throw e}},c.default.Renderer2D.prototype._getTintedImageCanvas=function(e){if(!e.canvas)return e;var t=f.default._toPixels(e.canvas),r=document.createElement("canvas");r.width=e.canvas.width,r.height=e.canvas.height;for(var i=r.getContext("2d"),n=i.createImageData(e.canvas.width,e.canvas.height),a=n.data,o=0;o<t.length;o+=4){var s=t[o],l=t[o+1],u=t[o+2],h=t[o+3];a[o]=s*this._tint[0]/255,a[o+1]=l*this._tint[1]/255,a[o+2]=u*this._tint[2]/255,a[o+3]=h*this._tint[3]/255}return i.putImageData(n,0,0),r},c.default.Renderer2D.prototype.blendMode=function(e){if(e===p.SUBTRACT)console.warn("blendMode(SUBTRACT) only works in WEBGL mode.");else{if(e!==p.BLEND&&e!==p.REMOVE&&e!==p.DARKEST&&e!==p.LIGHTEST&&e!==p.DIFFERENCE&&e!==p.MULTIPLY&&e!==p.EXCLUSION&&e!==p.SCREEN&&e!==p.REPLACE&&e!==p.OVERLAY&&e!==p.HARD_LIGHT&&e!==p.SOFT_LIGHT&&e!==p.DODGE&&e!==p.BURN&&e!==p.ADD)throw new Error("Mode ".concat(e," not recognized."));this._cachedBlendMode=e,this.drawingContext.globalCompositeOperation=e}},c.default.Renderer2D.prototype.blend=function(){for(var e=this.drawingContext.globalCompositeOperation,t=arguments.length,r=new Array(t),i=0;i<t;i++)r[i]=arguments[i];var n=r[r.length-1],a=Array.prototype.slice.call(r,0,r.length-1);this.drawingContext.globalCompositeOperation=n,c.default.prototype.copy.apply(this,a),this.drawingContext.globalCompositeOperation=e},c.default.Renderer2D.prototype._getPixel=function(e,t){var r;return[(r=this.drawingContext.getImageData(e,t,1,1).data)[0],r[1],r[2],r[3]]},c.default.Renderer2D.prototype.loadPixels=function(){var e=this._pixelsState,t=e._pixelDensity,r=this.width*t,i=this.height*t,n=this.drawingContext.getImageData(0,0,r,i);e._setProperty("imageData",n),e._setProperty("pixels",n.data)},c.default.Renderer2D.prototype.set=function(e,t,r){e=Math.floor(e),t=Math.floor(t);var i=this._pixelsState;if(r instanceof c.default.Image)this.drawingContext.save(),this.drawingContext.setTransform(1,0,0,1,0,0),this.drawingContext.scale(i._pixelDensity,i._pixelDensity),this.drawingContext.clearRect(e,t,r.width,r.height),this.drawingContext.drawImage(r.canvas,e,t),this.drawingContext.restore();else{var n=0,a=0,o=0,s=0,l=4*(t*i._pixelDensity*(this.width*i._pixelDensity)+e*i._pixelDensity);if(i.imageData||i.loadPixels.call(i),"number"==typeof r)l<i.pixels.length&&(o=a=n=r,s=255);else if(r instanceof Array){if(r.length<4)throw new Error("pixel array must be of the form [R, G, B, A]");l<i.pixels.length&&(n=r[0],a=r[1],o=r[2],s=r[3])}else r instanceof c.default.Color&&l<i.pixels.length&&(n=r.levels[0],a=r.levels[1],o=r.levels[2],s=r.levels[3]);for(var u=0;u<i._pixelDensity;u++)for(var h=0;h<i._pixelDensity;h++)l=4*((t*i._pixelDensity+h)*this.width*i._pixelDensity+(e*i._pixelDensity+u)),i.pixels[l]=n,i.pixels[l+1]=a,i.pixels[l+2]=o,i.pixels[l+3]=s}},c.default.Renderer2D.prototype.updatePixels=function(e,t,r,i){var n=this._pixelsState,a=n._pixelDensity;void 0===e&&void 0===t&&void 0===r&&void 0===i&&(t=e=0,r=this.width,i=this.height),e*=a,t*=a,r*=a,i*=a,this.gifProperties&&(this.gifProperties.frames[this.gifProperties.displayIndex].image=n.imageData),this.drawingContext.putImageData(n.imageData,e,t,0,0,r,i)},c.default.Renderer2D.prototype._acuteArcToBezier=function(e,t){var r=t/2,i=Math.cos(r),n=Math.sin(r),a=1/Math.tan(r),o=e+r,s=Math.cos(o),l=Math.sin(o),u=(4-i)/3,h=n+(i-u)*a;return{ax:Math.cos(e).toFixed(7),ay:Math.sin(e).toFixed(7),bx:(u*s+h*l).toFixed(7),by:(u*l-h*s).toFixed(7),cx:(u*s-h*l).toFixed(7),cy:(u*l+h*s).toFixed(7),dx:Math.cos(e+t).toFixed(7),dy:Math.sin(e+t).toFixed(7)}},c.default.Renderer2D.prototype.arc=function(r,i,e,t,n,a,o){var s=this.drawingContext,l=e/2,u=t/2,h=0,c=[];for(r+=l,i+=u;1e-5<=a-n;)h=Math.min(a-n,p.HALF_PI),c.push(this._acuteArcToBezier(n,h)),n+=h;return this._doFill&&(s.beginPath(),c.forEach(function(e,t){0===t&&s.moveTo(r+e.ax*l,i+e.ay*u),s.bezierCurveTo(r+e.bx*l,i+e.by*u,r+e.cx*l,i+e.cy*u,r+e.dx*l,i+e.dy*u)}),o!==p.PIE&&null!=o||s.lineTo(r,i),s.closePath(),s.fill()),this._doStroke&&(s.beginPath(),c.forEach(function(e,t){0===t&&s.moveTo(r+e.ax*l,i+e.ay*u),s.bezierCurveTo(r+e.bx*l,i+e.by*u,r+e.cx*l,i+e.cy*u,r+e.dx*l,i+e.dy*u)}),o===p.PIE?(s.lineTo(r,i),s.closePath()):o===p.CHORD&&s.closePath(),s.stroke()),this},c.default.Renderer2D.prototype.ellipse=function(e){var t=this.drawingContext,r=this._doFill,i=this._doStroke,n=parseFloat(e[0]),a=parseFloat(e[1]),o=parseFloat(e[2]),s=parseFloat(e[3]);if(r&&!i){if(this._getFill()===v)return this}else if(!r&&i&&this._getStroke()===v)return this;var l=o/2*.5522847498,u=s/2*.5522847498,h=n+o,c=a+s,f=n+o/2,d=a+s/2;t.beginPath(),t.moveTo(n,d),t.bezierCurveTo(n,d-u,f-l,a,f,a),t.bezierCurveTo(f+l,a,h,d-u,h,d),t.bezierCurveTo(h,d+u,f+l,c,f,c),t.bezierCurveTo(f-l,c,n,d+u,n,d),r&&t.fill(),i&&t.stroke()},c.default.Renderer2D.prototype.line=function(e,t,r,i){var n=this.drawingContext;return this._doStroke&&(this._getStroke()===v||(n.beginPath(),n.moveTo(e,t),n.lineTo(r,i),n.stroke())),this},c.default.Renderer2D.prototype.point=function(e,t){var r=this.drawingContext;if(!this._doStroke)return this;if(this._getStroke()===v)return this;var i=this._getStroke(),n=this._getFill();e=Math.round(e),t=Math.round(t),this._setFill(i),1<r.lineWidth?(r.beginPath(),r.arc(e,t,r.lineWidth/2,0,p.TWO_PI,!1),r.fill()):r.fillRect(e,t,1,1),this._setFill(n)},c.default.Renderer2D.prototype.quad=function(e,t,r,i,n,a,o,s){var l=this.drawingContext,u=this._doFill,h=this._doStroke;if(u&&!h){if(this._getFill()===v)return this}else if(!u&&h&&this._getStroke()===v)return this;return l.beginPath(),l.moveTo(e,t),l.lineTo(r,i),l.lineTo(n,a),l.lineTo(o,s),l.closePath(),u&&l.fill(),h&&l.stroke(),this},c.default.Renderer2D.prototype.rect=function(e){var t=e[0],r=e[1],i=e[2],n=e[3],a=e[4],o=e[5],s=e[6],l=e[7],u=this.drawingContext,h=this._doFill,c=this._doStroke;if(h&&!c){if(this._getFill()===v)return this}else if(!h&&c&&this._getStroke()===v)return this;if(u.beginPath(),void 0===a)u.rect(t,r,i,n);else{void 0===o&&(o=a),void 0===s&&(s=o),void 0===l&&(l=s);var f=Math.abs(i),d=Math.abs(n),p=f/2,m=d/2;f<2*a&&(a=p),d<2*a&&(a=m),f<2*o&&(o=p),d<2*o&&(o=m),f<2*s&&(s=p),d<2*s&&(s=m),f<2*l&&(l=p),d<2*l&&(l=m),u.beginPath(),u.moveTo(t+a,r),u.arcTo(t+i,r,t+i,r+n,o),u.arcTo(t+i,r+n,t,r+n,s),u.arcTo(t,r+n,t,r,l),u.arcTo(t,r,t+i,r,a),u.closePath()}return this._doFill&&u.fill(),this._doStroke&&u.stroke(),this},c.default.Renderer2D.prototype.triangle=function(e){var t=this.drawingContext,r=this._doFill,i=this._doStroke,n=e[0],a=e[1],o=e[2],s=e[3],l=e[4],u=e[5];if(r&&!i){if(this._getFill()===v)return this}else if(!r&&i&&this._getStroke()===v)return this;t.beginPath(),t.moveTo(n,a),t.lineTo(o,s),t.lineTo(l,u),t.closePath(),r&&t.fill(),i&&t.stroke()},c.default.Renderer2D.prototype.endShape=function(e,t,r,i,n,a,o){if(0===t.length)return this;if(!this._doStroke&&!this._doFill)return this;var s,l,u,h=e===p.CLOSE;h&&!a&&t.push(t[0]);var c=t.length;if(!r||o!==p.POLYGON&&null!==o)if(!i||o!==p.POLYGON&&null!==o)if(!n||o!==p.POLYGON&&null!==o)if(o===p.POINTS)for(l=0;l<c;l++)s=t[l],this._doStroke&&this._pInst.stroke(s[6]),this._pInst.point(s[0],s[1]);else if(o===p.LINES)for(l=0;l+1<c;l+=2)s=t[l],this._doStroke&&this._pInst.stroke(t[l+1][6]),this._pInst.line(s[0],s[1],t[l+1][0],t[l+1][1]);else if(o===p.TRIANGLES)for(l=0;l+2<c;l+=3)s=t[l],this.drawingContext.beginPath(),this.drawingContext.moveTo(s[0],s[1]),this.drawingContext.lineTo(t[l+1][0],t[l+1][1]),this.drawingContext.lineTo(t[l+2][0],t[l+2][1]),this.drawingContext.closePath(),this._doFill&&(this._pInst.fill(t[l+2][5]),this.drawingContext.fill()),this._doStroke&&(this._pInst.stroke(t[l+2][6]),this.drawingContext.stroke());else if(o===p.TRIANGLE_STRIP)for(l=0;l+1<c;l++)s=t[l],this.drawingContext.beginPath(),this.drawingContext.moveTo(t[l+1][0],t[l+1][1]),this.drawingContext.lineTo(s[0],s[1]),this._doStroke&&this._pInst.stroke(t[l+1][6]),this._doFill&&this._pInst.fill(t[l+1][5]),l+2<c&&(this.drawingContext.lineTo(t[l+2][0],t[l+2][1]),this._doStroke&&this._pInst.stroke(t[l+2][6]),this._doFill&&this._pInst.fill(t[l+2][5])),this._doFillStrokeClose(h);else if(o===p.TRIANGLE_FAN){if(2<c){for(this.drawingContext.beginPath(),l=2;l<c;l++)s=t[l],this.drawingContext.moveTo(t[0][0],t[0][1]),this.drawingContext.lineTo(t[l-1][0],t[l-1][1]),this.drawingContext.lineTo(s[0],s[1]),this.drawingContext.lineTo(t[0][0],t[0][1]),l<c-1&&(this._doFill&&s[5]!==t[l+1][5]||this._doStroke&&s[6]!==t[l+1][6])&&(this._doFill&&(this._pInst.fill(s[5]),this.drawingContext.fill(),this._pInst.fill(t[l+1][5])),this._doStroke&&(this._pInst.stroke(s[6]),this.drawingContext.stroke(),this._pInst.stroke(t[l+1][6])),this.drawingContext.closePath(),this.drawingContext.beginPath());this._doFillStrokeClose(h)}}else if(o===p.QUADS)for(l=0;l+3<c;l+=4){for(s=t[l],this.drawingContext.beginPath(),this.drawingContext.moveTo(s[0],s[1]),u=1;u<4;u++)this.drawingContext.lineTo(t[l+u][0],t[l+u][1]);this.drawingContext.lineTo(s[0],s[1]),this._doFill&&this._pInst.fill(t[l+3][5]),this._doStroke&&this._pInst.stroke(t[l+3][6]),this._doFillStrokeClose(h)}else if(o===p.QUAD_STRIP){if(3<c)for(l=0;l+1<c;l+=2)s=t[l],this.drawingContext.beginPath(),l+3<c?(this.drawingContext.moveTo(t[l+2][0],t[l+2][1]),this.drawingContext.lineTo(s[0],s[1]),this.drawingContext.lineTo(t[l+1][0],t[l+1][1]),this.drawingContext.lineTo(t[l+3][0],t[l+3][1]),this._doFill&&this._pInst.fill(t[l+3][5]),this._doStroke&&this._pInst.stroke(t[l+3][6])):(this.drawingContext.moveTo(s[0],s[1]),this.drawingContext.lineTo(t[l+1][0],t[l+1][1])),this._doFillStrokeClose(h)}else{for(this.drawingContext.beginPath(),this.drawingContext.moveTo(t[0][0],t[0][1]),l=1;l<c;l++)(s=t[l]).isVert&&(s.moveTo?this.drawingContext.moveTo(s[0],s[1]):this.drawingContext.lineTo(s[0],s[1]));this._doFillStrokeClose(h)}else{for(this.drawingContext.beginPath(),l=0;l<c;l++)t[l].isVert?t[l].moveTo?this.drawingContext.moveTo(t[l][0],t[l][1]):this.drawingContext.lineTo(t[l][0],t[l][1]):this.drawingContext.quadraticCurveTo(t[l][0],t[l][1],t[l][2],t[l][3]);this._doFillStrokeClose(h)}else{for(this.drawingContext.beginPath(),l=0;l<c;l++)t[l].isVert?t[l].moveTo?this.drawingContext.moveTo(t[l][0],t[l][1]):this.drawingContext.lineTo(t[l][0],t[l][1]):this.drawingContext.bezierCurveTo(t[l][0],t[l][1],t[l][2],t[l][3],t[l][4],t[l][5]);this._doFillStrokeClose(h)}else if(3<c){var f=[],d=1-this._curveTightness;for(this.drawingContext.beginPath(),this.drawingContext.moveTo(t[1][0],t[1][1]),l=1;l+2<c;l++)s=t[l],f[0]=[s[0],s[1]],f[1]=[s[0]+(d*t[l+1][0]-d*t[l-1][0])/6,s[1]+(d*t[l+1][1]-d*t[l-1][1])/6],f[2]=[t[l+1][0]+(d*t[l][0]-d*t[l+2][0])/6,t[l+1][1]+(d*t[l][1]-d*t[l+2][1])/6],f[3]=[t[l+1][0],t[l+1][1]],this.drawingContext.bezierCurveTo(f[1][0],f[1][1],f[2][0],f[2][1],f[3][0],f[3][1]);h&&this.drawingContext.lineTo(t[l+1][0],t[l+1][1]),this._doFillStrokeClose(h)}return a=n=i=r=!1,h&&t.pop(),this},c.default.Renderer2D.prototype.strokeCap=function(e){return e!==p.ROUND&&e!==p.SQUARE&&e!==p.PROJECT||(this.drawingContext.lineCap=e),this},c.default.Renderer2D.prototype.strokeJoin=function(e){return e!==p.ROUND&&e!==p.BEVEL&&e!==p.MITER||(this.drawingContext.lineJoin=e),this},c.default.Renderer2D.prototype.strokeWeight=function(e){return this.drawingContext.lineWidth=void 0===e||0===e?1e-4:e,this},c.default.Renderer2D.prototype._getFill=function(){return this._cachedFillStyle||(this._cachedFillStyle=this.drawingContext.fillStyle),this._cachedFillStyle},c.default.Renderer2D.prototype._setFill=function(e){e!==this._cachedFillStyle&&(this.drawingContext.fillStyle=e,this._cachedFillStyle=e)},c.default.Renderer2D.prototype._getStroke=function(){return this._cachedStrokeStyle||(this._cachedStrokeStyle=this.drawingContext.strokeStyle),this._cachedStrokeStyle},c.default.Renderer2D.prototype._setStroke=function(e){e!==this._cachedStrokeStyle&&(this.drawingContext.strokeStyle=e,this._cachedStrokeStyle=e)},c.default.Renderer2D.prototype.bezier=function(e,t,r,i,n,a,o,s){return this._pInst.beginShape(),this._pInst.vertex(e,t),this._pInst.bezierVertex(r,i,n,a,o,s),this._pInst.endShape(),this},c.default.Renderer2D.prototype.curve=function(e,t,r,i,n,a,o,s){return this._pInst.beginShape(),this._pInst.curveVertex(e,t),this._pInst.curveVertex(r,i),this._pInst.curveVertex(n,a),this._pInst.curveVertex(o,s),this._pInst.endShape(),this},c.default.Renderer2D.prototype._doFillStrokeClose=function(e){e&&this.drawingContext.closePath(),this._doFill&&this.drawingContext.fill(),this._doStroke&&this.drawingContext.stroke()},c.default.Renderer2D.prototype.applyMatrix=function(e,t,r,i,n,a){this.drawingContext.transform(e,t,r,i,n,a)},c.default.Renderer2D.prototype.resetMatrix=function(){return this.drawingContext.setTransform(1,0,0,1,0,0),this.drawingContext.scale(this._pInst._pixelDensity,this._pInst._pixelDensity),this},c.default.Renderer2D.prototype.rotate=function(e){this.drawingContext.rotate(e)},c.default.Renderer2D.prototype.scale=function(e,t){return this.drawingContext.scale(e,t),this},c.default.Renderer2D.prototype.translate=function(e,t){return e instanceof c.default.Vector&&(t=e.y,e=e.x),this.drawingContext.translate(e,t),this},c.default.Renderer2D.prototype.text=function(e,t,r,i,n){var a;void 0!==i&&this.drawingContext.textBaseline===p.BASELINE&&(a=!0,this.drawingContext.textBaseline=p.TOP);var o=c.default.Renderer.prototype.text.apply(this,arguments);return a&&(this.drawingContext.textBaseline=p.BASELINE),o},c.default.Renderer2D.prototype._renderText=function(e,t,r,i,n){if(!(n<=i))return e.push(),this._isOpenType()?this._textFont._renderPath(t,r,i,{renderer:this}):(this._doStroke&&this._strokeSet&&this.drawingContext.strokeText(t,r,i),this._doFill&&(this._fillSet||this._setFill(p._DEFAULT_TEXT_FILL),this.drawingContext.fillText(t,r,i))),e.pop(),e},c.default.Renderer2D.prototype.textWidth=function(e){return this._isOpenType()?this._textFont._textWidth(e,this._textSize):this.drawingContext.measureText(e).width},c.default.Renderer2D.prototype._applyTextProperties=function(){var e,t=this._pInst;return this._setProperty("_textAscent",null),this._setProperty("_textDescent",null),e=this._textFont,this._isOpenType()&&(e=this._textFont.font.familyName,this._setProperty("_textStyle",this._textFont.font.styleName)),this.drawingContext.font="".concat(this._textStyle||"normal"," ").concat(this._textSize||12,"px ").concat(e||"sans-serif"),this.drawingContext.textAlign=this._textAlign,this._textBaseline===p.CENTER?this.drawingContext.textBaseline=p._CTX_MIDDLE:this.drawingContext.textBaseline=this._textBaseline,t},c.default.Renderer2D.prototype.push=function(){return this.drawingContext.save(),c.default.Renderer.prototype.push.apply(this)},c.default.Renderer2D.prototype.pop=function(e){this.drawingContext.restore(),this._cachedFillStyle=this.drawingContext.fillStyle,this._cachedStrokeStyle=this.drawingContext.strokeStyle,c.default.Renderer.prototype.pop.call(this,e)};var n=c.default.Renderer2D;r.default=n},{"../image/filters":57,"./constants":26,"./main":36,"./p5.Renderer":39}],41:[function(e,t,r){"use strict";var i,f=(i=e("./main"))&&i.__esModule?i:{default:i};f.default.prototype._promisePreloads=[];var d=!(f.default.prototype.registerPromisePreload=function(e){f.default.prototype._promisePreloads.push(e)});f.default.prototype._setupPromisePreloads=function(){var e=!0,t=!1,r=void 0;try{for(var i,n=this._promisePreloads[Symbol.iterator]();!(e=(i=n.next()).done);e=!0){var a=i.value,o=this,s=a.method,l=a.addCallbacks,u=a.legacyPreloadSetup,h=a.target||this,c=h[s].bind(h);if(h===f.default.prototype){if(d)continue;o=null,c=h[s]}if(h[s]=this._wrapPromisePreload(o,c,l),u)h[u.method]=this._legacyPreloadGenerator(o,u,h[s])}}catch(e){t=!0,r=e}finally{try{e||null==n.return||n.return()}finally{if(t)throw r}}d=!0},f.default.prototype._wrapPromisePreload=function(e,l,u){var t=function(){var e=this;this._incrementPreload();for(var t=null,r=null,i=arguments.length,n=new Array(i),a=0;a<i;a++)n[a]=arguments[a];if(u)for(var o=n.length-1;0<=o&&!r&&"function"==typeof n[o];o--)r=t,t=n.pop();var s=Promise.resolve(l.apply(this,n));return t&&s.then(t),r&&s.catch(r),s.then(function(){return e._decrementPreload()}),s};return e&&(t=t.bind(e)),t};function a(){return{}}f.default.prototype._legacyPreloadGenerator=function(e,t,i){var n=t.createBaseObject||a,r=function(){var t=this;this._incrementPreload();var r=n.apply(this,arguments);return i.apply(this,arguments).then(function(e){Object.assign(r,e),t._decrementPreload()}),r};return e&&(r=r.bind(e)),r}},{"./main":36}],42:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,l=(i=e("./main"))&&i.__esModule?i:{default:i},u=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==s(e)&&"function"!=typeof e)return{default:e};var t=o();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var a=i?Object.getOwnPropertyDescriptor(e,n):null;a&&(a.get||a.set)?Object.defineProperty(r,n,a):r[n]=e[n]}r.default=e,t&&t.set(e,r);return r}(e("./constants"));function o(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return o=function(){return e},e}function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e("./p5.Graphics"),e("./p5.Renderer2D"),e("../webgl/p5.RendererGL");var h="defaultCanvas0";l.default.prototype.createCanvas=function(e,t,r){l.default._validateParameters("createCanvas",arguments);var i,n=r||u.P2D;if(n===u.WEBGL){if(i=document.getElementById(h)){i.parentNode.removeChild(i);var a=this._renderer;this._elements=this._elements.filter(function(e){return e!==a})}(i=document.createElement("canvas")).id=h,i.classList.add("p5Canvas")}else if(this._defaultGraphicsCreated)i=this.canvas;else{i=document.createElement("canvas");for(var o=0;document.getElementById("defaultCanvas".concat(o));)o++;h="defaultCanvas".concat(o),i.id=h,i.classList.add("p5Canvas")}if(this._setupDone||(i.dataset.hidden=!0,i.style.visibility="hidden"),this._userNode)this._userNode.appendChild(i);else{if(0===document.getElementsByTagName("main").length){var s=document.createElement("main");document.body.appendChild(s)}document.getElementsByTagName("main")[0].appendChild(i)}return n===u.WEBGL?(this._setProperty("_renderer",new l.default.RendererGL(i,this,!0)),this._elements.push(this._renderer)):this._defaultGraphicsCreated||(this._setProperty("_renderer",new l.default.Renderer2D(i,this,!0)),this._defaultGraphicsCreated=!0,this._elements.push(this._renderer)),this._renderer.resize(e,t),this._renderer._applyDefaults(),this._renderer},l.default.prototype.resizeCanvas=function(e,t,r){if(l.default._validateParameters("resizeCanvas",arguments),this._renderer){var i={};for(var n in this.drawingContext){var a=this.drawingContext[n];"object"!==s(a)&&"function"!=typeof a&&(i[n]=a)}for(var o in this._renderer.resize(e,t),this.width=e,this.height=t,i)try{this.drawingContext[o]=i[o]}catch(e){}r||this.redraw()}this._addAccsOutput()&&this._updateAccsOutput()},l.default.prototype.noCanvas=function(){this.canvas&&this.canvas.parentNode.removeChild(this.canvas)},l.default.prototype.createGraphics=function(e,t,r){return l.default._validateParameters("createGraphics",arguments),new l.default.Graphics(e,t,r,this)},l.default.prototype.blendMode=function(e){l.default._validateParameters("blendMode",arguments),e===u.NORMAL&&(console.warn("NORMAL has been deprecated for use in blendMode. defaulting to BLEND instead."),e=u.BLEND),this._renderer.blendMode(e)};var n=l.default;r.default=n},{"../webgl/p5.RendererGL":90,"./constants":26,"./main":36,"./p5.Graphics":38,"./p5.Renderer2D":40}],43:[function(e,t,r){"use strict";function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var h=i(e("../main")),s=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=l();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var a=i?Object.getOwnPropertyDescriptor(e,n):null;a&&(a.get||a.set)?Object.defineProperty(r,n,a):r[n]=e[n]}r.default=e,t&&t.set(e,r);return r}(e("../constants")),c=i(e("../helpers"));function l(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return l=function(){return e},e}function i(e){return e&&e.__esModule?e:{default:e}}e("../friendly_errors/fes_core"),e("../friendly_errors/file_errors"),e("../friendly_errors/validate_params"),h.default.prototype._normalizeArcAngles=function(e,t,r,i,n){var a;return e-=s.TWO_PI*Math.floor(e/s.TWO_PI),t-=s.TWO_PI*Math.floor(t/s.TWO_PI),a=Math.min(Math.abs(e-t),s.TWO_PI-Math.abs(e-t)),n&&(e=e<=s.HALF_PI?Math.atan(r/i*Math.tan(e)):e>s.HALF_PI&&e<=3*s.HALF_PI?Math.atan(r/i*Math.tan(e))+s.PI:Math.atan(r/i*Math.tan(e))+s.TWO_PI,t=t<=s.HALF_PI?Math.atan(r/i*Math.tan(t)):t>s.HALF_PI&&t<=3*s.HALF_PI?Math.atan(r/i*Math.tan(t))+s.PI:Math.atan(r/i*Math.tan(t))+s.TWO_PI),t<e&&(t+=s.TWO_PI),{start:e,stop:t,correspondToSamePoint:a<1e-5}},h.default.prototype.arc=function(e,t,r,i,n,a,o,s){if(h.default._validateParameters("arc",arguments),!this._renderer._doStroke&&!this._renderer._doFill)return this;if(n===a)return this;n=this._toRadians(n),a=this._toRadians(a),r=Math.abs(r),i=Math.abs(i);var l=c.default.modeAdjust(e,t,r,i,this._renderer._ellipseMode),u=this._normalizeArcAngles(n,a,l.w,l.h,!0);return u.correspondToSamePoint?this._renderer.ellipse([l.x,l.y,l.w,l.h,s]):(this._renderer.arc(l.x,l.y,l.w,l.h,u.start,u.stop,o,s),(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._accsOutput("arc",[l.x,l.y,l.w,l.h,u.start,u.stop,o])),this},h.default.prototype.ellipse=function(e,t,r,i,n){return h.default._validateParameters("ellipse",arguments),this._renderEllipse.apply(this,arguments)},h.default.prototype.circle=function(){h.default._validateParameters("circle",arguments);var e=Array.prototype.slice.call(arguments,0,2);return e.push(arguments[2]),e.push(arguments[2]),this._renderEllipse.apply(this,e)},h.default.prototype._renderEllipse=function(e,t,r,i,n){if(!this._renderer._doStroke&&!this._renderer._doFill)return this;r<0&&(r=Math.abs(r)),void 0===i?i=r:i<0&&(i=Math.abs(i));var a=c.default.modeAdjust(e,t,r,i,this._renderer._ellipseMode);return this._renderer.ellipse([a.x,a.y,a.w,a.h,n]),(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._accsOutput("ellipse",[a.x,a.y,a.w,a.h]),this},h.default.prototype.line=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var i;h.default._validateParameters("line",t),this._renderer._doStroke&&(i=this._renderer).line.apply(i,t);return(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._accsOutput("line",t),this},h.default.prototype.point=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var i;h.default._validateParameters("point",t),this._renderer._doStroke&&(1===t.length&&t[0]instanceof h.default.Vector?this._renderer.point.call(this._renderer,t[0].x,t[0].y,t[0].z):((i=this._renderer).point.apply(i,t),(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._accsOutput("point",t)));return this},h.default.prototype.quad=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var i;h.default._validateParameters("quad",t),(this._renderer._doStroke||this._renderer._doFill)&&(this._renderer.isP3D&&12!==t.length?this._renderer.quad.call(this._renderer,t[0],t[1],0,t[2],t[3],0,t[4],t[5],0,t[6],t[7],0):((i=this._renderer).quad.apply(i,t),(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._accsOutput("quadrilateral",t)));return this},h.default.prototype.rect=function(){return h.default._validateParameters("rect",arguments),this._renderRect.apply(this,arguments)},h.default.prototype.square=function(e,t,r,i,n,a,o){return h.default._validateParameters("square",arguments),this._renderRect.call(this,e,t,r,r,i,n,a,o)},h.default.prototype._renderRect=function(){if(this._renderer._doStroke||this._renderer._doFill){3===arguments.length&&(arguments[3]=arguments[2]);for(var e=c.default.modeAdjust(arguments[0],arguments[1],arguments[2],arguments[3],this._renderer._rectMode),t=[e.x,e.y,e.w,e.h],r=4;r<arguments.length;r++)t[r]=arguments[r];this._renderer.rect(t),(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._accsOutput("rectangle",[e.x,e.y,e.w,e.h])}return this},h.default.prototype.triangle=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return h.default._validateParameters("triangle",t),(this._renderer._doStroke||this._renderer._doFill)&&this._renderer.triangle(t),(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._accsOutput("triangle",t),this};var n=h.default;r.default=n},{"../constants":26,"../friendly_errors/fes_core":28,"../friendly_errors/file_errors":29,"../friendly_errors/validate_params":31,"../helpers":32,"../main":36}],44:[function(e,t,r){"use strict";function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,n=(i=e("../main"))&&i.__esModule?i:{default:i},a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var a=i?Object.getOwnPropertyDescriptor(e,n):null;a&&(a.get||a.set)?Object.defineProperty(r,n,a):r[n]=e[n]}r.default=e,t&&t.set(e,r);return r}(e("../constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}n.default.prototype.ellipseMode=function(e){return n.default._validateParameters("ellipseMode",arguments),e!==a.CORNER&&e!==a.CORNERS&&e!==a.RADIUS&&e!==a.CENTER||(this._renderer._ellipseMode=e),this},n.default.prototype.noSmooth=function(){return this.setAttributes("antialias",!1),this._renderer.isP3D||"imageSmoothingEnabled"in this.drawingContext&&(this.drawingContext.imageSmoothingEnabled=!1),this},n.default.prototype.rectMode=function(e){return n.default._validateParameters("rectMode",arguments),e!==a.CORNER&&e!==a.CORNERS&&e!==a.RADIUS&&e!==a.CENTER||(this._renderer._rectMode=e),this},n.default.prototype.smooth=function(){return this.setAttributes("antialias",!0),this._renderer.isP3D||"imageSmoothingEnabled"in this.drawingContext&&(this.drawingContext.imageSmoothingEnabled=!0),this},n.default.prototype.strokeCap=function(e){return n.default._validateParameters("strokeCap",arguments),e!==a.ROUND&&e!==a.SQUARE&&e!==a.PROJECT||this._renderer.strokeCap(e),this},n.default.prototype.strokeJoin=function(e){return n.default._validateParameters("strokeJoin",arguments),e!==a.ROUND&&e!==a.BEVEL&&e!==a.MITER||this._renderer.strokeJoin(e),this},n.default.prototype.strokeWeight=function(e){return n.default._validateParameters("strokeWeight",arguments),this._renderer.strokeWeight(e),this};var l=n.default;r.default=l},{"../constants":26,"../main":36}],45:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,s=(i=e("../main"))&&i.__esModule?i:{default:i};e("../friendly_errors/fes_core"),e("../friendly_errors/file_errors"),e("../friendly_errors/validate_params"),s.default.prototype.bezier=function(){for(var e,t=arguments.length,r=new Array(t),i=0;i<t;i++)r[i]=arguments[i];return s.default._validateParameters("bezier",r),(this._renderer._doStroke||this._renderer._doFill)&&(e=this._renderer).bezier.apply(e,r),this},s.default.prototype.bezierDetail=function(e){return s.default._validateParameters("bezierDetail",arguments),this._bezierDetail=e,this},s.default.prototype.bezierPoint=function(e,t,r,i,n){s.default._validateParameters("bezierPoint",arguments);var a=1-n;return Math.pow(a,3)*e+3*Math.pow(a,2)*n*t+3*a*Math.pow(n,2)*r+Math.pow(n,3)*i},s.default.prototype.bezierTangent=function(e,t,r,i,n){s.default._validateParameters("bezierTangent",arguments);var a=1-n;return 3*i*Math.pow(n,2)-3*r*Math.pow(n,2)+6*r*a*n-6*t*a*n+3*t*Math.pow(a,2)-3*e*Math.pow(a,2)},s.default.prototype.curve=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var i;s.default._validateParameters("curve",t),this._renderer._doStroke&&(i=this._renderer).curve.apply(i,t);return this},s.default.prototype.curveDetail=function(e){return s.default._validateParameters("curveDetail",arguments),this._curveDetail=e<3?3:e,this},s.default.prototype.curveTightness=function(e){return s.default._validateParameters("curveTightness",arguments),this._renderer._curveTightness=e,this},s.default.prototype.curvePoint=function(e,t,r,i,n){s.default._validateParameters("curvePoint",arguments);var a=n*n*n,o=n*n;return e*(-.5*a+o-.5*n)+t*(1.5*a-2.5*o+1)+r*(-1.5*a+2*o+.5*n)+i*(.5*a-.5*o)},s.default.prototype.curveTangent=function(e,t,r,i,n){s.default._validateParameters("curveTangent",arguments);var a=n*n;return e*(-3*a/2+2*n-.5)+t*(9*a/2-5*n)+r*(-9*a/2+4*n+.5)+i*(3*a/2-n)};var n=s.default;r.default=n},{"../friendly_errors/fes_core":28,"../friendly_errors/file_errors":29,"../friendly_errors/validate_params":31,"../main":36}],46:[function(e,t,r){"use strict";function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,s=(i=e("../main"))&&i.__esModule?i:{default:i},l=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=u();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var a=i?Object.getOwnPropertyDescriptor(e,n):null;a&&(a.get||a.set)?Object.defineProperty(r,n,a):r[n]=e[n]}r.default=e,t&&t.set(e,r);return r}(e("../constants"));function u(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return u=function(){return e},e}var n=null,h=[],c=[],f=!1,a=!1,d=!1,p=!1,m=!0;s.default.prototype.beginContour=function(){return c=[],p=!0,this},s.default.prototype.beginShape=function(e){var t;(s.default._validateParameters("beginShape",arguments),this._renderer.isP3D)?(t=this._renderer).beginShape.apply(t,arguments):(n=e===l.POINTS||e===l.LINES||e===l.TRIANGLES||e===l.TRIANGLE_FAN||e===l.TRIANGLE_STRIP||e===l.QUADS||e===l.QUAD_STRIP?e:null,h=[],c=[]);return this},s.default.prototype.bezierVertex=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var i;if(s.default._validateParameters("bezierVertex",t),this._renderer.isP3D)(i=this._renderer).bezierVertex.apply(i,t);else if(0===h.length)s.default._friendlyError("vertex() must be used once before calling bezierVertex()","bezierVertex");else{f=!0;for(var n=[],a=0;a<t.length;a++)n[a]=t[a];n.isVert=!1,p?c.push(n):h.push(n)}return this},s.default.prototype.curveVertex=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var i;(s.default._validateParameters("curveVertex",t),this._renderer.isP3D)?(i=this._renderer).curveVertex.apply(i,t):(a=!0,this.vertex(t[0],t[1]));return this},s.default.prototype.endContour=function(){var e=c[0].slice();e.isVert=c[0].isVert,e.moveTo=!1,c.push(e),m&&(h.push(h[0]),m=!1);for(var t=0;t<c.length;t++)h.push(c[t]);return this},s.default.prototype.endShape=function(e){if(s.default._validateParameters("endShape",arguments),this._renderer.isP3D)this._renderer.endShape(e,a,f,d,p,n);else{if(0===h.length)return this;if(!this._renderer._doStroke&&!this._renderer._doFill)return this;var t=e===l.CLOSE;t&&!p&&h.push(h[0]),this._renderer.endShape(e,h,a,f,d,p,n),m=!(p=d=f=a=!1),t&&h.pop()}return this},s.default.prototype.quadraticVertex=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];if(s.default._validateParameters("quadraticVertex",t),this._renderer.isP3D){var i;(i=this._renderer).quadraticVertex.apply(i,t)}else{if(this._contourInited){var n={};return n.x=t[0],n.y=t[1],n.x3=t[2],n.y3=t[3],n.type=l.QUADRATIC,this._contourVertices.push(n),this}if(0<h.length){d=!0;for(var a=[],o=0;o<t.length;o++)a[o]=t[o];a.isVert=!1,p?c.push(a):h.push(a)}else s.default._friendlyError("vertex() must be used once before calling quadraticVertex()","quadraticVertex")}return this},s.default.prototype.vertex=function(e,t,r,i,n){if(this._renderer.isP3D){var a;(a=this._renderer).vertex.apply(a,arguments)}else{var o=[];o.isVert=!0,o[0]=e,o[1]=t,o[2]=0,o[3]=0,o[4]=0,o[5]=this._renderer._getFill(),o[6]=this._renderer._getStroke(),r&&(o.moveTo=r),p?(0===c.length&&(o.moveTo=!0),c.push(o)):h.push(o)}return this};var v=s.default;r.default=v},{"../constants":26,"../main":36}],47:[function(e,t,r){"use strict";function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}window.requestAnimationFrame=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(e,t){window.setTimeout(e,1e3/60)},"undefined"==typeof Uint8ClampedArray||Uint8ClampedArray.prototype.slice||Object.defineProperty(Uint8ClampedArray.prototype,"slice",{value:Array.prototype.slice,writable:!0,configurable:!0,enumerable:!1}),function(){if(!Object.assign){var s=Object.keys,e=Object.defineProperty,l="function"==typeof Symbol&&"symbol"===i(Symbol()),r=Object.prototype.propertyIsEnumerable,u=function(t){return function(e){return r.call(t,e)}};e(Object,"assign",{value:function(e,t){if(null==e)throw new TypeError("target must be an object");var r,i,n,a,o=Object(e);for(r=1;r<arguments.length;++r)for(i=Object(arguments[r]),a=s(i),l&&Object.getOwnPropertySymbols&&a.push.apply(a,Object.getOwnPropertySymbols(i).filter(u(i))),n=0;n<a.length;++n)o[a[n]]=i[a[n]];return o},configurable:!0,enumerable:!1,writable:!0})}}()},{}],48:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,n=(i=e("./main"))&&i.__esModule?i:{default:i};n.default.prototype.noLoop=function(){this._loop=!1},n.default.prototype.loop=function(){this._loop||(this._loop=!0,this._setupDone&&this._draw())},n.default.prototype.isLooping=function(){return this._loop},n.default.prototype.push=function(){this._styles.push({props:{_colorMode:this._colorMode},renderer:this._renderer.push()})},n.default.prototype.pop=function(){var e=this._styles.pop();e?(this._renderer.pop(e.renderer),Object.assign(this,e.props)):console.warn("pop() was called without matching push()")},n.default.prototype.redraw=function(e){if(!this._inUserDraw&&this._setupDone){var t=parseInt(e);(isNaN(t)||t<1)&&(t=1);var r=this._isGlobal?window:this;if("function"==typeof r.draw){void 0===r.setup&&r.scale(r._pixelDensity,r._pixelDensity);for(var i=function(e){e.call(r)},n=0;n<t;n++){r.resetMatrix(),(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._updateAccsOutput(),r._renderer.isP3D&&r._renderer._update(),r._setProperty("frameCount",r.frameCount+1),r._registeredMethods.pre.forEach(i),this._inUserDraw=!0;try{r.draw()}finally{this._inUserDraw=!1}r._registeredMethods.post.forEach(i)}}}};var a=n.default;r.default=a},{"./main":36}],49:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,a=(i=e("./main"))&&i.__esModule?i:{default:i};a.default.prototype.applyMatrix=function(e,t,r,i,n,a){var o;return(o=this._renderer).applyMatrix.apply(o,arguments),this},a.default.prototype.resetMatrix=function(){return this._renderer.resetMatrix(),this},a.default.prototype.rotate=function(e,t){return a.default._validateParameters("rotate",arguments),this._renderer.rotate(this._toRadians(e),t),this},a.default.prototype.rotateX=function(e){return this._assert3d("rotateX"),a.default._validateParameters("rotateX",arguments),this._renderer.rotateX(this._toRadians(e)),this},a.default.prototype.rotateY=function(e){return this._assert3d("rotateY"),a.default._validateParameters("rotateY",arguments),this._renderer.rotateY(this._toRadians(e)),this},a.default.prototype.rotateZ=function(e){return this._assert3d("rotateZ"),a.default._validateParameters("rotateZ",arguments),this._renderer.rotateZ(this._toRadians(e)),this},a.default.prototype.scale=function(e,t,r){if(a.default._validateParameters("scale",arguments),e instanceof a.default.Vector){var i=e;e=i.x,t=i.y,r=i.z}else if(e instanceof Array){var n=e;e=n[0],t=n[1],r=n[2]||1}return isNaN(t)?t=r=e:isNaN(r)&&(r=1),this._renderer.scale.call(this._renderer,e,t,r),this},a.default.prototype.shearX=function(e){a.default._validateParameters("shearX",arguments);var t=this._toRadians(e);return this._renderer.applyMatrix(1,0,Math.tan(t),1,0,0),this},a.default.prototype.shearY=function(e){a.default._validateParameters("shearY",arguments);var t=this._toRadians(e);return this._renderer.applyMatrix(1,Math.tan(t),0,1,0,0),this},a.default.prototype.translate=function(e,t,r){return a.default._validateParameters("translate",arguments),this._renderer.isP3D?this._renderer.translate(e,t,r):this._renderer.translate(e,t),this};var n=a.default;r.default=n},{"./main":36}],50:[function(e,t,r){"use strict";var i,n=(i=e("../core/main"))&&i.__esModule?i:{default:i};function a(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}n.default.prototype.storeItem=function(e,t){"string"!=typeof e&&console.log("The argument that you passed to storeItem() - ".concat(e," is not a string.")),e.endsWith("p5TypeID")&&console.log("The argument that you passed to storeItem() - ".concat(e," must not end with 'p5TypeID'.")),void 0===t&&console.log("You cannot store undefined variables using storeItem().");var r=o(t);switch(r){case"number":case"boolean":t=t.toString();break;case"object":if(t instanceof n.default.Color)r="p5.Color";else if(t instanceof n.default.Vector){r="p5.Vector",t=[t.x,t.y,t.z]}t=JSON.stringify(t)}localStorage.setItem(e,t);var i="".concat(e,"p5TypeID");localStorage.setItem(i,r)},n.default.prototype.getItem=function(e){var t=localStorage.getItem(e),r=localStorage.getItem("".concat(e,"p5TypeID"));if(void 0===r)console.log("Unable to determine type of item stored under ".concat(e,"in local storage. Did you save the item with something other than setItem()?"));else if(null!==t)switch(r){case"number":t=parseFloat(t);break;case"boolean":t="true"===t;break;case"object":t=JSON.parse(t);break;case"p5.Color":t=JSON.parse(t),t=this.color.apply(this,a(t.levels));break;case"p5.Vector":t=JSON.parse(t),t=this.createVector.apply(this,a(t))}return t},n.default.prototype.clearStorage=function(){localStorage.clear()},n.default.prototype.removeItem=function(e){"string"!=typeof e&&console.log("The argument that you passed to removeItem() - ".concat(e," is not a string.")),localStorage.removeItem(e),localStorage.removeItem("".concat(e,"p5TypeID"))}},{"../core/main":36}],51:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,n=(i=e("../core/main"))&&i.__esModule?i:{default:i};n.default.prototype.createStringDict=function(e,t){return n.default._validateParameters("createStringDict",arguments),new n.default.StringDict(e,t)},n.default.prototype.createNumberDict=function(e,t){return n.default._validateParameters("createNumberDict",arguments),new n.default.NumberDict(e,t)},n.default.TypedDict=function(e,t){return e instanceof Object?this.data=e:(this.data={},this.data[e]=t),this},n.default.TypedDict.prototype.size=function(){return Object.keys(this.data).length},n.default.TypedDict.prototype.hasKey=function(e){return this.data.hasOwnProperty(e)},n.default.TypedDict.prototype.get=function(e){if(this.data.hasOwnProperty(e))return this.data[e];console.log("".concat(e," does not exist in this Dictionary"))},n.default.TypedDict.prototype.set=function(e,t){this._validate(t)?this.data[e]=t:console.log("Those values dont work for this dictionary type.")},n.default.TypedDict.prototype._addObj=function(e){for(var t in e)this.set(t,e[t])},n.default.TypedDict.prototype.create=function(e,t){e instanceof Object&&void 0===t?this._addObj(e):void 0!==e?this.set(e,t):console.log("In order to create a new Dictionary entry you must pass an object or a key, value pair")},n.default.TypedDict.prototype.clear=function(){this.data={}},n.default.TypedDict.prototype.remove=function(e){if(!this.data.hasOwnProperty(e))throw new Error("".concat(e," does not exist in this Dictionary"));delete this.data[e]},n.default.TypedDict.prototype.print=function(){for(var e in this.data)console.log("key:".concat(e," value:").concat(this.data[e]))},n.default.TypedDict.prototype.saveTable=function(e){var t="";for(var r in this.data)t+="".concat(r,",").concat(this.data[r],"\n");var i=new Blob([t],{type:"text/csv"});n.default.prototype.downloadFile(i,e||"mycsv","csv")},n.default.TypedDict.prototype.saveJSON=function(e,t){n.default.prototype.saveJSON(this.data,e,t)},n.default.TypedDict.prototype._validate=function(e){return!0},n.default.StringDict=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];n.default.TypedDict.apply(this,t)},n.default.StringDict.prototype=Object.create(n.default.TypedDict.prototype),n.default.StringDict.prototype._validate=function(e){return"string"==typeof e},n.default.NumberDict=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];n.default.TypedDict.apply(this,t)},n.default.NumberDict.prototype=Object.create(n.default.TypedDict.prototype),n.default.NumberDict.prototype._validate=function(e){return"number"==typeof e},n.default.NumberDict.prototype.add=function(e,t){this.data.hasOwnProperty(e)?this.data[e]+=t:console.log("The key - ".concat(e," does not exist in this dictionary."))},n.default.NumberDict.prototype.sub=function(e,t){this.add(e,-t)},n.default.NumberDict.prototype.mult=function(e,t){this.data.hasOwnProperty(e)?this.data[e]*=t:console.log("The key - ".concat(e," does not exist in this dictionary."))},n.default.NumberDict.prototype.div=function(e,t){this.data.hasOwnProperty(e)?this.data[e]/=t:console.log("The key - ".concat(e," does not exist in this dictionary."))},n.default.NumberDict.prototype._valueTest=function(e){if(0===Object.keys(this.data).length)throw new Error("Unable to search for a minimum or maximum value on an empty NumberDict");if(1===Object.keys(this.data).length)return this.data[Object.keys(this.data)[0]];var t=this.data[Object.keys(this.data)[0]];for(var r in this.data)this.data[r]*e<t*e&&(t=this.data[r]);return t},n.default.NumberDict.prototype.minValue=function(){return this._valueTest(1)},n.default.NumberDict.prototype.maxValue=function(){return this._valueTest(-1)},n.default.NumberDict.prototype._keyTest=function(e){if(0===Object.keys(this.data).length)throw new Error("Unable to use minValue on an empty NumberDict");if(1===Object.keys(this.data).length)return Object.keys(this.data)[0];for(var t=Object.keys(this.data)[0],r=1;r<Object.keys(this.data).length;r++)Object.keys(this.data)[r]*e<t*e&&(t=Object.keys(this.data)[r]);return t},n.default.NumberDict.prototype.minKey=function(){return this._keyTest(1)},n.default.NumberDict.prototype.maxKey=function(){return this._keyTest(-1)};var a=n.default.TypedDict;r.default=a},{"../core/main":36}],52:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,f=(i=e("../core/main"))&&i.__esModule?i:{default:i};function d(e){return(d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function m(e,t,r){(t._userNode?t._userNode:document.body).appendChild(e);var i=r?new f.default.MediaElement(e,t):new f.default.Element(e,t);return t._elements.push(i),i}function n(e,t,r,i){var n=document.createElement(t);"string"==typeof(r=r||"")&&(r=[r]);var a=!0,o=!1,s=void 0;try{for(var l,u=r[Symbol.iterator]();!(a=(l=u.next()).done);a=!0){var h=l.value,c=document.createElement("source");c.setAttribute("src",h),n.appendChild(c)}}catch(e){o=!0,s=e}finally{try{a||null==u.return||u.return()}finally{if(o)throw s}}if("function"==typeof i){n.addEventListener("canplaythrough",function e(){i(),n.removeEventListener("canplaythrough",e)})}var f=m(n,e,!0);return f.loadedmetadata=!1,n.addEventListener("loadedmetadata",function(){f.width=n.videoWidth,f.height=n.videoHeight,0===f.elt.width&&(f.elt.width=n.videoWidth),0===f.elt.height&&(f.elt.height=n.videoHeight),f.presetPlaybackRate&&(f.elt.playbackRate=f.presetPlaybackRate,delete f.presetPlaybackRate),f.loadedmetadata=!0}),f}f.default.prototype.select=function(e,t){f.default._validateParameters("select",arguments);var r=this._getContainer(t).querySelector(e);return r?this._wrapElement(r):null},f.default.prototype.selectAll=function(e,t){f.default._validateParameters("selectAll",arguments);var r=[],i=this._getContainer(t).querySelectorAll(e);if(i)for(var n=0;n<i.length;n++){var a=this._wrapElement(i[n]);r.push(a)}return r},f.default.prototype._getContainer=function(e){var t=document;return"string"==typeof e?t=document.querySelector(e)||document:e instanceof f.default.Element?t=e.elt:e instanceof HTMLElement&&(t=e),t},f.default.prototype._wrapElement=function(e){var t=Array.prototype.slice.call(e.children);if("INPUT"!==e.tagName||"checkbox"!==e.type)return"VIDEO"===e.tagName||"AUDIO"===e.tagName?new f.default.MediaElement(e,this):"SELECT"===e.tagName?this.createSelect(new f.default.Element(e,this)):0<t.length&&t.every(function(e){return"INPUT"===e.tagName||"LABEL"===e.tagName})?this.createRadio(new f.default.Element(e,this)):new f.default.Element(e,this);var r=new f.default.Element(e,this);return r.checked=function(){return 0===arguments.length?this.elt.checked:(this.elt.checked=!!arguments[0],this)},r},f.default.prototype.removeElements=function(e){f.default._validateParameters("removeElements",arguments);this._elements.filter(function(e){return!(e.elt instanceof HTMLCanvasElement)}).map(function(e){return e.remove()})},f.default.Element.prototype.changed=function(e){return f.default.Element._adjustListener("change",e,this),this},f.default.Element.prototype.input=function(e){return f.default.Element._adjustListener("input",e,this),this},f.default.prototype.createDiv=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"",t=document.createElement("div");return t.innerHTML=e,m(t,this)},f.default.prototype.createP=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"",t=document.createElement("p");return t.innerHTML=e,m(t,this)},f.default.prototype.createSpan=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"",t=document.createElement("span");return t.innerHTML=e,m(t,this)},f.default.prototype.createImg=function(){f.default._validateParameters("createImg",arguments);var t,r=document.createElement("img"),i=arguments;return 1<i.length&&"string"==typeof i[1]&&(r.alt=i[1]),2<i.length&&"string"==typeof i[2]&&(r.crossOrigin=i[2]),r.src=i[0],t=m(r,this),r.addEventListener("load",function(){t.width=r.offsetWidth||r.width,t.height=r.offsetHeight||r.height;var e=i[i.length-1];"function"==typeof e&&e(t)}),t},f.default.prototype.createA=function(e,t,r){f.default._validateParameters("createA",arguments);var i=document.createElement("a");return i.href=e,i.innerHTML=t,r&&(i.target=r),m(i,this)},f.default.prototype.createSlider=function(e,t,r,i){f.default._validateParameters("createSlider",arguments);var n=document.createElement("input");return n.type="range",n.min=e,n.max=t,0===i?n.step=1e-18:i&&(n.step=i),"number"==typeof r&&(n.value=r),m(n,this)},f.default.prototype.createButton=function(e,t){f.default._validateParameters("createButton",arguments);var r=document.createElement("button");return r.innerHTML=e,t&&(r.value=t),m(r,this)},f.default.prototype.createCheckbox=function(){f.default._validateParameters("createCheckbox",arguments);var e=document.createElement("div"),t=document.createElement("input");t.type="checkbox",e.appendChild(t);var r=m(e,this);if(r.checked=function(){var e=r.elt.getElementsByTagName("input")[0];if(e){if(0===arguments.length)return e.checked;e.checked=!!arguments[0]}return r},this.value=function(e){return r.value=e,this},arguments[0]){var i=Math.random().toString(36).slice(2),n=document.createElement("label");t.setAttribute("id",i),n.htmlFor=i,r.value(arguments[0]),n.appendChild(document.createTextNode(arguments[0])),e.appendChild(n)}return arguments[1]&&(t.checked=!0),r},f.default.prototype.createSelect=function(){var e;f.default._validateParameters("createSelect",arguments);var t=arguments[0];if(t instanceof f.default.Element&&t.elt instanceof HTMLSelectElement)e=t,this.elt=t.elt;else if(t instanceof HTMLSelectElement)e=m(t,this),this.elt=t;else{var r=document.createElement("select");t&&"boolean"==typeof t&&r.setAttribute("multiple","true"),e=m(r,this),this.elt=r}return e.option=function(e,t){var r;if(void 0!==e){for(var i=0;i<this.elt.length;i+=1)if(this.elt[i].innerHTML===e){r=i;break}if(void 0!==r)!1===t?this.elt.remove(r):this.elt[r].value=t;else{var n=document.createElement("option");n.innerHTML=e,n.value=void 0===t?e:t,this.elt.appendChild(n),this._pInst._elements.push(n)}}},e.selected=function(e){if(void 0!==e){for(var t=0;t<this.elt.length;t+=1)this.elt[t].value.toString()===e.toString()&&(this.elt.selectedIndex=t);return this}if(this.elt.getAttribute("multiple")){var r=[],i=!0,n=!1,a=void 0;try{for(var o,s=this.elt.selectedOptions[Symbol.iterator]();!(i=(o=s.next()).done);i=!0){var l=o.value;r.push(l.value)}}catch(e){n=!0,a=e}finally{try{i||null==s.return||s.return()}finally{if(n)throw a}}return r}return this.elt.value},e.disable=function(e){if("string"==typeof e)for(var t=0;t<this.elt.length;t++)this.elt[t].value.toString()===e&&(this.elt[t].disabled=!0,this.elt[t].selected=!1);else this.elt.disabled=!0;return this},e},f.default.prototype.createRadio=function(){var e,t,r=arguments[0];r instanceof HTMLDivElement||r instanceof HTMLSpanElement?(e=r,"string"==typeof arguments[1]&&(t=arguments[1])):("string"==typeof r&&(t=r),e=document.createElement("div"));var p=m(this.elt=e,this);p._name=t||"radioOption";function i(e){return e instanceof HTMLInputElement&&"radio"===e.type}function h(e){return e.nextElementSibling instanceof HTMLLabelElement}return p._getOptionsArray=function(){return Array.from(this.elt.children).filter(i)},p.option=function(e,t){var r,i,n=!0,a=!1,o=void 0;try{for(var s,l=p._getOptionsArray()[Symbol.iterator]();!(n=(s=l.next()).done);n=!0){var u=s.value;if(u.value===e){r=u;break}}}catch(e){a=!0,o=e}finally{try{n||null==l.return||l.return()}finally{if(a)throw o}}return void 0===r&&((r=document.createElement("input")).setAttribute("type","radio"),r.setAttribute("value",e),this.elt.appendChild(r)),h(r)?i=r.nextElementSibling:(i=document.createElement("label"),r.insertAdjacentElement("afterend",i)),i.innerHTML=void 0===t?e:t,r.setAttribute("name",p._name),r},p.remove=function(e){var t=!0,r=!1,i=void 0;try{for(var n,a=p._getOptionsArray()[Symbol.iterator]();!(t=(n=a.next()).done);t=!0){var o=n.value;if(o.value===e)return h(o)&&o.nextElementSibling.remove(),void o.remove()}}catch(e){r=!0,i=e}finally{try{t||null==a.return||a.return()}finally{if(r)throw i}}},p.value=function(){var e="",t=!0,r=!1,i=void 0;try{for(var n,a=p._getOptionsArray()[Symbol.iterator]();!(t=(n=a.next()).done);t=!0){var o=n.value;if(o.checked){e=o.value;break}}}catch(e){r=!0,i=e}finally{try{t||null==a.return||a.return()}finally{if(r)throw i}}return e},p.selected=function(e){var t=null;if(void 0===e){var r=!0,i=!1,n=void 0;try{for(var a,o=p._getOptionsArray()[Symbol.iterator]();!(r=(a=o.next()).done);r=!0){var s=a.value;if(s.checked){t=s;break}}}catch(e){i=!0,n=e}finally{try{r||null==o.return||o.return()}finally{if(i)throw n}}}else{var l=!0,u=!1,h=void 0;try{for(var c,f=p._getOptionsArray()[Symbol.iterator]();!(l=(c=f.next()).done);l=!0){var d=c.value;d.value===e&&(d.setAttribute("checked",!0),t=d)}}catch(e){u=!0,h=e}finally{try{l||null==f.return||f.return()}finally{if(u)throw h}}}return t},p.disable=function(){var e=!(0<arguments.length&&void 0!==arguments[0])||arguments[0],t=!0,r=!1,i=void 0;try{for(var n,a=p._getOptionsArray()[Symbol.iterator]();!(t=(n=a.next()).done);t=!0){n.value.setAttribute("disabled",e)}}catch(e){r=!0,i=e}finally{try{t||null==a.return||a.return()}finally{if(r)throw i}}},p},f.default.prototype.createColorPicker=function(e){f.default._validateParameters("createColorPicker",arguments);var t,r=document.createElement("input");return r.type="color",e?e instanceof f.default.Color?r.value=e.toString("#rrggbb"):(f.default.prototype._colorMode="rgb",f.default.prototype._colorMaxes={rgb:[255,255,255,255],hsb:[360,100,100,1],hsl:[360,100,100,1]},r.value=f.default.prototype.color(e).toString("#rrggbb")):r.value="#000000",(t=m(r,this)).color=function(){return e&&(e.mode&&(f.default.prototype._colorMode=e.mode),e.maxes&&(f.default.prototype._colorMaxes=e.maxes)),f.default.prototype.color(this.elt.value)},t},f.default.prototype.createInput=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"",t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"text";f.default._validateParameters("createInput",arguments);var r=document.createElement("input");return r.setAttribute("value",e),r.setAttribute("type",t),m(r,this)},f.default.prototype.createFileInput=function(s){var e=1<arguments.length&&void 0!==arguments[1]&&arguments[1];f.default._validateParameters("createFileInput",arguments);if(window.File&&window.FileReader&&window.FileList&&window.Blob){var t=document.createElement("input");return t.setAttribute("type","file"),e&&t.setAttribute("multiple",!0),t.addEventListener("change",function(e){var t=!0,r=!1,i=void 0;try{for(var n,a=e.target.files[Symbol.iterator]();!(t=(n=a.next()).done);t=!0){var o=n.value;f.default.File._load(o,s)}}catch(e){r=!0,i=e}finally{try{t||null==a.return||a.return()}finally{if(r)throw i}}},!1),m(t,this)}console.log("The File APIs are not fully supported in this browser. Cannot create element.")},f.default.prototype.createVideo=function(e,t){return f.default._validateParameters("createVideo",arguments),n(this,"video",e,t)},f.default.prototype.createAudio=function(e,t){return f.default._validateParameters("createAudio",arguments),n(this,"audio",e,t)},f.default.prototype.VIDEO="video",f.default.prototype.AUDIO="audio",void 0===navigator.mediaDevices&&(navigator.mediaDevices={}),void 0===navigator.mediaDevices.getUserMedia&&(navigator.mediaDevices.getUserMedia=function(r){var i=navigator.webkitGetUserMedia||navigator.mozGetUserMedia;return i?new Promise(function(e,t){i.call(navigator,r,e,t)}):Promise.reject(new Error("getUserMedia is not implemented in this browser"))}),f.default.prototype.createCapture=function(){if(f.default._validateParameters("createCapture",arguments),!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)throw new DOMException("getUserMedia not supported in this browser");var e,t,r=!0,i=!0,n=!0,a=!1,o=void 0;try{for(var s,l=arguments[Symbol.iterator]();!(n=(s=l.next()).done);n=!0){var u=s.value;u===f.default.prototype.VIDEO?i=!1:u===f.default.prototype.AUDIO?r=!1:"object"===d(u)?e=u:"function"==typeof u&&(t=u)}}catch(e){a=!0,o=e}finally{try{n||null==l.return||l.return()}finally{if(a)throw o}}e=e||{video:r,audio:i};var h=document.createElement("video");h.setAttribute("playsinline",""),navigator.mediaDevices.getUserMedia(e).then(function(t){try{"srcObject"in h?h.srcObject=t:h.src=window.URL.createObjectURL(t)}catch(e){h.src=t}},console.log);var c=m(h,this,!0);return c.loadedmetadata=!1,h.addEventListener("loadedmetadata",function(){h.play(),h.width?(c.width=h.width,c.height=h.height):(c.width=c.elt.width=h.videoWidth,c.height=c.elt.height=h.videoHeight),c.loadedmetadata=!0,t&&t(h.srcObject)}),c},f.default.prototype.createElement=function(e,t){f.default._validateParameters("createElement",arguments);var r=document.createElement(e);return void 0!==t&&(r.innerHTML=t),m(r,this)},f.default.Element.prototype.addClass=function(e){return this.elt.className?this.hasClass(e)||(this.elt.className=this.elt.className+" "+e):this.elt.className=e,this},f.default.Element.prototype.removeClass=function(e){return this.elt.classList.remove(e),this},f.default.Element.prototype.hasClass=function(e){return this.elt.classList.contains(e)},f.default.Element.prototype.toggleClass=function(e){return this.elt.classList.contains(e)?this.elt.classList.remove(e):this.elt.classList.add(e),this},f.default.Element.prototype.child=function(e){return void 0===e?this.elt.childNodes:("string"==typeof e?("#"===e[0]&&(e=e.substring(1)),e=document.getElementById(e)):e instanceof f.default.Element&&(e=e.elt),e instanceof HTMLElement&&this.elt.appendChild(e),this)},f.default.Element.prototype.center=function(e){var t=this.elt.style.display,r="none"===this.elt.style.display,i="none"===this.parent().style.display,n={x:this.elt.offsetLeft,y:this.elt.offsetTop};r&&this.show(),i&&this.parent().show(),this.elt.style.display="block",this.position(0,0);var a=Math.abs(this.parent().offsetWidth-this.elt.offsetWidth),o=Math.abs(this.parent().offsetHeight-this.elt.offsetHeight);return"both"===e||void 0===e?this.position(a/2+this.parent().offsetLeft,o/2+this.parent().offsetTop):"horizontal"===e?this.position(a/2+this.parent().offsetLeft,n.y):"vertical"===e&&this.position(n.x,o/2+this.parent().offsetTop),this.style("display",t),r&&this.hide(),i&&this.parent().hide(),this},f.default.Element.prototype.html=function(){return 0===arguments.length?this.elt.innerHTML:(arguments[1]?this.elt.insertAdjacentHTML("beforeend",arguments[0]):this.elt.innerHTML=arguments[0],this)},f.default.Element.prototype.position=function(){if(0===arguments.length)return{x:this.elt.offsetLeft,y:this.elt.offsetTop};var e="absolute";return"static"!==arguments[2]&&"fixed"!==arguments[2]&&"relative"!==arguments[2]&&"sticky"!==arguments[2]&&"initial"!==arguments[2]&&"inherit"!==arguments[2]||(e=arguments[2]),this.elt.style.position=e,this.elt.style.left=arguments[0]+"px",this.elt.style.top=arguments[1]+"px",this.x=arguments[0],this.y=arguments[1],this},f.default.Element.prototype._translate=function(){this.elt.style.position="absolute";var e="";return this.elt.style.transform&&(e=(e=this.elt.style.transform.replace(/translate3d\(.*\)/g,"")).replace(/translate[X-Z]?\(.*\)/g,"")),2===arguments.length?this.elt.style.transform="translate("+arguments[0]+"px, "+arguments[1]+"px)":2<arguments.length&&(this.elt.style.transform="translate3d("+arguments[0]+"px,"+arguments[1]+"px,"+arguments[2]+"px)",this.elt.parentElement.style.perspective=3===arguments.length?"1000px":arguments[3]+"px"),this.elt.style.transform+=e,this},f.default.Element.prototype._rotate=function(){var e="";return this.elt.style.transform&&(e=(e=this.elt.style.transform.replace(/rotate3d\(.*\)/g,"")).replace(/rotate[X-Z]?\(.*\)/g,"")),1===arguments.length?this.elt.style.transform="rotate("+arguments[0]+"deg)":2===arguments.length?this.elt.style.transform="rotate("+arguments[0]+"deg, "+arguments[1]+"deg)":3===arguments.length&&(this.elt.style.transform="rotateX("+arguments[0]+"deg)",this.elt.style.transform+="rotateY("+arguments[1]+"deg)",this.elt.style.transform+="rotateZ("+arguments[2]+"deg)"),this.elt.style.transform+=e,this},f.default.Element.prototype.style=function(e,t){if(t instanceof f.default.Color&&(t="rgba("+t.levels[0]+","+t.levels[1]+","+t.levels[2]+","+t.levels[3]/255+")"),void 0===t){if(-1===e.indexOf(":"))return window.getComputedStyle(this.elt).getPropertyValue(e);for(var r=e.split(";"),i=0;i<r.length;i++){var n=r[i].split(":");n[0]&&n[1]&&(this.elt.style[n[0].trim()]=n[1].trim())}}else if(this.elt.style[e]=t,"width"===e||"height"===e||"left"===e||"top"===e){var a=window.getComputedStyle(this.elt).getPropertyValue(e).replace(/\D+/g,"");this[e]=parseInt(a,10)}return this},f.default.Element.prototype.attribute=function(e,t){if(null==this.elt.firstChild||"checkbox"!==this.elt.firstChild.type&&"radio"!==this.elt.firstChild.type)return void 0===t?this.elt.getAttribute(e):(this.elt.setAttribute(e,t),this);if(void 0===t)return this.elt.firstChild.getAttribute(e);for(var r=0;r<this.elt.childNodes.length;r++)this.elt.childNodes[r].setAttribute(e,t)},f.default.Element.prototype.removeAttribute=function(e){if(null!=this.elt.firstChild&&("checkbox"===this.elt.firstChild.type||"radio"===this.elt.firstChild.type))for(var t=0;t<this.elt.childNodes.length;t++)this.elt.childNodes[t].removeAttribute(e);return this.elt.removeAttribute(e),this},f.default.Element.prototype.value=function(){return 0<arguments.length?(this.elt.value=arguments[0],this):"range"===this.elt.type?parseFloat(this.elt.value):this.elt.value},f.default.Element.prototype.show=function(){return this.elt.style.display="block",this},f.default.Element.prototype.hide=function(){return this.elt.style.display="none",this},f.default.Element.prototype.size=function(e,t){if(0===arguments.length)return{width:this.elt.offsetWidth,height:this.elt.offsetHeight};var r=e,i=t,n=f.default.prototype.AUTO;if(r!==n||i!==n){if(r===n?r=t*this.width/this.height:i===n&&(i=e*this.height/this.width),this.elt instanceof HTMLCanvasElement){var a,o={},s=this.elt.getContext("2d");for(a in s)o[a]=s[a];for(a in this.elt.setAttribute("width",r*this._pInst._pixelDensity),this.elt.setAttribute("height",i*this._pInst._pixelDensity),this.elt.style.width=r+"px",this.elt.style.height=i+"px",this._pInst.scale(this._pInst._pixelDensity,this._pInst._pixelDensity),o)this.elt.getContext("2d")[a]=o[a]}else this.elt.style.width=r+"px",this.elt.style.height=i+"px",this.elt.width=r,this.elt.height=i;this.width=this.elt.offsetWidth,this.height=this.elt.offsetHeight,this._pInst&&this._pInst._curElement&&this._pInst._curElement.elt===this.elt&&(this._pInst._setProperty("width",this.elt.offsetWidth),this._pInst._setProperty("height",this.elt.offsetHeight))}return this},f.default.Element.prototype.remove=function(){if(this instanceof f.default.MediaElement){this.stop();var e=this.elt.srcObject;if(null!==e)e.getTracks().forEach(function(e){e.stop()})}var t=this._pInst._elements.indexOf(this);for(var r in-1!==t&&this._pInst._elements.splice(t,1),this._events)this.elt.removeEventListener(r,this._events[r]);this.elt&&this.elt.parentNode&&this.elt.parentNode.removeChild(this.elt)},f.default.Element.prototype.drop=function(n,a){if(window.File&&window.FileReader&&window.FileList&&window.Blob){if(!this._dragDisabled){this._dragDisabled=!0;var e=function(e){e.preventDefault()};this.elt.addEventListener("dragover",e),this.elt.addEventListener("dragleave",e)}f.default.Element._attachListener("drop",function(e){e.preventDefault(),"function"==typeof a&&a.call(this,e);for(var t=e.dataTransfer.files,r=0;r<t.length;r++){var i=t[r];f.default.File._load(i,n)}},this)}else console.log("The File APIs are not fully supported in this browser.");return this},f.default.MediaElement=function(i,e){f.default.Element.call(this,i,e);var n=this;this.elt.crossOrigin="anonymous",this._prevTime=0,this._cueIDCounter=0,this._cues=[],(this._pixelsState=this)._pixelDensity=1,this._modified=!1,Object.defineProperty(n,"src",{get:function(){var e=n.elt.children[0].src,t=n.elt.src===window.location.href?"":n.elt.src;return e===window.location.href?t:e},set:function(e){for(var t=0;t<n.elt.children.length;t++)n.elt.removeChild(n.elt.children[t]);var r=document.createElement("source");r.src=e,i.appendChild(r),n.elt.src=e,n.modified=!0}}),n._onended=function(){},n.elt.onended=function(){n._onended(n)}},f.default.MediaElement.prototype=Object.create(f.default.Element.prototype),f.default.MediaElement.prototype.play=function(){var e,t=this;return this.elt.currentTime===this.elt.duration&&(this.elt.currentTime=0),(e=(1<this.elt.readyState||this.elt.load(),this.elt.play()))&&e.catch&&e.catch(function(e){"NotAllowedError"===e.name?f.default._friendlyAutoplayError(t.src):console.error("Media play method encountered an unexpected error",e)}),this},f.default.MediaElement.prototype.stop=function(){return this.elt.pause(),this.elt.currentTime=0,this},f.default.MediaElement.prototype.pause=function(){return this.elt.pause(),this},f.default.MediaElement.prototype.loop=function(){return this.elt.setAttribute("loop",!0),this.play(),this},f.default.MediaElement.prototype.noLoop=function(){return this.elt.removeAttribute("loop"),this},f.default.MediaElement.prototype._setupAutoplayFailDetection=function(){var e=this,t=setTimeout(function(){return f.default._friendlyAutoplayError(e.src)},500);this.elt.addEventListener("play",function(){return clearTimeout(t)},{passive:!0,once:!0})},f.default.MediaElement.prototype.autoplay=function(e){var t=this,r=this.elt.getAttribute("autoplay");if(this.elt.setAttribute("autoplay",e),e&&!r){var i=function(){return t._setupAutoplayFailDetection()};4===this.elt.readyState?i():this.elt.addEventListener("canplay",i,{passive:!0,once:!0})}return this},f.default.MediaElement.prototype.volume=function(e){if(void 0===e)return this.elt.volume;this.elt.volume=e},f.default.MediaElement.prototype.speed=function(e){if(void 0===e)return this.presetPlaybackRate||this.elt.playbackRate;this.loadedmetadata?this.elt.playbackRate=e:this.presetPlaybackRate=e},f.default.MediaElement.prototype.time=function(e){return void 0===e?this.elt.currentTime:(this.elt.currentTime=e,this)},f.default.MediaElement.prototype.duration=function(){return this.elt.duration},f.default.MediaElement.prototype.pixels=[],f.default.MediaElement.prototype._ensureCanvas=function(){this.canvas||(this.canvas=document.createElement("canvas"),this.drawingContext=this.canvas.getContext("2d"),this.setModified(!0)),this.loadedmetadata&&(this.canvas.width!==this.elt.width&&(this.canvas.width=this.elt.width,this.canvas.height=this.elt.height,this.width=this.canvas.width,this.height=this.canvas.height),this.drawingContext.drawImage(this.elt,0,0,this.canvas.width,this.canvas.height),this.setModified(!0))},f.default.MediaElement.prototype.loadPixels=function(){return this._ensureCanvas(),f.default.Renderer2D.prototype.loadPixels.apply(this,arguments)},f.default.MediaElement.prototype.updatePixels=function(e,t,r,i){return this.loadedmetadata&&(this._ensureCanvas(),f.default.Renderer2D.prototype.updatePixels.call(this,e,t,r,i)),this.setModified(!0),this},f.default.MediaElement.prototype.get=function(){return this._ensureCanvas(),f.default.Renderer2D.prototype.get.apply(this,arguments)},f.default.MediaElement.prototype._getPixel=function(){return this.loadPixels(),f.default.Renderer2D.prototype._getPixel.apply(this,arguments)},f.default.MediaElement.prototype.set=function(e,t,r){this.loadedmetadata&&(this._ensureCanvas(),f.default.Renderer2D.prototype.set.call(this,e,t,r),this.setModified(!0))},f.default.MediaElement.prototype.copy=function(){this._ensureCanvas(),f.default.prototype.copy.apply(this,arguments)},f.default.MediaElement.prototype.mask=function(){this.loadPixels(),this.setModified(!0),f.default.Image.prototype.mask.apply(this,arguments)},f.default.MediaElement.prototype.isModified=function(){return this._modified},f.default.MediaElement.prototype.setModified=function(e){this._modified=e},f.default.MediaElement.prototype.onended=function(e){return this._onended=e,this},f.default.MediaElement.prototype.connect=function(e){var t,r;if("function"==typeof f.default.prototype.getAudioContext)t=f.default.prototype.getAudioContext(),r=f.default.soundOut.input;else try{r=(t=e.context).destination}catch(e){throw"connect() is meant to be used with Web Audio API or p5.sound.js"}this.audioSourceNode||(this.audioSourceNode=t.createMediaElementSource(this.elt),this.audioSourceNode.connect(r)),e?e.input?this.audioSourceNode.connect(e.input):this.audioSourceNode.connect(e):this.audioSourceNode.connect(r)},f.default.MediaElement.prototype.disconnect=function(){if(!this.audioSourceNode)throw"nothing to disconnect";this.audioSourceNode.disconnect()},f.default.MediaElement.prototype.showControls=function(){this.elt.style["text-align"]="inherit",this.elt.controls=!0},f.default.MediaElement.prototype.hideControls=function(){this.elt.controls=!1};function a(e,t,r,i){this.callback=e,this.time=t,this.id=r,this.val=i}f.default.MediaElement.prototype.addCue=function(e,t,r){var i=this._cueIDCounter++,n=new a(t,e,i,r);return this._cues.push(n),this.elt.ontimeupdate||(this.elt.ontimeupdate=this._onTimeUpdate.bind(this)),i},f.default.MediaElement.prototype.removeCue=function(e){for(var t=0;t<this._cues.length;t++)this._cues[t].id===e&&(console.log(e),this._cues.splice(t,1));0===this._cues.length&&(this.elt.ontimeupdate=null)},f.default.MediaElement.prototype.clearCues=function(){this._cues=[],this.elt.ontimeupdate=null},f.default.MediaElement.prototype._onTimeUpdate=function(){for(var e=this.time(),t=0;t<this._cues.length;t++){var r=this._cues[t].time,i=this._cues[t].val;this._prevTime<r&&r<=e&&this._cues[t].callback(i)}this._prevTime=e},f.default.File=function(e,t){this.file=e,this._pInst=t;var r=e.type.split("/");this.type=r[0],this.subtype=r[1],this.name=e.name,this.size=e.size,this.data=void 0},f.default.File._createLoader=function(i,n){var e=new FileReader;return e.onload=function(e){var t=new f.default.File(i);if("application/json"===t.file.type)t.data=JSON.parse(e.target.result);else if("text/xml"===t.file.type){var r=(new DOMParser).parseFromString(e.target.result,"text/xml");t.data=new f.default.XML(r.documentElement)}else t.data=e.target.result;n(t)},e},f.default.File._load=function(e,t){if(/^text\//.test(e.type)||"application/json"===e.type)f.default.File._createLoader(e,t).readAsText(e);else if(/^(video|audio)\//.test(e.type)){var r=new f.default.File(e);r.data=URL.createObjectURL(e),t(r)}else f.default.File._createLoader(e,t).readAsDataURL(e)};var o=f.default;r.default=o},{"../core/main":36}],53:[function(e,t,r){"use strict";function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,n=(i=e("../core/main"))&&i.__esModule?i:{default:i},a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var a=i?Object.getOwnPropertyDescriptor(e,n):null;a&&(a.get||a.set)?Object.defineProperty(r,n,a):r[n]=e[n]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}n.default.prototype.deviceOrientation=1<window.innerWidth/window.innerHeight?"landscape":"portrait",n.default.prototype.accelerationX=0,n.default.prototype.accelerationY=0,n.default.prototype.accelerationZ=0,n.default.prototype.pAccelerationX=0,n.default.prototype.pAccelerationY=0,n.default.prototype.pAccelerationZ=0,n.default.prototype._updatePAccelerations=function(){this._setProperty("pAccelerationX",this.accelerationX),this._setProperty("pAccelerationY",this.accelerationY),this._setProperty("pAccelerationZ",this.accelerationZ)},n.default.prototype.rotationX=0,n.default.prototype.rotationY=0,n.default.prototype.rotationZ=0,n.default.prototype.pRotationX=0,n.default.prototype.pRotationY=0;var u=n.default.prototype.pRotationZ=0,h=0,c=0,f="clockwise",d="clockwise",p="clockwise";n.default.prototype.pRotateDirectionX=void 0,n.default.prototype.pRotateDirectionY=void 0,n.default.prototype.pRotateDirectionZ=void 0,n.default.prototype._updatePRotations=function(){this._setProperty("pRotationX",this.rotationX),this._setProperty("pRotationY",this.rotationY),this._setProperty("pRotationZ",this.rotationZ)},n.default.prototype.turnAxis=void 0;var m=.5,v=30;n.default.prototype.setMoveThreshold=function(e){n.default._validateParameters("setMoveThreshold",arguments),m=e},n.default.prototype.setShakeThreshold=function(e){n.default._validateParameters("setShakeThreshold",arguments),v=e},n.default.prototype._ondeviceorientation=function(e){this._updatePRotations(),this._angleMode===a.radians&&(e.beta=e.beta*(_PI/180),e.gamma=e.gamma*(_PI/180),e.alpha=e.alpha*(_PI/180)),this._setProperty("rotationX",e.beta),this._setProperty("rotationY",e.gamma),this._setProperty("rotationZ",e.alpha),this._handleMotion()},n.default.prototype._ondevicemotion=function(e){this._updatePAccelerations(),this._setProperty("accelerationX",2*e.acceleration.x),this._setProperty("accelerationY",2*e.acceleration.y),this._setProperty("accelerationZ",2*e.acceleration.z),this._handleMotion()},n.default.prototype._handleMotion=function(){90===window.orientation||-90===window.orientation?this._setProperty("deviceOrientation","landscape"):0===window.orientation?this._setProperty("deviceOrientation","portrait"):void 0===window.orientation&&this._setProperty("deviceOrientation","undefined");var e,t,r=this._isGlobal?window:this;if("function"==typeof r.deviceMoved&&(Math.abs(this.accelerationX-this.pAccelerationX)>m||Math.abs(this.accelerationY-this.pAccelerationY)>m||Math.abs(this.accelerationZ-this.pAccelerationZ)>m)&&r.deviceMoved(),"function"==typeof r.deviceTurned){var i=this.rotationX+180,n=this.pRotationX+180,a=u+180;0<i-n&&i-n<270||i-n<-270?f="clockwise":(i-n<0||270<i-n)&&(f="counter-clockwise"),f!==this.pRotateDirectionX&&(a=i),90<Math.abs(i-a)&&Math.abs(i-a)<270&&(a=i,this._setProperty("turnAxis","X"),r.deviceTurned()),this.pRotateDirectionX=f,u=a-180;var o=this.rotationY+180,s=this.pRotationY+180,l=h+180;0<o-s&&o-s<270||o-s<-270?d="clockwise":(o-s<0||270<o-this.pRotationY)&&(d="counter-clockwise"),d!==this.pRotateDirectionY&&(l=o),90<Math.abs(o-l)&&Math.abs(o-l)<270&&(l=o,this._setProperty("turnAxis","Y"),r.deviceTurned()),this.pRotateDirectionY=d,h=l-180,0<this.rotationZ-this.pRotationZ&&this.rotationZ-this.pRotationZ<270||this.rotationZ-this.pRotationZ<-270?p="clockwise":(this.rotationZ-this.pRotationZ<0||270<this.rotationZ-this.pRotationZ)&&(p="counter-clockwise"),p!==this.pRotateDirectionZ&&(c=this.rotationZ),90<Math.abs(this.rotationZ-c)&&Math.abs(this.rotationZ-c)<270&&(c=this.rotationZ,this._setProperty("turnAxis","Z"),r.deviceTurned()),this.pRotateDirectionZ=p,this._setProperty("turnAxis",void 0)}"function"==typeof r.deviceShaken&&(null!==this.pAccelerationX&&(e=Math.abs(this.accelerationX-this.pAccelerationX),t=Math.abs(this.accelerationY-this.pAccelerationY)),v<e+t&&r.deviceShaken())};var l=n.default;r.default=l},{"../core/constants":26,"../core/main":36}],54:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,n=(i=e("../core/main"))&&i.__esModule?i:{default:i};n.default.prototype.isKeyPressed=!1,n.default.prototype.keyIsPressed=!1,n.default.prototype.key="",n.default.prototype.keyCode=0,n.default.prototype._onkeydown=function(e){if(!this._downKeys[e.which]){this._setProperty("isKeyPressed",!0),this._setProperty("keyIsPressed",!0),this._setProperty("keyCode",e.which),this._downKeys[e.which]=!0,this._setProperty("key",e.key||String.fromCharCode(e.which)||e.which);var t=this._isGlobal?window:this;if("function"==typeof t.keyPressed&&!e.charCode)!1===t.keyPressed(e)&&e.preventDefault()}},n.default.prototype._onkeyup=function(e){this._downKeys[e.which]=!1,this._areDownKeys()||(this._setProperty("isKeyPressed",!1),this._setProperty("keyIsPressed",!1)),this._setProperty("_lastKeyCodeTyped",null),this._setProperty("key",e.key||String.fromCharCode(e.which)||e.which),this._setProperty("keyCode",e.which);var t=this._isGlobal?window:this;"function"==typeof t.keyReleased&&!1===t.keyReleased(e)&&e.preventDefault()},n.default.prototype._onkeypress=function(e){if(e.which!==this._lastKeyCodeTyped){this._setProperty("_lastKeyCodeTyped",e.which),this._setProperty("key",e.key||String.fromCharCode(e.which)||e.which);var t=this._isGlobal?window:this;if("function"==typeof t.keyTyped)!1===t.keyTyped(e)&&e.preventDefault()}},n.default.prototype._onblur=function(e){this._downKeys={}},n.default.prototype.keyIsDown=function(e){return n.default._validateParameters("keyIsDown",arguments),this._downKeys[e]||!1},n.default.prototype._areDownKeys=function(){for(var e in this._downKeys)if(this._downKeys.hasOwnProperty(e)&&!0===this._downKeys[e])return!0;return!1};var a=n.default;r.default=a},{"../core/main":36}],55:[function(e,t,r){"use strict";function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,n=(i=e("../core/main"))&&i.__esModule?i:{default:i},a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var a=i?Object.getOwnPropertyDescriptor(e,n):null;a&&(a.get||a.set)?Object.defineProperty(r,n,a):r[n]=e[n]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}n.default.prototype.movedX=0,n.default.prototype.movedY=0,n.default.prototype._hasMouseInteracted=!1,n.default.prototype.mouseX=0,n.default.prototype.mouseY=0,n.default.prototype.pmouseX=0,n.default.prototype.pmouseY=0,n.default.prototype.winMouseX=0,n.default.prototype.winMouseY=0,n.default.prototype.pwinMouseX=0,n.default.prototype.pwinMouseY=0,n.default.prototype.mouseButton=0,n.default.prototype.mouseIsPressed=!1,n.default.prototype._updateNextMouseCoords=function(e){if(null!==this._curElement&&(!e.touches||0<e.touches.length)){var t=function(e,t,r,i){i&&!i.clientX&&(i.touches?i=i.touches[0]:i.changedTouches&&(i=i.changedTouches[0]));var n=e.getBoundingClientRect(),a=e.scrollWidth/t||1,o=e.scrollHeight/r||1;return{x:(i.clientX-n.left)/a,y:(i.clientY-n.top)/o,winX:i.clientX,winY:i.clientY,id:i.identifier}}(this._curElement.elt,this.width,this.height,e);this._setProperty("movedX",e.movementX),this._setProperty("movedY",e.movementY),this._setProperty("mouseX",t.x),this._setProperty("mouseY",t.y),this._setProperty("winMouseX",t.winX),this._setProperty("winMouseY",t.winY)}this._hasMouseInteracted||(this._updateMouseCoords(),this._setProperty("_hasMouseInteracted",!0))},n.default.prototype._updateMouseCoords=function(){this._setProperty("pmouseX",this.mouseX),this._setProperty("pmouseY",this.mouseY),this._setProperty("pwinMouseX",this.winMouseX),this._setProperty("pwinMouseY",this.winMouseY),this._setProperty("_pmouseWheelDeltaY",this._mouseWheelDeltaY)},n.default.prototype._setMouseButton=function(e){1===e.button?this._setProperty("mouseButton",a.CENTER):2===e.button?this._setProperty("mouseButton",a.RIGHT):this._setProperty("mouseButton",a.LEFT)},n.default.prototype._onmousemove=function(e){var t=this._isGlobal?window:this;this._updateNextMouseCoords(e),this.mouseIsPressed?"function"==typeof t.mouseDragged?!1===t.mouseDragged(e)&&e.preventDefault():"function"==typeof t.touchMoved&&!1===t.touchMoved(e)&&e.preventDefault():"function"==typeof t.mouseMoved&&!1===t.mouseMoved(e)&&e.preventDefault()},n.default.prototype._onmousedown=function(e){var t=this._isGlobal?window:this;this._setProperty("mouseIsPressed",!0),this._setMouseButton(e),this._updateNextMouseCoords(e),"function"==typeof t.mousePressed?!1===t.mousePressed(e)&&e.preventDefault():navigator.userAgent.toLowerCase().includes("safari")&&"function"==typeof t.touchStarted&&!1===t.touchStarted(e)&&e.preventDefault()},n.default.prototype._onmouseup=function(e){var t=this._isGlobal?window:this;this._setProperty("mouseIsPressed",!1),"function"==typeof t.mouseReleased?!1===t.mouseReleased(e)&&e.preventDefault():"function"==typeof t.touchEnded&&!1===t.touchEnded(e)&&e.preventDefault()},n.default.prototype._ondragend=n.default.prototype._onmouseup,n.default.prototype._ondragover=n.default.prototype._onmousemove,n.default.prototype._onclick=function(e){var t=this._isGlobal?window:this;"function"==typeof t.mouseClicked&&!1===t.mouseClicked(e)&&e.preventDefault()},n.default.prototype._ondblclick=function(e){var t=this._isGlobal?window:this;"function"==typeof t.doubleClicked&&!1===t.doubleClicked(e)&&e.preventDefault()},n.default.prototype._mouseWheelDeltaY=0,n.default.prototype._pmouseWheelDeltaY=0,n.default.prototype._onwheel=function(e){var t=this._isGlobal?window:this;this._setProperty("_mouseWheelDeltaY",e.deltaY),"function"==typeof t.mouseWheel&&(e.delta=e.deltaY,!1===t.mouseWheel(e)&&e.preventDefault())},n.default.prototype.requestPointerLock=function(){var e=this._curElement.elt;return e.requestPointerLock=e.requestPointerLock||e.mozRequestPointerLock,e.requestPointerLock?(e.requestPointerLock(),!0):(console.log("requestPointerLock is not implemented in this browser"),!1)},n.default.prototype.exitPointerLock=function(){document.exitPointerLock()};var l=n.default;r.default=l},{"../core/constants":26,"../core/main":36}],56:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,n=(i=e("../core/main"))&&i.__esModule?i:{default:i};function a(e,t,r,i,n){var a=4<arguments.length&&void 0!==n?n:0,o=e.getBoundingClientRect(),s=e.scrollWidth/t||1,l=e.scrollHeight/r||1,u=i.touches[a]||i.changedTouches[a];return{x:(u.clientX-o.left)/s,y:(u.clientY-o.top)/l,winX:u.clientX,winY:u.clientY,id:u.identifier}}n.default.prototype.touches=[],n.default.prototype._updateTouchCoords=function(e){if(null!==this._curElement){for(var t=[],r=0;r<e.touches.length;r++)t[r]=a(this._curElement.elt,this.width,this.height,e,r);this._setProperty("touches",t)}},n.default.prototype._ontouchstart=function(e){var t=this._isGlobal?window:this;this._setProperty("mouseIsPressed",!0),this._updateTouchCoords(e),this._updateNextMouseCoords(e),this._updateMouseCoords(),"function"==typeof t.touchStarted?!1===t.touchStarted(e)&&e.preventDefault():navigator.userAgent.toLowerCase().includes("safari")&&"function"==typeof t.mousePressed&&!1===t.mousePressed(e)&&e.preventDefault()},n.default.prototype._ontouchmove=function(e){var t=this._isGlobal?window:this;this._updateTouchCoords(e),this._updateNextMouseCoords(e),"function"==typeof t.touchMoved?!1===t.touchMoved(e)&&e.preventDefault():"function"==typeof t.mouseDragged&&!1===t.mouseDragged(e)&&e.preventDefault()},n.default.prototype._ontouchend=function(e){this._setProperty("mouseIsPressed",!1),this._updateTouchCoords(e),this._updateNextMouseCoords(e);var t=this._isGlobal?window:this;"function"==typeof t.touchEnded?!1===t.touchEnded(e)&&e.preventDefault():"function"==typeof t.mouseReleased&&!1===t.mouseReleased(e)&&e.preventDefault()};var o=n.default;r.default=o},{"../core/main":36}],57:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var L,O,P,R,D={};function i(e,t){for(var r,i,n,a,o,s,l,u,h,c,f=D._toPixels(e),d=e.width,p=e.height,m=d*p,v=new Int32Array(m),y=0;y<m;y++)v[y]=D._getARGB(f,y);var g,b,_,x,w=new Int32Array(m),S=new Int32Array(m),M=new Int32Array(m),T=new Int32Array(m),E=0;for(!function(e){var t=3.5*e|0;if(L!==(t=t<1?1:t<248?t:248)){O=1+(L=t)<<1,P=new Int32Array(O),R=new Array(O);for(var r=0;r<O;r++)R[r]=new Int32Array(256);for(var i,n,a,o,s=1,l=t-1;s<t;s++){P[t+s]=P[l]=n=l*l,a=R[t+s],o=R[l--];for(var u=0;u<256;u++)a[u]=o[u]=n*u}i=P[t]=t*t,a=R[t];for(var h=0;h<256;h++)a[h]=i*h}}(t),b=0;b<p;b++){for(g=0;g<d;g++){if(a=n=i=o=r=0,(s=g-L)<0)c=-s,s=0;else{if(d<=s)break;c=0}for(_=c;_<O&&!(d<=s);_++){var C=v[s+E];o+=(x=R[_])[(-16777216&C)>>>24],i+=x[(16711680&C)>>16],n+=x[(65280&C)>>8],a+=x[255&C],r+=P[_],s++}w[l=E+g]=o/r,S[l]=i/r,M[l]=n/r,T[l]=a/r}E+=d}for(h=(u=-L)*d,b=E=0;b<p;b++){for(g=0;g<d;g++){if(a=n=i=o=r=0,u<0)c=l=-u,s=g;else{if(p<=u)break;c=0,l=u,s=g+h}for(_=c;_<O&&!(p<=l);_++)o+=(x=R[_])[w[s]],i+=x[S[s]],n+=x[M[s]],a+=x[T[s]],r+=P[_],l++,s+=d;v[g+E]=o/r<<24|i/r<<16|n/r<<8|a/r}E+=d,h+=d,u++}D._setPixels(f,v)}D._toPixels=function(e){return e instanceof ImageData?e.data:e.getContext("2d").getImageData(0,0,e.width,e.height).data},D._getARGB=function(e,t){var r=4*t;return e[3+r]<<24&4278190080|e[r]<<16&16711680|e[1+r]<<8&65280|255&e[2+r]},D._setPixels=function(e,t){for(var r=0,i=0,n=e.length;i<n;i++)e[(r=4*i)+0]=(16711680&t[i])>>>16,e[r+1]=(65280&t[i])>>>8,e[r+2]=255&t[i],e[r+3]=(4278190080&t[i])>>>24},D._toImageData=function(e){return e instanceof ImageData?e:e.getContext("2d").getImageData(0,0,e.width,e.height)},D._createImageData=function(e,t){return D._tmpCanvas=document.createElement("canvas"),D._tmpCtx=D._tmpCanvas.getContext("2d"),this._tmpCtx.createImageData(e,t)},D.apply=function(e,t,r){var i=e.getContext("2d"),n=i.getImageData(0,0,e.width,e.height),a=t(n,r);a instanceof ImageData?i.putImageData(a,0,0,0,0,e.width,e.height):i.putImageData(n,0,0,0,0,e.width,e.height)},D.threshold=function(e,t){var r=D._toPixels(e);void 0===t&&(t=.5);for(var i=Math.floor(255*t),n=0;n<r.length;n+=4){var a=void 0;a=i<=.2126*r[n]+.7152*r[n+1]+.0722*r[n+2]?255:0,r[n]=r[n+1]=r[n+2]=a}},D.gray=function(e){for(var t=D._toPixels(e),r=0;r<t.length;r+=4){var i=.2126*t[r]+.7152*t[r+1]+.0722*t[r+2];t[r]=t[r+1]=t[r+2]=i}},D.opaque=function(e){for(var t=D._toPixels(e),r=0;r<t.length;r+=4)t[r+3]=255;return t},D.invert=function(e){for(var t=D._toPixels(e),r=0;r<t.length;r+=4)t[r]=255-t[r],t[r+1]=255-t[r+1],t[r+2]=255-t[r+2]},D.posterize=function(e,t){var r=D._toPixels(e);if(t<2||255<t)throw new Error("Level must be greater than 2 and less than 255 for posterize");for(var i=t-1,n=0;n<r.length;n+=4){var a=r[n],o=r[n+1],s=r[n+2];r[n]=255*(a*t>>8)/i,r[n+1]=255*(o*t>>8)/i,r[n+2]=255*(s*t>>8)/i}},D.dilate=function(e){for(var t,r,i,n,a,o,s,l,u,h,c,f,d,p,m,v,y,g=D._toPixels(e),b=0,_=g.length?g.length/4:0,x=new Int32Array(_);b<_;)for(r=(t=b)+e.width;b<r;)i=n=D._getARGB(g,b),(s=b-1)<t&&(s=b),r<=(o=b+1)&&(o=b),(l=b-e.width)<0&&(l=0),_<=(u=b+e.width)&&(u=b),f=D._getARGB(g,l),c=D._getARGB(g,s),d=D._getARGB(g,u),(a=77*(i>>16&255)+151*(i>>8&255)+28*(255&i))<(m=77*(c>>16&255)+151*(c>>8&255)+28*(255&c))&&(n=c,a=m),a<(p=77*((h=D._getARGB(g,o))>>16&255)+151*(h>>8&255)+28*(255&h))&&(n=h,a=p),a<(v=77*(f>>16&255)+151*(f>>8&255)+28*(255&f))&&(n=f,a=v),a<(y=77*(d>>16&255)+151*(d>>8&255)+28*(255&d))&&(n=d,a=y),x[b++]=n;D._setPixels(g,x)},D.erode=function(e){for(var t,r,i,n,a,o,s,l,u,h,c,f,d,p,m,v,y,g=D._toPixels(e),b=0,_=g.length?g.length/4:0,x=new Int32Array(_);b<_;)for(r=(t=b)+e.width;b<r;)i=n=D._getARGB(g,b),(s=b-1)<t&&(s=b),r<=(o=b+1)&&(o=b),(l=b-e.width)<0&&(l=0),_<=(u=b+e.width)&&(u=b),f=D._getARGB(g,l),c=D._getARGB(g,s),d=D._getARGB(g,u),(m=77*(c>>16&255)+151*(c>>8&255)+28*(255&c))<(a=77*(i>>16&255)+151*(i>>8&255)+28*(255&i))&&(n=c,a=m),(p=77*((h=D._getARGB(g,o))>>16&255)+151*(h>>8&255)+28*(255&h))<a&&(n=h,a=p),(v=77*(f>>16&255)+151*(f>>8&255)+28*(255&f))<a&&(n=f,a=v),(y=77*(d>>16&255)+151*(d>>8&255)+28*(255&d))<a&&(n=d,a=y),x[b++]=n;D._setPixels(g,x)},D.blur=function(e,t){i(e,t)};var n=D;r.default=n},{}],58:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var D=i(e("../core/main")),k=i(e("omggif"));function i(e){return e&&e.__esModule?e:{default:e}}function A(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}D.default.prototype.createImage=function(e,t){return D.default._validateParameters("createImage",arguments),new D.default.Image(e,t)},D.default.prototype.saveCanvas=function(){D.default._validateParameters("saveCanvas",arguments);var e,t,r,i,n=[].slice.call(arguments);switch(arguments[0]instanceof HTMLCanvasElement?(e=arguments[0],n.shift()):arguments[0]instanceof D.default.Element?(e=arguments[0].elt,n.shift()):e=this._curElement&&this._curElement.elt,1<=n.length&&(t=n[0]),2<=n.length&&(r=n[1]),r=r||D.default.prototype._checkFileExtension(t,r)[1]||"png"){default:i="image/png";break;case"jpeg":case"jpg":i="image/jpeg"}e.toBlob(function(e){D.default.prototype.downloadFile(e,t,r)},i)},D.default.prototype.saveGif=function(p,e){var m=p.gifProperties,t=m.loopLimit;1===t?t=null:null===t&&(t=0);for(var r=new Uint8Array(p.width*p.height*m.numFrames),v=[],i={},n=0;n<m.numFrames;n++){for(var a=new Set,o=m.frames[n].image.data,s=o.length,l=new Uint32Array(p.width*p.height),u=0,h=0;u<s;u+=4,h++){var c=o[u+0]<<16|o[u+1]<<8|o[u+2]<<0;a.add(c),l[h]=c}var f=A(a).sort().toString();void 0===i[f]?i[f]={freq:1,frames:[n]}:(i[f].freq+=1,i[f].frames.push(n)),v.push(l)}var y=[],d=Object.keys(i).sort(function(e,t){return i[t].freq-i[e].freq}),g=d[0].split(",").map(function(e){return parseInt(e)});y=y.concat(i[g].frames);for(var b=new Set(g),_=1;_<d.length;_++){var x=d[_].split(",").map(function(e){return parseInt(e)}).filter(function(e){return!b.has(e)});if(g.length+x.length<=256){for(var w=0;w<x.length;w++)g.push(x[w]),b.add(x[w]);y=y.concat(i[d[_]].frames)}}y=new Set(y);for(var S={},M=0;M<g.length;M++)S[g[M]]||(S[g[M]]=M);for(var T=1;T<g.length;)T<<=1;g.length=T;for(var E={loop:t,palette:new Uint32Array(g)},C=new k.default.GifWriter(r,p.width,p.height,E),L={},O=function(e){for(var t=!y.has(e),r=t?[]:g,i=new Uint8Array(p.width*p.height),n={},a=new Set,o=0;o<v[e].length;o++){var s=v[e][o];t?(void 0===n[s]&&(n[s]=r.length,r.push(s)),i[o]=n[s]):i[o]=S[s],0<e&&v[e-1][o]!==s&&a.add(s)}var l={},u=r.filter(function(e){return!a.has(e)});if(0<u.length){var h=u[0],c=t?n[h]:S[h];if(0<e){for(var f=0;f<v[e].length;f++)v[e-1][f]===v[e][f]&&(i[f]=c);l.transparent=c,L.frameOpts.disposal=1}}if(l.delay=m.frames[e].delay/10,t){for(var d=1;d<r.length;)d<<=1;r.length=d,l.palette=new Uint32Array(r)}0<e&&C.addFrame(0,0,p.width,p.height,L.pixelPaletteIndex,L.frameOpts),L={pixelPaletteIndex:i,frameOpts:l}},P=0;P<m.numFrames;P++)O(P);L.frameOpts.disposal=1,C.addFrame(0,0,p.width,p.height,L.pixelPaletteIndex,L.frameOpts);var R=new Blob([r.slice(0,C.end())],{type:"image/gif"});D.default.prototype.downloadFile(R,e,"gif")},D.default.prototype.saveFrames=function(e,t,r,i,o){D.default._validateParameters("saveFrames",arguments);var n=r||3;n=D.default.prototype.constrain(n,0,15),n*=1e3;var a=i||15;a=D.default.prototype.constrain(a,0,22);var s=0,l=D.default.prototype._makeFrame,u=this._curElement.elt,h=[],c=setInterval(function(){h.push(l(e+s,t,u)),s++},1e3/a);setTimeout(function(){if(clearInterval(c),o)o(h);else{var e=!0,t=!1,r=void 0;try{for(var i,n=h[Symbol.iterator]();!(e=(i=n.next()).done);e=!0){var a=i.value;D.default.prototype.downloadFile(a.imageData,a.filename,a.ext)}}catch(e){t=!0,r=e}finally{try{e||null==n.return||n.return()}finally{if(t)throw r}}}h=[]},n+.01)},D.default.prototype._makeFrame=function(e,t,r){var i,n;if(i=this?this._curElement.elt:r,t)switch(t.toLowerCase()){case"png":n="image/png";break;case"jpeg":case"jpg":n="image/jpeg";break;default:n="image/png"}else t="png",n="image/png";var a=i.toDataURL(n);a=a.replace(n,"image/octet-stream");var o={};return o.imageData=a,o.filename=e,o.ext=t,o};var n=D.default;r.default=n},{"../core/main":36,omggif:11}],59:[function(e,t,r){"use strict";function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var x=n(e("../core/main")),c=n(e("./filters")),w=n(e("../core/helpers")),i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var a=i?Object.getOwnPropertyDescriptor(e,n):null;a&&(a.get||a.set)?Object.defineProperty(r,n,a):r[n]=e[n]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants")),p=n(e("omggif"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}function n(e){return e&&e.__esModule?e:{default:e}}function S(e,t){return 0<e&&e<t?e:t}e("../core/friendly_errors/validate_params"),e("../core/friendly_errors/file_errors"),e("../core/friendly_errors/fes_core"),x.default.prototype.loadImage=function(i,n,a){x.default._validateParameters("loadImage",arguments);var o=new x.default.Image(1,1,this),s=this,e=new Request(i,{method:"GET",mode:"cors"});return fetch(i,e).then(function(e){var t=e.headers.get("content-type");if(null===t&&console.warn("The image you loaded does not have a Content-Type header. If you are using the online editor consider reuploading the asset."),t&&t.includes("image/gif"))e.arrayBuffer().then(function(e){e&&function(e,r,t,i,n){var a=new p.default.GifReader(e);r.width=r.canvas.width=a.width,r.height=r.canvas.height=a.height;var o=[],s=a.numFrames(),l=new Uint8ClampedArray(r.width*r.height*4);if(1<s){for(var u=function(e,t){try{t.decodeAndBlitFrameRGBA(e,l)}catch(e){x.default._friendlyFileLoadError(8,r.src),"function"==typeof i?i(e):console.error(e)}},h=0;h<s;h++){var c=a.frameInfo(h);1===a.frameInfo(h).disposal&&0<h?r.drawingContext.putImageData(o[h-1].image,0,0):(r.drawingContext.clearRect(0,0,r.width,r.height),l=new Uint8ClampedArray(r.width*r.height*4)),u(h,a);var f=new ImageData(l,r.width,r.height);r.drawingContext.putImageData(f,0,0),o.push({image:r.drawingContext.getImageData(0,0,r.width,r.height),delay:10*c.delay})}var d=a.loopCount();null===d?d=1:0===d&&(d=null),r.drawingContext.putImageData(o[0].image,0,0),r.gifProperties={displayIndex:0,loopLimit:d,loopCount:0,frames:o,numFrames:s,playing:!0,timeDisplayed:0,lastChangeTime:0}}"function"==typeof t&&t(r);n()}(new Uint8Array(e),o,n,a,function(e){s._decrementPreload()}.bind(s))},function(e){"function"==typeof a?a(e):console.error(e)});else{var r=new Image;r.onload=function(){o.width=o.canvas.width=r.width,o.height=o.canvas.height=r.height,o.drawingContext.drawImage(r,0,0),o.modified=!0,"function"==typeof n&&n(o),s._decrementPreload()},r.onerror=function(e){x.default._friendlyFileLoadError(0,r.src),"function"==typeof a?a(e):console.error(e)},0!==i.indexOf("data:image/")&&(r.crossOrigin="Anonymous"),r.src=i}o.modified=!0}),o},x.default.prototype.image=function(e,t,r,i,n,a,o,s,l){x.default._validateParameters("image",arguments);var u=e.width,h=e.height;e.elt&&e.elt.videoWidth&&!e.canvas&&(u=e.elt.videoWidth,h=e.elt.videoHeight);var c=t,f=r,d=i||u,p=n||h,m=a||0,v=o||0,y=s||u,g=l||h;y=S(y,u),g=S(g,h);var b=1;e.elt&&!e.canvas&&e.elt.style.width&&(b=e.elt.videoWidth&&!i?e.elt.videoWidth:e.elt.width,b/=parseInt(e.elt.style.width,10)),m*=b,v*=b,g*=b,y*=b;var _=w.default.modeAdjust(c,f,d,p,this._renderer._imageMode);this._renderer.image(e,m,v,y,g,_.x,_.y,_.w,_.h)},x.default.prototype.tint=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];x.default._validateParameters("tint",t);var i=this.color.apply(this,t);this._renderer._tint=i.levels},x.default.prototype.noTint=function(){this._renderer._tint=null},x.default.prototype._getTintedImageCanvas=function(e){if(!e.canvas)return e;var t=c.default._toPixels(e.canvas),r=document.createElement("canvas");r.width=e.canvas.width,r.height=e.canvas.height;for(var i=r.getContext("2d"),n=i.createImageData(e.canvas.width,e.canvas.height),a=n.data,o=0;o<t.length;o+=4){var s=t[o],l=t[o+1],u=t[o+2],h=t[o+3];a[o]=s*this._renderer._tint[0]/255,a[o+1]=l*this._renderer._tint[1]/255,a[o+2]=u*this._renderer._tint[2]/255,a[o+3]=h*this._renderer._tint[3]/255}return i.putImageData(n,0,0),r},x.default.prototype.imageMode=function(e){x.default._validateParameters("imageMode",arguments),e!==i.CORNER&&e!==i.CORNERS&&e!==i.CENTER||(this._renderer._imageMode=e)};var a=x.default;r.default=a},{"../core/constants":26,"../core/friendly_errors/fes_core":28,"../core/friendly_errors/file_errors":29,"../core/friendly_errors/validate_params":31,"../core/helpers":32,"../core/main":36,"./filters":57,omggif:11}],60:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=a(e("../core/main")),i=a(e("./filters"));function a(e){return e&&e.__esModule?e:{default:e}}n.default.Image=function(e,t){this.width=e,this.height=t,this.canvas=document.createElement("canvas"),this.canvas.width=this.width,this.canvas.height=this.height,this.drawingContext=this.canvas.getContext("2d"),(this._pixelsState=this)._pixelDensity=1,this.gifProperties=null,this._modified=!1,this.pixels=[]},n.default.Image.prototype._animateGif=function(e){var t=this.gifProperties,r=e._lastFrameTime+e.deltaTime;if(0===t.lastChangeTime&&(t.lastChangeTime=r),t.playing){t.timeDisplayed=r-t.lastChangeTime;var i=t.frames[t.displayIndex].delay;if(t.timeDisplayed>=i){var n=Math.floor(t.timeDisplayed/i);if(t.timeDisplayed=0,t.lastChangeTime=r,t.displayIndex+=n,t.loopCount=Math.floor(t.displayIndex/t.numFrames),null!==t.loopLimit&&t.loopCount>=t.loopLimit)t.playing=!1;else{var a=t.displayIndex%t.numFrames;this.drawingContext.putImageData(t.frames[a].image,0,0),t.displayIndex=a,this.setModified(!0)}}}},n.default.Image.prototype._setProperty=function(e,t){this[e]=t,this.setModified(!0)},n.default.Image.prototype.loadPixels=function(){n.default.Renderer2D.prototype.loadPixels.call(this),this.setModified(!0)},n.default.Image.prototype.updatePixels=function(e,t,r,i){n.default.Renderer2D.prototype.updatePixels.call(this,e,t,r,i),this.setModified(!0)},n.default.Image.prototype.get=function(e,t,r,i){return n.default._validateParameters("p5.Image.get",arguments),n.default.Renderer2D.prototype.get.apply(this,arguments)},n.default.Image.prototype._getPixel=n.default.Renderer2D.prototype._getPixel,n.default.Image.prototype.set=function(e,t,r){n.default.Renderer2D.prototype.set.call(this,e,t,r),this.setModified(!0)},n.default.Image.prototype.resize=function(e,t){0===e&&0===t?(e=this.canvas.width,t=this.canvas.height):0===e?e=this.canvas.width*t/this.canvas.height:0===t&&(t=this.canvas.height*e/this.canvas.width),e=Math.floor(e),t=Math.floor(t);var r=document.createElement("canvas");if(r.width=e,r.height=t,this.gifProperties)for(var i=this.gifProperties,n=function(e,t){for(var r=0,i=0;i<t.height;i++)for(var n=0;n<t.width;n++){var a=Math.floor(n*e.width/t.width),o=4*(Math.floor(i*e.height/t.height)*e.width+a);t.data[r++]=e.data[o++],t.data[r++]=e.data[o++],t.data[r++]=e.data[o++],t.data[r++]=e.data[o++]}},a=0;a<i.numFrames;a++){var o=this.drawingContext.createImageData(e,t);n(i.frames[a].image,o),i.frames[a].image=o}r.getContext("2d").drawImage(this.canvas,0,0,this.canvas.width,this.canvas.height,0,0,r.width,r.height),this.canvas.width=this.width=e,this.canvas.height=this.height=t,this.drawingContext.drawImage(r,0,0,e,t,0,0,e,t),0<this.pixels.length&&this.loadPixels(),this.setModified(!0)},n.default.Image.prototype.copy=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];n.default.prototype.copy.apply(this,t)},n.default.Image.prototype.mask=function(e){void 0===e&&(e=this);var t=this.drawingContext.globalCompositeOperation,r=1;e instanceof n.default.Renderer&&(r=e._pInst._pixelDensity);var i=[e,0,0,r*e.width,r*e.height,0,0,this.width,this.height];this.drawingContext.globalCompositeOperation="destination-in",n.default.Image.prototype.copy.apply(this,i),this.drawingContext.globalCompositeOperation=t,this.setModified(!0)},n.default.Image.prototype.filter=function(e,t){i.default.apply(this.canvas,i.default[e],t),this.setModified(!0)},n.default.Image.prototype.blend=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];n.default._validateParameters("p5.Image.blend",arguments),n.default.prototype.blend.apply(this,t),this.setModified(!0)},n.default.Image.prototype.setModified=function(e){this._modified=e},n.default.Image.prototype.isModified=function(){return this._modified},n.default.Image.prototype.save=function(e,t){this.gifProperties?n.default.prototype.saveGif(this,e):n.default.prototype.saveCanvas(this.canvas,e,t)},n.default.Image.prototype.reset=function(){if(this.gifProperties){var e=this.gifProperties;e.playing=!0,e.timeSinceStart=0,e.timeDisplayed=0,e.lastChangeTime=0,e.loopCount=0,e.displayIndex=0,this.drawingContext.putImageData(e.frames[0].image,0,0)}},n.default.Image.prototype.getCurrentFrame=function(){if(this.gifProperties){var e=this.gifProperties;return e.displayIndex%e.numFrames}},n.default.Image.prototype.setFrame=function(e){if(this.gifProperties){var t=this.gifProperties;e<t.numFrames&&0<=e?(t.timeDisplayed=0,t.lastChangeTime=0,t.displayIndex=e,this.drawingContext.putImageData(t.frames[e].image,0,0)):console.log("Cannot set GIF to a frame number that is higher than total number of frames or below zero.")}},n.default.Image.prototype.numFrames=function(){if(this.gifProperties)return this.gifProperties.numFrames},n.default.Image.prototype.play=function(){this.gifProperties&&(this.gifProperties.playing=!0)},n.default.Image.prototype.pause=function(){this.gifProperties&&(this.gifProperties.playing=!1)},n.default.Image.prototype.delay=function(e,t){if(this.gifProperties){var r=this.gifProperties;if(t<r.numFrames&&0<=t)r.frames[t].delay=e;else{var i=!0,n=!1,a=void 0;try{for(var o,s=r.frames[Symbol.iterator]();!(i=(o=s.next()).done);i=!0){o.value.delay=e}}catch(e){n=!0,a=e}finally{try{i||null==s.return||s.return()}finally{if(n)throw a}}}}};var o=n.default.Image;r.default=o},{"../core/main":36,"./filters":57}],61:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var d=n(e("../core/main")),i=n(e("./filters"));function n(e){return e&&e.__esModule?e:{default:e}}e("../color/p5.Color"),d.default.prototype.pixels=[],d.default.prototype.blend=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var i;(d.default._validateParameters("blend",t),this._renderer)?(i=this._renderer).blend.apply(i,t):d.default.Renderer2D.prototype.blend.apply(this,t)},d.default.prototype.copy=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var i,n,a,o,s,l,u,h,c;if(d.default._validateParameters("copy",t),9===t.length)i=t[0],n=t[1],a=t[2],o=t[3],s=t[4],l=t[5],u=t[6],h=t[7],c=t[8];else{if(8!==t.length)throw new Error("Signature not supported");i=this,n=t[0],a=t[1],o=t[2],s=t[3],l=t[4],u=t[5],h=t[6],c=t[7]}d.default.prototype._copyHelper(this,i,n,a,o,s,l,u,h,c)},d.default.prototype._copyHelper=function(e,t,r,i,n,a,o,s,l,u){t.loadPixels();var h=t.canvas.width/t.width,c=0,f=0;t._renderer&&t._renderer.isP3D&&(c=t.width/2,f=t.height/2),e._renderer&&e._renderer.isP3D?d.default.RendererGL.prototype.image.call(e._renderer,t,r+c,i+f,n,a,o,s,l,u):e.drawingContext.drawImage(t.canvas,h*(r+c),h*(i+f),h*n,h*a,o,s,l,u)},d.default.prototype.filter=function(e,t){d.default._validateParameters("filter",arguments),void 0!==this.canvas?i.default.apply(this.canvas,i.default[e],t):i.default.apply(this.elt,i.default[e],t)},d.default.prototype.get=function(e,t,r,i){var n;return d.default._validateParameters("get",arguments),(n=this._renderer).get.apply(n,arguments)},d.default.prototype.loadPixels=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];d.default._validateParameters("loadPixels",t),this._renderer.loadPixels()},d.default.prototype.set=function(e,t,r){this._renderer.set(e,t,r)},d.default.prototype.updatePixels=function(e,t,r,i){d.default._validateParameters("updatePixels",arguments),0!==this.pixels.length&&this._renderer.updatePixels(e,t,r,i)};var a=d.default;r.default=a},{"../color/p5.Color":24,"../core/main":36,"./filters":57}],62:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var y=i(e("../core/main"));e("whatwg-fetch"),e("es6-promise/auto");var v=i(e("fetch-jsonp")),s=i(e("file-saver"));function i(e){return e&&e.__esModule?e:{default:e}}function g(e){return(g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function b(e,t){var r={};if(void 0===(t=t||[]))for(var i=0;i<e.length;i++)t[i.toString()]=i;for(var n=0;n<t.length;n++){var a=t[n],o=e[n];r[a]=o}return r}function m(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}function l(e,t){t&&!0!==t&&"true"!==t||(t="");var r="";return(e=e||"untitled")&&e.includes(".")&&(r=e.split(".").pop()),t&&r!==t&&(r=t,e="".concat(e,".").concat(r)),[e,r]}e("../core/friendly_errors/validate_params"),e("../core/friendly_errors/file_errors"),e("../core/friendly_errors/fes_core"),y.default.prototype.loadJSON=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];y.default._validateParameters("loadJSON",t);for(var i,n,a,o=t[0],s={},l="json",u=1;u<t.length;u++){var h=t[u];"string"==typeof h?"jsonp"!==h&&"json"!==h||(l=h):"function"==typeof h?i?n=h:i=h:"object"===g(h)&&(h.hasOwnProperty("jsonpCallback")||h.hasOwnProperty("jsonpCallbackFunction"))&&(l="jsonp",a=h)}var c=this;return this.httpDo(o,"GET",a,l,function(e){for(var t in e)s[t]=e[t];void 0!==i&&i(e),c._decrementPreload()},function(e){if(y.default._friendlyFileLoadError(5,o),!n)throw e;n(e)}),s},y.default.prototype.loadStrings=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];y.default._validateParameters("loadStrings",t);for(var n,i,a=[],o=1;o<t.length;o++){var s=t[o];"function"==typeof s&&(void 0===n?n=s:void 0===i&&(i=s))}var l=this;return y.default.prototype.httpDo.call(this,t[0],"GET","text",function(e){for(var t=e.replace(/\r\n/g,"\r").replace(/\n/g,"\r").split(/\r/),r=0,i=t.length;r<i;r+=32768)Array.prototype.push.apply(a,t.slice(r,Math.min(r+32768,i)));void 0!==n&&n(a),l._decrementPreload()},function(e){if(y.default._friendlyFileLoadError(3,e),!i)throw e;i(e)}),a},y.default.prototype.loadTable=function(t){var f,r,d,e=[],p=!1,i=t.substring(t.lastIndexOf(".")+1,t.length);"csv"===i?d=",":"ssv"===i?d=";":"tsv"===i&&(d="\t");for(var n=1;n<arguments.length;n++)"function"==typeof arguments[n]?void 0===f?f=arguments[n]:void 0===r&&(r=arguments[n]):"string"==typeof arguments[n]&&(e.push(arguments[n]),"header"===arguments[n]&&(p=!0),"csv"===arguments[n]?d=",":"ssv"===arguments[n]?d=";":"tsv"===arguments[n]&&(d="\t"));var m=new y.default.Table,v=this;return this.httpDo(t,"GET","table",function(e){for(var t,r,i={},n=[],a=0,o=null,s=function(){i.currentState=0,i.token=""},l=function(){o.push(i.token),s()},u=function(){i.currentState=4,n.push(o),o=null};;){if(null==(t=e[a++])){if(i.escaped)throw new Error("Unclosed quote in file.");if(o){l(),u();break}}if(null===o&&(i.escaped=!1,o=[],s()),0===i.currentState){if('"'===t){i.escaped=!0,i.currentState=1;continue}i.currentState=1}if(1===i.currentState&&i.escaped)if('"'===t)'"'===e[a]?(i.token+='"',a++):(i.escaped=!1,i.currentState=2);else{if("\r"===t)continue;i.token+=t}else"\r"===t?("\n"===e[a]&&a++,l(),u()):"\n"===t?(l(),u()):t===d?l():1===i.currentState&&(i.token+=t)}if(p)m.columns=n.shift();else for(var h=0;h<n[0].length;h++)m.columns[h]="null";for(var c=0;c<n.length;c++)(1!==n[c].length||"undefined"!==n[c][0]&&""!==n[c][0])&&((r=new y.default.TableRow).arr=n[c],r.obj=b(n[c],m.columns),m.addRow(r));"function"==typeof f&&f(m),v._decrementPreload()},function(e){y.default._friendlyFileLoadError(2,t),r?r(e):console.error(e)}),m},y.default.prototype.loadXML=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];for(var i,n,a=new y.default.XML,o=1;o<t.length;o++){var s=t[o];"function"==typeof s&&(void 0===i?i=s:void 0===n&&(n=s))}var l=this;return this.httpDo(t[0],"GET","xml",function(e){for(var t in e)a[t]=e[t];void 0!==i&&i(a),l._decrementPreload()},function(e){if(y.default._friendlyFileLoadError(1,e),!n)throw e;n(e)}),a},y.default.prototype.loadBytes=function(t,r,i){var n={},a=this;return this.httpDo(t,"GET","arrayBuffer",function(e){n.bytes=new Uint8Array(e),"function"==typeof r&&r(n),a._decrementPreload()},function(e){if(y.default._friendlyFileLoadError(6,t),!i)throw e;i(e)}),n},y.default.prototype.httpGet=function(){y.default._validateParameters("httpGet",arguments);var e=Array.prototype.slice.call(arguments);return e.splice(1,0,"GET"),y.default.prototype.httpDo.apply(this,e)},y.default.prototype.httpPost=function(){y.default._validateParameters("httpPost",arguments);var e=Array.prototype.slice.call(arguments);return e.splice(1,0,"POST"),y.default.prototype.httpDo.apply(this,e)},y.default.prototype.httpDo=function(){for(var i,e,t,r,n,a={},o=0,s="text/plain",l=arguments.length-1;0<l&&"function"==typeof(l<0||arguments.length<=l?void 0:arguments[l]);l--)o++;var u=arguments.length<=0?void 0:arguments[0];if(2==arguments.length-o&&"string"==typeof u&&"object"===g(arguments.length<=1?void 0:arguments[1]))r=new Request(u,arguments.length<=1?void 0:arguments[1]),e=arguments.length<=2?void 0:arguments[2],t=arguments.length<=3?void 0:arguments[3];else{for(var h,c="GET",f=1;f<arguments.length;f++){var d=f<0||arguments.length<=f?void 0:arguments[f];if("string"==typeof d)"GET"===d||"POST"===d||"PUT"===d||"DELETE"===d?c=d:"json"===d||"jsonp"===d||"binary"===d||"arrayBuffer"===d||"xml"===d||"text"===d||"table"===d?i=d:h=d;else if("number"==typeof d)h=d.toString();else if("object"===g(d))if(d.hasOwnProperty("jsonpCallback")||d.hasOwnProperty("jsonpCallbackFunction"))for(var p in d)a[p]=d[p];else s=d instanceof y.default.XML?(h=d.serialize(),"application/xml"):(h=JSON.stringify(d),"application/json");else"function"==typeof d&&(e?t=d:e=d)}var m="GET"===c?new Headers:new Headers({"Content-Type":s});r=new Request(u,{method:c,mode:"cors",body:h,headers:m})}return(n=(n="jsonp"===(i=i||(u.includes("json")?"json":u.includes("xml")?"xml":"text"))?(0,v.default)(u,a):fetch(r)).then(function(e){if(!e.ok){var t=new Error(e.body);throw t.status=e.status,t.ok=!1,t}var r=0;switch("jsonp"!==i&&(r=e.headers.get("content-length")),r&&64e6<r&&y.default._friendlyFileLoadError(7,u),i){case"json":case"jsonp":return e.json();case"binary":return e.blob();case"arrayBuffer":return e.arrayBuffer();case"xml":return e.text().then(function(e){var t=(new DOMParser).parseFromString(e,"text/xml");return new y.default.XML(t.documentElement)});default:return e.text()}})).then(e||function(){}),n.catch(t||console.error),n},window.URL=window.URL||window.webkitURL,y.default.prototype._pWriters=[],y.default.prototype.createWriter=function(e,t){var r;for(var i in y.default.prototype._pWriters)if(y.default.prototype._pWriters[i].name===e)return r=new y.default.PrintWriter(e+this.millis(),t),y.default.prototype._pWriters.push(r),r;return r=new y.default.PrintWriter(e,t),y.default.prototype._pWriters.push(r),r},y.default.PrintWriter=function(r,i){var n=this;this.name=r,this.content="",this.write=function(e){this.content+=e},this.print=function(e){this.content+="".concat(e,"\n")},this.clear=function(){this.content=""},this.close=function(){var e=[];for(var t in e.push(this.content),y.default.prototype.writeFile(e,r,i),y.default.prototype._pWriters)y.default.prototype._pWriters[t].name===this.name&&y.default.prototype._pWriters.splice(t,1);n.clear(),n={}}},y.default.prototype.save=function(e,t,r){var i=arguments,n=this._curElement?this._curElement.elt:this.elt;if(0!==i.length)if(i[0]instanceof y.default.Renderer||i[0]instanceof y.default.Graphics)y.default.prototype.saveCanvas(i[0].elt,i[1],i[2]);else if(1===i.length&&"string"==typeof i[0])y.default.prototype.saveCanvas(n,i[0]);else switch(l(i[1],i[2])[1]){case"json":return void y.default.prototype.saveJSON(i[0],i[1],i[2]);case"txt":return void y.default.prototype.saveStrings(i[0],i[1],i[2]);default:i[0]instanceof Array?y.default.prototype.saveStrings(i[0],i[1],i[2]):i[0]instanceof y.default.Table?y.default.prototype.saveTable(i[0],i[1],i[2]):i[0]instanceof y.default.Image?y.default.prototype.saveCanvas(i[0].canvas,i[1]):i[0]instanceof y.default.SoundFile&&y.default.prototype.saveSound(i[0],i[1],i[2],i[3])}else y.default.prototype.saveCanvas(n)},y.default.prototype.saveJSON=function(e,t,r){var i;y.default._validateParameters("saveJSON",arguments),i=r?JSON.stringify(e):JSON.stringify(e,void 0,2),this.saveStrings(i.split("\n"),t,"json")},y.default.prototype.saveJSONObject=y.default.prototype.saveJSON,y.default.prototype.saveJSONArray=y.default.prototype.saveJSON,y.default.prototype.saveStrings=function(e,t,r,i){y.default._validateParameters("saveStrings",arguments);for(var n=r||"txt",a=this.createWriter(t,n),o=0;o<e.length;o++)i?a.write(e[o]+"\r\n"):a.write(e[o]+"\n");a.close(),a.clear()},y.default.prototype.saveTable=function(e,t,r){var i;y.default._validateParameters("saveTable",arguments),i=void 0===r?t.substring(t.lastIndexOf(".")+1,t.length):r;var n=this.createWriter(t,i),a=e.columns,o=",";if("tsv"===i&&(o="\t"),"html"!==i){if("0"!==a[0]){for(var s=0;s<a.length;s++)s<a.length-1?n.write(a[s]+o):n.write(a[s]);n.write("\n")}for(var l=0;l<e.rows.length;l++){var u=void 0;for(u=0;u<e.rows[l].arr.length;u++)u<e.rows[l].arr.length-1?"csv"===i&&e.rows[l].arr[u].includes(",")?n.write('"'+e.rows[l].arr[u]+'"'+o):n.write(e.rows[l].arr[u]+o):"csv"===i&&e.rows[l].arr[u].includes(",")?n.write('"'+e.rows[l].arr[u]+'"'):n.write(e.rows[l].arr[u]);n.write("\n")}}else{n.print("<html>"),n.print("<head>");if(n.print('  <meta http-equiv="content-type" content="text/html;charset=utf-8" />'),n.print("</head>"),n.print("<body>"),n.print("  <table>"),"0"!==a[0]){n.print("    <tr>");for(var h=0;h<a.length;h++){var c=m(a[h]);n.print("      <td>".concat(c)),n.print("      </td>")}n.print("    </tr>")}for(var f=0;f<e.rows.length;f++){n.print("    <tr>");for(var d=0;d<e.columns.length;d++){var p=m(e.rows[f].getString(d));n.print("      <td>".concat(p)),n.print("      </td>")}n.print("    </tr>")}n.print("  </table>"),n.print("</body>"),n.print("</html>")}n.close(),n.clear()},y.default.prototype.writeFile=function(e,t,r){var i="application/octet-stream";y.default.prototype._isSafari()&&(i="text/plain");var n=new Blob(e,{type:i});y.default.prototype.downloadFile(n,t,r)},y.default.prototype.downloadFile=function(e,t,r){var i=l(t,r),n=i[0];if(e instanceof Blob)s.default.saveAs(e,n);else{var a=document.createElement("a");if(a.href=e,a.download=n,a.onclick=function(e){var t;t=e,document.body.removeChild(t.target),e.stopPropagation()},a.style.display="none",document.body.appendChild(a),y.default.prototype._isSafari()){var o="Hello, Safari user! To download this file...\n";o+="1. Go to File --\x3e Save As.\n",o+='2. Choose "Page Source" as the Format.\n',o+='3. Name it with this extension: ."'.concat(i[1],'"'),alert(o)}a.click()}},y.default.prototype._checkFileExtension=l,y.default.prototype._isSafari=function(){return 0<Object.prototype.toString.call(window.HTMLElement).indexOf("Constructor")};var n=y.default;r.default=n},{"../core/friendly_errors/fes_core":28,"../core/friendly_errors/file_errors":29,"../core/friendly_errors/validate_params":31,"../core/main":36,"es6-promise/auto":5,"fetch-jsonp":7,"file-saver":8,"whatwg-fetch":15}],63:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,n=(i=e("../core/main"))&&i.__esModule?i:{default:i};n.default.Table=function(e){this.columns=[],this.rows=[]},n.default.Table.prototype.addRow=function(e){var t=e||new n.default.TableRow;if(void 0===t.arr||void 0===t.obj)throw new Error("invalid TableRow: ".concat(t));return(t.table=this).rows.push(t),t},n.default.Table.prototype.removeRow=function(e){this.rows[e].table=null;var t=this.rows.splice(e+1,this.rows.length);this.rows.pop(),this.rows=this.rows.concat(t)},n.default.Table.prototype.getRow=function(e){return this.rows[e]},n.default.Table.prototype.getRows=function(){return this.rows},n.default.Table.prototype.findRow=function(e,t){if("string"==typeof t){for(var r=0;r<this.rows.length;r++)if(this.rows[r].obj[t]===e)return this.rows[r]}else for(var i=0;i<this.rows.length;i++)if(this.rows[i].arr[t]===e)return this.rows[i];return null},n.default.Table.prototype.findRows=function(e,t){var r=[];if("string"==typeof t)for(var i=0;i<this.rows.length;i++)this.rows[i].obj[t]===e&&r.push(this.rows[i]);else for(var n=0;n<this.rows.length;n++)this.rows[n].arr[t]===e&&r.push(this.rows[n]);return r},n.default.Table.prototype.matchRow=function(e,t){if("number"==typeof t){for(var r=0;r<this.rows.length;r++)if(this.rows[r].arr[t].match(e))return this.rows[r]}else for(var i=0;i<this.rows.length;i++)if(this.rows[i].obj[t].match(e))return this.rows[i];return null},n.default.Table.prototype.matchRows=function(e,t){var r=[];if("number"==typeof t)for(var i=0;i<this.rows.length;i++)this.rows[i].arr[t].match(e)&&r.push(this.rows[i]);else for(var n=0;n<this.rows.length;n++)this.rows[n].obj[t].match(e)&&r.push(this.rows[n]);return r},n.default.Table.prototype.getColumn=function(e){var t=[];if("string"==typeof e)for(var r=0;r<this.rows.length;r++)t.push(this.rows[r].obj[e]);else for(var i=0;i<this.rows.length;i++)t.push(this.rows[i].arr[e]);return t},n.default.Table.prototype.clearRows=function(){delete this.rows,this.rows=[]},n.default.Table.prototype.addColumn=function(e){var t=e||null;this.columns.push(t)},n.default.Table.prototype.getColumnCount=function(){return this.columns.length},n.default.Table.prototype.getRowCount=function(){return this.rows.length},n.default.Table.prototype.removeTokens=function(e,t){for(var r=[],i=0;i<e.length;i++)r.push(e.charAt(i).replace(/[-/\\^$*+?.()|[\]{}]/g,"\\$&"));var n=new RegExp(r.join("|"),"g");if(void 0===t)for(var a=0;a<this.columns.length;a++)for(var o=0;o<this.rows.length;o++){var s=this.rows[o].arr[a];s=s.replace(n,""),this.rows[o].arr[a]=s,this.rows[o].obj[this.columns[a]]=s}else if("string"==typeof t)for(var l=0;l<this.rows.length;l++){var u=this.rows[l].obj[t];u=u.replace(n,""),this.rows[l].obj[t]=u;var h=this.columns.indexOf(t);this.rows[l].arr[h]=u}else for(var c=0;c<this.rows.length;c++){var f=this.rows[c].arr[t];f=f.replace(n,""),this.rows[c].arr[t]=f,this.rows[c].obj[this.columns[t]]=f}},n.default.Table.prototype.trim=function(e){var t=new RegExp(" ","g");if(void 0===e)for(var r=0;r<this.columns.length;r++)for(var i=0;i<this.rows.length;i++){var n=this.rows[i].arr[r];n=n.replace(t,""),this.rows[i].arr[r]=n,this.rows[i].obj[this.columns[r]]=n}else if("string"==typeof e)for(var a=0;a<this.rows.length;a++){var o=this.rows[a].obj[e];o=o.replace(t,""),this.rows[a].obj[e]=o;var s=this.columns.indexOf(e);this.rows[a].arr[s]=o}else for(var l=0;l<this.rows.length;l++){var u=this.rows[l].arr[e];u=u.replace(t,""),this.rows[l].arr[e]=u,this.rows[l].obj[this.columns[e]]=u}},n.default.Table.prototype.removeColumn=function(e){var t,r;"string"==typeof e?(t=e,r=this.columns.indexOf(e)):(r=e,t=this.columns[e]);var i=this.columns.splice(r+1,this.columns.length);this.columns.pop(),this.columns=this.columns.concat(i);for(var n=0;n<this.rows.length;n++){var a=this.rows[n].arr,o=a.splice(r+1,a.length);a.pop(),this.rows[n].arr=a.concat(o),delete this.rows[n].obj[t]}},n.default.Table.prototype.set=function(e,t,r){this.rows[e].set(t,r)},n.default.Table.prototype.setNum=function(e,t,r){this.rows[e].setNum(t,r)},n.default.Table.prototype.setString=function(e,t,r){this.rows[e].setString(t,r)},n.default.Table.prototype.get=function(e,t){return this.rows[e].get(t)},n.default.Table.prototype.getNum=function(e,t){return this.rows[e].getNum(t)},n.default.Table.prototype.getString=function(e,t){return this.rows[e].getString(t)},n.default.Table.prototype.getObject=function(e){for(var t,r={},i=0;i<this.rows.length;i++)if(t=this.rows[i].obj,"string"==typeof e){if(!(0<=this.columns.indexOf(e)))throw new Error('This table has no column named "'.concat(e,'"'));r[t[e]]=t}else r[i]=this.rows[i].obj;return r},n.default.Table.prototype.getArray=function(){for(var e=[],t=0;t<this.rows.length;t++)e.push(this.rows[t].arr);return e};var a=n.default;r.default=a},{"../core/main":36}],64:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,n=(i=e("../core/main"))&&i.__esModule?i:{default:i};n.default.TableRow=function(e,t){var r=[],i={};e&&(t=t||",",r=e.split(t));for(var n=0;n<r.length;n++){var a=n,o=r[n];i[a]=o}this.arr=r,this.obj=i,this.table=null},n.default.TableRow.prototype.set=function(e,t){if("string"==typeof e){var r=this.table.columns.indexOf(e);if(!(0<=r))throw new Error('This table has no column named "'.concat(e,'"'));this.obj[e]=t,this.arr[r]=t}else{if(!(e<this.table.columns.length))throw new Error("Column #".concat(e," is out of the range of this table"));this.arr[e]=t;var i=this.table.columns[e];this.obj[i]=t}},n.default.TableRow.prototype.setNum=function(e,t){var r=parseFloat(t);this.set(e,r)},n.default.TableRow.prototype.setString=function(e,t){var r=t.toString();this.set(e,r)},n.default.TableRow.prototype.get=function(e){return"string"==typeof e?this.obj[e]:this.arr[e]},n.default.TableRow.prototype.getNum=function(e){var t;if("NaN"===(t="string"==typeof e?parseFloat(this.obj[e]):parseFloat(this.arr[e])).toString())throw"Error: ".concat(this.obj[e]," is NaN (Not a Number)");return t},n.default.TableRow.prototype.getString=function(e){return"string"==typeof e?this.obj[e].toString():this.arr[e].toString()};var a=n.default;r.default=a},{"../core/main":36}],65:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,s=(i=e("../core/main"))&&i.__esModule?i:{default:i};function n(e){for(var t=[],r=0;r<e.length;r++)t.push(new s.default.XML(e[r]));return t}s.default.XML=function(e){if(e)this.DOM=e;else{var t=document.implementation.createDocument(null,"doc");this.DOM=t.createElement("root")}},s.default.XML.prototype.getParent=function(){return new s.default.XML(this.DOM.parentElement)},s.default.XML.prototype.getName=function(){return this.DOM.tagName},s.default.XML.prototype.setName=function(e){var t=this.DOM.innerHTML,r=this.DOM.attributes,i=document.implementation.createDocument(null,"default").createElement(e);i.innerHTML=t;for(var n=0;n<r.length;n++)i.setAttribute(r[n].nodeName,r.nodeValue);this.DOM=i},s.default.XML.prototype.hasChildren=function(){return 0<this.DOM.children.length},s.default.XML.prototype.listChildren=function(){for(var e=[],t=0;t<this.DOM.childNodes.length;t++)e.push(this.DOM.childNodes[t].nodeName);return e},s.default.XML.prototype.getChildren=function(e){return n(e?this.DOM.getElementsByTagName(e):this.DOM.children)},s.default.XML.prototype.getChild=function(e){if("string"!=typeof e)return new s.default.XML(this.DOM.children[e]);var t=!0,r=!1,i=void 0;try{for(var n,a=this.DOM.children[Symbol.iterator]();!(t=(n=a.next()).done);t=!0){var o=n.value;if(o.tagName===e)return new s.default.XML(o)}}catch(e){r=!0,i=e}finally{try{t||null==a.return||a.return()}finally{if(r)throw i}}},s.default.XML.prototype.addChild=function(e){e instanceof s.default.XML&&this.DOM.appendChild(e.DOM)},s.default.XML.prototype.removeChild=function(e){var t=-1;if("string"==typeof e){for(var r=0;r<this.DOM.children.length;r++)if(this.DOM.children[r].tagName===e){t=r;break}}else t=e;-1!==t&&this.DOM.removeChild(this.DOM.children[t])},s.default.XML.prototype.getAttributeCount=function(){return this.DOM.attributes.length},s.default.XML.prototype.listAttributes=function(){var e=[],t=!0,r=!1,i=void 0;try{for(var n,a=this.DOM.attributes[Symbol.iterator]();!(t=(n=a.next()).done);t=!0){var o=n.value;e.push(o.nodeName)}}catch(e){r=!0,i=e}finally{try{t||null==a.return||a.return()}finally{if(r)throw i}}return e},s.default.XML.prototype.hasAttribute=function(e){var t={},r=!0,i=!1,n=void 0;try{for(var a,o=this.DOM.attributes[Symbol.iterator]();!(r=(a=o.next()).done);r=!0){var s=a.value;t[s.nodeName]=s.nodeValue}}catch(e){i=!0,n=e}finally{try{r||null==o.return||o.return()}finally{if(i)throw n}}return!!t[e]},s.default.XML.prototype.getNum=function(e,t){var r={},i=!0,n=!1,a=void 0;try{for(var o,s=this.DOM.attributes[Symbol.iterator]();!(i=(o=s.next()).done);i=!0){var l=o.value;r[l.nodeName]=l.nodeValue}}catch(e){n=!0,a=e}finally{try{i||null==s.return||s.return()}finally{if(n)throw a}}return Number(r[e])||t||0},s.default.XML.prototype.getString=function(e,t){var r={},i=!0,n=!1,a=void 0;try{for(var o,s=this.DOM.attributes[Symbol.iterator]();!(i=(o=s.next()).done);i=!0){var l=o.value;r[l.nodeName]=l.nodeValue}}catch(e){n=!0,a=e}finally{try{i||null==s.return||s.return()}finally{if(n)throw a}}return r[e]?String(r[e]):t||null},s.default.XML.prototype.setAttribute=function(e,t){this.DOM.setAttribute(e,t)},s.default.XML.prototype.getContent=function(e){return this.DOM.textContent.replace(/\s\s+/g,",")||e||null},s.default.XML.prototype.setContent=function(e){this.DOM.children.length||(this.DOM.textContent=e)},s.default.XML.prototype.serialize=function(){return(new XMLSerializer).serializeToString(this.DOM)};var a=s.default;r.default=a},{"../core/main":36}],66:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,s=(i=e("../core/main"))&&i.__esModule?i:{default:i};function n(){if("function"==typeof Math.hypot)return Math.hypot.apply(null,arguments);for(var e=arguments.length,t=[],r=0,i=0;i<e;i++){var n=arguments[i];if((n=+n)===1/0||n===-1/0)return 1/0;r<(n=Math.abs(n))&&(r=n),t[i]=n}0===r&&(r=1);for(var a=0,o=0,s=0;s<e;s++){var l=t[s]/r,u=l*l-o,h=a+u;o=h-a-u,a=h}return Math.sqrt(a)*r}s.default.prototype.abs=Math.abs,s.default.prototype.ceil=Math.ceil,s.default.prototype.constrain=function(e,t,r){return s.default._validateParameters("constrain",arguments),Math.max(Math.min(e,r),t)},s.default.prototype.dist=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return s.default._validateParameters("dist",t),4===t.length?n(t[2]-t[0],t[3]-t[1]):6===t.length?n(t[3]-t[0],t[4]-t[1],t[5]-t[2]):void 0},s.default.prototype.exp=Math.exp,s.default.prototype.floor=Math.floor,s.default.prototype.lerp=function(e,t,r){return s.default._validateParameters("lerp",arguments),r*(t-e)+e},s.default.prototype.log=Math.log,s.default.prototype.mag=function(e,t){return s.default._validateParameters("mag",arguments),n(e,t)},s.default.prototype.map=function(e,t,r,i,n,a){s.default._validateParameters("map",arguments);var o=(e-t)/(r-t)*(n-i)+i;return a?i<n?this.constrain(o,i,n):this.constrain(o,n,i):o},s.default.prototype.max=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return t[0]instanceof Array?Math.max.apply(null,t[0]):Math.max.apply(null,t)},s.default.prototype.min=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return t[0]instanceof Array?Math.min.apply(null,t[0]):Math.min.apply(null,t)},s.default.prototype.norm=function(e,t,r){return s.default._validateParameters("norm",arguments),this.map(e,t,r,0,1)},s.default.prototype.pow=Math.pow,s.default.prototype.round=function(e,t){return t?Number(Math.round(e+"e"+t)+"e-"+t):Math.round(e)},s.default.prototype.sq=function(e){return e*e},s.default.prototype.sqrt=Math.sqrt,s.default.prototype.fract=function(e){s.default._validateParameters("fract",arguments);var t=0,r=Number(e);if(isNaN(r)||Math.abs(r)===1/0)return r;if(r<0&&(r=-r,t=1),!String(r).includes(".")||String(r).includes("e"))return r<1?Math.abs(t-r):0;var i=String(r);return i=Number("0"+i.slice(i.indexOf("."))),Math.abs(t-i)};var a=s.default;r.default=a},{"../core/main":36}],67:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,n=(i=e("../core/main"))&&i.__esModule?i:{default:i};n.default.prototype.createVector=function(e,t,r){return this instanceof n.default?new n.default.Vector(this,arguments):new n.default.Vector(e,t,r)};var a=n.default;r.default=a},{"../core/main":36}],68:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,n=(i=e("../core/main"))&&i.__esModule?i:{default:i};function b(e){return.5*(1-Math.cos(e*Math.PI))}var _,x=4095,w=4,S=.5;n.default.prototype.noise=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0;if(null==_){_=new Array(4096);for(var i=0;i<4096;i++)_[i]=Math.random()}e<0&&(e=-e),t<0&&(t=-t),r<0&&(r=-r);for(var n,a,o,s,l,u=Math.floor(e),h=Math.floor(t),c=Math.floor(r),f=e-u,d=t-h,p=r-c,m=0,v=.5,y=0;y<w;y++){var g=u+(h<<4)+(c<<8);n=b(f),a=b(d),o=_[g&x],o+=n*(_[g+1&x]-o),s=_[g+16&x],o+=a*((s+=n*(_[g+16+1&x]-s))-o),s=_[(g+=256)&x],s+=n*(_[g+1&x]-s),l=_[g+16&x],s+=a*((l+=n*(_[g+16+1&x]-l))-s),m+=(o+=b(p)*(s-o))*v,v*=S,u<<=1,h<<=1,c<<=1,1<=(f*=2)&&(u++,f--),1<=(d*=2)&&(h++,d--),1<=(p*=2)&&(c++,p--)}return m},n.default.prototype.noiseDetail=function(e,t){0<e&&(w=e),0<t&&(S=t)},n.default.prototype.noiseSeed=function(e){var t,r,i,n=(i=4294967296,{setSeed:function(e){r=t=(null==e?Math.random()*i:e)>>>0},getSeed:function(){return t},rand:function(){return(r=(1664525*r+1013904223)%i)/i}});n.setSeed(e),_=new Array(4096);for(var a=0;a<4096;a++)_[a]=n.rand()};var a=n.default;r.default=a},{"../core/main":36}],69:[function(e,t,r){"use strict";function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,l=(i=e("../core/main"))&&i.__esModule?i:{default:i},a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var a=i?Object.getOwnPropertyDescriptor(e,n):null;a&&(a.get||a.set)?Object.defineProperty(r,n,a):r[n]=e[n]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}l.default.Vector=function(e,t,r){var i,n,a;a=e instanceof l.default?(this.p5=e,i=t[0]||0,n=t[1]||0,t[2]||0):(i=e||0,n=t||0,r||0),this.x=i,this.y=n,this.z=a},l.default.Vector.prototype.toString=function(){return"p5.Vector Object : [".concat(this.x,", ").concat(this.y,", ").concat(this.z,"]")},l.default.Vector.prototype.set=function(e,t,r){return e instanceof l.default.Vector?(this.x=e.x||0,this.y=e.y||0,this.z=e.z||0):e instanceof Array?(this.x=e[0]||0,this.y=e[1]||0,this.z=e[2]||0):(this.x=e||0,this.y=t||0,this.z=r||0),this},l.default.Vector.prototype.copy=function(){return this.p5?new l.default.Vector(this.p5,[this.x,this.y,this.z]):new l.default.Vector(this.x,this.y,this.z)},l.default.Vector.prototype.add=function(e,t,r){return e instanceof l.default.Vector?(this.x+=e.x||0,this.y+=e.y||0,this.z+=e.z||0):e instanceof Array?(this.x+=e[0]||0,this.y+=e[1]||0,this.z+=e[2]||0):(this.x+=e||0,this.y+=t||0,this.z+=r||0),this};function u(e,t){return 0!==e&&(this.x=this.x%e),0!==t&&(this.y=this.y%t),this}function h(e,t,r){return 0!==e&&(this.x=this.x%e),0!==t&&(this.y=this.y%t),0!==r&&(this.z=this.z%r),this}l.default.Vector.prototype.rem=function(e,t,r){if(e instanceof l.default.Vector){if(Number.isFinite(e.x)&&Number.isFinite(e.y)&&Number.isFinite(e.z)){var i=parseFloat(e.x),n=parseFloat(e.y),a=parseFloat(e.z);h.call(this,i,n,a)}}else if(e instanceof Array)e.every(function(e){return Number.isFinite(e)})&&(2===e.length&&u.call(this,e[0],e[1]),3===e.length&&h.call(this,e[0],e[1],e[2]));else if(1===arguments.length){if(Number.isFinite(e)&&0!==e)return this.x=this.x%e,this.y=this.y%e,this.z=this.z%e,this}else if(2===arguments.length){var o=Array.prototype.slice.call(arguments);o.every(function(e){return Number.isFinite(e)})&&2===o.length&&u.call(this,o[0],o[1])}else if(3===arguments.length){var s=Array.prototype.slice.call(arguments);s.every(function(e){return Number.isFinite(e)})&&3===s.length&&h.call(this,s[0],s[1],s[2])}},l.default.Vector.prototype.sub=function(e,t,r){return e instanceof l.default.Vector?(this.x-=e.x||0,this.y-=e.y||0,this.z-=e.z||0):e instanceof Array?(this.x-=e[0]||0,this.y-=e[1]||0,this.z-=e[2]||0):(this.x-=e||0,this.y-=t||0,this.z-=r||0),this},l.default.Vector.prototype.mult=function(e,t,r){if(e instanceof l.default.Vector)return Number.isFinite(e.x)&&Number.isFinite(e.y)&&Number.isFinite(e.z)&&"number"==typeof e.x&&"number"==typeof e.y&&"number"==typeof e.z?(this.x*=e.x,this.y*=e.y,this.z*=e.z):console.warn("p5.Vector.prototype.mult:","x contains components that are either undefined or not finite numbers"),this;if(e instanceof Array)return e.every(function(e){return Number.isFinite(e)})&&e.every(function(e){return"number"==typeof e})?1===e.length?(this.x*=e[0],this.y*=e[0],this.z*=e[0]):2===e.length?(this.x*=e[0],this.y*=e[1]):3===e.length&&(this.x*=e[0],this.y*=e[1],this.z*=e[2]):console.warn("p5.Vector.prototype.mult:","x contains elements that are either undefined or not finite numbers"),this;var i=Array.prototype.slice.call(arguments);return i.every(function(e){return Number.isFinite(e)})&&i.every(function(e){return"number"==typeof e})?(1===arguments.length&&(this.x*=e,this.y*=e,this.z*=e),2===arguments.length&&(this.x*=e,this.y*=t),3===arguments.length&&(this.x*=e,this.y*=t,this.z*=r)):console.warn("p5.Vector.prototype.mult:","x, y, or z arguments are either undefined or not a finite number"),this},l.default.Vector.prototype.div=function(e,t,r){if(e instanceof l.default.Vector){if(Number.isFinite(e.x)&&Number.isFinite(e.y)&&Number.isFinite(e.z)&&"number"==typeof e.x&&"number"==typeof e.y&&"number"==typeof e.z){if(0===e.x||0===e.y||0===e.z)return console.warn("p5.Vector.prototype.div:","divide by 0"),this;this.x/=e.x,this.y/=e.y,this.z/=e.z}else console.warn("p5.Vector.prototype.div:","x contains components that are either undefined or not finite numbers");return this}if(e instanceof Array){if(e.every(function(e){return Number.isFinite(e)})&&e.every(function(e){return"number"==typeof e})){if(e.some(function(e){return 0===e}))return console.warn("p5.Vector.prototype.div:","divide by 0"),this;1===e.length?(this.x/=e[0],this.y/=e[0],this.z/=e[0]):2===e.length?(this.x/=e[0],this.y/=e[1]):3===e.length&&(this.x/=e[0],this.y/=e[1],this.z/=e[2])}else console.warn("p5.Vector.prototype.div:","x contains components that are either undefined or not finite numbers");return this}var i=Array.prototype.slice.call(arguments);if(i.every(function(e){return Number.isFinite(e)})&&i.every(function(e){return"number"==typeof e})){if(i.some(function(e){return 0===e}))return console.warn("p5.Vector.prototype.div:","divide by 0"),this;1===arguments.length&&(this.x/=e,this.y/=e,this.z/=e),2===arguments.length&&(this.x/=e,this.y/=t),3===arguments.length&&(this.x/=e,this.y/=t,this.z/=r)}else console.warn("p5.Vector.prototype.div:","x, y, or z arguments are either undefined or not a finite number");return this},l.default.Vector.prototype.mag=function(){return Math.sqrt(this.magSq())},l.default.Vector.prototype.magSq=function(){var e=this.x,t=this.y,r=this.z;return e*e+t*t+r*r},l.default.Vector.prototype.dot=function(e,t,r){return e instanceof l.default.Vector?this.dot(e.x,e.y,e.z):this.x*(e||0)+this.y*(t||0)+this.z*(r||0)},l.default.Vector.prototype.cross=function(e){var t=this.y*e.z-this.z*e.y,r=this.z*e.x-this.x*e.z,i=this.x*e.y-this.y*e.x;return this.p5?new l.default.Vector(this.p5,[t,r,i]):new l.default.Vector(t,r,i)},l.default.Vector.prototype.dist=function(e){return e.copy().sub(this).mag()},l.default.Vector.prototype.normalize=function(){var e=this.mag();return 0!==e&&this.mult(1/e),this},l.default.Vector.prototype.limit=function(e){var t=this.magSq();return e*e<t&&this.div(Math.sqrt(t)).mult(e),this},l.default.Vector.prototype.setMag=function(e){return this.normalize().mult(e)},l.default.Vector.prototype.heading=function(){var e=Math.atan2(this.y,this.x);return this.p5?this.p5._fromRadians(e):e},l.default.Vector.prototype.setHeading=function(e){var t=this.mag();return this.x=t*Math.cos(e),this.y=t*Math.sin(e),this},l.default.Vector.prototype.rotate=function(e){var t=this.heading()+e;this.p5&&(t=this.p5._toRadians(t));var r=this.mag();return this.x=Math.cos(t)*r,this.y=Math.sin(t)*r,this},l.default.Vector.prototype.angleBetween=function(e){var t,r=this.dot(e)/(this.mag()*e.mag());return t=Math.acos(Math.min(1,Math.max(-1,r))),t*=Math.sign(this.cross(e).z||1),this.p5&&(t=this.p5._fromRadians(t)),t},l.default.Vector.prototype.lerp=function(e,t,r,i){return e instanceof l.default.Vector?this.lerp(e.x,e.y,e.z,t):(this.x+=(e-this.x)*i||0,this.y+=(t-this.y)*i||0,this.z+=(r-this.z)*i||0,this)},l.default.Vector.prototype.reflect=function(e){return e.normalize(),this.sub(e.mult(2*this.dot(e)))},l.default.Vector.prototype.array=function(){return[this.x||0,this.y||0,this.z||0]},l.default.Vector.prototype.equals=function(e,t,r){var i,n,a;return a=e instanceof l.default.Vector?(i=e.x||0,n=e.y||0,e.z||0):e instanceof Array?(i=e[0]||0,n=e[1]||0,e[2]||0):(i=e||0,n=t||0,r||0),this.x===i&&this.y===n&&this.z===a},l.default.Vector.fromAngle=function(e,t){return void 0===t&&(t=1),new l.default.Vector(t*Math.cos(e),t*Math.sin(e),0)},l.default.Vector.fromAngles=function(e,t,r){void 0===r&&(r=1);var i=Math.cos(t),n=Math.sin(t),a=Math.cos(e),o=Math.sin(e);return new l.default.Vector(r*o*n,-r*a,r*o*i)},l.default.Vector.random2D=function(){return this.fromAngle(Math.random()*a.TWO_PI)},l.default.Vector.random3D=function(){var e=Math.random()*a.TWO_PI,t=2*Math.random()-1,r=Math.sqrt(1-t*t),i=r*Math.cos(e),n=r*Math.sin(e);return new l.default.Vector(i,n,t)},l.default.Vector.add=function(e,t,r){return r?r.set(e):(r=e.copy(),3===arguments.length&&l.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector","p5.Vector.add")),r.add(t),r},l.default.Vector.rem=function(e,t){if(e instanceof l.default.Vector&&t instanceof l.default.Vector){var r=e.copy();return r.rem(t),r}},l.default.Vector.sub=function(e,t,r){return r?r.set(e):(r=e.copy(),3===arguments.length&&l.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector","p5.Vector.sub")),r.sub(t),r},l.default.Vector.mult=function(e,t,r){return r?r.set(e):(r=e.copy(),3===arguments.length&&l.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector","p5.Vector.mult")),r.mult(t),r},l.default.Vector.div=function(e,t,r){return r?r.set(e):(r=e.copy(),3===arguments.length&&l.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector","p5.Vector.div")),r.div(t),r},l.default.Vector.dot=function(e,t){return e.dot(t)},l.default.Vector.cross=function(e,t){return e.cross(t)},l.default.Vector.dist=function(e,t){return e.dist(t)},l.default.Vector.lerp=function(e,t,r,i){return i?i.set(e):(i=e.copy(),4===arguments.length&&l.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector","p5.Vector.lerp")),i.lerp(t,r),i},l.default.Vector.mag=function(e){var t=e.x,r=e.y,i=e.z,n=t*t+r*r+i*i;return Math.sqrt(n)};var n=l.default.Vector;r.default=n},{"../core/constants":26,"../core/main":36}],70:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,n=(i=e("../core/main"))&&i.__esModule?i:{default:i};var a="_lcg_random_state",o=4294967296,s=0;n.default.prototype._lcg=function(e){return this[e]=(1664525*this[e]+1013904223)%o,this[e]/o},n.default.prototype._lcgSetSeed=function(e,t){this[e]=(null==t?Math.random()*o:t)>>>0},n.default.prototype.randomSeed=function(e){this._lcgSetSeed(a,e),this._gaussian_previous=!1},n.default.prototype.random=function(e,t){var r;if(n.default._validateParameters("random",arguments),r=null!=this[a]?this._lcg(a):Math.random(),void 0===e)return r;if(void 0===t)return e instanceof Array?e[Math.floor(r*e.length)]:r*e;if(t<e){var i=e;e=t,t=i}return r*(t-e)+e},n.default.prototype.randomGaussian=function(e){var t,r,i,n,a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:1;if(this._gaussian_previous)t=s,this._gaussian_previous=!1;else{for(;1<=(n=(r=this.random(2)-1)*r+(i=this.random(2)-1)*i););t=r*(n=Math.sqrt(-2*Math.log(n)/n)),s=i*n,this._gaussian_previous=!0}return t*a+(e||0)};var l=n.default;r.default=l},{"../core/main":36}],71:[function(e,t,r){"use strict";function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,n=(i=e("../core/main"))&&i.__esModule?i:{default:i},a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var a=i?Object.getOwnPropertyDescriptor(e,n):null;a&&(a.get||a.set)?Object.defineProperty(r,n,a):r[n]=e[n]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}n.default.prototype._angleMode=a.RADIANS,n.default.prototype.acos=function(e){return this._fromRadians(Math.acos(e))},n.default.prototype.asin=function(e){return this._fromRadians(Math.asin(e))},n.default.prototype.atan=function(e){return this._fromRadians(Math.atan(e))},n.default.prototype.atan2=function(e,t){return this._fromRadians(Math.atan2(e,t))},n.default.prototype.cos=function(e){return Math.cos(this._toRadians(e))},n.default.prototype.sin=function(e){return Math.sin(this._toRadians(e))},n.default.prototype.tan=function(e){return Math.tan(this._toRadians(e))},n.default.prototype.degrees=function(e){return e*a.RAD_TO_DEG},n.default.prototype.radians=function(e){return e*a.DEG_TO_RAD},n.default.prototype.angleMode=function(e){e!==a.DEGREES&&e!==a.RADIANS||(this._angleMode=e)},n.default.prototype._toRadians=function(e){return this._angleMode===a.DEGREES?e*a.DEG_TO_RAD:e},n.default.prototype._toDegrees=function(e){return this._angleMode===a.RADIANS?e*a.RAD_TO_DEG:e},n.default.prototype._fromRadians=function(e){return this._angleMode===a.DEGREES?e*a.RAD_TO_DEG:e};var l=n.default;r.default=l},{"../core/constants":26,"../core/main":36}],72:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,n=(i=e("../core/main"))&&i.__esModule?i:{default:i};n.default.prototype.textAlign=function(e,t){var r;return n.default._validateParameters("textAlign",arguments),(r=this._renderer).textAlign.apply(r,arguments)},n.default.prototype.textLeading=function(e){var t;return n.default._validateParameters("textLeading",arguments),(t=this._renderer).textLeading.apply(t,arguments)},n.default.prototype.textSize=function(e){var t;return n.default._validateParameters("textSize",arguments),(t=this._renderer).textSize.apply(t,arguments)},n.default.prototype.textStyle=function(e){var t;return n.default._validateParameters("textStyle",arguments),(t=this._renderer).textStyle.apply(t,arguments)},n.default.prototype.textWidth=function(){for(var e,t=arguments.length,r=new Array(t),i=0;i<t;i++)r[i]=arguments[i];return r[0]+="",n.default._validateParameters("textWidth",r),0===r[0].length?0:(e=this._renderer).textWidth.apply(e,r)},n.default.prototype.textAscent=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return n.default._validateParameters("textAscent",t),this._renderer.textAscent()},n.default.prototype.textDescent=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return n.default._validateParameters("textDescent",t),this._renderer.textDescent()},n.default.prototype._updateTextMetrics=function(){return this._renderer._updateTextMetrics()};var a=n.default;r.default=a},{"../core/main":36}],73:[function(e,t,r){"use strict";function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,f=(i=e("../core/main"))&&i.__esModule?i:{default:i},n=l(e("../core/constants")),a=l(e("opentype.js"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}function l(e){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var a=i?Object.getOwnPropertyDescriptor(e,n):null;a&&(a.get||a.set)?Object.defineProperty(r,n,a):r[n]=e[n]}return r.default=e,t&&t.set(e,r),r}e("../core/friendly_errors/validate_params"),e("../core/friendly_errors/file_errors"),e("../core/friendly_errors/fes_core"),f.default.prototype.loadFont=function(s,l,u){f.default._validateParameters("loadFont",arguments);var h=new f.default.Font(this),c=this;return a.load(s,function(e,t){if(e)return f.default._friendlyFileLoadError(4,s),void 0!==u?u(e):void console.error(e,s);h.font=t,void 0!==l&&l(h),c._decrementPreload();var r,i,n=s.split("\\").pop().split("/").pop(),a=n.lastIndexOf("."),o=a<1?null:n.substr(a+1);["ttf","otf","woff","woff2"].includes(o)&&(r=n.substr(0,a),(i=document.createElement("style")).appendChild(document.createTextNode("\n@font-face {\nfont-family: ".concat(r,";\nsrc: url(").concat(s,");\n}\n"))),document.head.appendChild(i))}),h},f.default.prototype.text=function(e,t,r,i,n){var a;return f.default._validateParameters("text",arguments),this._renderer._doFill||this._renderer._doStroke?(a=this._renderer).text.apply(a,arguments):this},f.default.prototype.textFont=function(e,t){if(f.default._validateParameters("textFont",arguments),arguments.length){if(!e)throw new Error("null font passed to textFont");return this._renderer._setProperty("_textFont",e),t&&(this._renderer._setProperty("_textSize",t),this._renderer._setProperty("_textLeading",t*n._DEFAULT_LEADMULT)),this._renderer._applyTextProperties()}return this._renderer._textFont};var u=f.default;r.default=u},{"../core/constants":26,"../core/friendly_errors/fes_core":28,"../core/friendly_errors/file_errors":29,"../core/friendly_errors/validate_params":31,"../core/main":36,"opentype.js":12}],74:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,n=(i=e("../core/main"))&&i.__esModule?i:{default:i},x=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==d(e)&&"function"!=typeof e)return{default:e};var t=o();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var a=i?Object.getOwnPropertyDescriptor(e,n):null;a&&(a.get||a.set)?Object.defineProperty(r,n,a):r[n]=e[n]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants"));function o(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return o=function(){return e},e}function d(e){return(d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function p(e,t){for(var r=function(e,t){if("object"!==d(e))e=t;else for(var r in t)void 0===e[r]&&(e[r]=t[r]);return e}(t,{sampleFactor:.1,simplifyThreshold:0}),i=l(e,0,1),n=i/(i*r.sampleFactor),a=[],o=0;o<i;o+=n)a.push(l(e,o));return r.simplifyThreshold&&function(e){for(var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,r=0,i=e.length-1;3<e.length&&0<=i;--i)f(s(e,i-1),s(e,i),s(e,i+1),t)&&(e.splice(i%e.length,1),r++)}(a,r.simplifyThreshold),a}function m(e){for(var t,r=[],i=0;i<e.length;i++)"M"===e[i].type&&(t&&r.push(t),t=[]),t.push(a(e[i]));return r.push(t),r}function a(e){var t=[e.type];return"M"===e.type||"L"===e.type?t.push(e.x,e.y):"C"===e.type?t.push(e.x1,e.y1,e.x2,e.y2,e.x,e.y):"Q"===e.type&&t.push(e.x1,e.y1,e.x,e.y),t}function s(e,t){var r=e.length;return e[t<0?t%r+r:t%r]}function f(e,t,r,i){if(!i)return 0==(n=e,o=r,((a=t)[0]-n[0])*(o[1]-n[1])-(o[0]-n[0])*(a[1]-n[1]));var n,a,o;void 0===f.tmpPoint1&&(f.tmpPoint1=[],f.tmpPoint2=[]);var s=f.tmpPoint1,l=f.tmpPoint2;s.x=t.x-e.x,s.y=t.y-e.y,l.x=r.x-t.x,l.y=r.y-t.y;var u=s.x*l.x+s.y*l.y,h=Math.sqrt(s.x*s.x+s.y*s.y),c=Math.sqrt(l.x*l.x+l.y*l.y);return Math.acos(u/(h*c))<i}function c(e,t,r,i,n,a,o,s,l){var u=1-l,h=Math.pow(u,3),c=Math.pow(u,2),f=l*l,d=f*l,p=h*e+3*c*l*r+3*u*l*l*n+d*o,m=h*t+3*c*l*i+3*u*l*l*a+d*s,v=e+2*l*(r-e)+f*(n-2*r+e),y=t+2*l*(i-t)+f*(a-2*i+t),g=r+2*l*(n-r)+f*(o-2*n+r),b=i+2*l*(a-i)+f*(s-2*a+i),_=u*e+l*r,x=u*t+l*i,w=u*n+l*o,S=u*a+l*s,M=90-180*Math.atan2(v-g,y-b)/Math.PI;return(g<v||y<b)&&(M+=180),{x:p,y:m,m:{x:v,y:y},n:{x:g,y:b},start:{x:_,y:x},end:{x:w,y:S},alpha:M}}function v(e,t,r,i,n,a,o,s,l){return null==l?y(e,t,r,i,n,a,o,s):c(e,t,r,i,n,a,o,s,function(e,t,r,i,n,a,o,s,l){if(l<0||y(e,t,r,i,n,a,o,s)<l)return;var u,h=.5,c=1-h;u=y(e,t,r,i,n,a,o,s,c);for(;.01<Math.abs(u-l);)u=y(e,t,r,i,n,a,o,s,c+=(u<l?1:-1)*(h/=2));return c}(e,t,r,i,n,a,o,s,l))}function l(e,t,r){for(var i,n,a,o,s,l=0,u=0,h=(e=function(e,t){function r(e,t,r){var i,n;if(!e)return["C",t.x,t.y,t.x,t.y,t.x,t.y];switch(e[0]in{T:1,Q:1}||(t.qx=t.qy=null),e[0]){case"M":t.X=e[1],t.Y=e[2];break;case"A":e=["C"].concat(function e(t,r,i,n,a,o,s,l,u,h){var c=Math.PI;var f=120*c/180;var d;var p;var m;var v;var y=c/180*(+a||0);var g=[];var b;var _=function(e,t,r){var i=e*Math.cos(r)-t*Math.sin(r),n=e*Math.sin(r)+t*Math.cos(r);return{x:i,y:n}};if(h)d=h[0],p=h[1],m=h[2],v=h[3];else{b=_(t,r,-y),t=b.x,r=b.y,b=_(l,u,-y),l=b.x,u=b.y;var x=(t-l)/2,w=(r-u)/2,S=x*x/(i*i)+w*w/(n*n);1<S&&(S=Math.sqrt(S),i*=S,n*=S);var M=i*i,T=n*n,E=(o===s?-1:1)*Math.sqrt(Math.abs((M*T-M*w*w-T*x*x)/(M*w*w+T*x*x)));m=E*i*w/n+(t+l)/2,v=E*-n*x/i+(r+u)/2,d=Math.asin(((r-v)/n).toFixed(9)),p=Math.asin(((u-v)/n).toFixed(9)),(d=t<m?c-d:d)<0&&(d=2*c+d),(p=l<m?c-p:p)<0&&(p=2*c+p),s&&p<d&&(d-=2*c),!s&&d<p&&(p-=2*c)}var C=p-d;if(Math.abs(C)>f){var L=p,O=l,P=u;p=d+f*(s&&d<p?1:-1),l=m+i*Math.cos(p),u=v+n*Math.sin(p),g=e(l,u,i,n,a,0,s,O,P,[p,L,m,v])}C=p-d;var R=Math.cos(d),D=Math.sin(d),k=Math.cos(p),A=Math.sin(p),I=Math.tan(C/4),U=4/3*i*I,N=4/3*n*I,F=[t,r],B=[t+U*D,r-N*R],G=[l+U*A,u-N*k],j=[l,u];B[0]=2*F[0]-B[0];B[1]=2*F[1]-B[1];{if(h)return[B,G,j].concat(g);g=[B,G,j].concat(g).join().split(",");for(var V=[],z=0,H=g.length;z<H;z++)V[z]=z%2?_(g[z-1],g[z],y).y:_(g[z],g[z+1],y).x;return V}}.apply(0,[t.x,t.y].concat(e.slice(1))));break;case"S":n="C"===r||"S"===r?(i=2*t.x-t.bx,2*t.y-t.by):(i=t.x,t.y),e=["C",i,n].concat(e.slice(1));break;case"T":"Q"===r||"T"===r?(t.qx=2*t.x-t.qx,t.qy=2*t.y-t.qy):(t.qx=t.x,t.qy=t.y),e=["C"].concat(S(t.x,t.y,t.qx,t.qy,e[1],e[2]));break;case"Q":t.qx=e[1],t.qy=e[2],e=["C"].concat(S(t.x,t.y,e[1],e[2],e[3],e[4]));break;case"L":e=["C"].concat(w(t.x,t.y,e[1],e[2]));break;case"H":e=["C"].concat(w(t.x,t.y,e[1],t.y));break;case"V":e=["C"].concat(w(t.x,t.y,t.x,e[1]));break;case"Z":e=["C"].concat(w(t.x,t.y,t.X,t.Y))}return e}function i(e,t){if(7<e[t].length){e[t].shift();for(var r=e[t];r.length;)h[t]="A",s&&(c[t]="A"),e.splice(t++,0,["C"].concat(r.splice(0,6)));e.splice(t,1),a=Math.max(o.length,s&&s.length||0)}}function n(e,t,r,i,n){e&&t&&"M"===e[n][0]&&"M"!==t[n][0]&&(t.splice(n,0,["M",i.x,i.y]),r.bx=0,r.by=0,r.x=e[n][1],r.y=e[n][2],a=Math.max(o.length,s&&s.length||0))}var a,o=b(e),s=t&&b(t),l={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},u={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},h=[],c=[],f="",d="";a=Math.max(o.length,s&&s.length||0);for(var p=0;p<a;p++){o[p]&&(f=o[p][0]),"C"!==f&&(h[p]=f,p&&(d=h[p-1])),o[p]=r(o[p],l,d),"A"!==h[p]&&"C"===f&&(h[p]="C"),i(o,p),s&&(s[p]&&(f=s[p][0]),"C"!==f&&(c[p]=f,p&&(d=c[p-1])),s[p]=r(s[p],u,d),"A"!==c[p]&&"C"===f&&(c[p]="C"),i(s,p)),n(o,s,l,u,p),n(s,o,u,l,p);var m=o[p],v=s&&s[p],y=m.length,g=s&&v.length;l.x=m[y-2],l.y=m[y-1],l.bx=parseFloat(m[y-4])||l.x,l.by=parseFloat(m[y-3])||l.y,u.bx=s&&(parseFloat(v[g-4])||u.x),u.by=s&&(parseFloat(v[g-3])||u.y),u.x=s&&v[g-2],u.y=s&&v[g-1]}return s?[o,s]:o}(e)).length;u<h;u++){if("M"===(a=e[u])[0])i=+a[1],n=+a[2];else{if(t<l+(o=v(i,n,a[1],a[2],a[3],a[4],a[5],a[6]))&&!r)return{x:(s=v(i,n,a[1],a[2],a[3],a[4],a[5],a[6],t-l)).x,y:s.y,alpha:s.alpha};l+=o,i=+a[5],n=+a[6]}a.shift()+a}return(s=r?l:c(i,n,a[0],a[1],a[2],a[3],a[4],a[5],1)).alpha&&(s={x:s.x,y:s.y,alpha:s.alpha}),s}function b(e){var t,r=[],i=0,n=0,a=0,o=0,s=0;if(!e)return r;"M"===e[0][0]&&(a=i=+e[0][1],o=n=+e[0][2],s++,r[0]=["M",i,n]);for(var l,u,h=3===e.length&&"M"===e[0][0]&&"R"===e[1][0].toUpperCase()&&"Z"===e[2][0].toUpperCase(),c=s,f=e.length;c<f;c++){if(r.push(l=[]),(u=e[c])[0]!==String.prototype.toUpperCase.call(u[0]))switch(l[0]=String.prototype.toUpperCase.call(u[0]),l[0]){case"A":l[1]=u[1],l[2]=u[2],l[3]=u[3],l[4]=u[4],l[5]=u[5],l[6]=+(u[6]+i),l[7]=+(u[7]+n);break;case"V":l[1]=+u[1]+n;break;case"H":l[1]=+u[1]+i;break;case"R":for(var d=2,p=(t=[i,n].concat(u.slice(1))).length;d<p;d++)t[d]=+t[d]+i,t[++d]=+t[d]+n;r.pop(),r=r.concat(_(t,h));break;case"M":a=+u[1]+i,o=+u[2]+n;break;default:for(var m=1,v=u.length;m<v;m++)l[m]=+u[m]+(m%2?i:n)}else if("R"===u[0])t=[i,n].concat(u.slice(1)),r.pop(),r=r.concat(_(t,h)),l=["R"].concat(u.slice(-2));else for(var y=0,g=u.length;y<g;y++)l[y]=u[y];switch(l[0]){case"Z":i=a,n=o;break;case"H":i=l[1];break;case"V":n=l[1];break;case"M":a=l[l.length-2],o=l[l.length-1];break;default:i=l[l.length-2],n=l[l.length-1]}}return r}function _(e,t){for(var r=[],i=0,n=e.length;i<n-2*!t;i+=2){var a=[{x:+e[i-2],y:+e[i-1]},{x:+e[i],y:+e[i+1]},{x:+e[i+2],y:+e[i+3]},{x:+e[i+4],y:+e[i+5]}];t?i?n-4===i?a[3]={x:+e[0],y:+e[1]}:n-2===i&&(a[2]={x:+e[0],y:+e[1]},a[3]={x:+e[2],y:+e[3]}):a[0]={x:+e[n-2],y:+e[n-1]}:n-4===i?a[3]=a[2]:i||(a[0]={x:+e[i],y:+e[i+1]}),r.push(["C",(-a[0].x+6*a[1].x+a[2].x)/6,(-a[0].y+6*a[1].y+a[2].y)/6,(a[1].x+6*a[2].x-a[3].x)/6,(a[1].y+6*a[2].y-a[3].y)/6,a[2].x,a[2].y])}return r}function w(e,t,r,i){return[e,t,r,i,r,i]}function S(e,t,r,i,n,a){return[1/3*e+2/3*r,1/3*t+2/3*i,1/3*n+2/3*r,1/3*a+2/3*i,n,a]}function y(e,t,r,i,n,a,o,s,l){null==l&&(l=1);for(var u=(l=1<l?1:l<0?0:l)/2,h=[-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],c=0,f=[.2491,.2491,.2335,.2335,.2032,.2032,.1601,.1601,.1069,.1069,.0472,.0472],d=0;d<12;d++){var p=u*h[d]+u,m=g(p,e,r,n,o),v=g(p,t,i,a,s),y=m*m+v*v;c+=f[d]*Math.sqrt(y)}return u*c}function g(e,t,r,i,n){return e*(e*(-3*t+9*r-9*i+3*n)+6*t-12*r+6*i)-3*t+3*r}n.default.Font=function(e){this.parent=e,this.cache={},this.font=void 0},n.default.Font.prototype.textBounds=function(e){var t,r=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,i=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0,n=3<arguments.length?arguments[3]:void 0,a=4<arguments.length?arguments[4]:void 0,o=a&&a.renderer&&a.renderer._pInst||this.parent,s=o._renderer.drawingContext;s.textAlign||x.LEFT,s.textBaseline||x.BASELINE;if(n=n||o._renderer._textSize,!t){var l,u,h=[],c=[],f=[];f[0]=[];var d=[],p=this._scale(n),m=o._renderer.textLeading(),v=0;this.font.forEachGlyph(e,r,i,n,a,function(e,t,r,i){var n=e.getMetrics();0===e.index||10===e.index?f[v+=1]=[]:(f[v].push(t+n.xMin*p),f[v].push(t+n.xMax*p),d.push(r+v*m+-n.yMin*p),d.push(r+v*m+-n.yMax*p))}),0<f[v].length&&(h[v]=Math.min.apply(null,f[v]),c[v]=Math.max.apply(null,f[v]));for(var y=0,g=0;g<=v;g++){h[g]=Math.min.apply(null,f[g]),c[g]=Math.max.apply(null,f[g]);var b=c[g]-h[g];y<b&&(y=b)}var _=Math.min.apply(null,h);t={x:_,y:l=Math.min.apply(null,d),h:Math.max.apply(null,d)-l,w:y,advance:_-r},u=this._handleAlignment(o._renderer,e,t.x,t.y,t.w+t.advance),t.x=u.x,t.y=u.y}return t},n.default.Font.prototype.textToPoints=function(e,t,r,i,n){var a,o=0,s=[],l=this._getGlyphs(e);i=i||this.parent._renderer._textSize;for(var u=0;u<l.length;u++){if(!(l[a=u].name&&"space"===l[a].name||e.length===l.length&&" "===e[a]||l[a].index&&3===l[a].index))for(var h=m(l[u].getPath(t,r,i).commands),c=0;c<h.length;c++)for(var f=p(h[c],n),d=0;d<f.length;d++)f[d].x+=o,s.push(f[d]);o+=l[u].advanceWidth*this._scale(i)}return s},n.default.Font.prototype._getGlyphs=function(e){return this.font.stringToGlyphs(e)},n.default.Font.prototype._getPath=function(e,t,r,i){var n=(i&&i.renderer&&i.renderer._pInst||this.parent)._renderer,a=this._handleAlignment(n,e,t,r);return this.font.getPath(e,a.x,a.y,n._textSize,i)},n.default.Font.prototype._getPathData=function(e,t,r,i){var n=3;return"string"==typeof e&&2<arguments.length?e=this._getPath(e,t,r,i):"object"===d(t)&&(i=t),i&&"number"==typeof i.decimals&&(n=i.decimals),e.toPathData(n)},n.default.Font.prototype._getSVG=function(e,t,r,i){var n=3;return"string"==typeof e&&2<arguments.length?e=this._getPath(e,t,r,i):"object"===d(t)&&(i=t),i&&("number"==typeof i.decimals&&(n=i.decimals),"number"==typeof i.strokeWidth&&(e.strokeWidth=i.strokeWidth),void 0!==i.fill&&(e.fill=i.fill),void 0!==i.stroke&&(e.stroke=i.stroke)),e.toSVG(n)},n.default.Font.prototype._renderPath=function(e,t,r,i){var n,a=i&&i.renderer||this.parent._renderer,o=a.drawingContext;n="object"===d(e)&&e.commands?e.commands:this._getPath(e,t,r,i).commands,o.beginPath();var s=!0,l=!1,u=void 0;try{for(var h,c=n[Symbol.iterator]();!(s=(h=c.next()).done);s=!0){var f=h.value;"M"===f.type?o.moveTo(f.x,f.y):"L"===f.type?o.lineTo(f.x,f.y):"C"===f.type?o.bezierCurveTo(f.x1,f.y1,f.x2,f.y2,f.x,f.y):"Q"===f.type?o.quadraticCurveTo(f.x1,f.y1,f.x,f.y):"Z"===f.type&&o.closePath()}}catch(e){l=!0,u=e}finally{try{s||null==c.return||c.return()}finally{if(l)throw u}}return a._doStroke&&a._strokeSet&&o.stroke(),a._doFill&&(a._fillSet||a._setFill(x._DEFAULT_TEXT_FILL),o.fill()),this},n.default.Font.prototype._textWidth=function(e,t){return this.font.getAdvanceWidth(e,t)},n.default.Font.prototype._textAscent=function(e){return this.font.ascender*this._scale(e)},n.default.Font.prototype._textDescent=function(e){return-this.font.descender*this._scale(e)},n.default.Font.prototype._scale=function(e){return 1/this.font.unitsPerEm*(e||this.parent._renderer._textSize)},n.default.Font.prototype._handleAlignment=function(e,t,r,i,n){var a=e._textSize;switch(void 0===n&&(n=this._textWidth(t,a)),e._textAlign){case x.CENTER:r-=n/2;break;case x.RIGHT:r-=n}switch(e._textBaseline){case x.TOP:i+=this._textAscent(a);break;case x.CENTER:i+=this._textAscent(a)/2;break;case x.BOTTOM:i-=this._textDescent(a)}return{x:r,y:i}};var u=n.default;r.default=u},{"../core/constants":26,"../core/main":36}],75:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,n=(i=e("../core/main"))&&i.__esModule?i:{default:i};n.default.prototype.append=function(e,t){return e.push(t),e},n.default.prototype.arrayCopy=function(e,t,r,i,n){var a,o;e=void 0!==n?(o=Math.min(n,e.length),a=i,e.slice(t,o+t)):(o=void 0!==r?(o=r,Math.min(o,e.length)):e.length,a=0,r=t,e.slice(0,o)),Array.prototype.splice.apply(r,[a,o].concat(e))},n.default.prototype.concat=function(e,t){return e.concat(t)},n.default.prototype.reverse=function(e){return e.reverse()},n.default.prototype.shorten=function(e){return e.pop(),e},n.default.prototype.shuffle=function(e,t){for(var r,i,n=ArrayBuffer&&ArrayBuffer.isView&&ArrayBuffer.isView(e),a=(e=t||n?e:e.slice()).length;1<a;)r=this.random(0,1)*a|0,i=e[--a],e[a]=e[r],e[r]=i;return e},n.default.prototype.sort=function(e,t){var r=t?e.slice(0,Math.min(t,e.length)):e,i=t?e.slice(Math.min(t,e.length)):[];return(r="string"==typeof r[0]?r.sort():r.sort(function(e,t){return e-t})).concat(i)},n.default.prototype.splice=function(e,t,r){return Array.prototype.splice.apply(e,[r,0].concat(t)),e},n.default.prototype.subset=function(e,t,r){return void 0!==r?e.slice(t,t+r):e.slice(t,e.length)};var a=n.default;r.default=a},{"../core/main":36}],76:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,n=(i=e("../core/main"))&&i.__esModule?i:{default:i};n.default.prototype.float=function(e){return e instanceof Array?e.map(parseFloat):parseFloat(e)},n.default.prototype.int=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:10;return e===1/0||"Infinity"===e?1/0:e===-1/0||"-Infinity"===e?-1/0:"string"==typeof e?parseInt(e,t):"number"==typeof e?0|e:"boolean"==typeof e?e?1:0:e instanceof Array?e.map(function(e){return n.default.prototype.int(e,t)}):void 0},n.default.prototype.str=function(e){return e instanceof Array?e.map(n.default.prototype.str):String(e)},n.default.prototype.boolean=function(e){return"number"==typeof e?0!==e:"string"==typeof e?"true"===e.toLowerCase():"boolean"==typeof e?e:e instanceof Array?e.map(n.default.prototype.boolean):void 0},n.default.prototype.byte=function(e){var t=n.default.prototype.int(e,10);return"number"==typeof t?(t+128)%256-128:t instanceof Array?t.map(n.default.prototype.byte):void 0},n.default.prototype.char=function(e){return"number"!=typeof e||isNaN(e)?e instanceof Array?e.map(n.default.prototype.char):"string"==typeof e?n.default.prototype.char(parseInt(e,10)):void 0:String.fromCharCode(e)},n.default.prototype.unchar=function(e){return"string"==typeof e&&1===e.length?e.charCodeAt(0):e instanceof Array?e.map(n.default.prototype.unchar):void 0},n.default.prototype.hex=function(e,t){if(t=null==t?t=8:t,e instanceof Array)return e.map(function(e){return n.default.prototype.hex(e,t)});if(e===1/0||e===-1/0)return(e===1/0?"F":"0").repeat(t);if("number"==typeof e){e<0&&(e=4294967295+e+1);for(var r=Number(e).toString(16).toUpperCase();r.length<t;)r="0".concat(r);return r.length>=t&&(r=r.substring(r.length-t,r.length)),r}},n.default.prototype.unhex=function(e){return e instanceof Array?e.map(n.default.prototype.unhex):parseInt("0x".concat(e),16)};var a=n.default;r.default=a},{"../core/main":36}],77:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,o=(i=e("../core/main"))&&i.__esModule?i:{default:i};function n(e,t,r){var i=e<0,n=i?e.toString().substring(1):e.toString(),a=n.indexOf("."),o=-1!==a?n.substring(0,a):n,s=-1!==a?n.substring(a+1):"",l=i?"-":"";if(void 0!==r){var u="";(-1!==a||0<r-s.length)&&(u="."),s.length>r&&(s=s.substring(0,r));for(var h=0;h<t-o.length;h++)l+="0";l+=o,l+=u,l+=s;for(var c=0;c<r-s.length;c++)l+="0";return l}for(var f=0;f<Math.max(t-o.length,0);f++)l+="0";return l+=n}function a(e,t){var r=(e=e.toString()).indexOf("."),i=-1!==r?e.substring(r):"",n=-1!==r?e.substring(0,r):e;if(n=n.toString().replace(/\B(?=(\d{3})+(?!\d))/g,","),0===t)i="";else if(void 0!==t)if(t>i.length)for(var a=t-(i+=-1===r?".":"").length+1,o=0;o<a;o++)i+="0";else i=i.substring(0,t+1);return n+i}function s(e){return 0<parseFloat(e)?"+".concat(e.toString()):e.toString()}function l(e){return 0<=parseFloat(e)?" ".concat(e.toString()):e.toString()}e("../core/friendly_errors/validate_params"),e("../core/friendly_errors/file_errors"),e("../core/friendly_errors/fes_core"),o.default.prototype.join=function(e,t){return o.default._validateParameters("join",arguments),e.join(t)},o.default.prototype.match=function(e,t){return o.default._validateParameters("match",arguments),e.match(t)},o.default.prototype.matchAll=function(e,t){o.default._validateParameters("matchAll",arguments);for(var r=new RegExp(t,"g"),i=r.exec(e),n=[];null!==i;)n.push(i),i=r.exec(e);return n},o.default.prototype.nf=function(e,t,r){return o.default._validateParameters("nf",arguments),e instanceof Array?e.map(function(e){return n(e,t,r)}):"[object Arguments]"===Object.prototype.toString.call(e)?3===e.length?this.nf(e[0],e[1],e[2]):2===e.length?this.nf(e[0],e[1]):this.nf(e[0]):n(e,t,r)},o.default.prototype.nfc=function(e,t){return o.default._validateParameters("nfc",arguments),e instanceof Array?e.map(function(e){return a(e,t)}):a(e,t)},o.default.prototype.nfp=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];o.default._validateParameters("nfp",t);var i=o.default.prototype.nf.apply(this,t);return i instanceof Array?i.map(s):s(i)},o.default.prototype.nfs=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];o.default._validateParameters("nfs",t);var i=o.default.prototype.nf.apply(this,t);return i instanceof Array?i.map(l):l(i)},o.default.prototype.split=function(e,t){return o.default._validateParameters("split",arguments),e.split(t)},o.default.prototype.splitTokens=function(e,t){var r;if(o.default._validateParameters("splitTokens",arguments),void 0!==t){var i=t,n=/\]/g.exec(i),a=/\[/g.exec(i);r=a&&n?(i=i.slice(0,n.index)+i.slice(n.index+1),a=/\[/g.exec(i),i=i.slice(0,a.index)+i.slice(a.index+1),new RegExp("[\\[".concat(i,"\\]]"),"g")):n?(i=i.slice(0,n.index)+i.slice(n.index+1),new RegExp("[".concat(i,"\\]]"),"g")):a?(i=i.slice(0,a.index)+i.slice(a.index+1),new RegExp("[".concat(i,"\\[]"),"g")):new RegExp("[".concat(i,"]"),"g")}else r=/\s/g;return e.split(r).filter(function(e){return e})},o.default.prototype.trim=function(e){return o.default._validateParameters("trim",arguments),e instanceof Array?e.map(this.trim):e.trim()};var u=o.default;r.default=u},{"../core/friendly_errors/fes_core":28,"../core/friendly_errors/file_errors":29,"../core/friendly_errors/validate_params":31,"../core/main":36}],78:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,n=(i=e("../core/main"))&&i.__esModule?i:{default:i};n.default.prototype.day=function(){return(new Date).getDate()},n.default.prototype.hour=function(){return(new Date).getHours()},n.default.prototype.minute=function(){return(new Date).getMinutes()},n.default.prototype.millis=function(){return-1===this._millisStart?0:window.performance.now()-this._millisStart},n.default.prototype.month=function(){return(new Date).getMonth()+1},n.default.prototype.second=function(){return(new Date).getSeconds()},n.default.prototype.year=function(){return(new Date).getFullYear()};var a=n.default;r.default=a},{"../core/main":36}],79:[function(e,t,r){"use strict";function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,E=(i=e("../core/main"))&&i.__esModule?i:{default:i};e("./p5.Geometry");var d=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var a=i?Object.getOwnPropertyDescriptor(e,n):null;a&&(a.get||a.set)?Object.defineProperty(r,n,a):r[n]=e[n]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}E.default.prototype.plane=function(e,t,r,i){this._assert3d("plane"),E.default._validateParameters("plane",arguments),void 0===e&&(e=50),void 0===t&&(t=e),void 0===r&&(r=1),void 0===i&&(i=1);var n="plane|".concat(r,"|").concat(i);if(!this._renderer.geometryInHash(n)){var a=new E.default.Geometry(r,i,function(){for(var e,t,r,i=0;i<=this.detailY;i++){t=i/this.detailY;for(var n=0;n<=this.detailX;n++)e=n/this.detailX,r=new E.default.Vector(e-.5,t-.5,0),this.vertices.push(r),this.uvs.push(e,t)}});a.computeFaces().computeNormals(),r<=1&&i<=1?a._makeTriangleEdges()._edgesToVertices():this._renderer._doStroke&&console.log("Cannot draw stroke on plane objects with more than 1 detailX or 1 detailY"),this._renderer.createBuffers(n,a)}return this._renderer.drawBuffersScaled(n,e,t,1),this},E.default.prototype.box=function(e,t,r,i,n){this._assert3d("box"),E.default._validateParameters("box",arguments),void 0===e&&(e=50),void 0===t&&(t=e),void 0===r&&(r=t);var a=this._renderer.attributes&&this._renderer.attributes.perPixelLighting;void 0===i&&(i=a?1:4),void 0===n&&(n=a?1:4);var o="box|".concat(i,"|").concat(n);if(!this._renderer.geometryInHash(o)){var s=new E.default.Geometry(i,n,function(){var e=[[0,4,2,6],[1,3,5,7],[0,1,4,5],[2,6,3,7],[0,2,1,3],[4,5,6,7]];this.strokeIndices=[[0,1],[1,3],[3,2],[6,7],[8,9],[9,11],[14,15],[16,17],[17,19],[18,19],[20,21],[22,23]];for(var t=0;t<e.length;t++){for(var r=e[t],i=4*t,n=0;n<4;n++){var a=r[n],o=new E.default.Vector((2*(1&a)-1)/2,((2&a)-1)/2,((4&a)/2-1)/2);this.vertices.push(o),this.uvs.push(1&n,(2&n)/2)}this.faces.push([i,1+i,2+i]),this.faces.push([2+i,1+i,3+i])}});s.computeNormals(),i<=4&&n<=4?s._makeTriangleEdges()._edgesToVertices():this._renderer._doStroke&&console.log("Cannot draw stroke on box objects with more than 4 detailX or 4 detailY"),this._renderer.createBuffers(o,s)}return this._renderer.drawBuffersScaled(o,e,t,r),this},E.default.prototype.sphere=function(e,t,r){return this._assert3d("sphere"),E.default._validateParameters("sphere",arguments),void 0===e&&(e=50),void 0===t&&(t=24),void 0===r&&(r=16),this.ellipsoid(e,e,e,t,r),this};function l(e,t,r,i,n,a,o){e=e<=0?1:e,t=t<0?0:t,r=r<=0?e:r,i=i<3?3:i;var s,l,u,h=(a=void 0===a||a)?-2:0,c=(n=n<1?1:n)+((o=void 0===o?0!==t:o)?2:0),f=Math.atan2(e-t,r),d=Math.sin(f),p=Math.cos(f);for(s=h;s<=c;++s){var m=s/n,v=r*m,y=void 0;for(y=s<0?(m=v=0,e):n<s?(v=r,m=1,t):e+(t-e)*m,-2!==s&&s!==n+2||(y=0),v-=r/2,l=0;l<i;++l){var g=l/(i-1),b=2*Math.PI*g,_=Math.sin(b),x=Math.cos(b);this.vertices.push(new E.default.Vector(_*y,v,x*y));var w=void 0;w=s<0?new E.default.Vector(0,-1,0):n<s&&t?new E.default.Vector(0,1,0):new E.default.Vector(_*p,d,x*p),this.vertexNormals.push(w),this.uvs.push(g,m)}}var S=0;if(a){for(u=0;u<i;++u){var M=(u+1)%i;this.faces.push([S+u,S+i+M,S+i+u])}S+=2*i}for(s=0;s<n;++s){for(l=0;l<i;++l){var T=(l+1)%i;this.faces.push([S+l,S+T,S+i+T]),this.faces.push([S+l,S+i+T,S+i+l])}S+=i}if(o)for(S+=i,l=0;l<i;++l)this.faces.push([S+l,S+(l+1)%i,S+i])}E.default.prototype.cylinder=function(e,t,r,i,n,a){this._assert3d("cylinder"),E.default._validateParameters("cylinder",arguments),void 0===e&&(e=50),void 0===t&&(t=e),void 0===r&&(r=24),void 0===i&&(i=1),void 0===a&&(a=!0),void 0===n&&(n=!0);var o="cylinder|".concat(r,"|").concat(i,"|").concat(n,"|").concat(a);if(!this._renderer.geometryInHash(o)){var s=new E.default.Geometry(r,i);l.call(s,1,1,1,r,i,n,a),r<=24&&i<=16?s._makeTriangleEdges()._edgesToVertices():this._renderer._doStroke&&console.log("Cannot draw stroke on cylinder objects with more than 24 detailX or 16 detailY"),this._renderer.createBuffers(o,s)}return this._renderer.drawBuffersScaled(o,e,t,e),this},E.default.prototype.cone=function(e,t,r,i,n){this._assert3d("cone"),E.default._validateParameters("cone",arguments),void 0===e&&(e=50),void 0===t&&(t=e),void 0===r&&(r=24),void 0===i&&(i=1),void 0===n&&(n=!0);var a="cone|".concat(r,"|").concat(i,"|").concat(n);if(!this._renderer.geometryInHash(a)){var o=new E.default.Geometry(r,i);l.call(o,1,0,1,r,i,n,!1),r<=24&&i<=16?o._makeTriangleEdges()._edgesToVertices():this._renderer._doStroke&&console.log("Cannot draw stroke on cone objects with more than 24 detailX or 16 detailY"),this._renderer.createBuffers(a,o)}return this._renderer.drawBuffersScaled(a,e,t,e),this},E.default.prototype.ellipsoid=function(e,t,r,i,n){this._assert3d("ellipsoid"),E.default._validateParameters("ellipsoid",arguments),void 0===e&&(e=50),void 0===t&&(t=e),void 0===r&&(r=e),void 0===i&&(i=24),void 0===n&&(n=16);var a="ellipsoid|".concat(i,"|").concat(n);if(!this._renderer.geometryInHash(a)){var o=new E.default.Geometry(i,n,function(){for(var e=0;e<=this.detailY;e++)for(var t=e/this.detailY,r=Math.PI*t-Math.PI/2,i=Math.cos(r),n=Math.sin(r),a=0;a<=this.detailX;a++){var o=a/this.detailX,s=2*Math.PI*o,l=Math.cos(s),u=Math.sin(s),h=new E.default.Vector(i*u,n,i*l);this.vertices.push(h),this.vertexNormals.push(h),this.uvs.push(o,t)}});o.computeFaces(),i<=24&&n<=24?o._makeTriangleEdges()._edgesToVertices():this._renderer._doStroke&&console.log("Cannot draw stroke on ellipsoids with more than 24 detailX or 24 detailY"),this._renderer.createBuffers(a,o)}return this._renderer.drawBuffersScaled(a,e,t,r),this},E.default.prototype.torus=function(e,t,r,i){if(this._assert3d("torus"),E.default._validateParameters("torus",arguments),void 0===e)e=50;else if(!e)return;if(void 0===t)t=10;else if(!t)return;void 0===r&&(r=24),void 0===i&&(i=16);var d=(t/e).toPrecision(4),n="torus|".concat(d,"|").concat(r,"|").concat(i);if(!this._renderer.geometryInHash(n)){var a=new E.default.Geometry(r,i,function(){for(var e=0;e<=this.detailY;e++)for(var t=e/this.detailY,r=2*Math.PI*t,i=Math.cos(r),n=Math.sin(r),a=1+d*i,o=0;o<=this.detailX;o++){var s=o/this.detailX,l=2*Math.PI*s,u=Math.cos(l),h=Math.sin(l),c=new E.default.Vector(a*u,a*h,d*n),f=new E.default.Vector(i*u,i*h,n);this.vertices.push(c),this.vertexNormals.push(f),this.uvs.push(s,t)}});a.computeFaces(),r<=24&&i<=16?a._makeTriangleEdges()._edgesToVertices():this._renderer._doStroke&&console.log("Cannot draw strokes on torus object with more than 24 detailX or 16 detailY"),this._renderer.createBuffers(n,a)}return this._renderer.drawBuffersScaled(n,e,e,e),this},E.default.RendererGL.prototype.point=function(e,t,r){void 0===r&&(r=0);var i=[];return i.push(new E.default.Vector(e,t,r)),this._drawPoints(i,this.immediateMode.buffers.point),this},E.default.RendererGL.prototype.triangle=function(e){var t=e[0],r=e[1],i=e[2],n=e[3],a=e[4],o=e[5];if(!this.geometryInHash("tri")){var s=new E.default.Geometry(1,1,function(){var e=[];e.push(new E.default.Vector(0,0,0)),e.push(new E.default.Vector(0,1,0)),e.push(new E.default.Vector(1,0,0)),this.strokeIndices=[[0,1],[1,2],[2,0]],this.vertices=e,this.faces=[[0,1,2]],this.uvs=[0,0,0,1,1,1]});s._makeTriangleEdges()._edgesToVertices(),s.computeNormals(),this.createBuffers("tri",s)}var l=this.uMVMatrix.copy();try{var u=new E.default.Matrix([i-t,n-r,0,0,a-t,o-r,0,0,0,0,1,0,t,r,0,1]).mult(this.uMVMatrix);this.uMVMatrix=u,this.drawBuffers("tri")}finally{this.uMVMatrix=l}return this},E.default.RendererGL.prototype.ellipse=function(e){this.arc(e[0],e[1],e[2],e[3],0,d.TWO_PI,d.OPEN,e[4])},E.default.RendererGL.prototype.arc=function(e){var t,r=e,i=arguments[1],n=arguments[2],a=arguments[3],o=arguments[4],s=arguments[5],l=arguments[6],u=arguments[7]||25;if(t=Math.abs(s-o)>=d.TWO_PI?"".concat("ellipse","|").concat(u,"|"):"".concat("arc","|").concat(o,"|").concat(s,"|").concat(l,"|").concat(u,"|"),!this.geometryInHash(t)){var h=new E.default.Geometry(u,1,function(){if(this.strokeIndices=[],o.toFixed(10)!==s.toFixed(10)){l!==d.PIE&&void 0!==l||(this.vertices.push(new E.default.Vector(.5,.5,0)),this.uvs.push([.5,.5]));for(var e=0;e<=u;e++){var t=(s-o)*(e/u)+o,r=.5+Math.cos(t)/2,i=.5+Math.sin(t)/2;this.vertices.push(new E.default.Vector(r,i,0)),this.uvs.push([r,i]),e<u-1&&(this.faces.push([0,e+1,e+2]),this.strokeIndices.push([e+1,e+2]))}switch(l){case d.PIE:this.faces.push([0,this.vertices.length-2,this.vertices.length-1]),this.strokeIndices.push([0,1]),this.strokeIndices.push([this.vertices.length-2,this.vertices.length-1]),this.strokeIndices.push([0,this.vertices.length-1]);break;case d.CHORD:this.strokeIndices.push([0,1]),this.strokeIndices.push([0,this.vertices.length-1]);break;case d.OPEN:this.strokeIndices.push([0,1]);break;default:this.faces.push([0,this.vertices.length-2,this.vertices.length-1]),this.strokeIndices.push([this.vertices.length-2,this.vertices.length-1])}}});h.computeNormals(),u<=50?h._makeTriangleEdges()._edgesToVertices(h):this._renderer._doStroke&&console.log("Cannot stroke ${shape} with more than 50 detail"),this.createBuffers(t,h)}var c=this.uMVMatrix.copy();try{this.uMVMatrix.translate([r,i,0]),this.uMVMatrix.scale(n,a,1),this.drawBuffers(t)}finally{this.uMVMatrix=c}return this},E.default.RendererGL.prototype.rect=function(e){var t=this._pInst._glAttributes.perPixelLighting,r=e[0],i=e[1],n=e[2],a=e[3],o=e[4]||(t?1:24),s=e[5]||(t?1:16),l="rect|".concat(o,"|").concat(s);if(!this.geometryInHash(l)){var u=new E.default.Geometry(o,s,function(){for(var e=0;e<=this.detailY;e++)for(var t=e/this.detailY,r=0;r<=this.detailX;r++){var i=r/this.detailX,n=new E.default.Vector(i,t,0);this.vertices.push(n),this.uvs.push(i,t)}0<o&&0<s&&(this.strokeIndices=[[0,o],[o,(o+1)*(s+1)-1],[(o+1)*(s+1)-1,(o+1)*s],[(o+1)*s,0]])});u.computeFaces().computeNormals()._makeTriangleEdges()._edgesToVertices(),this.createBuffers(l,u)}var h=this.uMVMatrix.copy();try{this.uMVMatrix.translate([r,i,0]),this.uMVMatrix.scale(n,a,1),this.drawBuffers(l)}finally{this.uMVMatrix=h}return this},E.default.RendererGL.prototype.quad=function(e,t,r,i,n,a,o,s,l,u,h,c){var f="quad|".concat(e,"|").concat(t,"|").concat(r,"|").concat(i,"|").concat(n,"|").concat(a,"|").concat(o,"|").concat(s,"|").concat(l,"|").concat(u,"|").concat(h,"|").concat(c);if(!this.geometryInHash(f)){var d=new E.default.Geometry(2,2,function(){this.vertices.push(new E.default.Vector(e,t,r)),this.vertices.push(new E.default.Vector(i,n,a)),this.vertices.push(new E.default.Vector(o,s,l)),this.vertices.push(new E.default.Vector(u,h,c)),this.uvs.push(0,0,1,0,1,1,0,1),this.strokeIndices=[[0,1],[1,2],[2,3],[3,0]]});d.computeNormals()._makeTriangleEdges()._edgesToVertices(),d.faces=[[0,1,2],[2,3,0]],this.createBuffers(f,d)}return this.drawBuffers(f),this},E.default.RendererGL.prototype.bezier=function(e,t,r,i,n,a,o,s,l,u,h,c){8===arguments.length&&(h=s,u=o,s=a,o=n,n=i,i=r,r=a=l=c=0);var f=this._pInst._bezierDetail||20;this.beginShape();for(var d=0;d<=f;d++){var p=Math.pow(1-d/f,3),m=d/f*3*Math.pow(1-d/f,2),v=3*Math.pow(d/f,2)*(1-d/f),y=Math.pow(d/f,3);this.vertex(e*p+i*m+o*v+u*y,t*p+n*m+s*v+h*y,r*p+a*m+l*v+c*y)}return this.endShape(),this},E.default.RendererGL.prototype.curve=function(e,t,r,i,n,a,o,s,l,u,h,c){8===arguments.length&&(u=o,h=s,o=n,s=i,n=i=r,r=a=l=c=0);var f=this._pInst._curveDetail;this.beginShape();for(var d=0;d<=f;d++){var p=.5*Math.pow(d/f,3),m=.5*Math.pow(d/f,2),v=d/f*.5,y=p*(3*i-e-3*o+u)+m*(2*e-5*i+4*o-u)+v*(-e+o)+2*i*.5,g=p*(3*n-t-3*s+h)+m*(2*t-5*n+4*s-h)+v*(-t+s)+2*n*.5,b=p*(3*a-r-3*l+c)+m*(2*r-5*a+4*l-c)+v*(-r+l)+2*a*.5;this.vertex(y,g,b)}return this.endShape(),this},E.default.RendererGL.prototype.line=function(){return 6===arguments.length?(this.beginShape(d.LINES),this.vertex(arguments.length<=0?void 0:arguments[0],arguments.length<=1?void 0:arguments[1],arguments.length<=2?void 0:arguments[2]),this.vertex(arguments.length<=3?void 0:arguments[3],arguments.length<=4?void 0:arguments[4],arguments.length<=5?void 0:arguments[5]),this.endShape()):4===arguments.length&&(this.beginShape(d.LINES),this.vertex(arguments.length<=0?void 0:arguments[0],arguments.length<=1?void 0:arguments[1],0),this.vertex(arguments.length<=2?void 0:arguments[2],arguments.length<=3?void 0:arguments[3],0),this.endShape()),this},E.default.RendererGL.prototype.bezierVertex=function(){if(0===this.immediateMode._bezierVertex.length)throw Error("vertex() must be used once before calling bezierVertex()");var e,t,r,i,n,a=[],o=[],s=[],l=arguments.length;if((e=0)===this._lookUpTableBezier.length||this._lutBezierDetail!==this._pInst._curveDetail){this._lookUpTableBezier=[],this._lutBezierDetail=this._pInst._curveDetail;for(var u=1/this._lutBezierDetail,h=0,c=1,f=0;h<1;){if(e=parseFloat(h.toFixed(6)),this._lookUpTableBezier[f]=this._bezierCoefficients(e),c.toFixed(6)===u.toFixed(6)){e=parseFloat(c.toFixed(6))+parseFloat(h.toFixed(6)),++f,this._lookUpTableBezier[f]=this._bezierCoefficients(e);break}h+=u,c-=u,++f}}var d=this._lookUpTableBezier.length;if(6===l){for(this.isBezier=!0,a=[this.immediateMode._bezierVertex[0],arguments.length<=0?void 0:arguments[0],arguments.length<=2?void 0:arguments[2],arguments.length<=4?void 0:arguments[4]],o=[this.immediateMode._bezierVertex[1],arguments.length<=1?void 0:arguments[1],arguments.length<=3?void 0:arguments[3],arguments.length<=5?void 0:arguments[5]],n=0;n<d;n++)t=a[0]*this._lookUpTableBezier[n][0]+a[1]*this._lookUpTableBezier[n][1]+a[2]*this._lookUpTableBezier[n][2]+a[3]*this._lookUpTableBezier[n][3],r=o[0]*this._lookUpTableBezier[n][0]+o[1]*this._lookUpTableBezier[n][1]+o[2]*this._lookUpTableBezier[n][2]+o[3]*this._lookUpTableBezier[n][3],this.vertex(t,r);this.immediateMode._bezierVertex[0]=arguments.length<=4?void 0:arguments[4],this.immediateMode._bezierVertex[1]=arguments.length<=5?void 0:arguments[5]}else if(9===l){for(this.isBezier=!0,a=[this.immediateMode._bezierVertex[0],arguments.length<=0?void 0:arguments[0],arguments.length<=3?void 0:arguments[3],arguments.length<=6?void 0:arguments[6]],o=[this.immediateMode._bezierVertex[1],arguments.length<=1?void 0:arguments[1],arguments.length<=4?void 0:arguments[4],arguments.length<=7?void 0:arguments[7]],s=[this.immediateMode._bezierVertex[2],arguments.length<=2?void 0:arguments[2],arguments.length<=5?void 0:arguments[5],arguments.length<=8?void 0:arguments[8]],n=0;n<d;n++)t=a[0]*this._lookUpTableBezier[n][0]+a[1]*this._lookUpTableBezier[n][1]+a[2]*this._lookUpTableBezier[n][2]+a[3]*this._lookUpTableBezier[n][3],r=o[0]*this._lookUpTableBezier[n][0]+o[1]*this._lookUpTableBezier[n][1]+o[2]*this._lookUpTableBezier[n][2]+o[3]*this._lookUpTableBezier[n][3],i=s[0]*this._lookUpTableBezier[n][0]+s[1]*this._lookUpTableBezier[n][1]+s[2]*this._lookUpTableBezier[n][2]+s[3]*this._lookUpTableBezier[n][3],this.vertex(t,r,i);this.immediateMode._bezierVertex[0]=arguments.length<=6?void 0:arguments[6],this.immediateMode._bezierVertex[1]=arguments.length<=7?void 0:arguments[7],this.immediateMode._bezierVertex[2]=arguments.length<=8?void 0:arguments[8]}},E.default.RendererGL.prototype.quadraticVertex=function(){if(0===this.immediateMode._quadraticVertex.length)throw Error("vertex() must be used once before calling quadraticVertex()");var e,t,r,i,n,a=[],o=[],s=[],l=arguments.length;if((e=0)===this._lookUpTableQuadratic.length||this._lutQuadraticDetail!==this._pInst._curveDetail){this._lookUpTableQuadratic=[],this._lutQuadraticDetail=this._pInst._curveDetail;for(var u=1/this._lutQuadraticDetail,h=0,c=1,f=0;h<1;){if(e=parseFloat(h.toFixed(6)),this._lookUpTableQuadratic[f]=this._quadraticCoefficients(e),c.toFixed(6)===u.toFixed(6)){e=parseFloat(c.toFixed(6))+parseFloat(h.toFixed(6)),++f,this._lookUpTableQuadratic[f]=this._quadraticCoefficients(e);break}h+=u,c-=u,++f}}var d=this._lookUpTableQuadratic.length;if(4===l){for(this.isQuadratic=!0,a=[this.immediateMode._quadraticVertex[0],arguments.length<=0?void 0:arguments[0],arguments.length<=2?void 0:arguments[2]],o=[this.immediateMode._quadraticVertex[1],arguments.length<=1?void 0:arguments[1],arguments.length<=3?void 0:arguments[3]],n=0;n<d;n++)t=a[0]*this._lookUpTableQuadratic[n][0]+a[1]*this._lookUpTableQuadratic[n][1]+a[2]*this._lookUpTableQuadratic[n][2],r=o[0]*this._lookUpTableQuadratic[n][0]+o[1]*this._lookUpTableQuadratic[n][1]+o[2]*this._lookUpTableQuadratic[n][2],this.vertex(t,r);this.immediateMode._quadraticVertex[0]=arguments.length<=2?void 0:arguments[2],this.immediateMode._quadraticVertex[1]=arguments.length<=3?void 0:arguments[3]}else if(6===l){for(this.isQuadratic=!0,a=[this.immediateMode._quadraticVertex[0],arguments.length<=0?void 0:arguments[0],arguments.length<=3?void 0:arguments[3]],o=[this.immediateMode._quadraticVertex[1],arguments.length<=1?void 0:arguments[1],arguments.length<=4?void 0:arguments[4]],s=[this.immediateMode._quadraticVertex[2],arguments.length<=2?void 0:arguments[2],arguments.length<=5?void 0:arguments[5]],n=0;n<d;n++)t=a[0]*this._lookUpTableQuadratic[n][0]+a[1]*this._lookUpTableQuadratic[n][1]+a[2]*this._lookUpTableQuadratic[n][2],r=o[0]*this._lookUpTableQuadratic[n][0]+o[1]*this._lookUpTableQuadratic[n][1]+o[2]*this._lookUpTableQuadratic[n][2],i=s[0]*this._lookUpTableQuadratic[n][0]+s[1]*this._lookUpTableQuadratic[n][1]+s[2]*this._lookUpTableQuadratic[n][2],this.vertex(t,r,i);this.immediateMode._quadraticVertex[0]=arguments.length<=3?void 0:arguments[3],this.immediateMode._quadraticVertex[1]=arguments.length<=4?void 0:arguments[4],this.immediateMode._quadraticVertex[2]=arguments.length<=5?void 0:arguments[5]}},E.default.RendererGL.prototype.curveVertex=function(){var e,t,r,i,n,a=[],o=[],s=[],l=arguments.length;if((e=0)===this._lookUpTableBezier.length||this._lutBezierDetail!==this._pInst._curveDetail){this._lookUpTableBezier=[],this._lutBezierDetail=this._pInst._curveDetail;for(var u=1/this._lutBezierDetail,h=0,c=1,f=0;h<1;){if(e=parseFloat(h.toFixed(6)),this._lookUpTableBezier[f]=this._bezierCoefficients(e),c.toFixed(6)===u.toFixed(6)){e=parseFloat(c.toFixed(6))+parseFloat(h.toFixed(6)),++f,this._lookUpTableBezier[f]=this._bezierCoefficients(e);break}h+=u,c-=u,++f}}var d=this._lookUpTableBezier.length;if(2===l){if(this.immediateMode._curveVertex.push(arguments.length<=0?void 0:arguments[0]),this.immediateMode._curveVertex.push(arguments.length<=1?void 0:arguments[1]),8===this.immediateMode._curveVertex.length){for(this.isCurve=!0,a=this._bezierToCatmull([this.immediateMode._curveVertex[0],this.immediateMode._curveVertex[2],this.immediateMode._curveVertex[4],this.immediateMode._curveVertex[6]]),o=this._bezierToCatmull([this.immediateMode._curveVertex[1],this.immediateMode._curveVertex[3],this.immediateMode._curveVertex[5],this.immediateMode._curveVertex[7]]),n=0;n<d;n++)t=a[0]*this._lookUpTableBezier[n][0]+a[1]*this._lookUpTableBezier[n][1]+a[2]*this._lookUpTableBezier[n][2]+a[3]*this._lookUpTableBezier[n][3],r=o[0]*this._lookUpTableBezier[n][0]+o[1]*this._lookUpTableBezier[n][1]+o[2]*this._lookUpTableBezier[n][2]+o[3]*this._lookUpTableBezier[n][3],this.vertex(t,r);for(n=0;n<l;n++)this.immediateMode._curveVertex.shift()}}else if(3===l&&(this.immediateMode._curveVertex.push(arguments.length<=0?void 0:arguments[0]),this.immediateMode._curveVertex.push(arguments.length<=1?void 0:arguments[1]),this.immediateMode._curveVertex.push(arguments.length<=2?void 0:arguments[2]),12===this.immediateMode._curveVertex.length)){for(this.isCurve=!0,a=this._bezierToCatmull([this.immediateMode._curveVertex[0],this.immediateMode._curveVertex[3],this.immediateMode._curveVertex[6],this.immediateMode._curveVertex[9]]),o=this._bezierToCatmull([this.immediateMode._curveVertex[1],this.immediateMode._curveVertex[4],this.immediateMode._curveVertex[7],this.immediateMode._curveVertex[10]]),s=this._bezierToCatmull([this.immediateMode._curveVertex[2],this.immediateMode._curveVertex[5],this.immediateMode._curveVertex[8],this.immediateMode._curveVertex[11]]),n=0;n<d;n++)t=a[0]*this._lookUpTableBezier[n][0]+a[1]*this._lookUpTableBezier[n][1]+a[2]*this._lookUpTableBezier[n][2]+a[3]*this._lookUpTableBezier[n][3],r=o[0]*this._lookUpTableBezier[n][0]+o[1]*this._lookUpTableBezier[n][1]+o[2]*this._lookUpTableBezier[n][2]+o[3]*this._lookUpTableBezier[n][3],i=s[0]*this._lookUpTableBezier[n][0]+s[1]*this._lookUpTableBezier[n][1]+s[2]*this._lookUpTableBezier[n][2]+s[3]*this._lookUpTableBezier[n][3],this.vertex(t,r,i);for(n=0;n<l;n++)this.immediateMode._curveVertex.shift()}},E.default.RendererGL.prototype.image=function(e,t,r,i,n,a,o,s,l){this._isErasing&&this.blendMode(this._cachedBlendMode),this._pInst.push(),this._pInst.noLights(),this._pInst.texture(e),this._pInst.textureMode(d.NORMAL);var u=0;t<=e.width&&(u=t/e.width);var h=1;t+i<=e.width&&(h=(t+i)/e.width);var c=0;r<=e.height&&(c=r/e.height);var f=1;r+n<=e.height&&(f=(r+n)/e.height),this.beginShape(),this.vertex(a,o,0,u,c),this.vertex(a+s,o,0,h,c),this.vertex(a+s,o+l,0,h,f),this.vertex(a,o+l,0,u,f),this.endShape(d.CLOSE),this._pInst.pop(),this._isErasing&&this.blendMode(d.REMOVE)};var n=E.default;r.default=n},{"../core/constants":26,"../core/main":36,"./p5.Geometry":85}],80:[function(e,t,r){"use strict";function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,f=(i=e("../core/main"))&&i.__esModule?i:{default:i},n=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var a=i?Object.getOwnPropertyDescriptor(e,n):null;a&&(a.get||a.set)?Object.defineProperty(r,n,a):r[n]=e[n]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}f.default.prototype.orbitControl=function(e,t,r){if(this._assert3d("orbitControl"),f.default._validateParameters("orbitControl",arguments),this.mouseX<this.width&&0<this.mouseX&&this.mouseY<this.height&&0<this.mouseY){var i=this._renderer._curCamera;void 0===e&&(e=1),void 0===t&&(t=e),void 0===r&&(r=.5),!0!==this.contextMenuDisabled&&(this.canvas.oncontextmenu=function(){return!1},this._setProperty("contextMenuDisabled",!0)),!0!==this.wheelDefaultDisabled&&(this.canvas.onwheel=function(){return!1},this._setProperty("wheelDefaultDisabled",!0));var n=this.height<this.width?this.height:this.width;if(this._mouseWheelDeltaY!==this._pmouseWheelDeltaY&&(0<this._mouseWheelDeltaY?this._renderer._curCamera._orbit(0,0,r*n):this._renderer._curCamera._orbit(0,0,-r*n)),this.mouseIsPressed)if(this.mouseButton===this.LEFT){var a=-e*(this.mouseX-this.pmouseX)/n,o=t*(this.mouseY-this.pmouseY)/n;this._renderer._curCamera._orbit(a,o,0)}else if(this.mouseButton===this.RIGHT){var s=i._getLocalAxes(),l=Math.sqrt(s.x[0]*s.x[0]+s.x[2]*s.x[2]);0!==l&&(s.x[0]/=l,s.x[2]/=l);var u=Math.sqrt(s.y[0]*s.y[0]+s.y[2]*s.y[2]);0!==u&&(s.y[0]/=u,s.y[2]/=u);var h=-1*e*(this.mouseX-this.pmouseX),c=-1*t*(this.mouseY-this.pmouseY);i.setPosition(i.eyeX+h*s.x[0]+c*s.z[0],i.eyeY,i.eyeZ+h*s.x[2]+c*s.z[2])}return this}},f.default.prototype.debugMode=function(){this._assert3d("debugMode");for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];f.default._validateParameters("debugMode",t);for(var i=this._registeredMethods.post.length-1;0<=i;i--)this._registeredMethods.post[i].toString()!==this._grid().toString()&&this._registeredMethods.post[i].toString()!==this._axesIcon().toString()||this._registeredMethods.post.splice(i,1);t[0]===n.GRID?this.registerMethod("post",this._grid.call(this,t[1],t[2],t[3],t[4],t[5])):t[0]===n.AXES?this.registerMethod("post",this._axesIcon.call(this,t[1],t[2],t[3],t[4])):(this.registerMethod("post",this._grid.call(this,t[0],t[1],t[2],t[3],t[4])),this.registerMethod("post",this._axesIcon.call(this,t[5],t[6],t[7],t[8])))},f.default.prototype.noDebugMode=function(){this._assert3d("noDebugMode");for(var e=this._registeredMethods.post.length-1;0<=e;e--)this._registeredMethods.post[e].toString()!==this._grid().toString()&&this._registeredMethods.post[e].toString()!==this._axesIcon().toString()||this._registeredMethods.post.splice(e,1)},f.default.prototype._grid=function(e,r,i,n,a){void 0===e&&(e=this.width/2),void 0===r&&(r=Math.round(e/30)<4?4:Math.round(e/30)),void 0===i&&(i=0),void 0===n&&(n=0),void 0===a&&(a=0);var o=e/r,s=e/2;return function(){this.push(),this.stroke(255*this._renderer.curStrokeColor[0],255*this._renderer.curStrokeColor[1],255*this._renderer.curStrokeColor[2]),this._renderer.uMVMatrix.set(this._renderer._curCamera.cameraMatrix.mat4[0],this._renderer._curCamera.cameraMatrix.mat4[1],this._renderer._curCamera.cameraMatrix.mat4[2],this._renderer._curCamera.cameraMatrix.mat4[3],this._renderer._curCamera.cameraMatrix.mat4[4],this._renderer._curCamera.cameraMatrix.mat4[5],this._renderer._curCamera.cameraMatrix.mat4[6],this._renderer._curCamera.cameraMatrix.mat4[7],this._renderer._curCamera.cameraMatrix.mat4[8],this._renderer._curCamera.cameraMatrix.mat4[9],this._renderer._curCamera.cameraMatrix.mat4[10],this._renderer._curCamera.cameraMatrix.mat4[11],this._renderer._curCamera.cameraMatrix.mat4[12],this._renderer._curCamera.cameraMatrix.mat4[13],this._renderer._curCamera.cameraMatrix.mat4[14],this._renderer._curCamera.cameraMatrix.mat4[15]);for(var e=0;e<=r;e++)this.beginShape(this.LINES),this.vertex(-s+i,n,e*o-s+a),this.vertex(+s+i,n,e*o-s+a),this.endShape();for(var t=0;t<=r;t++)this.beginShape(this.LINES),this.vertex(t*o-s+i,n,-s+a),this.vertex(t*o-s+i,n,+s+a),this.endShape();this.pop()}},f.default.prototype._axesIcon=function(e,t,r,i){return void 0===e&&(e=40<this.width/20?this.width/20:40),void 0===t&&(t=-this.width/4),void 0===r&&(r=t),void 0===i&&(i=t),function(){this.push(),this._renderer.uMVMatrix.set(this._renderer._curCamera.cameraMatrix.mat4[0],this._renderer._curCamera.cameraMatrix.mat4[1],this._renderer._curCamera.cameraMatrix.mat4[2],this._renderer._curCamera.cameraMatrix.mat4[3],this._renderer._curCamera.cameraMatrix.mat4[4],this._renderer._curCamera.cameraMatrix.mat4[5],this._renderer._curCamera.cameraMatrix.mat4[6],this._renderer._curCamera.cameraMatrix.mat4[7],this._renderer._curCamera.cameraMatrix.mat4[8],this._renderer._curCamera.cameraMatrix.mat4[9],this._renderer._curCamera.cameraMatrix.mat4[10],this._renderer._curCamera.cameraMatrix.mat4[11],this._renderer._curCamera.cameraMatrix.mat4[12],this._renderer._curCamera.cameraMatrix.mat4[13],this._renderer._curCamera.cameraMatrix.mat4[14],this._renderer._curCamera.cameraMatrix.mat4[15]),this.strokeWeight(2),this.stroke(255,0,0),this.beginShape(this.LINES),this.vertex(t,r,i),this.vertex(t+e,r,i),this.endShape(),this.stroke(0,255,0),this.beginShape(this.LINES),this.vertex(t,r,i),this.vertex(t,r+e,i),this.endShape(),this.stroke(0,0,255),this.beginShape(this.LINES),this.vertex(t,r,i),this.vertex(t,r,i+e),this.endShape(),this.pop()}};var a=f.default;r.default=a},{"../core/constants":26,"../core/main":36}],81:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,m=(i=e("../core/main"))&&i.__esModule?i:{default:i};m.default.prototype.ambientLight=function(e,t,r,i){this._assert3d("ambientLight"),m.default._validateParameters("ambientLight",arguments);var n=this.color.apply(this,arguments);return this._renderer.ambientLightColors.push(n._array[0],n._array[1],n._array[2]),this._renderer._enableLighting=!0,this},m.default.prototype.specularColor=function(e,t,r){this._assert3d("specularColor"),m.default._validateParameters("specularColor",arguments);var i=this.color.apply(this,arguments);return this._renderer.specularColors=[i._array[0],i._array[1],i._array[2]],this},m.default.prototype.directionalLight=function(e,t,r,i,n,a){var o,s,l,u;this._assert3d("directionalLight"),m.default._validateParameters("directionalLight",arguments),o=e instanceof m.default.Color?e:this.color(e,t,r);var h=arguments[arguments.length-1];u="number"==typeof h?(s=arguments[arguments.length-3],l=arguments[arguments.length-2],arguments[arguments.length-1]):(s=h.x,l=h.y,h.z);var c=Math.sqrt(s*s+l*l+u*u);return this._renderer.directionalLightDirections.push(s/c,l/c,u/c),this._renderer.directionalLightDiffuseColors.push(o._array[0],o._array[1],o._array[2]),Array.prototype.push.apply(this._renderer.directionalLightSpecularColors,this._renderer.specularColors),this._renderer._enableLighting=!0,this},m.default.prototype.pointLight=function(e,t,r,i,n,a){var o,s,l,u;this._assert3d("pointLight"),m.default._validateParameters("pointLight",arguments),o=e instanceof m.default.Color?e:this.color(e,t,r);var h=arguments[arguments.length-1];return u="number"==typeof h?(s=arguments[arguments.length-3],l=arguments[arguments.length-2],arguments[arguments.length-1]):(s=h.x,l=h.y,h.z),this._renderer.pointLightPositions.push(s,l,u),this._renderer.pointLightDiffuseColors.push(o._array[0],o._array[1],o._array[2]),Array.prototype.push.apply(this._renderer.pointLightSpecularColors,this._renderer.specularColors),this._renderer._enableLighting=!0,this},m.default.prototype.lights=function(){return this._assert3d("lights"),this.ambientLight(128,128,128),this.directionalLight(128,128,128,0,0,-1),this},m.default.prototype.lightFalloff=function(e,t,r){return this._assert3d("lightFalloff"),m.default._validateParameters("lightFalloff",arguments),e<0&&(e=0,console.warn("Value of constant argument in lightFalloff() should be never be negative. Set to 0.")),t<0&&(t=0,console.warn("Value of linear argument in lightFalloff() should be never be negative. Set to 0.")),r<0&&(r=0,console.warn("Value of quadratic argument in lightFalloff() should be never be negative. Set to 0.")),0===e&&0===t&&0===r&&(e=1,console.warn("Either one of the three arguments in lightFalloff() should be greater than zero. Set constant argument to 1.")),this._renderer.constantAttenuation=e,this._renderer.linearAttenuation=t,this._renderer.quadraticAttenuation=r,this},m.default.prototype.spotLight=function(e,t,r,i,n,a,o,s,l,u,h){var c,f,d;this._assert3d("spotLight"),m.default._validateParameters("spotLight",arguments);var p=arguments.length;switch(p){case 11:case 10:c=this.color(e,t,r),f=new m.default.Vector(i,n,a),d=new m.default.Vector(o,s,l);break;case 9:e instanceof m.default.Color?(c=e,f=new m.default.Vector(t,r,i),d=new m.default.Vector(n,a,o),u=s,h=l):i instanceof m.default.Vector?(c=this.color(e,t,r),f=i,d=new m.default.Vector(n,a,o),u=s,h=l):o instanceof m.default.Vector?(c=this.color(e,t,r),f=new m.default.Vector(i,n,a),d=o,u=s,h=l):(c=this.color(e,t,r),f=new m.default.Vector(i,n,a),d=new m.default.Vector(o,s,l));break;case 8:u=(d=e instanceof m.default.Color?(c=e,f=new m.default.Vector(t,r,i),new m.default.Vector(n,a,o)):i instanceof m.default.Vector?(c=this.color(e,t,r),f=i,new m.default.Vector(n,a,o)):(c=this.color(e,t,r),f=new m.default.Vector(i,n,a),o),s);break;case 7:e instanceof m.default.Color&&t instanceof m.default.Vector?(c=e,f=t,d=new m.default.Vector(r,i,n),u=a,h=o):e instanceof m.default.Color&&n instanceof m.default.Vector?(c=e,f=new m.default.Vector(t,r,i),d=n,u=a,h=o):i instanceof m.default.Vector&&n instanceof m.default.Vector?(c=this.color(e,t,r),f=i,d=n,u=a,h=o):d=e instanceof m.default.Color?(c=e,f=new m.default.Vector(t,r,i),new m.default.Vector(n,a,o)):i instanceof m.default.Vector?(c=this.color(e,t,r),f=i,new m.default.Vector(n,a,o)):(c=this.color(e,t,r),f=new m.default.Vector(i,n,a),o);break;case 6:i instanceof m.default.Vector&&n instanceof m.default.Vector?(c=this.color(e,t,r),f=i,d=n,u=a):e instanceof m.default.Color&&n instanceof m.default.Vector?(c=e,f=new m.default.Vector(t,r,i),d=n,u=a):e instanceof m.default.Color&&t instanceof m.default.Vector&&(c=e,f=t,d=new m.default.Vector(r,i,n),u=a);break;case 5:e instanceof m.default.Color&&t instanceof m.default.Vector&&r instanceof m.default.Vector?(c=e,f=t,d=r,u=i,h=n):i instanceof m.default.Vector&&n instanceof m.default.Vector?(c=this.color(e,t,r),f=i,d=n):e instanceof m.default.Color&&n instanceof m.default.Vector?(c=e,f=new m.default.Vector(t,r,i),d=n):e instanceof m.default.Color&&t instanceof m.default.Vector&&(c=e,f=t,d=new m.default.Vector(r,i,n));break;case 4:c=e,f=t,d=r,u=i;break;case 3:c=e,f=t,d=r;break;default:return console.warn("Sorry, input for spotlight() is not in prescribed format. Too ".concat(p<3?"few":"many"," arguments were provided")),this}return this._renderer.spotLightDiffuseColors.push(c._array[0],c._array[1],c._array[2]),Array.prototype.push.apply(this._renderer.spotLightSpecularColors,this._renderer.specularColors),this._renderer.spotLightPositions.push(f.x,f.y,f.z),d.normalize(),this._renderer.spotLightDirections.push(d.x,d.y,d.z),void 0===u&&(u=Math.PI/3),void 0!==h&&h<1?(h=1,console.warn("Value of concentration needs to be greater than 1. Setting it to 1")):void 0===h&&(h=100),u=this._renderer._pInst._toRadians(u),this._renderer.spotLightAngle.push(Math.cos(u)),this._renderer.spotLightConc.push(h),this._renderer._enableLighting=!0,this},m.default.prototype.noLights=function(){return this._assert3d("noLights"),m.default._validateParameters("noLights",arguments),this._renderer._enableLighting=!1,this._renderer.ambientLightColors.length=0,this._renderer.specularColors=[1,1,1],this._renderer.directionalLightDirections.length=0,this._renderer.directionalLightDiffuseColors.length=0,this._renderer.directionalLightSpecularColors.length=0,this._renderer.pointLightPositions.length=0,this._renderer.pointLightDiffuseColors.length=0,this._renderer.pointLightSpecularColors.length=0,this._renderer.spotLightPositions.length=0,this._renderer.spotLightDirections.length=0,this._renderer.spotLightDiffuseColors.length=0,this._renderer.spotLightSpecularColors.length=0,this._renderer.spotLightAngle.length=0,this._renderer.spotLightConc.length=0,this._renderer.constantAttenuation=1,this._renderer.linearAttenuation=0,this._renderer.quadraticAttenuation=0,this._renderer._useShininess=1,this};var n=m.default;r.default=n},{"../core/main":36}],82:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,S=(i=e("../core/main"))&&i.__esModule?i:{default:i};function s(e,t,r){for(var i=0,n=e.length;i<n;i++)if(e[i]!==t.getUint8(r+i,!1))return!1;return!0}e("./p5.Geometry"),S.default.prototype.loadModel=function(e){var t,r,i;S.default._validateParameters("loadModel",arguments);var n=e.slice(-4);"boolean"==typeof arguments[1]?(t=arguments[1],r=arguments[2],i=arguments[3],void 0!==arguments[4]&&(n=arguments[4])):(t=!1,r=arguments[1],i=arguments[2],void 0!==arguments[3]&&(n=arguments[3]));var a=new S.default.Geometry;a.gid="".concat(e,"|").concat(t);var o=this;return n.match(/\.stl$/i)?this.httpDo(e,"GET","arrayBuffer",function(e){!function(e,t){if(function(e){for(var t=new DataView(e),r=[115,111,108,105,100],i=0;i<5;i++)if(s(r,t,i))return!1;return!0}(t))!function(e,t){for(var r,i,n,a,o,s,l,u=new DataView(t),h=u.getUint32(80,!0),c=!1,f=0;f<70;f++)1129270351===u.getUint32(f,!1)&&82===u.getUint8(f+4)&&61===u.getUint8(f+5)&&(c=!0,a=[],o=u.getUint8(f+6)/255,s=u.getUint8(f+7)/255,l=u.getUint8(f+8)/255);for(var d=0;d<h;d++){var p=84+50*d,m=u.getFloat32(p,!0),v=u.getFloat32(4+p,!0),y=u.getFloat32(8+p,!0);if(c){var g=u.getUint16(48+p,!0);n=0==(32768&g)?(r=(31&g)/31,i=(g>>5&31)/31,(g>>10&31)/31):(r=o,i=s,l)}for(var b=new S.default.Vector(m,v,y),_=1;_<=3;_++){var x=p+12*_,w=new S.default.Vector(u.getFloat32(x,!0),u.getFloat32(4+x,!0),u.getFloat32(8+x,!0));e.vertices.push(w),e.vertexNormals.push(b),c&&a.push(r,i,n)}e.faces.push([3*d,3*d+1,3*d+2]),e.uvs.push([0,0],[0,0],[0,0])}}(e,t);else{var r=new DataView(t);if(!("TextDecoder"in window))return console.warn("Sorry, ASCII STL loading only works in browsers that support TextDecoder (https://caniuse.com/#feat=textencoder)");var i=new TextDecoder("utf-8").decode(r).split("\n");!function(e,t){for(var r,i,n="",a=[],o=0;o<t.length;++o){for(var s=t[o].trim(),l=s.split(" "),u=0;u<l.length;++u)""===l[u]&&l.splice(u,1);if(0!==l.length)switch(n){case"":if("solid"!==l[0])return console.error(s),console.error('Invalid state "'.concat(l[0],'", should be "solid"'));n="solid";break;case"solid":if("facet"!==l[0]||"normal"!==l[1])return console.error(s),console.error('Invalid state "'.concat(l[0],'", should be "facet normal"'));r=new S.default.Vector(parseFloat(l[2]),parseFloat(l[3]),parseFloat(l[4])),e.vertexNormals.push(r,r,r),n="facet normal";break;case"facet normal":if("outer"!==l[0]||"loop"!==l[1])return console.error(s),console.error('Invalid state "'.concat(l[0],'", should be "outer loop"'));n="vertex";break;case"vertex":if("vertex"===l[0])i=new S.default.Vector(parseFloat(l[1]),parseFloat(l[2]),parseFloat(l[3])),e.vertices.push(i),e.uvs.push([0,0]),a.push(e.vertices.indexOf(i));else{if("endloop"!==l[0])return console.error(s),console.error('Invalid state "'.concat(l[0],'", should be "vertex" or "endloop"'));e.faces.push(a),a=[],n="endloop"}break;case"endloop":if("endfacet"!==l[0])return console.error(s),console.error('Invalid state "'.concat(l[0],'", should be "endfacet"'));n="endfacet";break;case"endfacet":if("endsolid"!==l[0]){if("facet"!==l[0]||"normal"!==l[1])return console.error(s),console.error('Invalid state "'.concat(l[0],'", should be "endsolid" or "facet normal"'));r=new S.default.Vector(parseFloat(l[2]),parseFloat(l[3]),parseFloat(l[4])),e.vertexNormals.push(r,r,r),n="facet normal"}break;default:console.error('Invalid state "'.concat(n,'"'))}}}(e,i)}}(a,e),t&&a.normalize(),o._decrementPreload(),"function"==typeof r&&r(a)},i):n.match(/\.obj$/i)?this.loadStrings(e,function(e){!function(e,t){for(var r={v:[],vt:[],vn:[]},i={},n=0;n<t.length;++n){var a=t[n].trim().split(/\b\s+/);if(0<a.length)if("v"===a[0]||"vn"===a[0]){var o=new S.default.Vector(parseFloat(a[1]),parseFloat(a[2]),parseFloat(a[3]));r[a[0]].push(o)}else if("vt"===a[0]){var s=[parseFloat(a[1]),parseFloat(a[2])];r[a[0]].push(s)}else if("f"===a[0])for(var l=3;l<a.length;++l){for(var u=[],h=[1,l-1,l],c=0;c<h.length;++c){var f=a[h[c]],d=0;if(void 0!==i[f])d=i[f];else{for(var p=f.split("/"),m=0;m<p.length;m++)p[m]=parseInt(p[m])-1;d=i[f]=e.vertices.length,e.vertices.push(r.v[p[0]].copy()),r.vt[p[1]]?e.uvs.push(r.vt[p[1]].slice()):e.uvs.push([0,0]),r.vn[p[2]]&&e.vertexNormals.push(r.vn[p[2]].copy())}u.push(d)}u[0]!==u[1]&&u[0]!==u[2]&&u[1]!==u[2]&&e.faces.push(u)}}0===e.vertexNormals.length&&e.computeNormals()}(a,e),t&&a.normalize(),o._decrementPreload(),"function"==typeof r&&r(a)},i):(S.default._friendlyFileLoadError(3,e),i?i():console.error("Sorry, the file type is invalid. Only OBJ and STL files are supported.")),a},S.default.prototype.model=function(e){this._assert3d("model"),S.default._validateParameters("model",arguments),0<e.vertices.length&&(this._renderer.geometryInHash(e.gid)||(e._makeTriangleEdges()._edgesToVertices(),this._renderer.createBuffers(e.gid,e)),this._renderer.drawBuffers(e.gid))};var n=S.default;r.default=n},{"../core/main":36,"./p5.Geometry":85}],83:[function(e,t,r){"use strict";function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,u=(i=e("../core/main"))&&i.__esModule?i:{default:i},n=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var a=i?Object.getOwnPropertyDescriptor(e,n):null;a&&(a.get||a.set)?Object.defineProperty(r,n,a):r[n]=e[n]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}e("./p5.Texture"),u.default.prototype.loadShader=function(e,t,r,i){u.default._validateParameters("loadShader",arguments),i=i||console.error;function n(){o._decrementPreload(),r&&r(a)}var a=new u.default.Shader,o=this,s=!1,l=!1;return this.loadStrings(e,function(e){a._vertSrc=e.join("\n"),l=!0,s&&n()},i),this.loadStrings(t,function(e){a._fragSrc=e.join("\n"),s=!0,l&&n()},i),a},u.default.prototype.createShader=function(e,t){return this._assert3d("createShader"),u.default._validateParameters("createShader",arguments),new u.default.Shader(this._renderer,e,t)},u.default.prototype.shader=function(e){return this._assert3d("shader"),u.default._validateParameters("shader",arguments),void 0===e._renderer&&(e._renderer=this._renderer),e.isStrokeShader()?this._renderer.userStrokeShader=e:(this._renderer.userFillShader=e,this._renderer._useNormalMaterial=!1),e.init(),this},u.default.prototype.resetShader=function(){return this._renderer.userFillShader=this._renderer.userStrokeShader=null,this},u.default.prototype.normalMaterial=function(){this._assert3d("normalMaterial");for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return u.default._validateParameters("normalMaterial",t),this._renderer.drawMode=n.FILL,this._renderer._useSpecularMaterial=!1,this._renderer._useEmissiveMaterial=!1,this._renderer._useNormalMaterial=!0,this._renderer.curFillColor=[1,1,1,1],this._renderer._setProperty("_doFill",!0),this.noStroke(),this},u.default.prototype.texture=function(e){return this._assert3d("texture"),u.default._validateParameters("texture",arguments),e.gifProperties&&e._animateGif(this),this._renderer.drawMode=n.TEXTURE,this._renderer._useSpecularMaterial=!1,this._renderer._useEmissiveMaterial=!1,this._renderer._useNormalMaterial=!1,this._renderer._tex=e,this._renderer._setProperty("_doFill",!0),this},u.default.prototype.textureMode=function(e){e!==n.IMAGE&&e!==n.NORMAL?console.warn("You tried to set ".concat(e," textureMode only supports IMAGE & NORMAL ")):this._renderer.textureMode=e},u.default.prototype.textureWrap=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:e;this._renderer.textureWrapX=e,this._renderer.textureWrapY=t;for(var r=this._renderer.textures,i=0;i<r.length;i++)r[i].setWrapMode(e,t)},u.default.prototype.ambientMaterial=function(e,t,r){this._assert3d("ambientMaterial"),u.default._validateParameters("ambientMaterial",arguments);var i=u.default.prototype.color.apply(this,arguments);return this._renderer.curFillColor=i._array,this._renderer._useSpecularMaterial=!1,this._renderer._useEmissiveMaterial=!1,this._renderer._useNormalMaterial=!1,this._renderer._enableLighting=!0,this._renderer._tex=null,this},u.default.prototype.emissiveMaterial=function(e,t,r,i){this._assert3d("emissiveMaterial"),u.default._validateParameters("emissiveMaterial",arguments);var n=u.default.prototype.color.apply(this,arguments);return this._renderer.curFillColor=n._array,this._renderer._useSpecularMaterial=!1,this._renderer._useEmissiveMaterial=!0,this._renderer._useNormalMaterial=!1,this._renderer._enableLighting=!0,this._renderer._tex=null,this},u.default.prototype.specularMaterial=function(e,t,r,i){this._assert3d("specularMaterial"),u.default._validateParameters("specularMaterial",arguments);var n=u.default.prototype.color.apply(this,arguments);return this._renderer.curFillColor=n._array,this._renderer._useSpecularMaterial=!0,this._renderer._useEmissiveMaterial=!1,this._renderer._useNormalMaterial=!1,this._renderer._enableLighting=!0,this._renderer._tex=null,this},u.default.prototype.shininess=function(e){return this._assert3d("shininess"),u.default._validateParameters("shininess",arguments),e<1&&(e=1),this._renderer._useShininess=e,this},u.default.RendererGL.prototype._applyColorBlend=function(e){var t=this.GL,r=this.drawMode===n.TEXTURE||e[e.length-1]<1||this._isErasing;return r!==this._isBlending&&(r||this.curBlendMode!==n.BLEND&&this.curBlendMode!==n.ADD?t.enable(t.BLEND):t.disable(t.BLEND),t.depthMask(!0),this._isBlending=r),this._applyBlendMode(),e},u.default.RendererGL.prototype._applyBlendMode=function(){if(this._cachedBlendMode!==this.curBlendMode){var e=this.GL;switch(this.curBlendMode){case n.BLEND:case n.ADD:e.blendEquation(e.FUNC_ADD),e.blendFunc(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA);break;case n.REMOVE:e.blendEquation(e.FUNC_REVERSE_SUBTRACT),e.blendFunc(e.SRC_ALPHA,e.DST_ALPHA);break;case n.MULTIPLY:e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ZERO,e.SRC_COLOR,e.ONE,e.ONE);break;case n.SCREEN:e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE_MINUS_DST_COLOR,e.ONE,e.ONE,e.ONE);break;case n.EXCLUSION:e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE_MINUS_DST_COLOR,e.ONE_MINUS_SRC_COLOR,e.ONE,e.ONE);break;case n.REPLACE:e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ONE,e.ZERO);break;case n.SUBTRACT:e.blendEquationSeparate(e.FUNC_REVERSE_SUBTRACT,e.FUNC_ADD),e.blendFuncSeparate(e.SRC_ALPHA,e.ONE,e.ONE,e.ONE);break;case n.DARKEST:this.blendExt?(e.blendEquationSeparate(this.blendExt.MIN_EXT,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ONE,e.ONE,e.ONE)):console.warn("blendMode(DARKEST) does not work in your browser in WEBGL mode.");break;case n.LIGHTEST:this.blendExt?(e.blendEquationSeparate(this.blendExt.MAX_EXT,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ONE,e.ONE,e.ONE)):console.warn("blendMode(LIGHTEST) does not work in your browser in WEBGL mode.");break;default:console.error("Oops! Somehow RendererGL set curBlendMode to an unsupported mode.")}this._isErasing||(this._cachedBlendMode=this.curBlendMode)}};var a=u.default;r.default=a},{"../core/constants":26,"../core/main":36,"./p5.Texture":92}],84:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,m=(i=e("../core/main"))&&i.__esModule?i:{default:i};m.default.prototype.camera=function(){var e;this._assert3d("camera");for(var t=arguments.length,r=new Array(t),i=0;i<t;i++)r[i]=arguments[i];return m.default._validateParameters("camera",r),(e=this._renderer._curCamera).camera.apply(e,r),this},m.default.prototype.perspective=function(){var e;this._assert3d("perspective");for(var t=arguments.length,r=new Array(t),i=0;i<t;i++)r[i]=arguments[i];return m.default._validateParameters("perspective",r),(e=this._renderer._curCamera).perspective.apply(e,r),this},m.default.prototype.ortho=function(){var e;this._assert3d("ortho");for(var t=arguments.length,r=new Array(t),i=0;i<t;i++)r[i]=arguments[i];return m.default._validateParameters("ortho",r),(e=this._renderer._curCamera).ortho.apply(e,r),this},m.default.prototype.frustum=function(){var e;this._assert3d("frustum");for(var t=arguments.length,r=new Array(t),i=0;i<t;i++)r[i]=arguments[i];return m.default._validateParameters("frustum",r),(e=this._renderer._curCamera).frustum.apply(e,r),this},m.default.prototype.createCamera=function(){this._assert3d("createCamera");var e=new m.default.Camera(this._renderer);return e._computeCameraDefaultSettings(),e._setDefaultCamera(),this._renderer._curCamera=e},m.default.Camera=function(e){this._renderer=e,this.cameraType="default",this.cameraMatrix=new m.default.Matrix,this.projMatrix=new m.default.Matrix},m.default.Camera.prototype.perspective=function(e,t,r,i){this.cameraType=0<arguments.length?"custom":"default",void 0===e?(e=this.defaultCameraFOV,this.cameraFOV=e):this.cameraFOV=this._renderer._pInst._toRadians(e),void 0===t&&(t=this.defaultAspectRatio),void 0===r&&(r=this.defaultCameraNear),void 0===i&&(i=this.defaultCameraFar),r<=1e-4&&(r=.01,console.log("Avoid perspective near plane values close to or below 0. Setting value to 0.01.")),i<r&&console.log("Perspective far plane value is less than near plane value. Nothing will be shown."),this.aspectRatio=t,this.cameraNear=r,this.cameraFar=i,this.projMatrix=m.default.Matrix.identity();var n=1/Math.tan(this.cameraFOV/2),a=1/(this.cameraNear-this.cameraFar);this.projMatrix.set(n/t,0,0,0,0,-n,0,0,0,0,(i+r)*a,-1,0,0,2*i*r*a,0),this._isActive()&&this._renderer.uPMatrix.set(this.projMatrix.mat4[0],this.projMatrix.mat4[1],this.projMatrix.mat4[2],this.projMatrix.mat4[3],this.projMatrix.mat4[4],this.projMatrix.mat4[5],this.projMatrix.mat4[6],this.projMatrix.mat4[7],this.projMatrix.mat4[8],this.projMatrix.mat4[9],this.projMatrix.mat4[10],this.projMatrix.mat4[11],this.projMatrix.mat4[12],this.projMatrix.mat4[13],this.projMatrix.mat4[14],this.projMatrix.mat4[15])},m.default.Camera.prototype.ortho=function(e,t,r,i,n,a){void 0===e&&(e=-this._renderer.width/2),void 0===t&&(t=this._renderer.width/2),void 0===r&&(r=-this._renderer.height/2),void 0===i&&(i=this._renderer.height/2),void 0===n&&(n=0),void 0===a&&(a=Math.max(this._renderer.width,this._renderer.height));var o=t-e,s=i-r,l=a-n,u=2/o,h=2/s,c=-2/l,f=-(t+e)/o,d=-(i+r)/s,p=-(a+n)/l;this.projMatrix=m.default.Matrix.identity(),this.projMatrix.set(u,0,0,0,0,-h,0,0,0,0,c,0,f,d,p,1),this._isActive()&&this._renderer.uPMatrix.set(this.projMatrix.mat4[0],this.projMatrix.mat4[1],this.projMatrix.mat4[2],this.projMatrix.mat4[3],this.projMatrix.mat4[4],this.projMatrix.mat4[5],this.projMatrix.mat4[6],this.projMatrix.mat4[7],this.projMatrix.mat4[8],this.projMatrix.mat4[9],this.projMatrix.mat4[10],this.projMatrix.mat4[11],this.projMatrix.mat4[12],this.projMatrix.mat4[13],this.projMatrix.mat4[14],this.projMatrix.mat4[15]),this.cameraType="custom"},m.default.Camera.prototype.frustum=function(e,t,r,i,n,a){void 0===e&&(e=-this._renderer.width/2),void 0===t&&(t=this._renderer.width/2),void 0===r&&(r=-this._renderer.height/2),void 0===i&&(i=this._renderer.height/2),void 0===n&&(n=0),void 0===a&&(a=Math.max(this._renderer.width,this._renderer.height));var o=t-e,s=i-r,l=a-n,u=2*n/o,h=2*n/s,c=-2*a*n/l,f=(t+e)/o,d=(i+r)/s,p=-(a+n)/l;this.projMatrix=m.default.Matrix.identity(),this.projMatrix.set(u,0,0,0,0,h,0,0,f,d,p,-1,0,0,c,0),this._isActive()&&this._renderer.uPMatrix.set(this.projMatrix.mat4[0],this.projMatrix.mat4[1],this.projMatrix.mat4[2],this.projMatrix.mat4[3],this.projMatrix.mat4[4],this.projMatrix.mat4[5],this.projMatrix.mat4[6],this.projMatrix.mat4[7],this.projMatrix.mat4[8],this.projMatrix.mat4[9],this.projMatrix.mat4[10],this.projMatrix.mat4[11],this.projMatrix.mat4[12],this.projMatrix.mat4[13],this.projMatrix.mat4[14],this.projMatrix.mat4[15]),this.cameraType="custom"},m.default.Camera.prototype._rotateView=function(e,t,r,i){var n=this.centerX,a=this.centerY,o=this.centerZ;n-=this.eyeX,a-=this.eyeY,o-=this.eyeZ;var s=m.default.Matrix.identity(this._renderer._pInst);s.rotate(this._renderer._pInst._toRadians(e),t,r,i);var l=[n*s.mat4[0]+a*s.mat4[4]+o*s.mat4[8],n*s.mat4[1]+a*s.mat4[5]+o*s.mat4[9],n*s.mat4[2]+a*s.mat4[6]+o*s.mat4[10]];l[0]+=this.eyeX,l[1]+=this.eyeY,l[2]+=this.eyeZ,this.camera(this.eyeX,this.eyeY,this.eyeZ,l[0],l[1],l[2],this.upX,this.upY,this.upZ)},m.default.Camera.prototype.pan=function(e){var t=this._getLocalAxes();this._rotateView(e,t.y[0],t.y[1],t.y[2])},m.default.Camera.prototype.tilt=function(e){var t=this._getLocalAxes();this._rotateView(e,t.x[0],t.x[1],t.x[2])},m.default.Camera.prototype.lookAt=function(e,t,r){this.camera(this.eyeX,this.eyeY,this.eyeZ,e,t,r,this.upX,this.upY,this.upZ)},m.default.Camera.prototype.camera=function(e,t,r,i,n,a,o,s,l){void 0===e&&(e=this.defaultEyeX,t=this.defaultEyeY,r=this.defaultEyeZ,i=e,n=t,s=1,l=o=a=0),this.eyeX=e,this.eyeY=t,this.eyeZ=r,void 0!==i&&(this.centerX=i,this.centerY=n,this.centerZ=a),void 0!==o&&(this.upX=o,this.upY=s,this.upZ=l);var u=this._getLocalAxes();this.cameraMatrix.set(u.x[0],u.y[0],u.z[0],0,u.x[1],u.y[1],u.z[1],0,u.x[2],u.y[2],u.z[2],0,0,0,0,1);var h=-e,c=-t,f=-r;return this.cameraMatrix.translate([h,c,f]),this._isActive()&&this._renderer.uMVMatrix.set(this.cameraMatrix.mat4[0],this.cameraMatrix.mat4[1],this.cameraMatrix.mat4[2],this.cameraMatrix.mat4[3],this.cameraMatrix.mat4[4],this.cameraMatrix.mat4[5],this.cameraMatrix.mat4[6],this.cameraMatrix.mat4[7],this.cameraMatrix.mat4[8],this.cameraMatrix.mat4[9],this.cameraMatrix.mat4[10],this.cameraMatrix.mat4[11],this.cameraMatrix.mat4[12],this.cameraMatrix.mat4[13],this.cameraMatrix.mat4[14],this.cameraMatrix.mat4[15]),this},m.default.Camera.prototype.move=function(e,t,r){var i=this._getLocalAxes(),n=[i.x[0]*e,i.x[1]*e,i.x[2]*e],a=[i.y[0]*t,i.y[1]*t,i.y[2]*t],o=[i.z[0]*r,i.z[1]*r,i.z[2]*r];this.camera(this.eyeX+n[0]+a[0]+o[0],this.eyeY+n[1]+a[1]+o[1],this.eyeZ+n[2]+a[2]+o[2],this.centerX+n[0]+a[0]+o[0],this.centerY+n[1]+a[1]+o[1],this.centerZ+n[2]+a[2]+o[2],0,1,0)},m.default.Camera.prototype.setPosition=function(e,t,r){var i=e-this.eyeX,n=t-this.eyeY,a=r-this.eyeZ;this.camera(e,t,r,this.centerX+i,this.centerY+n,this.centerZ+a,0,1,0)},m.default.Camera.prototype._computeCameraDefaultSettings=function(){this.defaultCameraFOV=60/180*Math.PI,this.defaultAspectRatio=this._renderer.width/this._renderer.height,this.defaultEyeX=0,this.defaultEyeY=0,this.defaultEyeZ=this._renderer.height/2/Math.tan(this.defaultCameraFOV/2),this.defaultCenterX=0,this.defaultCenterY=0,this.defaultCenterZ=0,this.defaultCameraNear=.1*this.defaultEyeZ,this.defaultCameraFar=10*this.defaultEyeZ},m.default.Camera.prototype._setDefaultCamera=function(){this.cameraFOV=this.defaultCameraFOV,this.aspectRatio=this.defaultAspectRatio,this.eyeX=this.defaultEyeX,this.eyeY=this.defaultEyeY,this.eyeZ=this.defaultEyeZ,this.centerX=this.defaultCenterX,this.centerY=this.defaultCenterY,this.centerZ=this.defaultCenterZ,this.upX=0,this.upY=1,this.upZ=0,this.cameraNear=this.defaultCameraNear,this.cameraFar=this.defaultCameraFar,this.perspective(),this.camera(),this.cameraType="default"},m.default.Camera.prototype._resize=function(){"default"===this.cameraType?(this._computeCameraDefaultSettings(),this._setDefaultCamera()):this.perspective(this.cameraFOV,this._renderer.width/this._renderer.height)},m.default.Camera.prototype.copy=function(){var e=new m.default.Camera(this._renderer);return e.cameraFOV=this.cameraFOV,e.aspectRatio=this.aspectRatio,e.eyeX=this.eyeX,e.eyeY=this.eyeY,e.eyeZ=this.eyeZ,e.centerX=this.centerX,e.centerY=this.centerY,e.centerZ=this.centerZ,e.cameraNear=this.cameraNear,e.cameraFar=this.cameraFar,e.cameraType=this.cameraType,e.cameraMatrix=this.cameraMatrix.copy(),e.projMatrix=this.projMatrix.copy(),e},m.default.Camera.prototype._getLocalAxes=function(){var e=this.eyeX-this.centerX,t=this.eyeY-this.centerY,r=this.eyeZ-this.centerZ,i=Math.sqrt(e*e+t*t+r*r);0!==i&&(e/=i,t/=i,r/=i);var n=this.upX,a=this.upY,o=this.upZ,s=a*r-o*t,l=-n*r+o*e,u=n*t-a*e;n=t*u-r*l,a=-e*u+r*s,o=e*l-t*s;var h=Math.sqrt(s*s+l*l+u*u);0!==h&&(s/=h,l/=h,u/=h);var c=Math.sqrt(n*n+a*a+o*o);return 0!==c&&(n/=c,a/=c,o/=c),{x:[s,l,u],y:[n,a,o],z:[e,t,r]}},m.default.Camera.prototype._orbit=function(e,t,r){var i=this.eyeX-this.centerX,n=this.eyeY-this.centerY,a=this.eyeZ-this.centerZ,o=Math.sqrt(i*i+n*n+a*a),s=Math.atan2(i,a),l=Math.acos(Math.max(-1,Math.min(1,n/o)));s+=e,(o+=r)<0&&(o=.1),(l+=t)>Math.PI?l=Math.PI:l<=0&&(l=.001);var u=Math.sin(l)*o*Math.sin(s),h=Math.cos(l)*o,c=Math.sin(l)*o*Math.cos(s);this.camera(u+this.centerX,h+this.centerY,c+this.centerZ,this.centerX,this.centerY,this.centerZ,0,1,0)},m.default.Camera.prototype._isActive=function(){return this===this._renderer._curCamera},m.default.prototype.setCamera=function(e){this._renderer._curCamera=e,this._renderer.uPMatrix.set(e.projMatrix.mat4[0],e.projMatrix.mat4[1],e.projMatrix.mat4[2],e.projMatrix.mat4[3],e.projMatrix.mat4[4],e.projMatrix.mat4[5],e.projMatrix.mat4[6],e.projMatrix.mat4[7],e.projMatrix.mat4[8],e.projMatrix.mat4[9],e.projMatrix.mat4[10],e.projMatrix.mat4[11],e.projMatrix.mat4[12],e.projMatrix.mat4[13],e.projMatrix.mat4[14],e.projMatrix.mat4[15])};var n=m.default.Camera;r.default=n},{"../core/main":36}],85:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,h=(i=e("../core/main"))&&i.__esModule?i:{default:i};h.default.Geometry=function(e,t,r){return this.vertices=[],this.lineVertices=[],this.lineNormals=[],this.vertexNormals=[],this.faces=[],this.uvs=[],this.edges=[],this.vertexColors=[],this.detailX=void 0!==e?e:1,this.detailY=void 0!==t?t:1,this.dirtyFlags={},r instanceof Function&&r.call(this),this},h.default.Geometry.prototype.reset=function(){this.lineVertices.length=0,this.lineNormals.length=0,this.vertices.length=0,this.edges.length=0,this.vertexColors.length=0,this.vertexNormals.length=0,this.uvs.length=0,this.dirtyFlags={}},h.default.Geometry.prototype.computeFaces=function(){this.faces.length=0;for(var e,t,r,i,n=this.detailX+1,a=0;a<this.detailY;a++)for(var o=0;o<this.detailX;o++)t=(e=a*n+o)+1,r=(a+1)*n+o+1,i=(a+1)*n+o,this.faces.push([e,t,i]),this.faces.push([i,t,r]);return this},h.default.Geometry.prototype._getFaceNormal=function(e){var t=this.faces[e],r=this.vertices[t[0]],i=this.vertices[t[1]],n=this.vertices[t[2]],a=h.default.Vector.sub(i,r),o=h.default.Vector.sub(n,r),s=h.default.Vector.cross(a,o),l=h.default.Vector.mag(s),u=l/(h.default.Vector.mag(a)*h.default.Vector.mag(o));return 0===u||isNaN(u)?(console.warn("p5.Geometry.prototype._getFaceNormal:","face has colinear sides or a repeated vertex"),s):(1<u&&(u=1),s.mult(Math.asin(u)/l))},h.default.Geometry.prototype.computeNormals=function(){var e,t=this.vertexNormals,r=this.vertices,i=this.faces;for(e=t.length=0;e<r.length;++e)t.push(new h.default.Vector);for(var n=0;n<i.length;++n)for(var a=i[n],o=this._getFaceNormal(n),s=0;s<3;++s){t[a[s]].add(o)}for(e=0;e<r.length;++e)t[e].normalize();return this},h.default.Geometry.prototype.averageNormals=function(){for(var e=0;e<=this.detailY;e++){var t=this.detailX+1,r=h.default.Vector.add(this.vertexNormals[e*t],this.vertexNormals[e*t+this.detailX]);r=h.default.Vector.div(r,2),this.vertexNormals[e*t]=r,this.vertexNormals[e*t+this.detailX]=r}return this},h.default.Geometry.prototype.averagePoleNormals=function(){for(var e=new h.default.Vector(0,0,0),t=0;t<this.detailX;t++)e.add(this.vertexNormals[t]);e=h.default.Vector.div(e,this.detailX);for(var r=0;r<this.detailX;r++)this.vertexNormals[r]=e;e=new h.default.Vector(0,0,0);for(var i=this.vertices.length-1;i>this.vertices.length-1-this.detailX;i--)e.add(this.vertexNormals[i]);e=h.default.Vector.div(e,this.detailX);for(var n=this.vertices.length-1;n>this.vertices.length-1-this.detailX;n--)this.vertexNormals[n]=e;return this},h.default.Geometry.prototype._makeTriangleEdges=function(){if(this.edges.length=0,Array.isArray(this.strokeIndices))for(var e=0,t=this.strokeIndices.length;e<t;e++)this.edges.push(this.strokeIndices[e]);else for(var r=0;r<this.faces.length;r++)this.edges.push([this.faces[r][0],this.faces[r][1]]),this.edges.push([this.faces[r][1],this.faces[r][2]]),this.edges.push([this.faces[r][2],this.faces[r][0]]);return this},h.default.Geometry.prototype._edgesToVertices=function(){this.lineVertices.length=0;for(var e=this.lineNormals.length=0;e<this.edges.length;e++){var t=this.vertices[this.edges[e][0]],r=this.vertices[this.edges[e][1]],i=r.copy().sub(t).normalize(),n=t.array(),a=t.array(),o=r.array(),s=r.array(),l=i.array(),u=i.array();l.push(1),u.push(-1),this.lineNormals.push(l,u,l,l,u,u),this.lineVertices.push(n,a,o,o,a,s)}return this},h.default.Geometry.prototype.normalize=function(){if(0<this.vertices.length){for(var e=this.vertices[0].copy(),t=this.vertices[0].copy(),r=0;r<this.vertices.length;r++)e.x=Math.max(e.x,this.vertices[r].x),t.x=Math.min(t.x,this.vertices[r].x),e.y=Math.max(e.y,this.vertices[r].y),t.y=Math.min(t.y,this.vertices[r].y),e.z=Math.max(e.z,this.vertices[r].z),t.z=Math.min(t.z,this.vertices[r].z);for(var i=h.default.Vector.lerp(e,t,.5),n=h.default.Vector.sub(e,t),a=200/Math.max(Math.max(n.x,n.y),n.z),o=0;o<this.vertices.length;o++)this.vertices[o].sub(i),this.vertices[o].mult(a)}return this};var n=h.default.Geometry;r.default=n},{"../core/main":36}],86:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,P=(i=e("../core/main"))&&i.__esModule?i:{default:i};var n=Array,R=function(e){return e instanceof Array};"undefined"!=typeof Float32Array&&(n=Float32Array,R=function(e){return e instanceof Array||e instanceof Float32Array}),P.default.Matrix=function(){for(var e=new Array(arguments.length),t=0;t<e.length;++t)e[t]=arguments[t];return e.length&&e[e.length-1]instanceof P.default&&(this.p5=e[e.length-1]),"mat3"===e[0]?this.mat3=Array.isArray(e[1])?e[1]:new n([1,0,0,0,1,0,0,0,1]):this.mat4=Array.isArray(e[0])?e[0]:new n([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),this},P.default.Matrix.prototype.set=function(e){return e instanceof P.default.Matrix?this.mat4=e.mat4:R(e)?this.mat4=e:16===arguments.length&&(this.mat4[0]=e,this.mat4[1]=arguments[1],this.mat4[2]=arguments[2],this.mat4[3]=arguments[3],this.mat4[4]=arguments[4],this.mat4[5]=arguments[5],this.mat4[6]=arguments[6],this.mat4[7]=arguments[7],this.mat4[8]=arguments[8],this.mat4[9]=arguments[9],this.mat4[10]=arguments[10],this.mat4[11]=arguments[11],this.mat4[12]=arguments[12],this.mat4[13]=arguments[13],this.mat4[14]=arguments[14],this.mat4[15]=arguments[15]),this},P.default.Matrix.prototype.get=function(){return new P.default.Matrix(this.mat4,this.p5)},P.default.Matrix.prototype.copy=function(){var e=new P.default.Matrix(this.p5);return e.mat4[0]=this.mat4[0],e.mat4[1]=this.mat4[1],e.mat4[2]=this.mat4[2],e.mat4[3]=this.mat4[3],e.mat4[4]=this.mat4[4],e.mat4[5]=this.mat4[5],e.mat4[6]=this.mat4[6],e.mat4[7]=this.mat4[7],e.mat4[8]=this.mat4[8],e.mat4[9]=this.mat4[9],e.mat4[10]=this.mat4[10],e.mat4[11]=this.mat4[11],e.mat4[12]=this.mat4[12],e.mat4[13]=this.mat4[13],e.mat4[14]=this.mat4[14],e.mat4[15]=this.mat4[15],e},P.default.Matrix.identity=function(e){return new P.default.Matrix(e)},P.default.Matrix.prototype.transpose=function(e){var t,r,i,n,a,o;return e instanceof P.default.Matrix?(t=e.mat4[1],r=e.mat4[2],i=e.mat4[3],n=e.mat4[6],a=e.mat4[7],o=e.mat4[11],this.mat4[0]=e.mat4[0],this.mat4[1]=e.mat4[4],this.mat4[2]=e.mat4[8],this.mat4[3]=e.mat4[12],this.mat4[4]=t,this.mat4[5]=e.mat4[5],this.mat4[6]=e.mat4[9],this.mat4[7]=e.mat4[13],this.mat4[8]=r,this.mat4[9]=n,this.mat4[10]=e.mat4[10],this.mat4[11]=e.mat4[14],this.mat4[12]=i,this.mat4[13]=a,this.mat4[14]=o,this.mat4[15]=e.mat4[15]):R(e)&&(t=e[1],r=e[2],i=e[3],n=e[6],a=e[7],o=e[11],this.mat4[0]=e[0],this.mat4[1]=e[4],this.mat4[2]=e[8],this.mat4[3]=e[12],this.mat4[4]=t,this.mat4[5]=e[5],this.mat4[6]=e[9],this.mat4[7]=e[13],this.mat4[8]=r,this.mat4[9]=n,this.mat4[10]=e[10],this.mat4[11]=e[14],this.mat4[12]=i,this.mat4[13]=a,this.mat4[14]=o,this.mat4[15]=e[15]),this},P.default.Matrix.prototype.invert=function(e){var t,r,i,n,a,o,s,l,u,h,c,f,d,p,m,v;e instanceof P.default.Matrix?(t=e.mat4[0],r=e.mat4[1],i=e.mat4[2],n=e.mat4[3],a=e.mat4[4],o=e.mat4[5],s=e.mat4[6],l=e.mat4[7],u=e.mat4[8],h=e.mat4[9],c=e.mat4[10],f=e.mat4[11],d=e.mat4[12],p=e.mat4[13],m=e.mat4[14],v=e.mat4[15]):R(e)&&(t=e[0],r=e[1],i=e[2],n=e[3],a=e[4],o=e[5],s=e[6],l=e[7],u=e[8],h=e[9],c=e[10],f=e[11],d=e[12],p=e[13],m=e[14],v=e[15]);var y=t*o-r*a,g=t*s-i*a,b=t*l-n*a,_=r*s-i*o,x=r*l-n*o,w=i*l-n*s,S=u*p-h*d,M=u*m-c*d,T=u*v-f*d,E=h*m-c*p,C=h*v-f*p,L=c*v-f*m,O=y*L-g*C+b*E+_*T-x*M+w*S;return O?(O=1/O,this.mat4[0]=(o*L-s*C+l*E)*O,this.mat4[1]=(i*C-r*L-n*E)*O,this.mat4[2]=(p*w-m*x+v*_)*O,this.mat4[3]=(c*x-h*w-f*_)*O,this.mat4[4]=(s*T-a*L-l*M)*O,this.mat4[5]=(t*L-i*T+n*M)*O,this.mat4[6]=(m*b-d*w-v*g)*O,this.mat4[7]=(u*w-c*b+f*g)*O,this.mat4[8]=(a*C-o*T+l*S)*O,this.mat4[9]=(r*T-t*C-n*S)*O,this.mat4[10]=(d*x-p*b+v*y)*O,this.mat4[11]=(h*b-u*x-f*y)*O,this.mat4[12]=(o*M-a*E-s*S)*O,this.mat4[13]=(t*E-r*M+i*S)*O,this.mat4[14]=(p*g-d*_-m*y)*O,this.mat4[15]=(u*_-h*g+c*y)*O,this):null},P.default.Matrix.prototype.invert3x3=function(){var e=this.mat3[0],t=this.mat3[1],r=this.mat3[2],i=this.mat3[3],n=this.mat3[4],a=this.mat3[5],o=this.mat3[6],s=this.mat3[7],l=this.mat3[8],u=l*n-a*s,h=-l*i+a*o,c=s*i-n*o,f=e*u+t*h+r*c;return f?(f=1/f,this.mat3[0]=u*f,this.mat3[1]=(-l*t+r*s)*f,this.mat3[2]=(a*t-r*n)*f,this.mat3[3]=h*f,this.mat3[4]=(l*e-r*o)*f,this.mat3[5]=(-a*e+r*i)*f,this.mat3[6]=c*f,this.mat3[7]=(-s*e+t*o)*f,this.mat3[8]=(n*e-t*i)*f,this):null},P.default.Matrix.prototype.transpose3x3=function(e){var t=e[1],r=e[2],i=e[5];return this.mat3[1]=e[3],this.mat3[2]=e[6],this.mat3[3]=t,this.mat3[5]=e[7],this.mat3[6]=r,this.mat3[7]=i,this},P.default.Matrix.prototype.inverseTranspose=function(e){void 0===this.mat3?console.error("sorry, this function only works with mat3"):(this.mat3[0]=e.mat4[0],this.mat3[1]=e.mat4[1],this.mat3[2]=e.mat4[2],this.mat3[3]=e.mat4[4],this.mat3[4]=e.mat4[5],this.mat3[5]=e.mat4[6],this.mat3[6]=e.mat4[8],this.mat3[7]=e.mat4[9],this.mat3[8]=e.mat4[10]);var t=this.invert3x3();if(t)t.transpose3x3(this.mat3);else for(var r=0;r<9;r++)this.mat3[r]=0;return this},P.default.Matrix.prototype.determinant=function(){var e=this.mat4[0]*this.mat4[5]-this.mat4[1]*this.mat4[4],t=this.mat4[0]*this.mat4[6]-this.mat4[2]*this.mat4[4],r=this.mat4[0]*this.mat4[7]-this.mat4[3]*this.mat4[4],i=this.mat4[1]*this.mat4[6]-this.mat4[2]*this.mat4[5],n=this.mat4[1]*this.mat4[7]-this.mat4[3]*this.mat4[5],a=this.mat4[2]*this.mat4[7]-this.mat4[3]*this.mat4[6],o=this.mat4[8]*this.mat4[13]-this.mat4[9]*this.mat4[12],s=this.mat4[8]*this.mat4[14]-this.mat4[10]*this.mat4[12],l=this.mat4[8]*this.mat4[15]-this.mat4[11]*this.mat4[12],u=this.mat4[9]*this.mat4[14]-this.mat4[10]*this.mat4[13],h=this.mat4[9]*this.mat4[15]-this.mat4[11]*this.mat4[13];return e*(this.mat4[10]*this.mat4[15]-this.mat4[11]*this.mat4[14])-t*h+r*u+i*l-n*s+a*o},P.default.Matrix.prototype.mult=function(e){var t;if(e===this||e===this.mat4)t=this.copy().mat4;else if(e instanceof P.default.Matrix)t=e.mat4;else if(R(e))t=e;else{if(16!==arguments.length)return;t=arguments}var r=this.mat4[0],i=this.mat4[1],n=this.mat4[2],a=this.mat4[3];return this.mat4[0]=r*t[0]+i*t[4]+n*t[8]+a*t[12],this.mat4[1]=r*t[1]+i*t[5]+n*t[9]+a*t[13],this.mat4[2]=r*t[2]+i*t[6]+n*t[10]+a*t[14],this.mat4[3]=r*t[3]+i*t[7]+n*t[11]+a*t[15],r=this.mat4[4],i=this.mat4[5],n=this.mat4[6],a=this.mat4[7],this.mat4[4]=r*t[0]+i*t[4]+n*t[8]+a*t[12],this.mat4[5]=r*t[1]+i*t[5]+n*t[9]+a*t[13],this.mat4[6]=r*t[2]+i*t[6]+n*t[10]+a*t[14],this.mat4[7]=r*t[3]+i*t[7]+n*t[11]+a*t[15],r=this.mat4[8],i=this.mat4[9],n=this.mat4[10],a=this.mat4[11],this.mat4[8]=r*t[0]+i*t[4]+n*t[8]+a*t[12],this.mat4[9]=r*t[1]+i*t[5]+n*t[9]+a*t[13],this.mat4[10]=r*t[2]+i*t[6]+n*t[10]+a*t[14],this.mat4[11]=r*t[3]+i*t[7]+n*t[11]+a*t[15],r=this.mat4[12],i=this.mat4[13],n=this.mat4[14],a=this.mat4[15],this.mat4[12]=r*t[0]+i*t[4]+n*t[8]+a*t[12],this.mat4[13]=r*t[1]+i*t[5]+n*t[9]+a*t[13],this.mat4[14]=r*t[2]+i*t[6]+n*t[10]+a*t[14],this.mat4[15]=r*t[3]+i*t[7]+n*t[11]+a*t[15],this},P.default.Matrix.prototype.apply=function(e){var t;if(e===this||e===this.mat4)t=this.copy().mat4;else if(e instanceof P.default.Matrix)t=e.mat4;else if(R(e))t=e;else{if(16!==arguments.length)return;t=arguments}var r=this.mat4,i=r[0],n=r[4],a=r[8],o=r[12];r[0]=t[0]*i+t[1]*n+t[2]*a+t[3]*o,r[4]=t[4]*i+t[5]*n+t[6]*a+t[7]*o,r[8]=t[8]*i+t[9]*n+t[10]*a+t[11]*o,r[12]=t[12]*i+t[13]*n+t[14]*a+t[15]*o;var s=r[1],l=r[5],u=r[9],h=r[13];r[1]=t[0]*s+t[1]*l+t[2]*u+t[3]*h,r[5]=t[4]*s+t[5]*l+t[6]*u+t[7]*h,r[9]=t[8]*s+t[9]*l+t[10]*u+t[11]*h,r[13]=t[12]*s+t[13]*l+t[14]*u+t[15]*h;var c=r[2],f=r[6],d=r[10],p=r[14];r[2]=t[0]*c+t[1]*f+t[2]*d+t[3]*p,r[6]=t[4]*c+t[5]*f+t[6]*d+t[7]*p,r[10]=t[8]*c+t[9]*f+t[10]*d+t[11]*p,r[14]=t[12]*c+t[13]*f+t[14]*d+t[15]*p;var m=r[3],v=r[7],y=r[11],g=r[15];return r[3]=t[0]*m+t[1]*v+t[2]*y+t[3]*g,r[7]=t[4]*m+t[5]*v+t[6]*y+t[7]*g,r[11]=t[8]*m+t[9]*v+t[10]*y+t[11]*g,r[15]=t[12]*m+t[13]*v+t[14]*y+t[15]*g,this},P.default.Matrix.prototype.scale=function(e,t,r){return e instanceof P.default.Vector?(t=e.y,r=e.z,e=e.x):e instanceof Array&&(t=e[1],r=e[2],e=e[0]),this.mat4[0]*=e,this.mat4[1]*=e,this.mat4[2]*=e,this.mat4[3]*=e,this.mat4[4]*=t,this.mat4[5]*=t,this.mat4[6]*=t,this.mat4[7]*=t,this.mat4[8]*=r,this.mat4[9]*=r,this.mat4[10]*=r,this.mat4[11]*=r,this},P.default.Matrix.prototype.rotate=function(e,t,r,i){t instanceof P.default.Vector?(r=t.y,i=t.z,t=t.x):t instanceof Array&&(r=t[1],i=t[2],t=t[0]);var n=Math.sqrt(t*t+r*r+i*i);t*=1/n,r*=1/n,i*=1/n;var a=this.mat4[0],o=this.mat4[1],s=this.mat4[2],l=this.mat4[3],u=this.mat4[4],h=this.mat4[5],c=this.mat4[6],f=this.mat4[7],d=this.mat4[8],p=this.mat4[9],m=this.mat4[10],v=this.mat4[11],y=Math.sin(e),g=Math.cos(e),b=1-g,_=t*t*b+g,x=r*t*b+i*y,w=i*t*b-r*y,S=t*r*b-i*y,M=r*r*b+g,T=i*r*b+t*y,E=t*i*b+r*y,C=r*i*b-t*y,L=i*i*b+g;return this.mat4[0]=a*_+u*x+d*w,this.mat4[1]=o*_+h*x+p*w,this.mat4[2]=s*_+c*x+m*w,this.mat4[3]=l*_+f*x+v*w,this.mat4[4]=a*S+u*M+d*T,this.mat4[5]=o*S+h*M+p*T,this.mat4[6]=s*S+c*M+m*T,this.mat4[7]=l*S+f*M+v*T,this.mat4[8]=a*E+u*C+d*L,this.mat4[9]=o*E+h*C+p*L,this.mat4[10]=s*E+c*C+m*L,this.mat4[11]=l*E+f*C+v*L,this},P.default.Matrix.prototype.translate=function(e){var t=e[0],r=e[1],i=e[2]||0;this.mat4[12]+=this.mat4[0]*t+this.mat4[4]*r+this.mat4[8]*i,this.mat4[13]+=this.mat4[1]*t+this.mat4[5]*r+this.mat4[9]*i,this.mat4[14]+=this.mat4[2]*t+this.mat4[6]*r+this.mat4[10]*i,this.mat4[15]+=this.mat4[3]*t+this.mat4[7]*r+this.mat4[11]*i},P.default.Matrix.prototype.rotateX=function(e){this.rotate(e,1,0,0)},P.default.Matrix.prototype.rotateY=function(e){this.rotate(e,0,1,0)},P.default.Matrix.prototype.rotateZ=function(e){this.rotate(e,0,0,1)},P.default.Matrix.prototype.perspective=function(e,t,r,i){var n=1/Math.tan(e/2),a=1/(r-i);return this.mat4[0]=n/t,this.mat4[1]=0,this.mat4[2]=0,this.mat4[3]=0,this.mat4[4]=0,this.mat4[5]=n,this.mat4[6]=0,this.mat4[7]=0,this.mat4[8]=0,this.mat4[9]=0,this.mat4[10]=(i+r)*a,this.mat4[11]=-1,this.mat4[12]=0,this.mat4[13]=0,this.mat4[14]=2*i*r*a,this.mat4[15]=0,this},P.default.Matrix.prototype.ortho=function(e,t,r,i,n,a){var o=1/(e-t),s=1/(r-i),l=1/(n-a);return this.mat4[0]=-2*o,this.mat4[1]=0,this.mat4[2]=0,this.mat4[3]=0,this.mat4[4]=0,this.mat4[5]=-2*s,this.mat4[6]=0,this.mat4[7]=0,this.mat4[8]=0,this.mat4[9]=0,this.mat4[10]=2*l,this.mat4[11]=0,this.mat4[12]=(e+t)*o,this.mat4[13]=(i+r)*s,this.mat4[14]=(a+n)*l,this.mat4[15]=1,this};var a=P.default.Matrix;r.default=a},{"../core/main":36}],87:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,n=(i=e("../core/main"))&&i.__esModule?i:{default:i};n.default.RenderBuffer=function(e,t,r,i,n,a){this.size=e,this.src=t,this.dst=r,this.attr=i,this._renderer=n,this.map=a},n.default.RenderBuffer.prototype._prepareBuffer=function(e,t){var r,i=t.attributes,n=this._renderer.GL;r=e.model?e.model:e;var a=i[this.attr];if(a){var o=e[this.dst],s=r[this.src];if(0<s.length){var l=!o;if(l&&(e[this.dst]=o=n.createBuffer()),n.bindBuffer(n.ARRAY_BUFFER,o),l||!1!==r.dirtyFlags[this.src]){var u=this.map,h=u?u(s):s;this._renderer._bindBuffer(o,n.ARRAY_BUFFER,h),r.dirtyFlags[this.src]=!1}t.enableAttrib(a,this.size)}}};var a=n.default.RenderBuffer;r.default=a},{"../core/main":36}],88:[function(e,t,r){"use strict";function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,s=(i=e("../core/main"))&&i.__esModule?i:{default:i},l=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=u();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var a=i?Object.getOwnPropertyDescriptor(e,n):null;a&&(a.get||a.set)?Object.defineProperty(r,n,a):r[n]=e[n]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants"));function u(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return u=function(){return e},e}e("./p5.RenderBuffer"),s.default.RendererGL.prototype.beginShape=function(e){return this.immediateMode.shapeMode=void 0!==e?e:l.TRIANGLE_FAN,this.immediateMode.geometry.reset(),this},s.default.RendererGL.prototype.vertex=function(e,t){var r,i,n;r=i=n=0,3===arguments.length?r=arguments[2]:4===arguments.length?(i=arguments[2],n=arguments[3]):5===arguments.length&&(r=arguments[2],i=arguments[3],n=arguments[4]);var a=new s.default.Vector(e,t,r);this.immediateMode.geometry.vertices.push(a);var o=this.curFillColor||[.5,.5,.5,1];return this.immediateMode.geometry.vertexColors.push(o[0],o[1],o[2],o[3]),this.textureMode===l.IMAGE&&(null!==this._tex?0<this._tex.width&&0<this._tex.height&&(i/=this._tex.width,n/=this._tex.height):null===this._tex&&4<=arguments.length&&console.warn("You must first call texture() before using vertex() with image based u and v coordinates")),this.immediateMode.geometry.uvs.push(i,n),this.immediateMode._bezierVertex[0]=e,this.immediateMode._bezierVertex[1]=t,this.immediateMode._bezierVertex[2]=r,this.immediateMode._quadraticVertex[0]=e,this.immediateMode._quadraticVertex[1]=t,this.immediateMode._quadraticVertex[2]=r,this},s.default.RendererGL.prototype.endShape=function(e,t,r,i,n,a){return this.immediateMode.shapeMode===l.POINTS?this._drawPoints(this.immediateMode.geometry.vertices,this.immediateMode.buffers.point):(this._processVertices.apply(this,arguments),this._doFill&&1<this.immediateMode.geometry.vertices.length&&this._drawImmediateFill(),this._doStroke&&1<this.immediateMode.geometry.lineVertices.length&&this._drawImmediateStroke(),this.isBezier=!1,this.isQuadratic=!1,this.isCurve=!1,this.immediateMode._bezierVertex.length=0,this.immediateMode._quadraticVertex.length=0,this.immediateMode._curveVertex.length=0),this},s.default.RendererGL.prototype._processVertices=function(e){if(0!==this.immediateMode.geometry.vertices.length){var t=this._doStroke&&this.drawMode!==l.TEXTURE,r=e===l.CLOSE;t&&(this.immediateMode.geometry.edges=this._calculateEdges(this.immediateMode.shapeMode,this.immediateMode.geometry.vertices,r),this.immediateMode.geometry._edgesToVertices());var i=this.immediateMode.shapeMode===l.TESS;(this.isBezier||this.isQuadratic||this.isCurve||i)&&this.immediateMode.shapeMode!==l.LINES&&this._tesselateShape()}},s.default.RendererGL.prototype._calculateEdges=function(e,t,r){var i=[],n=0;switch(e){case l.TRIANGLE_STRIP:for(n=0;n<t.length-2;n++)i.push([n,n+1]),i.push([n,n+2]);i.push([n,n+1]);break;case l.TRIANGLES:for(n=0;n<t.length-2;n+=3)i.push([n,n+1]),i.push([n+1,n+2]),i.push([n+2,n]);break;case l.LINES:for(n=0;n<t.length-1;n+=2)i.push([n,n+1]);break;default:for(n=0;n<t.length-1;n++)i.push([n,n+1])}return r&&i.push([t.length-1,0]),i},s.default.RendererGL.prototype._tesselateShape=function(){this.immediateMode.shapeMode=l.TRIANGLES;var e=[new Float32Array(this._vToNArray(this.immediateMode.geometry.vertices))],t=this._triangulate(e);this.immediateMode.geometry.vertices=[];for(var r=0,i=t.length;r<i;r+=3)this.vertex(t[r],t[r+1],t[r+2])},s.default.RendererGL.prototype._drawImmediateFill=function(){var e=this.GL,t=this._getImmediateFillShader();this._calculateNormals(this.immediateMode.geometry),this._setFillUniforms(t);var r=!0,i=!1,n=void 0;try{for(var a,o=this.immediateMode.buffers.fill[Symbol.iterator]();!(r=(a=o.next()).done);r=!0){a.value._prepareBuffer(this.immediateMode.geometry,t)}}catch(e){i=!0,n=e}finally{try{r||null==o.return||o.return()}finally{if(i)throw n}}this.immediateMode.shapeMode!==l.LINE_STRIP&&this.immediateMode.shapeMode!==l.LINES||(this.immediateMode.shapeMode=l.TRIANGLE_FAN),this._applyColorBlend(this.curFillColor),e.drawArrays(this.immediateMode.shapeMode,0,this.immediateMode.geometry.vertices.length),t.unbindShader()},s.default.RendererGL.prototype._drawImmediateStroke=function(){var e=this.GL,t=this._getImmediateStrokeShader();this._setStrokeUniforms(t);var r=!0,i=!1,n=void 0;try{for(var a,o=this.immediateMode.buffers.stroke[Symbol.iterator]();!(r=(a=o.next()).done);r=!0){a.value._prepareBuffer(this.immediateMode.geometry,t)}}catch(e){i=!0,n=e}finally{try{r||null==o.return||o.return()}finally{if(i)throw n}}this._applyColorBlend(this.curStrokeColor),e.drawArrays(e.TRIANGLES,0,this.immediateMode.geometry.lineVertices.length),t.unbindShader()},s.default.RendererGL.prototype._calculateNormals=function(e){e.vertices.forEach(function(){e.vertexNormals.push(new s.default.Vector(0,0,1))})};var n=s.default.RendererGL;r.default=n},{"../core/constants":26,"../core/main":36,"./p5.RenderBuffer":87}],89:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,o=(i=e("../core/main"))&&i.__esModule?i:{default:i};e("./p5.RendererGL"),e("./p5.RenderBuffer");var n=0;o.default.RendererGL.prototype._initBufferDefaults=function(e){if(this._freeBuffers(e),1e3<++n){var t=Object.keys(this.retainedMode.geometry)[0];delete this.retainedMode.geometry[t],n--}return this.retainedMode.geometry[e]={}},o.default.RendererGL.prototype._freeBuffers=function(e){var s=this.retainedMode.geometry[e];if(s){delete this.retainedMode.geometry[e],n--;var l=this.GL;s.indexBuffer&&l.deleteBuffer(s.indexBuffer),t(this.retainedMode.buffers.stroke),t(this.retainedMode.buffers.fill)}function t(e){var t=!0,r=!1,i=void 0;try{for(var n,a=e[Symbol.iterator]();!(t=(n=a.next()).done);t=!0){var o=n.value;s[o.dst]&&(l.deleteBuffer(s[o.dst]),s[o.dst]=null)}}catch(e){r=!0,i=e}finally{try{t||null==a.return||a.return()}finally{if(r)throw i}}}},o.default.RendererGL.prototype.createBuffers=function(e,t){var r=this.GL,i=this._initBufferDefaults(e);i.model=t;var n=i.indexBuffer;if(t.faces.length){n=n||(i.indexBuffer=r.createBuffer());var a=o.default.RendererGL.prototype._flatten(t.faces);this._bindBuffer(n,r.ELEMENT_ARRAY_BUFFER,a,Uint16Array),i.vertexCount=3*t.faces.length}else n&&(r.deleteBuffer(n),i.indexBuffer=null),i.vertexCount=t.vertices?t.vertices.length:0;return i.lineVertexCount=t.lineVertices?t.lineVertices.length:0,i},o.default.RendererGL.prototype.drawBuffers=function(e){var t=this.GL,r=this.retainedMode.geometry[e];if(this._doStroke&&0<r.lineVertexCount){var i=this._getRetainedStrokeShader();this._setStrokeUniforms(i);var n=!0,a=!1,o=void 0;try{for(var s,l=this.retainedMode.buffers.stroke[Symbol.iterator]();!(n=(s=l.next()).done);n=!0){s.value._prepareBuffer(r,i)}}catch(e){a=!0,o=e}finally{try{n||null==l.return||l.return()}finally{if(a)throw o}}this._applyColorBlend(this.curStrokeColor),this._drawArrays(t.TRIANGLES,e),i.unbindShader()}if(this._doFill){var u=this._getRetainedFillShader();this._setFillUniforms(u);var h=!0,c=!1,f=void 0;try{for(var d,p=this.retainedMode.buffers.fill[Symbol.iterator]();!(h=(d=p.next()).done);h=!0){d.value._prepareBuffer(r,u)}}catch(e){c=!0,f=e}finally{try{h||null==p.return||p.return()}finally{if(c)throw f}}r.indexBuffer&&this._bindBuffer(r.indexBuffer,t.ELEMENT_ARRAY_BUFFER),this._applyColorBlend(this.curFillColor),this._drawElements(t.TRIANGLES,e),u.unbindShader()}return this},o.default.RendererGL.prototype.drawBuffersScaled=function(e,t,r,i){var n=this.uMVMatrix.copy();try{this.uMVMatrix.scale(t,r,i),this.drawBuffers(e)}finally{this.uMVMatrix=n}},o.default.RendererGL.prototype._drawArrays=function(e,t){return this.GL.drawArrays(e,0,this.retainedMode.geometry[t].lineVertexCount),this},o.default.RendererGL.prototype._drawElements=function(e,t){var r=this.retainedMode.geometry[t],i=this.GL;r.indexBuffer?i.drawElements(i.TRIANGLES,r.vertexCount,i.UNSIGNED_SHORT,0):i.drawArrays(e||i.TRIANGLES,0,r.vertexCount)},o.default.RendererGL.prototype._drawPoints=function(e,t){var r=this.GL,i=this._getImmediatePointShader();this._setPointUniforms(i),this._bindBuffer(t,r.ARRAY_BUFFER,this._vToNArray(e),Float32Array,r.STATIC_DRAW),i.enableAttrib(i.attributes.aPosition,3),r.drawArrays(r.Points,0,e.length),i.unbindShader()};var a=o.default.RendererGL;r.default=a},{"../core/main":36,"./p5.RenderBuffer":87,"./p5.RendererGL":90}],90:[function(e,t,r){"use strict";function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var u=n(e("../core/main")),a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var a=i?Object.getOwnPropertyDescriptor(e,n):null;a&&(a.get||a.set)?Object.defineProperty(r,n,a):r[n]=e[n]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants")),i=n(e("libtess"));e("./p5.Shader"),e("./p5.Camera"),e("../core/p5.Renderer"),e("./p5.Matrix");e("path");function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}function n(e){return e&&e.__esModule?e:{default:e}}function l(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var h="precision highp float;\nprecision highp int;\n\nuniform mat4 uViewMatrix;\n\nuniform bool uUseLighting;\n\nuniform int uAmbientLightCount;\nuniform vec3 uAmbientColor[5];\n\nuniform int uDirectionalLightCount;\nuniform vec3 uLightingDirection[5];\nuniform vec3 uDirectionalDiffuseColors[5];\nuniform vec3 uDirectionalSpecularColors[5];\n\nuniform int uPointLightCount;\nuniform vec3 uPointLightLocation[5];\nuniform vec3 uPointLightDiffuseColors[5];\t\nuniform vec3 uPointLightSpecularColors[5];\n\nuniform int uSpotLightCount;\nuniform float uSpotLightAngle[5];\nuniform float uSpotLightConc[5];\nuniform vec3 uSpotLightDiffuseColors[5];\nuniform vec3 uSpotLightSpecularColors[5];\nuniform vec3 uSpotLightLocation[5];\nuniform vec3 uSpotLightDirection[5];\n\nuniform bool uSpecular;\nuniform float uShininess;\n\nuniform float uConstantAttenuation;\nuniform float uLinearAttenuation;\nuniform float uQuadraticAttenuation;\n\nconst float specularFactor = 2.0;\nconst float diffuseFactor = 0.73;\n\nstruct LightResult {\n  float specular;\n  float diffuse;\n};\n\nfloat _phongSpecular(\n  vec3 lightDirection,\n  vec3 viewDirection,\n  vec3 surfaceNormal,\n  float shininess) {\n\n  vec3 R = reflect(lightDirection, surfaceNormal);\n  return pow(max(0.0, dot(R, viewDirection)), shininess);\n}\n\nfloat _lambertDiffuse(vec3 lightDirection, vec3 surfaceNormal) {\n  return max(0.0, dot(-lightDirection, surfaceNormal));\n}\n\nLightResult _light(vec3 viewDirection, vec3 normal, vec3 lightVector) {\n\n  vec3 lightDir = normalize(lightVector);\n\n  //compute our diffuse & specular terms\n  LightResult lr;\n  if (uSpecular)\n    lr.specular = _phongSpecular(lightDir, viewDirection, normal, uShininess);\n  lr.diffuse = _lambertDiffuse(lightDir, normal);\n  return lr;\n}\n\nvoid totalLight(\n  vec3 modelPosition,\n  vec3 normal,\n  out vec3 totalDiffuse,\n  out vec3 totalSpecular\n) {\n\n  totalSpecular = vec3(0.0);\n\n  if (!uUseLighting) {\n    totalDiffuse = vec3(1.0);\n    return;\n  }\n\n  totalDiffuse = vec3(0.0);\n\n  vec3 viewDirection = normalize(-modelPosition);\n\n  for (int j = 0; j < 5; j++) {\n    if (j < uDirectionalLightCount) {\n      vec3 lightVector = (uViewMatrix * vec4(uLightingDirection[j], 0.0)).xyz;\n      vec3 lightColor = uDirectionalDiffuseColors[j];\n      vec3 specularColor = uDirectionalSpecularColors[j];\n      LightResult result = _light(viewDirection, normal, lightVector);\n      totalDiffuse += result.diffuse * lightColor;\n      totalSpecular += result.specular * lightColor * specularColor;\n    }\n\n    if (j < uPointLightCount) {\n      vec3 lightPosition = (uViewMatrix * vec4(uPointLightLocation[j], 1.0)).xyz;\n      vec3 lightVector = modelPosition - lightPosition;\n    \n      //calculate attenuation\n      float lightDistance = length(lightVector);\n      float lightFalloff = 1.0 / (uConstantAttenuation + lightDistance * uLinearAttenuation + (lightDistance * lightDistance) * uQuadraticAttenuation);\n      vec3 lightColor = lightFalloff * uPointLightDiffuseColors[j];\n      vec3 specularColor = lightFalloff * uPointLightSpecularColors[j];\n\n      LightResult result = _light(viewDirection, normal, lightVector);\n      totalDiffuse += result.diffuse * lightColor;\n      totalSpecular += result.specular * lightColor * specularColor;\n    }\n\n    if(j < uSpotLightCount) {\n      vec3 lightPosition = (uViewMatrix * vec4(uSpotLightLocation[j], 1.0)).xyz;\n      vec3 lightVector = modelPosition - lightPosition;\n    \n      float lightDistance = length(lightVector);\n      float lightFalloff = 1.0 / (uConstantAttenuation + lightDistance * uLinearAttenuation + (lightDistance * lightDistance) * uQuadraticAttenuation);\n\n      vec3 lightDirection = (uViewMatrix * vec4(uSpotLightDirection[j], 0.0)).xyz;\n      float spotDot = dot(normalize(lightVector), normalize(lightDirection));\n      float spotFalloff;\n      if(spotDot < uSpotLightAngle[j]) {\n        spotFalloff = 0.0;\n      }\n      else {\n        spotFalloff = pow(spotDot, uSpotLightConc[j]);\n      }\n      lightFalloff *= spotFalloff;\n\n      vec3 lightColor = uSpotLightDiffuseColors[j];\n      vec3 specularColor = uSpotLightSpecularColors[j];\n     \n      LightResult result = _light(viewDirection, normal, lightVector);\n      \n      totalDiffuse += result.diffuse * lightColor * lightFalloff;\n      totalSpecular += result.specular * lightColor * specularColor * lightFalloff;\n    }\n  }\n\n  totalDiffuse *= diffuseFactor;\n  totalSpecular *= specularFactor;\n}\n",c={immediateVert:"attribute vec3 aPosition;\nattribute vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform float uResolution;\nuniform float uPointSize;\n\nvarying vec4 vColor;\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vColor = aVertexColor;\n  gl_PointSize = uPointSize;\n}\n",vertexColorVert:"attribute vec3 aPosition;\nattribute vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vColor = aVertexColor;\n}\n",vertexColorFrag:"precision mediump float;\nvarying vec4 vColor;\nvoid main(void) {\n  gl_FragColor = vColor;\n}",normalVert:"attribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\n\nvarying vec3 vVertexNormal;\nvarying highp vec2 vVertTexCoord;\n\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vVertexNormal = normalize(vec3( uNormalMatrix * aNormal ));\n  vVertTexCoord = aTexCoord;\n}\n",normalFrag:"precision mediump float;\nvarying vec3 vVertexNormal;\nvoid main(void) {\n  gl_FragColor = vec4(vVertexNormal, 1.0);\n}",basicFrag:"precision mediump float;\nuniform vec4 uMaterialColor;\nvoid main(void) {\n  gl_FragColor = uMaterialColor;\n}",lightVert:h+"// include lighting.glgl\n\nattribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\n\nvarying highp vec2 vVertTexCoord;\nvarying vec3 vDiffuseColor;\nvarying vec3 vSpecularColor;\n\nvoid main(void) {\n\n  vec4 viewModelPosition = uModelViewMatrix * vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * viewModelPosition;\n\n  vec3 vertexNormal = normalize(uNormalMatrix * aNormal);\n  vVertTexCoord = aTexCoord;\n\n  totalLight(viewModelPosition.xyz, vertexNormal, vDiffuseColor, vSpecularColor);\n\n  for (int i = 0; i < 8; i++) {\n    if (i < uAmbientLightCount) {\n      vDiffuseColor += uAmbientColor[i];\n    }\n  }\n}\n",lightTextureFrag:"precision highp float;\n\nuniform vec4 uMaterialColor;\nuniform vec4 uTint;\nuniform sampler2D uSampler;\nuniform bool isTexture;\nuniform bool uEmissive;\n\nvarying highp vec2 vVertTexCoord;\nvarying vec3 vDiffuseColor;\nvarying vec3 vSpecularColor;\n\nvoid main(void) {\n  if(uEmissive && !isTexture) {\n    gl_FragColor = uMaterialColor;\n  }\n  else {\n    gl_FragColor = isTexture ? texture2D(uSampler, vVertTexCoord) * (uTint / vec4(255, 255, 255, 255)) : uMaterialColor;\n    gl_FragColor.rgb = gl_FragColor.rgb * vDiffuseColor + vSpecularColor;\n  }\n}",phongVert:"precision highp float;\nprecision highp int;\n\nattribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\n\nuniform vec3 uAmbientColor[5];\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\nuniform int uAmbientLightCount;\n\nvarying vec3 vNormal;\nvarying vec2 vTexCoord;\nvarying vec3 vViewPosition;\nvarying vec3 vAmbientColor;\n\nvoid main(void) {\n\n  vec4 viewModelPosition = uModelViewMatrix * vec4(aPosition, 1.0);\n\n  // Pass varyings to fragment shader\n  vViewPosition = viewModelPosition.xyz;\n  gl_Position = uProjectionMatrix * viewModelPosition;  \n\n  vNormal = uNormalMatrix * aNormal;\n  vTexCoord = aTexCoord;\n\n  // TODO: this should be a uniform\n  vAmbientColor = vec3(0.0);\n  for (int i = 0; i < 5; i++) {\n    if (i < uAmbientLightCount) {\n      vAmbientColor += uAmbientColor[i];\n    }\n  }\n}\n",phongFrag:h+"// include lighting.glsl\nprecision highp float;\nprecision highp int;\n\nuniform vec4 uMaterialColor;\nuniform vec4 uTint;\nuniform sampler2D uSampler;\nuniform bool isTexture;\nuniform bool uEmissive;\n\nvarying vec3 vNormal;\nvarying vec2 vTexCoord;\nvarying vec3 vViewPosition;\nvarying vec3 vAmbientColor;\n\nvoid main(void) {\n\n  vec3 diffuse;\n  vec3 specular;\n  totalLight(vViewPosition, normalize(vNormal), diffuse, specular);\n\n  if(uEmissive && !isTexture) {\n    gl_FragColor = uMaterialColor;\n  }\n  else {\n    gl_FragColor = isTexture ? texture2D(uSampler, vTexCoord) * (uTint / vec4(255, 255, 255, 255)) : uMaterialColor;\n    gl_FragColor.rgb = gl_FragColor.rgb * (diffuse + vAmbientColor) + specular;\n  }\n}",fontVert:"precision mediump float;\n\nattribute vec3 aPosition;\nattribute vec2 aTexCoord;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nuniform vec4 uGlyphRect;\nuniform float uGlyphOffset;\n\nvarying vec2 vTexCoord;\nvarying float w;\n\nvoid main() {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n\n  // scale by the size of the glyph's rectangle\n  positionVec4.xy *= uGlyphRect.zw - uGlyphRect.xy;\n\n  // move to the corner of the glyph\n  positionVec4.xy += uGlyphRect.xy;\n\n  // move to the letter's line offset\n  positionVec4.x += uGlyphOffset;\n  \n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vTexCoord = aTexCoord;\n  w = gl_Position.w;\n}\n",fontFrag:"#extension GL_OES_standard_derivatives : enable\nprecision mediump float;\n\n#if 0\n  // simulate integer math using floats\n\t#define int float\n\t#define ivec2 vec2\n\t#define INT(x) float(x)\n\n\tint ifloor(float v) { return floor(v); }\n\tivec2 ifloor(vec2 v) { return floor(v); }\n\n#else\n  // use native integer math\n\tprecision highp int;\n\t#define INT(x) x\n\n\tint ifloor(float v) { return int(v); }\n\tint ifloor(int v) { return v; }\n\tivec2 ifloor(vec2 v) { return ivec2(v); }\n\n#endif\n\nuniform sampler2D uSamplerStrokes;\nuniform sampler2D uSamplerRowStrokes;\nuniform sampler2D uSamplerRows;\nuniform sampler2D uSamplerColStrokes;\nuniform sampler2D uSamplerCols;\n\nuniform ivec2 uStrokeImageSize;\nuniform ivec2 uCellsImageSize;\nuniform ivec2 uGridImageSize;\n\nuniform ivec2 uGridOffset;\nuniform ivec2 uGridSize;\nuniform vec4 uMaterialColor;\n\nvarying vec2 vTexCoord;\n\n// some helper functions\nint round(float v) { return ifloor(v + 0.5); }\nivec2 round(vec2 v) { return ifloor(v + 0.5); }\nfloat saturate(float v) { return clamp(v, 0.0, 1.0); }\nvec2 saturate(vec2 v) { return clamp(v, 0.0, 1.0); }\n\nint mul(float v1, int v2) {\n  return ifloor(v1 * float(v2));\n}\n\nivec2 mul(vec2 v1, ivec2 v2) {\n  return ifloor(v1 * vec2(v2) + 0.5);\n}\n\n// unpack a 16-bit integer from a float vec2\nint getInt16(vec2 v) {\n  ivec2 iv = round(v * 255.0);\n  return iv.x * INT(128) + iv.y;\n}\n\nvec2 pixelScale;\nvec2 coverage = vec2(0.0);\nvec2 weight = vec2(0.5);\nconst float minDistance = 1.0/8192.0;\nconst float hardness = 1.05; // amount of antialias\n\n// the maximum number of curves in a glyph\nconst int N = INT(250);\n\n// retrieves an indexed pixel from a sampler\nvec4 getTexel(sampler2D sampler, int pos, ivec2 size) {\n  int width = size.x;\n  int y = ifloor(pos / width);\n  int x = pos - y * width;  // pos % width\n\n  return texture2D(sampler, (vec2(x, y) + 0.5) / vec2(size));\n}\n\nvoid calulateCrossings(vec2 p0, vec2 p1, vec2 p2, out vec2 C1, out vec2 C2) {\n\n  // get the coefficients of the quadratic in t\n  vec2 a = p0 - p1 * 2.0 + p2;\n  vec2 b = p0 - p1;\n  vec2 c = p0 - vTexCoord;\n\n  // found out which values of 't' it crosses the axes\n  vec2 surd = sqrt(max(vec2(0.0), b * b - a * c));\n  vec2 t1 = ((b - surd) / a).yx;\n  vec2 t2 = ((b + surd) / a).yx;\n\n  // approximate straight lines to avoid rounding errors\n  if (abs(a.y) < 0.001)\n    t1.x = t2.x = c.y / (2.0 * b.y);\n\n  if (abs(a.x) < 0.001)\n    t1.y = t2.y = c.x / (2.0 * b.x);\n\n  // plug into quadratic formula to find the corrdinates of the crossings\n  C1 = ((a * t1 - b * 2.0) * t1 + c) * pixelScale;\n  C2 = ((a * t2 - b * 2.0) * t2 + c) * pixelScale;\n}\n\nvoid coverageX(vec2 p0, vec2 p1, vec2 p2) {\n\n  vec2 C1, C2;\n  calulateCrossings(p0, p1, p2, C1, C2);\n\n  // determine on which side of the x-axis the points lie\n  bool y0 = p0.y > vTexCoord.y;\n  bool y1 = p1.y > vTexCoord.y;\n  bool y2 = p2.y > vTexCoord.y;\n\n  // could web be under the curve (after t1)?\n  if (y1 ? !y2 : y0) {\n    // add the coverage for t1\n    coverage.x += saturate(C1.x + 0.5);\n    // calculate the anti-aliasing for t1\n    weight.x = min(weight.x, abs(C1.x));\n  }\n\n  // are we outside the curve (after t2)?\n  if (y1 ? !y0 : y2) {\n    // subtract the coverage for t2\n    coverage.x -= saturate(C2.x + 0.5);\n    // calculate the anti-aliasing for t2\n    weight.x = min(weight.x, abs(C2.x));\n  }\n}\n\n// this is essentially the same as coverageX, but with the axes swapped\nvoid coverageY(vec2 p0, vec2 p1, vec2 p2) {\n\n  vec2 C1, C2;\n  calulateCrossings(p0, p1, p2, C1, C2);\n\n  bool x0 = p0.x > vTexCoord.x;\n  bool x1 = p1.x > vTexCoord.x;\n  bool x2 = p2.x > vTexCoord.x;\n\n  if (x1 ? !x2 : x0) {\n    coverage.y -= saturate(C1.y + 0.5);\n    weight.y = min(weight.y, abs(C1.y));\n  }\n\n  if (x1 ? !x0 : x2) {\n    coverage.y += saturate(C2.y + 0.5);\n    weight.y = min(weight.y, abs(C2.y));\n  }\n}\n\nvoid main() {\n\n  // calculate the pixel scale based on screen-coordinates\n  pixelScale = hardness / fwidth(vTexCoord);\n\n  // which grid cell is this pixel in?\n  ivec2 gridCoord = ifloor(vTexCoord * vec2(uGridSize));\n\n  // intersect curves in this row\n  {\n    // the index into the row info bitmap\n    int rowIndex = gridCoord.y + uGridOffset.y;\n    // fetch the info texel\n    vec4 rowInfo = getTexel(uSamplerRows, rowIndex, uGridImageSize);\n    // unpack the rowInfo\n    int rowStrokeIndex = getInt16(rowInfo.xy);\n    int rowStrokeCount = getInt16(rowInfo.zw);\n\n    for (int iRowStroke = INT(0); iRowStroke < N; iRowStroke++) {\n      if (iRowStroke >= rowStrokeCount)\n        break;\n\n      // each stroke is made up of 3 points: the start and control point\n      // and the start of the next curve.\n      // fetch the indices of this pair of strokes:\n      vec4 strokeIndices = getTexel(uSamplerRowStrokes, rowStrokeIndex++, uCellsImageSize);\n\n      // unpack the stroke index\n      int strokePos = getInt16(strokeIndices.xy);\n\n      // fetch the two strokes\n      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);\n      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);\n\n      // calculate the coverage\n      coverageX(stroke0.xy, stroke0.zw, stroke1.xy);\n    }\n  }\n\n  // intersect curves in this column\n  {\n    int colIndex = gridCoord.x + uGridOffset.x;\n    vec4 colInfo = getTexel(uSamplerCols, colIndex, uGridImageSize);\n    int colStrokeIndex = getInt16(colInfo.xy);\n    int colStrokeCount = getInt16(colInfo.zw);\n    \n    for (int iColStroke = INT(0); iColStroke < N; iColStroke++) {\n      if (iColStroke >= colStrokeCount)\n        break;\n\n      vec4 strokeIndices = getTexel(uSamplerColStrokes, colStrokeIndex++, uCellsImageSize);\n\n      int strokePos = getInt16(strokeIndices.xy);\n      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);\n      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);\n      coverageY(stroke0.xy, stroke0.zw, stroke1.xy);\n    }\n  }\n\n  weight = saturate(1.0 - weight * 2.0);\n  float distance = max(weight.x + weight.y, minDistance); // manhattan approx.\n  float antialias = abs(dot(coverage, weight) / distance);\n  float cover = min(abs(coverage.x), abs(coverage.y));\n  gl_FragColor = uMaterialColor;\n  gl_FragColor.a *= saturate(max(antialias, cover));\n}",lineVert:"/*\n  Part of the Processing project - http://processing.org\n  Copyright (c) 2012-15 The Processing Foundation\n  Copyright (c) 2004-12 Ben Fry and Casey Reas\n  Copyright (c) 2001-04 Massachusetts Institute of Technology\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation, version 2.1.\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n*/\n\n#define PROCESSING_LINE_SHADER\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform float uStrokeWeight;\n\nuniform vec4 uViewport;\nuniform int uPerspective;\n\nattribute vec4 aPosition;\nattribute vec4 aDirection;\n  \nvoid main() {\n  // using a scale <1 moves the lines towards the camera\n  // in order to prevent popping effects due to half of\n  // the line disappearing behind the geometry faces.\n  vec3 scale = vec3(0.9995);\n\n  vec4 posp = uModelViewMatrix * aPosition;\n  vec4 posq = uModelViewMatrix * (aPosition + vec4(aDirection.xyz, 0));\n\n  // Moving vertices slightly toward the camera\n  // to avoid depth-fighting with the fill triangles.\n  // Discussed here:\n  // http://www.opengl.org/discussion_boards/ubbthreads.php?ubb=showflat&Number=252848  \n  posp.xyz = posp.xyz * scale;\n  posq.xyz = posq.xyz * scale;\n\n  vec4 p = uProjectionMatrix * posp;\n  vec4 q = uProjectionMatrix * posq;\n\n  // formula to convert from clip space (range -1..1) to screen space (range 0..[width or height])\n  // screen_p = (p.xy/p.w + <1,1>) * 0.5 * uViewport.zw\n\n  // prevent division by W by transforming the tangent formula (div by 0 causes\n  // the line to disappear, see https://github.com/processing/processing/issues/5183)\n  // t = screen_q - screen_p\n  //\n  // tangent is normalized and we don't care which aDirection it points to (+-)\n  // t = +- normalize( screen_q - screen_p )\n  // t = +- normalize( (q.xy/q.w+<1,1>)*0.5*uViewport.zw - (p.xy/p.w+<1,1>)*0.5*uViewport.zw )\n  //\n  // extract common factor, <1,1> - <1,1> cancels out\n  // t = +- normalize( (q.xy/q.w - p.xy/p.w) * 0.5 * uViewport.zw )\n  //\n  // convert to common divisor\n  // t = +- normalize( ((q.xy*p.w - p.xy*q.w) / (p.w*q.w)) * 0.5 * uViewport.zw )\n  //\n  // remove the common scalar divisor/factor, not needed due to normalize and +-\n  // (keep uViewport - can't remove because it has different components for x and y\n  //  and corrects for aspect ratio, see https://github.com/processing/processing/issues/5181)\n  // t = +- normalize( (q.xy*p.w - p.xy*q.w) * uViewport.zw )\n\n  vec2 tangent = normalize((q.xy*p.w - p.xy*q.w) * uViewport.zw);\n\n  // flip tangent to normal (it's already normalized)\n  vec2 normal = vec2(-tangent.y, tangent.x);\n\n  float thickness = aDirection.w * uStrokeWeight;\n  vec2 offset = normal * thickness / 2.0;\n\n  vec2 curPerspScale;\n\n  if(uPerspective == 1) {\n    // Perspective ---\n    // convert from world to clip by multiplying with projection scaling factor\n    // to get the right thickness (see https://github.com/processing/processing/issues/5182)\n    // invert Y, projections in Processing invert Y\n    curPerspScale = (uProjectionMatrix * vec4(1, -1, 0, 0)).xy;\n  } else {\n    // No Perspective ---\n    // multiply by W (to cancel out division by W later in the pipeline) and\n    // convert from screen to clip (derived from clip to screen above)\n    curPerspScale = p.w / (0.5 * uViewport.zw);\n  }\n\n  gl_Position.xy = p.xy + offset.xy * curPerspScale;\n  gl_Position.zw = p.zw;\n}\n",lineFrag:"precision mediump float;\nprecision mediump int;\n\nuniform vec4 uMaterialColor;\n\nvoid main() {\n  gl_FragColor = uMaterialColor;\n}",pointVert:"attribute vec3 aPosition;\nuniform float uPointSize;\nvarying float vStrokeWeight;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nvoid main() {\n\tvec4 positionVec4 =  vec4(aPosition, 1.0);\n\tgl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n\tgl_PointSize = uPointSize;\n\tvStrokeWeight = uPointSize;\n}",pointFrag:"precision mediump float;\nprecision mediump int;\nuniform vec4 uMaterialColor;\nvarying float vStrokeWeight;\n\nvoid main(){\n\tfloat mask = 0.0;\n\n\t// make a circular mask using the gl_PointCoord (goes from 0 - 1 on a point)\n    // might be able to get a nicer edge on big strokeweights with smoothstep but slightly less performant\n\n\tmask = step(0.98, length(gl_PointCoord * 2.0 - 1.0));\n\n\t// if strokeWeight is 1 or less lets just draw a square\n\t// this prevents weird artifacting from carving circles when our points are really small\n\t// if strokeWeight is larger than 1, we just use it as is\n\n\tmask = mix(0.0, mask, clamp(floor(vStrokeWeight - 0.5),0.0,1.0));\n\n\t// throw away the borders of the mask\n    // otherwise we get weird alpha blending issues\n\n\tif(mask > 0.98){\n      discard;\n  \t}\n\n  \tgl_FragColor = vec4(uMaterialColor.rgb * (1.0 - mask), uMaterialColor.a) ;\n}"};u.default.RendererGL=function(e,t,r,i){return u.default.Renderer.call(this,e,t,r),this._setAttributeDefaults(t),this._initContext(),this.isP3D=!0,this.GL=this.drawingContext,this._pInst._setProperty("drawingContext",this.drawingContext),this._isErasing=!1,this._enableLighting=!1,this.ambientLightColors=[],this.specularColors=[1,1,1],this.directionalLightDirections=[],this.directionalLightDiffuseColors=[],this.directionalLightSpecularColors=[],this.pointLightPositions=[],this.pointLightDiffuseColors=[],this.pointLightSpecularColors=[],this.spotLightPositions=[],this.spotLightDirections=[],this.spotLightDiffuseColors=[],this.spotLightSpecularColors=[],this.spotLightAngle=[],this.spotLightConc=[],this.drawMode=a.FILL,this.curFillColor=this._cachedFillStyle=[1,1,1,1],this.curStrokeColor=this._cachedStrokeStyle=[0,0,0,1],this.curBlendMode=a.BLEND,this._cachedBlendMode=void 0,this.blendExt=this.GL.getExtension("EXT_blend_minmax"),this._isBlending=!1,this._useSpecularMaterial=!1,this._useEmissiveMaterial=!1,this._useNormalMaterial=!1,this._useShininess=1,this._tint=[255,255,255,255],this.constantAttenuation=1,this.linearAttenuation=0,this.quadraticAttenuation=0,this.uMVMatrix=new u.default.Matrix,this.uPMatrix=new u.default.Matrix,this.uNMatrix=new u.default.Matrix("mat3"),this._curCamera=new u.default.Camera(this),this._curCamera._computeCameraDefaultSettings(),this._curCamera._setDefaultCamera(),this._defaultLightShader=void 0,this._defaultImmediateModeShader=void 0,this._defaultNormalShader=void 0,this._defaultColorShader=void 0,this._defaultPointShader=void 0,this.userFillShader=void 0,this.userStrokeShader=void 0,this.userPointShader=void 0,this.retainedMode={geometry:{},buffers:{stroke:[new u.default.RenderBuffer(3,"lineVertices","lineVertexBuffer","aPosition",this,this._flatten),new u.default.RenderBuffer(4,"lineNormals","lineNormalBuffer","aDirection",this,this._flatten)],fill:[new u.default.RenderBuffer(3,"vertices","vertexBuffer","aPosition",this,this._vToNArray),new u.default.RenderBuffer(3,"vertexNormals","normalBuffer","aNormal",this,this._vToNArray),new u.default.RenderBuffer(4,"vertexColors","colorBuffer","aMaterialColor",this),new u.default.RenderBuffer(3,"vertexAmbients","ambientBuffer","aAmbientColor",this),new u.default.RenderBuffer(2,"uvs","uvBuffer","aTexCoord",this,this._flatten)],text:[new u.default.RenderBuffer(3,"vertices","vertexBuffer","aPosition",this,this._vToNArray),new u.default.RenderBuffer(2,"uvs","uvBuffer","aTexCoord",this,this._flatten)]}},this.immediateMode={geometry:new u.default.Geometry,shapeMode:a.TRIANGLE_FAN,_bezierVertex:[],_quadraticVertex:[],_curveVertex:[],buffers:{fill:[new u.default.RenderBuffer(3,"vertices","vertexBuffer","aPosition",this,this._vToNArray),new u.default.RenderBuffer(3,"vertexNormals","normalBuffer","aNormal",this,this._vToNArray),new u.default.RenderBuffer(4,"vertexColors","colorBuffer","aVertexColor",this),new u.default.RenderBuffer(3,"vertexAmbients","ambientBuffer","aAmbientColor",this),new u.default.RenderBuffer(2,"uvs","uvBuffer","aTexCoord",this,this._flatten)],stroke:[new u.default.RenderBuffer(3,"lineVertices","lineVertexBuffer","aPosition",this,this._flatten),new u.default.RenderBuffer(4,"lineNormals","lineNormalBuffer","aDirection",this,this._flatten)],point:this.GL.createBuffer()}},this.pointSize=5,this.curStrokeWeight=1,this.textures=[],this.textureMode=a.IMAGE,this.textureWrapX=a.CLAMP,this.textureWrapY=a.CLAMP,this._tex=null,this._curveTightness=6,this._lookUpTableBezier=[],this._lookUpTableQuadratic=[],this._lutBezierDetail=0,this._lutQuadraticDetail=0,this._tessy=this._initTessy(),this.fontInfos={},this._curShader=void 0,this},u.default.RendererGL.prototype=Object.create(u.default.Renderer.prototype),u.default.RendererGL.prototype._setAttributeDefaults=function(e){var t={alpha:!0,depth:!0,stencil:!0,antialias:navigator.userAgent.toLowerCase().includes("safari"),premultipliedAlpha:!1,preserveDrawingBuffer:!0,perPixelLighting:!0};null===e._glAttributes?e._glAttributes=t:e._glAttributes=Object.assign(t,e._glAttributes)},u.default.RendererGL.prototype._initContext=function(){try{if(this.drawingContext=this.canvas.getContext("webgl",this._pInst._glAttributes)||this.canvas.getContext("experimental-webgl",this._pInst._glAttributes),null===this.drawingContext)throw new Error("Error creating webgl context");var e=this.drawingContext;e.enable(e.DEPTH_TEST),e.depthFunc(e.LEQUAL),e.viewport(0,0,e.drawingBufferWidth,e.drawingBufferHeight),this._viewport=this.drawingContext.getParameter(this.drawingContext.VIEWPORT)}catch(e){throw e}},u.default.RendererGL.prototype._resetContext=function(e,t){var r=this.width,i=this.height,n=this.canvas.id,a=this._pInst instanceof u.default.Graphics;if(a){var o=this._pInst;o.canvas.parentNode.removeChild(o.canvas),o.canvas=document.createElement("canvas"),(o._pInst._userNode||document.body).appendChild(o.canvas),u.default.Element.call(o,o.canvas,o._pInst),o.width=r,o.height=i}else{var s=this.canvas;s&&s.parentNode.removeChild(s),(s=document.createElement("canvas")).id=n,this._pInst._userNode?this._pInst._userNode.appendChild(s):document.body.appendChild(s),this._pInst.canvas=s}var l=new u.default.RendererGL(this._pInst.canvas,this._pInst,!a);this._pInst._setProperty("_renderer",l),l.resize(r,i),l._applyDefaults(),a||this._pInst._elements.push(l),"function"==typeof t&&setTimeout(function(){t.apply(window._renderer,e)},0)},u.default.prototype.setAttributes=function(e,t){if(void 0!==this._glAttributes){var r=!0;if(void 0!==t?(null===this._glAttributes&&(this._glAttributes={}),this._glAttributes[e]!==t&&(this._glAttributes[e]=t,r=!1)):e instanceof Object&&this._glAttributes!==e&&(this._glAttributes=e,r=!1),this._renderer.isP3D&&!r){if(!this._setupDone)for(var i in this._renderer.retainedMode.geometry)if(this._renderer.retainedMode.geometry.hasOwnProperty(i))return void console.error("Sorry, Could not set the attributes, you need to call setAttributes() before calling the other drawing methods in setup()");this.push(),this._renderer._resetContext(),this.pop(),this._renderer._curCamera&&(this._renderer._curCamera._renderer=this._renderer)}}else console.log("You are trying to use setAttributes on a p5.Graphics object that does not use a WEBGL renderer.")},u.default.RendererGL.prototype._update=function(){this.uMVMatrix.set(this._curCamera.cameraMatrix.mat4[0],this._curCamera.cameraMatrix.mat4[1],this._curCamera.cameraMatrix.mat4[2],this._curCamera.cameraMatrix.mat4[3],this._curCamera.cameraMatrix.mat4[4],this._curCamera.cameraMatrix.mat4[5],this._curCamera.cameraMatrix.mat4[6],this._curCamera.cameraMatrix.mat4[7],this._curCamera.cameraMatrix.mat4[8],this._curCamera.cameraMatrix.mat4[9],this._curCamera.cameraMatrix.mat4[10],this._curCamera.cameraMatrix.mat4[11],this._curCamera.cameraMatrix.mat4[12],this._curCamera.cameraMatrix.mat4[13],this._curCamera.cameraMatrix.mat4[14],this._curCamera.cameraMatrix.mat4[15]),this.ambientLightColors.length=0,this.specularColors=[1,1,1],this.directionalLightDirections.length=0,this.directionalLightDiffuseColors.length=0,this.directionalLightSpecularColors.length=0,this.pointLightPositions.length=0,this.pointLightDiffuseColors.length=0,this.pointLightSpecularColors.length=0,this.spotLightPositions.length=0,this.spotLightDirections.length=0,this.spotLightDiffuseColors.length=0,this.spotLightSpecularColors.length=0,this.spotLightAngle.length=0,this.spotLightConc.length=0,this._enableLighting=!1,this._tint=[255,255,255,255],this.GL.clear(this.GL.DEPTH_BUFFER_BIT)},u.default.RendererGL.prototype.background=function(){var e,t=(e=this._pInst).color.apply(e,arguments),r=t.levels[0]/255,i=t.levels[1]/255,n=t.levels[2]/255,a=t.levels[3]/255;this.GL.clearColor(r,i,n,a),this.GL.clear(this.GL.COLOR_BUFFER_BIT)},u.default.RendererGL.prototype.fill=function(e,t,r,i){var n=u.default.prototype.color.apply(this._pInst,arguments);this.curFillColor=n._array,this.drawMode=a.FILL,this._useNormalMaterial=!1,this._tex=null},u.default.RendererGL.prototype.stroke=function(e,t,r,i){arguments[3]=255;var n=u.default.prototype.color.apply(this._pInst,arguments);this.curStrokeColor=n._array},u.default.RendererGL.prototype.strokeCap=function(e){console.error("Sorry, strokeCap() is not yet implemented in WEBGL mode")},u.default.RendererGL.prototype.strokeJoin=function(e){console.error("Sorry, strokeJoin() is not yet implemented in WEBGL mode")},u.default.RendererGL.prototype.filter=function(e){console.error("filter() does not work in WEBGL mode")},u.default.RendererGL.prototype.blendMode=function(e){e===a.DARKEST||e===a.LIGHTEST||e===a.ADD||e===a.BLEND||e===a.SUBTRACT||e===a.SCREEN||e===a.EXCLUSION||e===a.REPLACE||e===a.MULTIPLY||e===a.REMOVE?this.curBlendMode=e:e!==a.BURN&&e!==a.OVERLAY&&e!==a.HARD_LIGHT&&e!==a.SOFT_LIGHT&&e!==a.DODGE||console.warn("BURN, OVERLAY, HARD_LIGHT, SOFT_LIGHT, and DODGE only work for blendMode in 2D mode.")},u.default.RendererGL.prototype.erase=function(e,t){this._isErasing||(this._applyBlendMode(a.REMOVE),this._isErasing=!0,this._cachedFillStyle=this.curFillColor.slice(),this.curFillColor=[1,1,1,e/255],this._cachedStrokeStyle=this.curStrokeColor.slice(),this.curStrokeColor=[1,1,1,t/255])},u.default.RendererGL.prototype.noErase=function(){this._isErasing&&(this._isErasing=!1,this.curFillColor=this._cachedFillStyle.slice(),this.curStrokeColor=this._cachedStrokeStyle.slice(),this.blendMode(this._cachedBlendMode))},u.default.RendererGL.prototype.strokeWeight=function(e){this.curStrokeWeight!==e&&(this.pointSize=e,this.curStrokeWeight=e)},u.default.RendererGL.prototype._getPixel=function(e,t){var r;return r=new Uint8Array(4),this.drawingContext.readPixels(e,t,1,1,this.drawingContext.RGBA,this.drawingContext.UNSIGNED_BYTE,r),[r[0],r[1],r[2],r[3]]},u.default.RendererGL.prototype.loadPixels=function(){var e=this._pixelsState;if(!0===this._pInst._glAttributes.preserveDrawingBuffer){var t=e.pixels,r=this.GL.drawingBufferWidth*this.GL.drawingBufferHeight*4;t instanceof Uint8Array&&t.length===r||(t=new Uint8Array(r),this._pixelsState._setProperty("pixels",t));var i=this._pInst._pixelDensity;this.GL.readPixels(0,0,this.width*i,this.height*i,this.GL.RGBA,this.GL.UNSIGNED_BYTE,t)}else console.log("loadPixels only works in WebGL when preserveDrawingBuffer is true.")},u.default.RendererGL.prototype.geometryInHash=function(e){return void 0!==this.retainedMode.geometry[e]},u.default.RendererGL.prototype.resize=function(e,t){u.default.Renderer.prototype.resize.call(this,e,t),this.GL.viewport(0,0,this.GL.drawingBufferWidth,this.GL.drawingBufferHeight),this._viewport=this.GL.getParameter(this.GL.VIEWPORT),this._curCamera._resize();var r=this._pixelsState;void 0!==r.pixels&&r._setProperty("pixels",new Uint8Array(this.GL.drawingBufferWidth*this.GL.drawingBufferHeight*4))},u.default.RendererGL.prototype.clear=function(){var e=(arguments.length<=0?void 0:arguments[0])||0,t=(arguments.length<=1?void 0:arguments[1])||0,r=(arguments.length<=2?void 0:arguments[2])||0,i=(arguments.length<=3?void 0:arguments[3])||0;this.GL.clearColor(e,t,r,i),this.GL.clear(this.GL.COLOR_BUFFER_BIT|this.GL.DEPTH_BUFFER_BIT)},u.default.RendererGL.prototype.applyMatrix=function(e,t,r,i,n,a){16===arguments.length?u.default.Matrix.prototype.apply.apply(this.uMVMatrix,arguments):this.uMVMatrix.apply([e,t,0,0,r,i,0,0,0,0,1,0,n,a,0,1])},u.default.RendererGL.prototype.translate=function(e,t,r){return e instanceof u.default.Vector&&(r=e.z,t=e.y,e=e.x),this.uMVMatrix.translate([e,t,r]),this},u.default.RendererGL.prototype.scale=function(e,t,r){return this.uMVMatrix.scale(e,t,r),this},u.default.RendererGL.prototype.rotate=function(e,t){return void 0===t?this.rotateZ(e):(u.default.Matrix.prototype.rotate.apply(this.uMVMatrix,arguments),this)},u.default.RendererGL.prototype.rotateX=function(e){return this.rotate(e,1,0,0),this},u.default.RendererGL.prototype.rotateY=function(e){return this.rotate(e,0,1,0),this},u.default.RendererGL.prototype.rotateZ=function(e){return this.rotate(e,0,0,1),this},u.default.RendererGL.prototype.push=function(){var e=u.default.Renderer.prototype.push.apply(this),t=e.properties;return t.uMVMatrix=this.uMVMatrix.copy(),t.uPMatrix=this.uPMatrix.copy(),t._curCamera=this._curCamera,this._curCamera=this._curCamera.copy(),t.ambientLightColors=this.ambientLightColors.slice(),t.specularColors=this.specularColors.slice(),t.directionalLightDirections=this.directionalLightDirections.slice(),t.directionalLightDiffuseColors=this.directionalLightDiffuseColors.slice(),t.directionalLightSpecularColors=this.directionalLightSpecularColors.slice(),t.pointLightPositions=this.pointLightPositions.slice(),t.pointLightDiffuseColors=this.pointLightDiffuseColors.slice(),t.pointLightSpecularColors=this.pointLightSpecularColors.slice(),t.spotLightPositions=this.spotLightPositions.slice(),t.spotLightDirections=this.spotLightDirections.slice(),t.spotLightDiffuseColors=this.spotLightDiffuseColors.slice(),t.spotLightSpecularColors=this.spotLightSpecularColors.slice(),t.spotLightAngle=this.spotLightAngle.slice(),t.spotLightConc=this.spotLightConc.slice(),t.userFillShader=this.userFillShader,t.userStrokeShader=this.userStrokeShader,t.userPointShader=this.userPointShader,t.pointSize=this.pointSize,t.curStrokeWeight=this.curStrokeWeight,t.curStrokeColor=this.curStrokeColor,t.curFillColor=this.curFillColor,t._useSpecularMaterial=this._useSpecularMaterial,t._useEmissiveMaterial=this._useEmissiveMaterial,t._useShininess=this._useShininess,t.constantAttenuation=this.constantAttenuation,t.linearAttenuation=this.linearAttenuation,t.quadraticAttenuation=this.quadraticAttenuation,t._enableLighting=this._enableLighting,t._useNormalMaterial=this._useNormalMaterial,t._tex=this._tex,t.drawMode=this.drawMode,e},u.default.RendererGL.prototype.resetMatrix=function(){return this.uMVMatrix=u.default.Matrix.identity(this._pInst),this},u.default.RendererGL.prototype._getImmediateStrokeShader=function(){var e=this.userStrokeShader;return e&&e.isStrokeShader()?e:this._getLineShader()},u.default.RendererGL.prototype._getRetainedStrokeShader=u.default.RendererGL.prototype._getImmediateStrokeShader,u.default.RendererGL.prototype._getImmediateFillShader=function(){var e=this.userFillShader;if(this._useNormalMaterial&&(!e||!e.isNormalShader()))return this._getNormalShader();if(this._enableLighting){if(!e||!e.isLightShader())return this._getLightShader()}else if(this._tex){if(!e||!e.isTextureShader())return this._getLightShader()}else if(!e)return this._getImmediateModeShader();return e},u.default.RendererGL.prototype._getRetainedFillShader=function(){if(this._useNormalMaterial)return this._getNormalShader();var e=this.userFillShader;if(this._enableLighting){if(!e||!e.isLightShader())return this._getLightShader()}else if(this._tex){if(!e||!e.isTextureShader())return this._getLightShader()}else if(!e)return this._getColorShader();return e},u.default.RendererGL.prototype._getImmediatePointShader=function(){var e=this.userPointShader;return e&&e.isPointShader()?e:this._getPointShader()},u.default.RendererGL.prototype._getRetainedLineShader=u.default.RendererGL.prototype._getImmediateLineShader,u.default.RendererGL.prototype._getLightShader=function(){return this._defaultLightShader||(this._pInst._glAttributes.perPixelLighting?this._defaultLightShader=new u.default.Shader(this,c.phongVert,c.phongFrag):this._defaultLightShader=new u.default.Shader(this,c.lightVert,c.lightTextureFrag)),this._defaultLightShader},u.default.RendererGL.prototype._getImmediateModeShader=function(){return this._defaultImmediateModeShader||(this._defaultImmediateModeShader=new u.default.Shader(this,c.immediateVert,c.vertexColorFrag)),this._defaultImmediateModeShader},u.default.RendererGL.prototype._getNormalShader=function(){return this._defaultNormalShader||(this._defaultNormalShader=new u.default.Shader(this,c.normalVert,c.normalFrag)),this._defaultNormalShader},u.default.RendererGL.prototype._getColorShader=function(){return this._defaultColorShader||(this._defaultColorShader=new u.default.Shader(this,c.normalVert,c.basicFrag)),this._defaultColorShader},u.default.RendererGL.prototype._getPointShader=function(){return this._defaultPointShader||(this._defaultPointShader=new u.default.Shader(this,c.pointVert,c.pointFrag)),this._defaultPointShader},u.default.RendererGL.prototype._getLineShader=function(){return this._defaultLineShader||(this._defaultLineShader=new u.default.Shader(this,c.lineVert,c.lineFrag)),this._defaultLineShader},u.default.RendererGL.prototype._getFontShader=function(){return this._defaultFontShader||(this.GL.getExtension("OES_standard_derivatives"),this._defaultFontShader=new u.default.Shader(this,c.fontVert,c.fontFrag)),this._defaultFontShader},u.default.RendererGL.prototype._getEmptyTexture=function(){if(!this._emptyTexture){var e=new u.default.Image(1,1);e.set(0,0,255),this._emptyTexture=new u.default.Texture(this,e)}return this._emptyTexture},u.default.RendererGL.prototype.getTexture=function(e){var t=this.textures,r=!0,i=!1,n=void 0;try{for(var a,o=t[Symbol.iterator]();!(r=(a=o.next()).done);r=!0){var s=a.value;if(s.src===e)return s}}catch(e){i=!0,n=e}finally{try{r||null==o.return||o.return()}finally{if(i)throw n}}var l=new u.default.Texture(this,e);return t.push(l),l},u.default.RendererGL.prototype._setStrokeUniforms=function(e){e.bindShader(),e.setUniform("uMaterialColor",this.curStrokeColor),e.setUniform("uStrokeWeight",this.curStrokeWeight)},u.default.RendererGL.prototype._setFillUniforms=function(e){e.bindShader(),e.setUniform("uMaterialColor",this.curFillColor),e.setUniform("isTexture",!!this._tex),this._tex&&e.setUniform("uSampler",this._tex),e.setUniform("uTint",this._tint),e.setUniform("uSpecular",this._useSpecularMaterial),e.setUniform("uEmissive",this._useEmissiveMaterial),e.setUniform("uShininess",this._useShininess),e.setUniform("uUseLighting",this._enableLighting);var t=this.pointLightDiffuseColors.length/3;e.setUniform("uPointLightCount",t),e.setUniform("uPointLightLocation",this.pointLightPositions),e.setUniform("uPointLightDiffuseColors",this.pointLightDiffuseColors),e.setUniform("uPointLightSpecularColors",this.pointLightSpecularColors);var r=this.directionalLightDiffuseColors.length/3;e.setUniform("uDirectionalLightCount",r),e.setUniform("uLightingDirection",this.directionalLightDirections),e.setUniform("uDirectionalDiffuseColors",this.directionalLightDiffuseColors),e.setUniform("uDirectionalSpecularColors",this.directionalLightSpecularColors);var i=this.ambientLightColors.length/3;e.setUniform("uAmbientLightCount",i),e.setUniform("uAmbientColor",this.ambientLightColors);var n=this.spotLightDiffuseColors.length/3;e.setUniform("uSpotLightCount",n),e.setUniform("uSpotLightAngle",this.spotLightAngle),e.setUniform("uSpotLightConc",this.spotLightConc),e.setUniform("uSpotLightDiffuseColors",this.spotLightDiffuseColors),e.setUniform("uSpotLightSpecularColors",this.spotLightSpecularColors),e.setUniform("uSpotLightLocation",this.spotLightPositions),e.setUniform("uSpotLightDirection",this.spotLightDirections),e.setUniform("uConstantAttenuation",this.constantAttenuation),e.setUniform("uLinearAttenuation",this.linearAttenuation),e.setUniform("uQuadraticAttenuation",this.quadraticAttenuation),e.bindTextures()},u.default.RendererGL.prototype._setPointUniforms=function(e){e.bindShader(),e.setUniform("uMaterialColor",this.curStrokeColor),e.setUniform("uPointSize",this.pointSize*this._pInst._pixelDensity)},u.default.RendererGL.prototype._bindBuffer=function(e,t,r,i,n){if(t=t||this.GL.ARRAY_BUFFER,this.GL.bindBuffer(t,e),void 0!==r){var a=new(i||Float32Array)(r);this.GL.bufferData(t,a,n||this.GL.STATIC_DRAW)}},u.default.RendererGL.prototype._arraysEqual=function(e,t){var r=e.length;if(r!==t.length)return!1;for(var i=0;i<r;i++)if(e[i]!==t[i])return!1;return!0},u.default.RendererGL.prototype._isTypedArray=function(e){return Float32Array,Float64Array,Int16Array,Uint16Array,e instanceof Uint32Array},u.default.RendererGL.prototype._flatten=function(e){if(0===e.length)return[];if(2e4<e.length){var t,r=Object.prototype.toString,i=[],n=e.slice();for(t=n.pop();"[object Array]"===r.call(t)?n.push.apply(n,l(t)):i.push(t),n.length&&void 0!==(t=n.pop()););return i.reverse(),i}var a;return(a=[]).concat.apply(a,l(e))},u.default.RendererGL.prototype._vToNArray=function(e){var t=[],r=!0,i=!1,n=void 0;try{for(var a,o=e[Symbol.iterator]();!(r=(a=o.next()).done);r=!0){var s=a.value;t.push(s.x,s.y,s.z)}}catch(e){i=!0,n=e}finally{try{r||null==o.return||o.return()}finally{if(i)throw n}}return t},u.default.prototype._assert3d=function(e){if(!this._renderer.isP3D)throw new Error("".concat(e,"() is only supported in WEBGL mode. If you'd like to use 3D graphics and WebGL, see  https://p5js.org/examples/form-3d-primitives.html for more information."))},u.default.RendererGL.prototype._initTessy=function(){var e=new i.default.GluTesselator;return e.gluTessCallback(i.default.gluEnum.GLU_TESS_VERTEX_DATA,function(e,t){t[t.length]=e[0],t[t.length]=e[1],t[t.length]=e[2]}),e.gluTessCallback(i.default.gluEnum.GLU_TESS_BEGIN,function(e){e!==i.default.primitiveType.GL_TRIANGLES&&console.log("expected TRIANGLES but got type: ".concat(e))}),e.gluTessCallback(i.default.gluEnum.GLU_TESS_ERROR,function(e){console.log("error callback"),console.log("error number: ".concat(e))}),e.gluTessCallback(i.default.gluEnum.GLU_TESS_COMBINE,function(e,t,r){return[e[0],e[1],e[2]]}),e.gluTessCallback(i.default.gluEnum.GLU_TESS_EDGE_FLAG,function(e){}),e},u.default.RendererGL.prototype._triangulate=function(e){this._tessy.gluTessNormal(0,0,1);var t=[];this._tessy.gluTessBeginPolygon(t);for(var r=0;r<e.length;r++){this._tessy.gluTessBeginContour();for(var i=e[r],n=0;n<i.length;n+=3){var a=[i[n],i[n+1],i[n+2]];this._tessy.gluTessVertex(a,a)}this._tessy.gluTessEndContour()}return this._tessy.gluTessEndPolygon(),t},u.default.RendererGL.prototype._bezierCoefficients=function(e){var t=e*e,r=1-e,i=r*r;return[i*r,3*i*e,3*r*t,t*e]},u.default.RendererGL.prototype._quadraticCoefficients=function(e){var t=1-e;return[t*t,2*t*e,e*e]},u.default.RendererGL.prototype._bezierToCatmull=function(e){return[e[1],e[1]+(e[2]-e[0])/this._curveTightness,e[2]-(e[3]-e[1])/this._curveTightness,e[2]]};var f=u.default.RendererGL;r.default=f},{"../core/constants":26,"../core/main":36,"../core/p5.Renderer":39,"./p5.Camera":84,"./p5.Matrix":86,"./p5.Shader":91,libtess:10,path:13}],91:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,n=(i=e("../core/main"))&&i.__esModule?i:{default:i};n.default.Shader=function(e,t,r){this._renderer=e,this._vertSrc=t,this._fragSrc=r,this._vertShader=-1,this._fragShader=-1,this._glProgram=0,this._loadedAttributes=!1,this.attributes={},this._loadedUniforms=!1,this.uniforms={},this._bound=!1,this.samplers=[]},n.default.Shader.prototype.init=function(){if(0===this._glProgram){var e=this._renderer.GL;if(this._vertShader=e.createShader(e.VERTEX_SHADER),e.shaderSource(this._vertShader,this._vertSrc),e.compileShader(this._vertShader),!e.getShaderParameter(this._vertShader,e.COMPILE_STATUS))return console.error("Yikes! An error occurred compiling the vertex shader:".concat(e.getShaderInfoLog(this._vertShader))),null;if(this._fragShader=e.createShader(e.FRAGMENT_SHADER),e.shaderSource(this._fragShader,this._fragSrc),e.compileShader(this._fragShader),!e.getShaderParameter(this._fragShader,e.COMPILE_STATUS))return console.error("Darn! An error occurred compiling the fragment shader:".concat(e.getShaderInfoLog(this._fragShader))),null;this._glProgram=e.createProgram(),e.attachShader(this._glProgram,this._vertShader),e.attachShader(this._glProgram,this._fragShader),e.linkProgram(this._glProgram),e.getProgramParameter(this._glProgram,e.LINK_STATUS)||console.error("Snap! Error linking shader program: ".concat(e.getProgramInfoLog(this._glProgram))),this._loadAttributes(),this._loadUniforms()}return this},n.default.Shader.prototype._loadAttributes=function(){if(!this._loadedAttributes){this.attributes={};for(var e=this._renderer.GL,t=e.getProgramParameter(this._glProgram,e.ACTIVE_ATTRIBUTES),r=0;r<t;++r){var i=e.getActiveAttrib(this._glProgram,r),n=i.name,a=e.getAttribLocation(this._glProgram,n),o={};o.name=n,o.location=a,o.index=r,o.type=i.type,o.size=i.size,this.attributes[n]=o}this._loadedAttributes=!0}},n.default.Shader.prototype._loadUniforms=function(){if(!this._loadedUniforms){for(var e=this._renderer.GL,t=e.getProgramParameter(this._glProgram,e.ACTIVE_UNIFORMS),r=0,i=0;i<t;++i){var n=e.getActiveUniform(this._glProgram,i),a={};a.location=e.getUniformLocation(this._glProgram,n.name),a.size=n.size;var o=n.name;1<n.size&&(o=o.substring(0,o.indexOf("[0]"))),a.name=o,a.type=n.type,a._cachedData=void 0,a.type===e.SAMPLER_2D&&(a.samplerIndex=r,r++,this.samplers.push(a)),a.isArray=a.type===e.FLOAT_MAT3||a.type===e.FLOAT_MAT4||a.type===e.FLOAT_VEC2||a.type===e.FLOAT_VEC3||a.type===e.FLOAT_VEC4||a.type===e.INT_VEC2||a.type===e.INT_VEC3||a.type===e.INT_VEC4,this.uniforms[o]=a}this._loadedUniforms=!0}},n.default.Shader.prototype.compile=function(){},n.default.Shader.prototype.bindShader=function(){this.init(),this._bound||(this.useProgram(),this._bound=!0,this._setMatrixUniforms(),this.setUniform("uViewport",this._renderer._viewport))},n.default.Shader.prototype.unbindShader=function(){return this._bound&&(this.unbindTextures(),this._bound=!1),this},n.default.Shader.prototype.bindTextures=function(){var e=this._renderer.GL,t=!0,r=!1,i=void 0;try{for(var n,a=this.samplers[Symbol.iterator]();!(t=(n=a.next()).done);t=!0){var o=n.value,s=o.texture;void 0===s&&(s=this._renderer._getEmptyTexture()),e.activeTexture(e.TEXTURE0+o.samplerIndex),s.bindTexture(),s.update(),e.uniform1i(o.location,o.samplerIndex)}}catch(e){r=!0,i=e}finally{try{t||null==a.return||a.return()}finally{if(r)throw i}}},n.default.Shader.prototype.updateTextures=function(){var e=!0,t=!1,r=void 0;try{for(var i,n=this.samplers[Symbol.iterator]();!(e=(i=n.next()).done);e=!0){var a=i.value.texture;a&&a.update()}}catch(e){t=!0,r=e}finally{try{e||null==n.return||n.return()}finally{if(t)throw r}}},n.default.Shader.prototype.unbindTextures=function(){},n.default.Shader.prototype._setMatrixUniforms=function(){this.setUniform("uProjectionMatrix",this._renderer.uPMatrix.mat4),this.isStrokeShader()&&("default"===this._renderer._curCamera.cameraType?this.setUniform("uPerspective",1):this.setUniform("uPerspective",0)),this.setUniform("uModelViewMatrix",this._renderer.uMVMatrix.mat4),this.setUniform("uViewMatrix",this._renderer._curCamera.cameraMatrix.mat4),this.uniforms.uNormalMatrix&&(this._renderer.uNMatrix.inverseTranspose(this._renderer.uMVMatrix),this.setUniform("uNormalMatrix",this._renderer.uNMatrix.mat3))},n.default.Shader.prototype.useProgram=function(){var e=this._renderer.GL;return this._renderer._curShader!==this&&(e.useProgram(this._glProgram),this._renderer._curShader=this),this},n.default.Shader.prototype.setUniform=function(e,t){var r=this.uniforms[e];if(r){var i=this._renderer.GL;if(r.isArray){if(r._cachedData&&this._renderer._arraysEqual(r._cachedData,t))return;r._cachedData=t.slice(0)}else{if(r._cachedData&&r._cachedData===t)return;r._cachedData=t}var n=r.location;switch(this.useProgram(),r.type){case i.BOOL:!0===t?i.uniform1i(n,1):i.uniform1i(n,0);break;case i.INT:1<r.size?t.length&&i.uniform1iv(n,t):i.uniform1i(n,t);break;case i.FLOAT:1<r.size?t.length&&i.uniform1fv(n,t):i.uniform1f(n,t);break;case i.FLOAT_MAT3:i.uniformMatrix3fv(n,!1,t);break;case i.FLOAT_MAT4:i.uniformMatrix4fv(n,!1,t);break;case i.FLOAT_VEC2:1<r.size?t.length&&i.uniform2fv(n,t):i.uniform2f(n,t[0],t[1]);break;case i.FLOAT_VEC3:1<r.size?t.length&&i.uniform3fv(n,t):i.uniform3f(n,t[0],t[1],t[2]);break;case i.FLOAT_VEC4:1<r.size?t.length&&i.uniform4fv(n,t):i.uniform4f(n,t[0],t[1],t[2],t[3]);break;case i.INT_VEC2:1<r.size?t.length&&i.uniform2iv(n,t):i.uniform2i(n,t[0],t[1]);break;case i.INT_VEC3:1<r.size?t.length&&i.uniform3iv(n,t):i.uniform3i(n,t[0],t[1],t[2]);break;case i.INT_VEC4:1<r.size?t.length&&i.uniform4iv(n,t):i.uniform4i(n,t[0],t[1],t[2],t[3]);break;case i.SAMPLER_2D:i.activeTexture(i.TEXTURE0+r.samplerIndex),r.texture=this._renderer.getTexture(t),i.uniform1i(r.location,r.samplerIndex)}return this}},n.default.Shader.prototype.isLightShader=function(){return void 0!==this.attributes.aNormal||void 0!==this.uniforms.uUseLighting||void 0!==this.uniforms.uAmbientLightCount||void 0!==this.uniforms.uDirectionalLightCount||void 0!==this.uniforms.uPointLightCount||void 0!==this.uniforms.uAmbientColor||void 0!==this.uniforms.uDirectionalDiffuseColors||void 0!==this.uniforms.uDirectionalSpecularColors||void 0!==this.uniforms.uPointLightLocation||void 0!==this.uniforms.uPointLightDiffuseColors||void 0!==this.uniforms.uPointLightSpecularColors||void 0!==this.uniforms.uLightingDirection||void 0!==this.uniforms.uSpecular},n.default.Shader.prototype.isNormalShader=function(){return void 0!==this.attributes.aNormal},n.default.Shader.prototype.isTextureShader=function(){return 0<this.samplerIndex},n.default.Shader.prototype.isColorShader=function(){return void 0!==this.attributes.aVertexColor||void 0!==this.uniforms.uMaterialColor},n.default.Shader.prototype.isTexLightShader=function(){return this.isLightShader()&&this.isTextureShader()},n.default.Shader.prototype.isStrokeShader=function(){return void 0!==this.uniforms.uStrokeWeight},n.default.Shader.prototype.enableAttrib=function(e,t,r,i,n,a){if(e){0;var o=e.location;if(-1!==o){var s=this._renderer.GL;e.enabled||(s.enableVertexAttribArray(o),e.enabled=!0),this._renderer.GL.vertexAttribPointer(o,t,r||s.FLOAT,i||!1,n||0,a||0)}}return this};var a=n.default.Shader;r.default=a},{"../core/main":36}],92:[function(e,t,r){"use strict";function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,n=(i=e("../core/main"))&&i.__esModule?i:{default:i},s=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=l();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var a=i?Object.getOwnPropertyDescriptor(e,n):null;a&&(a.get||a.set)?Object.defineProperty(r,n,a):r[n]=e[n]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants"));function l(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return l=function(){return e},e}n.default.Texture=function(e,t){this._renderer=e;var r=this._renderer.GL;this.src=t,this.glTex=void 0,this.glTarget=r.TEXTURE_2D,this.glFormat=r.RGBA,this.mipmaps=!1,this.glMinFilter=r.LINEAR,this.glMagFilter=r.LINEAR,this.glWrapS=r.CLAMP_TO_EDGE,this.glWrapT=r.CLAMP_TO_EDGE,this.isSrcMediaElement=void 0!==n.default.MediaElement&&t instanceof n.default.MediaElement,this._videoPrevUpdateTime=0,this.isSrcHTMLElement=void 0!==n.default.Element&&t instanceof n.default.Element&&!(t instanceof n.default.Graphics),this.isSrcP5Image=t instanceof n.default.Image,this.isSrcP5Graphics=t instanceof n.default.Graphics,this.isImageData="undefined"!=typeof ImageData&&t instanceof ImageData;var i=this._getTextureDataFromSource();return this.width=i.width,this.height=i.height,this.init(i),this},n.default.Texture.prototype._getTextureDataFromSource=function(){var e;return this.isSrcP5Image?e=this.src.canvas:this.isSrcMediaElement||this.isSrcP5Graphics||this.isSrcHTMLElement?e=this.src.elt:this.isImageData&&(e=this.src),e},n.default.Texture.prototype.init=function(e){var t=this._renderer.GL;if(this.glTex=t.createTexture(),this.glWrapS=this._renderer.textureWrapX,this.glWrapT=this._renderer.textureWrapY,this.setWrapMode(this.glWrapS,this.glWrapT),this.bindTexture(),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,this.glMagFilter),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,this.glMinFilter),0===this.width||0===this.height||this.isSrcMediaElement&&!this.src.loadedmetadata){var r=new Uint8Array([1,1,1,1]);t.texImage2D(this.glTarget,0,t.RGBA,1,1,0,this.glFormat,t.UNSIGNED_BYTE,r)}else t.texImage2D(this.glTarget,0,this.glFormat,this.glFormat,t.UNSIGNED_BYTE,e)},n.default.Texture.prototype.update=function(){var e=this.src;if(0===e.width||0===e.height)return!1;var t=this._getTextureDataFromSource(),r=!1,i=this._renderer.GL;return t.width!==this.width||t.height!==this.height?(r=!0,this.width=t.width,this.height=t.height,this.isSrcP5Image?e.setModified(!1):(this.isSrcMediaElement||this.isSrcHTMLElement)&&e.setModified(!0)):this.isSrcP5Image?e.isModified()&&(r=!0,e.setModified(!1)):this.isSrcMediaElement?e.isModified()?(r=!0,e.setModified(!1)):e.loadedmetadata&&this._videoPrevUpdateTime!==e.time()&&(this._videoPrevUpdateTime=e.time(),r=!0):this.isImageData?e._dirty&&(r=!(e._dirty=!1)):r=!0,r&&(this.bindTexture(),i.texImage2D(this.glTarget,0,this.glFormat,this.glFormat,i.UNSIGNED_BYTE,t)),r},n.default.Texture.prototype.bindTexture=function(){return this._renderer.GL.bindTexture(this.glTarget,this.glTex),this},n.default.Texture.prototype.unbindTexture=function(){this._renderer.GL.bindTexture(this.glTarget,null)},n.default.Texture.prototype.setInterpolation=function(e,t){var r=this._renderer.GL;e===s.NEAREST?this.glMinFilter=r.NEAREST:this.glMinFilter=r.LINEAR,t===s.NEAREST?this.glMagFilter=r.NEAREST:this.glMagFilter=r.LINEAR,this.bindTexture(),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,this.glMinFilter),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,this.glMagFilter),this.unbindTexture()},n.default.Texture.prototype.setWrapMode=function(e,t){function r(e){return 0==(e&e-1)}var i=this._renderer.GL,n=r(this.width),a=r(this.height);e===s.REPEAT?n&&a?this.glWrapS=i.REPEAT:(console.warn("You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead"),this.glWrapS=i.CLAMP_TO_EDGE):e===s.MIRROR?n&&a?this.glWrapS=i.MIRRORED_REPEAT:(console.warn("You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead"),this.glWrapS=i.CLAMP_TO_EDGE):this.glWrapS=i.CLAMP_TO_EDGE,t===s.REPEAT?n&&a?this.glWrapT=i.REPEAT:(console.warn("You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead"),this.glWrapT=i.CLAMP_TO_EDGE):t===s.MIRROR?n&&a?this.glWrapT=i.MIRRORED_REPEAT:(console.warn("You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead"),this.glWrapT=i.CLAMP_TO_EDGE):this.glWrapT=i.CLAMP_TO_EDGE,this.bindTexture(),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,this.glWrapS),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,this.glWrapT),this.unbindTexture()};var a=n.default.Texture;r.default=a},{"../core/constants":26,"../core/main":36}],93:[function(e,t,r){"use strict";function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var i,j=(i=e("../core/main"))&&i.__esModule?i:{default:i},k=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var a=i?Object.getOwnPropertyDescriptor(e,n):null;a&&(a.get||a.set)?Object.defineProperty(r,n,a):r[n]=e[n]}r.default=e,t&&t.set(e,r);return r}(e("../core/constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}e("./p5.Shader"),e("./p5.RendererGL.Retained"),j.default.RendererGL.prototype._applyTextProperties=function(){},j.default.RendererGL.prototype.textWidth=function(e){return this._isOpenType()?this._textFont._textWidth(e,this._textSize):0};function n(e,t){this.width=e,this.height=t,this.infos=[],this.findImage=function(e){var t,r,i=this.width*this.height;if(i<e)throw new Error("font is too complex to render in 3D");for(var n=this.infos.length-1;0<=n;--n){var a=this.infos[n];if(a.index+e<i){r=(t=a).imageData;break}}if(!t){try{r=new ImageData(this.width,this.height)}catch(e){var o=document.getElementsByTagName("canvas")[0],s=!o;o||((o=document.createElement("canvas")).style.display="none",document.body.appendChild(o));var l=o.getContext("2d");l&&(r=l.createImageData(this.width,this.height)),s&&document.body.removeChild(o)}t={index:0,imageData:r},this.infos.push(t)}var u=t.index;return t.index+=e,r._dirty=!0,{imageData:r,index:u}}}function V(e,t,r,i,n){var a=e.imageData.data,o=4*e.index++;a[o++]=t,a[o++]=r,a[o++]=i,a[o++]=n}function A(e){this.font=e,this.strokeImageInfos=new n(64,64),this.colDimImageInfos=new n(64,64),this.rowDimImageInfos=new n(64,64),this.colCellImageInfos=new n(64,64),this.rowCellImageInfos=new n(64,64),this.glyphInfos={},this.getGlyphInfo=function(e){var t=this.glyphInfos[e.index];if(t)return t;var r,i=e.getBoundingBox(),n=i.x1,a=i.y1,o=i.x2-n,s=i.y2-a,l=e.path.commands;if(0==o||0==s||!l.length)return this.glyphInfos[e.index]={};var u,h,c,f,d=[],p=[],m=[];for(r=8;0<=r;--r)m.push([]);for(r=8;0<=r;--r)p.push([]);function v(e,t,r){var i=d.length;function n(e,t,r){for(var i=e.length;0<i--;){var n=e[i];n<t&&(t=n),r<n&&(r=n)}return{min:t,max:r}}d.push(r);for(var a=n(e,1,0),o=Math.max(Math.floor(9*a.min),0),s=Math.min(Math.ceil(9*a.max),9),l=o;l<s;++l)m[l].push(i);for(var u=n(t,1,0),h=Math.max(Math.floor(9*u.min),0),c=Math.min(Math.ceil(9*u.max),9),f=h;f<c;++f)p[f].push(i)}function y(e){return(t=(i=255)*e)<(r=0)?r:i<t?i:t;var t,r,i}function w(e,t,r,i){this.p0=e,this.c0=t,this.c1=r,this.p1=i,this.toQuadratic=function(){return{x:this.p0.x,y:this.p0.y,x1:this.p1.x,y1:this.p1.y,cx:(3*(this.c0.x+this.c1.x)-(this.p0.x+this.p1.x))/4,cy:(3*(this.c0.y+this.c1.y)-(this.p0.y+this.p1.y))/4}},this.quadError=function(){return j.default.Vector.sub(j.default.Vector.sub(this.p1,this.p0),j.default.Vector.mult(j.default.Vector.sub(this.c1,this.c0),3)).mag()/2},this.split=function(e){var t=j.default.Vector.lerp(this.p0,this.c0,e),r=j.default.Vector.lerp(this.c0,this.c1,e),i=j.default.Vector.lerp(t,r,e);this.c1=j.default.Vector.lerp(this.c1,this.p1,e),this.c0=j.default.Vector.lerp(r,this.c1,e);var n=j.default.Vector.lerp(i,this.c0,e),a=new w(this.p0,t,i,n);return this.p0=n,a},this.splitInflections=function(){var e=j.default.Vector.sub(this.c0,this.p0),t=j.default.Vector.sub(j.default.Vector.sub(this.c1,this.c0),e),r=j.default.Vector.sub(j.default.Vector.sub(j.default.Vector.sub(this.p1,this.c1),e),j.default.Vector.mult(t,2)),i=[],n=t.x*r.y-t.y*r.x;if(0!==n){var a=e.x*r.y-e.y*r.x,o=e.x*t.y-e.y*t.x,s=a*a-4*n*o;if(0<=s){n<0&&(n=-n,a=-a,o=-o);var l=Math.sqrt(s),u=(-a-l)/(2*n),h=(-a+l)/(2*n);0<u&&u<1&&(i.push(this.split(u)),h=1-(1-h)/(1-u)),0<h&&h<1&&i.push(this.split(h))}}return i.push(this),i}}function g(e,t,r,i,n,a,o,s){var l=new w(new j.default.Vector(e,t),new j.default.Vector(r,i),new j.default.Vector(n,a),new j.default.Vector(o,s)).splitInflections(),u=[],h=30/z,c=!0,f=!1,d=void 0;try{for(var p,m=l[Symbol.iterator]();!(c=(p=m.next()).done);c=!0){for(var v=p.value,y=[],g=void 0;!(.125<=(g=h/v.quadError()));){var b=Math.pow(g,1/3),_=v.split(b),x=v.split(1-b/(1-b));u.push(_),y.push(v),v=x}g<1&&u.push(v.split(.5)),u.push(v),Array.prototype.push.apply(u,y.reverse())}}catch(e){f=!0,d=e}finally{try{c||null==m.return||m.return()}finally{if(f)throw d}}return u}function b(e,t,r,i){v([e,r],[t,i],{x:e,y:t,cx:(e+r)/2,cy:(t+i)/2})}function _(e,t,r,i){return Math.abs(r-e)<1e-5&&Math.abs(i-t)<1e-5}var x=!0,S=!1,M=void 0;try{for(var T,E=l[Symbol.iterator]();!(x=(T=E.next()).done);x=!0){var C=T.value,L=(C.x-n)/o,O=(C.y-a)/s;if(!_(u,h,L,O)){switch(C.type){case"M":c=L,f=O;break;case"L":b(u,h,L,O);break;case"Q":var P=(C.x1-n)/o,R=(C.y1-a)/s;v([u,L,P],[h,O,R],{x:u,y:h,cx:P,cy:R});break;case"Z":_(u,h,c,f)?d.push({x:u,y:h}):(b(u,h,c,f),d.push({x:c,y:f}));break;case"C":for(var D=g(u,h,(C.x1-n)/o,(C.y1-a)/s,(C.x2-n)/o,(C.y2-a)/s,L,O),k=0;k<D.length;k++){var A=D[k].toQuadratic();v([A.x,A.x1,A.cx],[A.y,A.y1,A.cy],A)}break;default:throw new Error("unknown command type: ".concat(C.type))}u=L,h=O}}}catch(e){S=!0,M=e}finally{try{x||null==E.return||E.return()}finally{if(S)throw M}}for(var I=d.length,U=this.strokeImageInfos.findImage(I),N=U.index,F=0;F<I;++F){var B=d[F];V(U,y(B.x),y(B.y),y(B.cx),y(B.cy))}function G(e,t,r){for(var i=e.length,n=t.findImage(i),a=n.index,o=0,s=0;s<i;++s)o+=e[s].length;for(var l=r.findImage(o),u=0;u<i;++u){var h=e[u],c=h.length,f=l.index;V(n,f>>7,127&f,c>>7,127&c);for(var d=0;d<c;++d){var p=h[d]+N;V(l,p>>7,127&p,0,0)}}return{cellImageInfo:l,dimOffset:a,dimImageInfo:n}}return(t=this.glyphInfos[e.index]={glyph:e,uGlyphRect:[i.x1,-i.y1,i.x2,-i.y2],strokeImageInfo:U,strokes:d,colInfo:G(m,this.colDimImageInfos,this.colCellImageInfos),rowInfo:G(p,this.rowDimImageInfos,this.rowCellImageInfos)}).uGridOffset=[t.colInfo.dimOffset,t.rowInfo.dimOffset],t}}var z=Math.sqrt(3);j.default.RendererGL.prototype._renderText=function(e,t,r,i,n){if(this._textFont&&"string"!=typeof this._textFont){if(!(n<=i)&&this._doFill){if(!this._isOpenType())return console.log("WEBGL: only Opentype (.otf) and Truetype (.ttf) fonts are supported"),e;e.push();var a=this._doStroke,o=this.drawMode;this._doStroke=!1,this.drawMode=k.TEXTURE;var s=this._textFont.font,l=this._textFont._fontInfo;l=l||(this._textFont._fontInfo=new A(s));var u=this._textFont._handleAlignment(this,t,r,i),h=this._textSize/s.unitsPerEm;this.translate(u.x,u.y,0),this.scale(h,h,1);var c=this.GL,f=!this._defaultFontShader,d=this._getFontShader();d.init(),d.bindShader(),f&&(d.setUniform("uGridImageSize",[64,64]),d.setUniform("uCellsImageSize",[64,64]),d.setUniform("uStrokeImageSize",[64,64]),d.setUniform("uGridSize",[9,9])),this._applyColorBlend(this.curFillColor);var p=this.retainedMode.geometry.glyph;if(!p){var m=this._textGeom=new j.default.Geometry(1,1,function(){for(var e=0;e<=1;e++)for(var t=0;t<=1;t++)this.vertices.push(new j.default.Vector(t,e,0)),this.uvs.push(t,e)});m.computeFaces().computeNormals(),p=this.createBuffers("glyph",m)}var v=!0,y=!1,g=void 0;try{for(var b,_=this.retainedMode.buffers.text[Symbol.iterator]();!(v=(b=_.next()).done);v=!0){b.value._prepareBuffer(p,d)}}catch(e){y=!0,g=e}finally{try{v||null==_.return||_.return()}finally{if(y)throw g}}this._bindBuffer(p.indexBuffer,c.ELEMENT_ARRAY_BUFFER),d.setUniform("uMaterialColor",this.curFillColor);try{var x=0,w=null,S=s.stringToGlyphs(t),M=!0,T=!1,E=void 0;try{for(var C,L=S[Symbol.iterator]();!(M=(C=L.next()).done);M=!0){var O=C.value;w&&(x+=s.getKerningValue(w,O));var P=l.getGlyphInfo(O);if(P.uGlyphRect){var R=P.rowInfo,D=P.colInfo;d.setUniform("uSamplerStrokes",P.strokeImageInfo.imageData),d.setUniform("uSamplerRowStrokes",R.cellImageInfo.imageData),d.setUniform("uSamplerRows",R.dimImageInfo.imageData),d.setUniform("uSamplerColStrokes",D.cellImageInfo.imageData),d.setUniform("uSamplerCols",D.dimImageInfo.imageData),d.setUniform("uGridOffset",P.uGridOffset),d.setUniform("uGlyphRect",P.uGlyphRect),d.setUniform("uGlyphOffset",x),d.bindTextures(),c.drawElements(c.TRIANGLES,6,this.GL.UNSIGNED_SHORT,0)}x+=O.advanceWidth,w=O}}catch(e){T=!0,E=e}finally{try{M||null==L.return||L.return()}finally{if(T)throw E}}}finally{d.unbindShader(),this._doStroke=a,this.drawMode=o,e.pop()}return e}}else console.log("WEBGL: you must load and set a font before drawing text. See `loadFont` and `textFont` for more details.")}},{"../core/constants":26,"../core/main":36,"./p5.RendererGL.Retained":89,"./p5.Shader":91}]},{},[21])(21)});
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],22:[function(require,module,exports){
/*
     _ _      _       _
 ___| (_) ___| | __  (_)___
/ __| | |/ __| |/ /  | / __|
\__ \ | | (__|   < _ | \__ \
|___/_|_|\___|_|\_(_)/ |___/
                   |__/

 Version: 1.8.1
  Author: Ken Wheeler
 Website: http://kenwheeler.github.io
    Docs: http://kenwheeler.github.io/slick
    Repo: http://github.com/kenwheeler/slick
  Issues: http://github.com/kenwheeler/slick/issues

 */
/* global window, document, define, jQuery, setInterval, clearInterval */
;(function(factory) {
    'use strict';
    if (typeof define === 'function' && define.amd) {
        define(['jquery'], factory);
    } else if (typeof exports !== 'undefined') {
        module.exports = factory(require('jquery'));
    } else {
        factory(jQuery);
    }

}(function($) {
    'use strict';
    var Slick = window.Slick || {};

    Slick = (function() {

        var instanceUid = 0;

        function Slick(element, settings) {

            var _ = this, dataSettings;

            _.defaults = {
                accessibility: true,
                adaptiveHeight: false,
                appendArrows: $(element),
                appendDots: $(element),
                arrows: true,
                asNavFor: null,
                prevArrow: '<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',
                nextArrow: '<button class="slick-next" aria-label="Next" type="button">Next</button>',
                autoplay: false,
                autoplaySpeed: 3000,
                centerMode: false,
                centerPadding: '50px',
                cssEase: 'ease',
                customPaging: function(slider, i) {
                    return $('<button type="button" />').text(i + 1);
                },
                dots: false,
                dotsClass: 'slick-dots',
                draggable: true,
                easing: 'linear',
                edgeFriction: 0.35,
                fade: false,
                focusOnSelect: false,
                focusOnChange: false,
                infinite: true,
                initialSlide: 0,
                lazyLoad: 'ondemand',
                mobileFirst: false,
                pauseOnHover: true,
                pauseOnFocus: true,
                pauseOnDotsHover: false,
                respondTo: 'window',
                responsive: null,
                rows: 1,
                rtl: false,
                slide: '',
                slidesPerRow: 1,
                slidesToShow: 1,
                slidesToScroll: 1,
                speed: 500,
                swipe: true,
                swipeToSlide: false,
                touchMove: true,
                touchThreshold: 5,
                useCSS: true,
                useTransform: true,
                variableWidth: false,
                vertical: false,
                verticalSwiping: false,
                waitForAnimate: true,
                zIndex: 1000
            };

            _.initials = {
                animating: false,
                dragging: false,
                autoPlayTimer: null,
                currentDirection: 0,
                currentLeft: null,
                currentSlide: 0,
                direction: 1,
                $dots: null,
                listWidth: null,
                listHeight: null,
                loadIndex: 0,
                $nextArrow: null,
                $prevArrow: null,
                scrolling: false,
                slideCount: null,
                slideWidth: null,
                $slideTrack: null,
                $slides: null,
                sliding: false,
                slideOffset: 0,
                swipeLeft: null,
                swiping: false,
                $list: null,
                touchObject: {},
                transformsEnabled: false,
                unslicked: false
            };

            $.extend(_, _.initials);

            _.activeBreakpoint = null;
            _.animType = null;
            _.animProp = null;
            _.breakpoints = [];
            _.breakpointSettings = [];
            _.cssTransitions = false;
            _.focussed = false;
            _.interrupted = false;
            _.hidden = 'hidden';
            _.paused = true;
            _.positionProp = null;
            _.respondTo = null;
            _.rowCount = 1;
            _.shouldClick = true;
            _.$slider = $(element);
            _.$slidesCache = null;
            _.transformType = null;
            _.transitionType = null;
            _.visibilityChange = 'visibilitychange';
            _.windowWidth = 0;
            _.windowTimer = null;

            dataSettings = $(element).data('slick') || {};

            _.options = $.extend({}, _.defaults, settings, dataSettings);

            _.currentSlide = _.options.initialSlide;

            _.originalSettings = _.options;

            if (typeof document.mozHidden !== 'undefined') {
                _.hidden = 'mozHidden';
                _.visibilityChange = 'mozvisibilitychange';
            } else if (typeof document.webkitHidden !== 'undefined') {
                _.hidden = 'webkitHidden';
                _.visibilityChange = 'webkitvisibilitychange';
            }

            _.autoPlay = $.proxy(_.autoPlay, _);
            _.autoPlayClear = $.proxy(_.autoPlayClear, _);
            _.autoPlayIterator = $.proxy(_.autoPlayIterator, _);
            _.changeSlide = $.proxy(_.changeSlide, _);
            _.clickHandler = $.proxy(_.clickHandler, _);
            _.selectHandler = $.proxy(_.selectHandler, _);
            _.setPosition = $.proxy(_.setPosition, _);
            _.swipeHandler = $.proxy(_.swipeHandler, _);
            _.dragHandler = $.proxy(_.dragHandler, _);
            _.keyHandler = $.proxy(_.keyHandler, _);

            _.instanceUid = instanceUid++;

            // A simple way to check for HTML strings
            // Strict HTML recognition (must start with <)
            // Extracted from jQuery v1.11 source
            _.htmlExpr = /^(?:\s*(<[\w\W]+>)[^>]*)$/;


            _.registerBreakpoints();
            _.init(true);

        }

        return Slick;

    }());

    Slick.prototype.activateADA = function() {
        var _ = this;

        _.$slideTrack.find('.slick-active').attr({
            'aria-hidden': 'false'
        }).find('a, input, button, select').attr({
            'tabindex': '0'
        });

    };

    Slick.prototype.addSlide = Slick.prototype.slickAdd = function(markup, index, addBefore) {

        var _ = this;

        if (typeof(index) === 'boolean') {
            addBefore = index;
            index = null;
        } else if (index < 0 || (index >= _.slideCount)) {
            return false;
        }

        _.unload();

        if (typeof(index) === 'number') {
            if (index === 0 && _.$slides.length === 0) {
                $(markup).appendTo(_.$slideTrack);
            } else if (addBefore) {
                $(markup).insertBefore(_.$slides.eq(index));
            } else {
                $(markup).insertAfter(_.$slides.eq(index));
            }
        } else {
            if (addBefore === true) {
                $(markup).prependTo(_.$slideTrack);
            } else {
                $(markup).appendTo(_.$slideTrack);
            }
        }

        _.$slides = _.$slideTrack.children(this.options.slide);

        _.$slideTrack.children(this.options.slide).detach();

        _.$slideTrack.append(_.$slides);

        _.$slides.each(function(index, element) {
            $(element).attr('data-slick-index', index);
        });

        _.$slidesCache = _.$slides;

        _.reinit();

    };

    Slick.prototype.animateHeight = function() {
        var _ = this;
        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {
            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);
            _.$list.animate({
                height: targetHeight
            }, _.options.speed);
        }
    };

    Slick.prototype.animateSlide = function(targetLeft, callback) {

        var animProps = {},
            _ = this;

        _.animateHeight();

        if (_.options.rtl === true && _.options.vertical === false) {
            targetLeft = -targetLeft;
        }
        if (_.transformsEnabled === false) {
            if (_.options.vertical === false) {
                _.$slideTrack.animate({
                    left: targetLeft
                }, _.options.speed, _.options.easing, callback);
            } else {
                _.$slideTrack.animate({
                    top: targetLeft
                }, _.options.speed, _.options.easing, callback);
            }

        } else {

            if (_.cssTransitions === false) {
                if (_.options.rtl === true) {
                    _.currentLeft = -(_.currentLeft);
                }
                $({
                    animStart: _.currentLeft
                }).animate({
                    animStart: targetLeft
                }, {
                    duration: _.options.speed,
                    easing: _.options.easing,
                    step: function(now) {
                        now = Math.ceil(now);
                        if (_.options.vertical === false) {
                            animProps[_.animType] = 'translate(' +
                                now + 'px, 0px)';
                            _.$slideTrack.css(animProps);
                        } else {
                            animProps[_.animType] = 'translate(0px,' +
                                now + 'px)';
                            _.$slideTrack.css(animProps);
                        }
                    },
                    complete: function() {
                        if (callback) {
                            callback.call();
                        }
                    }
                });

            } else {

                _.applyTransition();
                targetLeft = Math.ceil(targetLeft);

                if (_.options.vertical === false) {
                    animProps[_.animType] = 'translate3d(' + targetLeft + 'px, 0px, 0px)';
                } else {
                    animProps[_.animType] = 'translate3d(0px,' + targetLeft + 'px, 0px)';
                }
                _.$slideTrack.css(animProps);

                if (callback) {
                    setTimeout(function() {

                        _.disableTransition();

                        callback.call();
                    }, _.options.speed);
                }

            }

        }

    };

    Slick.prototype.getNavTarget = function() {

        var _ = this,
            asNavFor = _.options.asNavFor;

        if ( asNavFor && asNavFor !== null ) {
            asNavFor = $(asNavFor).not(_.$slider);
        }

        return asNavFor;

    };

    Slick.prototype.asNavFor = function(index) {

        var _ = this,
            asNavFor = _.getNavTarget();

        if ( asNavFor !== null && typeof asNavFor === 'object' ) {
            asNavFor.each(function() {
                var target = $(this).slick('getSlick');
                if(!target.unslicked) {
                    target.slideHandler(index, true);
                }
            });
        }

    };

    Slick.prototype.applyTransition = function(slide) {

        var _ = this,
            transition = {};

        if (_.options.fade === false) {
            transition[_.transitionType] = _.transformType + ' ' + _.options.speed + 'ms ' + _.options.cssEase;
        } else {
            transition[_.transitionType] = 'opacity ' + _.options.speed + 'ms ' + _.options.cssEase;
        }

        if (_.options.fade === false) {
            _.$slideTrack.css(transition);
        } else {
            _.$slides.eq(slide).css(transition);
        }

    };

    Slick.prototype.autoPlay = function() {

        var _ = this;

        _.autoPlayClear();

        if ( _.slideCount > _.options.slidesToShow ) {
            _.autoPlayTimer = setInterval( _.autoPlayIterator, _.options.autoplaySpeed );
        }

    };

    Slick.prototype.autoPlayClear = function() {

        var _ = this;

        if (_.autoPlayTimer) {
            clearInterval(_.autoPlayTimer);
        }

    };

    Slick.prototype.autoPlayIterator = function() {

        var _ = this,
            slideTo = _.currentSlide + _.options.slidesToScroll;

        if ( !_.paused && !_.interrupted && !_.focussed ) {

            if ( _.options.infinite === false ) {

                if ( _.direction === 1 && ( _.currentSlide + 1 ) === ( _.slideCount - 1 )) {
                    _.direction = 0;
                }

                else if ( _.direction === 0 ) {

                    slideTo = _.currentSlide - _.options.slidesToScroll;

                    if ( _.currentSlide - 1 === 0 ) {
                        _.direction = 1;
                    }

                }

            }

            _.slideHandler( slideTo );

        }

    };

    Slick.prototype.buildArrows = function() {

        var _ = this;

        if (_.options.arrows === true ) {

            _.$prevArrow = $(_.options.prevArrow).addClass('slick-arrow');
            _.$nextArrow = $(_.options.nextArrow).addClass('slick-arrow');

            if( _.slideCount > _.options.slidesToShow ) {

                _.$prevArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');
                _.$nextArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');

                if (_.htmlExpr.test(_.options.prevArrow)) {
                    _.$prevArrow.prependTo(_.options.appendArrows);
                }

                if (_.htmlExpr.test(_.options.nextArrow)) {
                    _.$nextArrow.appendTo(_.options.appendArrows);
                }

                if (_.options.infinite !== true) {
                    _.$prevArrow
                        .addClass('slick-disabled')
                        .attr('aria-disabled', 'true');
                }

            } else {

                _.$prevArrow.add( _.$nextArrow )

                    .addClass('slick-hidden')
                    .attr({
                        'aria-disabled': 'true',
                        'tabindex': '-1'
                    });

            }

        }

    };

    Slick.prototype.buildDots = function() {

        var _ = this,
            i, dot;

        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {

            _.$slider.addClass('slick-dotted');

            dot = $('<ul />').addClass(_.options.dotsClass);

            for (i = 0; i <= _.getDotCount(); i += 1) {
                dot.append($('<li />').append(_.options.customPaging.call(this, _, i)));
            }

            _.$dots = dot.appendTo(_.options.appendDots);

            _.$dots.find('li').first().addClass('slick-active');

        }

    };

    Slick.prototype.buildOut = function() {

        var _ = this;

        _.$slides =
            _.$slider
                .children( _.options.slide + ':not(.slick-cloned)')
                .addClass('slick-slide');

        _.slideCount = _.$slides.length;

        _.$slides.each(function(index, element) {
            $(element)
                .attr('data-slick-index', index)
                .data('originalStyling', $(element).attr('style') || '');
        });

        _.$slider.addClass('slick-slider');

        _.$slideTrack = (_.slideCount === 0) ?
            $('<div class="slick-track"/>').appendTo(_.$slider) :
            _.$slides.wrapAll('<div class="slick-track"/>').parent();

        _.$list = _.$slideTrack.wrap(
            '<div class="slick-list"/>').parent();
        _.$slideTrack.css('opacity', 0);

        if (_.options.centerMode === true || _.options.swipeToSlide === true) {
            _.options.slidesToScroll = 1;
        }

        $('img[data-lazy]', _.$slider).not('[src]').addClass('slick-loading');

        _.setupInfinite();

        _.buildArrows();

        _.buildDots();

        _.updateDots();


        _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);

        if (_.options.draggable === true) {
            _.$list.addClass('draggable');
        }

    };

    Slick.prototype.buildRows = function() {

        var _ = this, a, b, c, newSlides, numOfSlides, originalSlides,slidesPerSection;

        newSlides = document.createDocumentFragment();
        originalSlides = _.$slider.children();

        if(_.options.rows > 0) {

            slidesPerSection = _.options.slidesPerRow * _.options.rows;
            numOfSlides = Math.ceil(
                originalSlides.length / slidesPerSection
            );

            for(a = 0; a < numOfSlides; a++){
                var slide = document.createElement('div');
                for(b = 0; b < _.options.rows; b++) {
                    var row = document.createElement('div');
                    for(c = 0; c < _.options.slidesPerRow; c++) {
                        var target = (a * slidesPerSection + ((b * _.options.slidesPerRow) + c));
                        if (originalSlides.get(target)) {
                            row.appendChild(originalSlides.get(target));
                        }
                    }
                    slide.appendChild(row);
                }
                newSlides.appendChild(slide);
            }

            _.$slider.empty().append(newSlides);
            _.$slider.children().children().children()
                .css({
                    'width':(100 / _.options.slidesPerRow) + '%',
                    'display': 'inline-block'
                });

        }

    };

    Slick.prototype.checkResponsive = function(initial, forceUpdate) {

        var _ = this,
            breakpoint, targetBreakpoint, respondToWidth, triggerBreakpoint = false;
        var sliderWidth = _.$slider.width();
        var windowWidth = window.innerWidth || $(window).width();

        if (_.respondTo === 'window') {
            respondToWidth = windowWidth;
        } else if (_.respondTo === 'slider') {
            respondToWidth = sliderWidth;
        } else if (_.respondTo === 'min') {
            respondToWidth = Math.min(windowWidth, sliderWidth);
        }

        if ( _.options.responsive &&
            _.options.responsive.length &&
            _.options.responsive !== null) {

            targetBreakpoint = null;

            for (breakpoint in _.breakpoints) {
                if (_.breakpoints.hasOwnProperty(breakpoint)) {
                    if (_.originalSettings.mobileFirst === false) {
                        if (respondToWidth < _.breakpoints[breakpoint]) {
                            targetBreakpoint = _.breakpoints[breakpoint];
                        }
                    } else {
                        if (respondToWidth > _.breakpoints[breakpoint]) {
                            targetBreakpoint = _.breakpoints[breakpoint];
                        }
                    }
                }
            }

            if (targetBreakpoint !== null) {
                if (_.activeBreakpoint !== null) {
                    if (targetBreakpoint !== _.activeBreakpoint || forceUpdate) {
                        _.activeBreakpoint =
                            targetBreakpoint;
                        if (_.breakpointSettings[targetBreakpoint] === 'unslick') {
                            _.unslick(targetBreakpoint);
                        } else {
                            _.options = $.extend({}, _.originalSettings,
                                _.breakpointSettings[
                                    targetBreakpoint]);
                            if (initial === true) {
                                _.currentSlide = _.options.initialSlide;
                            }
                            _.refresh(initial);
                        }
                        triggerBreakpoint = targetBreakpoint;
                    }
                } else {
                    _.activeBreakpoint = targetBreakpoint;
                    if (_.breakpointSettings[targetBreakpoint] === 'unslick') {
                        _.unslick(targetBreakpoint);
                    } else {
                        _.options = $.extend({}, _.originalSettings,
                            _.breakpointSettings[
                                targetBreakpoint]);
                        if (initial === true) {
                            _.currentSlide = _.options.initialSlide;
                        }
                        _.refresh(initial);
                    }
                    triggerBreakpoint = targetBreakpoint;
                }
            } else {
                if (_.activeBreakpoint !== null) {
                    _.activeBreakpoint = null;
                    _.options = _.originalSettings;
                    if (initial === true) {
                        _.currentSlide = _.options.initialSlide;
                    }
                    _.refresh(initial);
                    triggerBreakpoint = targetBreakpoint;
                }
            }

            // only trigger breakpoints during an actual break. not on initialize.
            if( !initial && triggerBreakpoint !== false ) {
                _.$slider.trigger('breakpoint', [_, triggerBreakpoint]);
            }
        }

    };

    Slick.prototype.changeSlide = function(event, dontAnimate) {

        var _ = this,
            $target = $(event.currentTarget),
            indexOffset, slideOffset, unevenOffset;

        // If target is a link, prevent default action.
        if($target.is('a')) {
            event.preventDefault();
        }

        // If target is not the <li> element (ie: a child), find the <li>.
        if(!$target.is('li')) {
            $target = $target.closest('li');
        }

        unevenOffset = (_.slideCount % _.options.slidesToScroll !== 0);
        indexOffset = unevenOffset ? 0 : (_.slideCount - _.currentSlide) % _.options.slidesToScroll;

        switch (event.data.message) {

            case 'previous':
                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : _.options.slidesToShow - indexOffset;
                if (_.slideCount > _.options.slidesToShow) {
                    _.slideHandler(_.currentSlide - slideOffset, false, dontAnimate);
                }
                break;

            case 'next':
                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : indexOffset;
                if (_.slideCount > _.options.slidesToShow) {
                    _.slideHandler(_.currentSlide + slideOffset, false, dontAnimate);
                }
                break;

            case 'index':
                var index = event.data.index === 0 ? 0 :
                    event.data.index || $target.index() * _.options.slidesToScroll;

                _.slideHandler(_.checkNavigable(index), false, dontAnimate);
                $target.children().trigger('focus');
                break;

            default:
                return;
        }

    };

    Slick.prototype.checkNavigable = function(index) {

        var _ = this,
            navigables, prevNavigable;

        navigables = _.getNavigableIndexes();
        prevNavigable = 0;
        if (index > navigables[navigables.length - 1]) {
            index = navigables[navigables.length - 1];
        } else {
            for (var n in navigables) {
                if (index < navigables[n]) {
                    index = prevNavigable;
                    break;
                }
                prevNavigable = navigables[n];
            }
        }

        return index;
    };

    Slick.prototype.cleanUpEvents = function() {

        var _ = this;

        if (_.options.dots && _.$dots !== null) {

            $('li', _.$dots)
                .off('click.slick', _.changeSlide)
                .off('mouseenter.slick', $.proxy(_.interrupt, _, true))
                .off('mouseleave.slick', $.proxy(_.interrupt, _, false));

            if (_.options.accessibility === true) {
                _.$dots.off('keydown.slick', _.keyHandler);
            }
        }

        _.$slider.off('focus.slick blur.slick');

        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {
            _.$prevArrow && _.$prevArrow.off('click.slick', _.changeSlide);
            _.$nextArrow && _.$nextArrow.off('click.slick', _.changeSlide);

            if (_.options.accessibility === true) {
                _.$prevArrow && _.$prevArrow.off('keydown.slick', _.keyHandler);
                _.$nextArrow && _.$nextArrow.off('keydown.slick', _.keyHandler);
            }
        }

        _.$list.off('touchstart.slick mousedown.slick', _.swipeHandler);
        _.$list.off('touchmove.slick mousemove.slick', _.swipeHandler);
        _.$list.off('touchend.slick mouseup.slick', _.swipeHandler);
        _.$list.off('touchcancel.slick mouseleave.slick', _.swipeHandler);

        _.$list.off('click.slick', _.clickHandler);

        $(document).off(_.visibilityChange, _.visibility);

        _.cleanUpSlideEvents();

        if (_.options.accessibility === true) {
            _.$list.off('keydown.slick', _.keyHandler);
        }

        if (_.options.focusOnSelect === true) {
            $(_.$slideTrack).children().off('click.slick', _.selectHandler);
        }

        $(window).off('orientationchange.slick.slick-' + _.instanceUid, _.orientationChange);

        $(window).off('resize.slick.slick-' + _.instanceUid, _.resize);

        $('[draggable!=true]', _.$slideTrack).off('dragstart', _.preventDefault);

        $(window).off('load.slick.slick-' + _.instanceUid, _.setPosition);

    };

    Slick.prototype.cleanUpSlideEvents = function() {

        var _ = this;

        _.$list.off('mouseenter.slick', $.proxy(_.interrupt, _, true));
        _.$list.off('mouseleave.slick', $.proxy(_.interrupt, _, false));

    };

    Slick.prototype.cleanUpRows = function() {

        var _ = this, originalSlides;

        if(_.options.rows > 0) {
            originalSlides = _.$slides.children().children();
            originalSlides.removeAttr('style');
            _.$slider.empty().append(originalSlides);
        }

    };

    Slick.prototype.clickHandler = function(event) {

        var _ = this;

        if (_.shouldClick === false) {
            event.stopImmediatePropagation();
            event.stopPropagation();
            event.preventDefault();
        }

    };

    Slick.prototype.destroy = function(refresh) {

        var _ = this;

        _.autoPlayClear();

        _.touchObject = {};

        _.cleanUpEvents();

        $('.slick-cloned', _.$slider).detach();

        if (_.$dots) {
            _.$dots.remove();
        }

        if ( _.$prevArrow && _.$prevArrow.length ) {

            _.$prevArrow
                .removeClass('slick-disabled slick-arrow slick-hidden')
                .removeAttr('aria-hidden aria-disabled tabindex')
                .css('display','');

            if ( _.htmlExpr.test( _.options.prevArrow )) {
                _.$prevArrow.remove();
            }
        }

        if ( _.$nextArrow && _.$nextArrow.length ) {

            _.$nextArrow
                .removeClass('slick-disabled slick-arrow slick-hidden')
                .removeAttr('aria-hidden aria-disabled tabindex')
                .css('display','');

            if ( _.htmlExpr.test( _.options.nextArrow )) {
                _.$nextArrow.remove();
            }
        }


        if (_.$slides) {

            _.$slides
                .removeClass('slick-slide slick-active slick-center slick-visible slick-current')
                .removeAttr('aria-hidden')
                .removeAttr('data-slick-index')
                .each(function(){
                    $(this).attr('style', $(this).data('originalStyling'));
                });

            _.$slideTrack.children(this.options.slide).detach();

            _.$slideTrack.detach();

            _.$list.detach();

            _.$slider.append(_.$slides);
        }

        _.cleanUpRows();

        _.$slider.removeClass('slick-slider');
        _.$slider.removeClass('slick-initialized');
        _.$slider.removeClass('slick-dotted');

        _.unslicked = true;

        if(!refresh) {
            _.$slider.trigger('destroy', [_]);
        }

    };

    Slick.prototype.disableTransition = function(slide) {

        var _ = this,
            transition = {};

        transition[_.transitionType] = '';

        if (_.options.fade === false) {
            _.$slideTrack.css(transition);
        } else {
            _.$slides.eq(slide).css(transition);
        }

    };

    Slick.prototype.fadeSlide = function(slideIndex, callback) {

        var _ = this;

        if (_.cssTransitions === false) {

            _.$slides.eq(slideIndex).css({
                zIndex: _.options.zIndex
            });

            _.$slides.eq(slideIndex).animate({
                opacity: 1
            }, _.options.speed, _.options.easing, callback);

        } else {

            _.applyTransition(slideIndex);

            _.$slides.eq(slideIndex).css({
                opacity: 1,
                zIndex: _.options.zIndex
            });

            if (callback) {
                setTimeout(function() {

                    _.disableTransition(slideIndex);

                    callback.call();
                }, _.options.speed);
            }

        }

    };

    Slick.prototype.fadeSlideOut = function(slideIndex) {

        var _ = this;

        if (_.cssTransitions === false) {

            _.$slides.eq(slideIndex).animate({
                opacity: 0,
                zIndex: _.options.zIndex - 2
            }, _.options.speed, _.options.easing);

        } else {

            _.applyTransition(slideIndex);

            _.$slides.eq(slideIndex).css({
                opacity: 0,
                zIndex: _.options.zIndex - 2
            });

        }

    };

    Slick.prototype.filterSlides = Slick.prototype.slickFilter = function(filter) {

        var _ = this;

        if (filter !== null) {

            _.$slidesCache = _.$slides;

            _.unload();

            _.$slideTrack.children(this.options.slide).detach();

            _.$slidesCache.filter(filter).appendTo(_.$slideTrack);

            _.reinit();

        }

    };

    Slick.prototype.focusHandler = function() {

        var _ = this;

        _.$slider
            .off('focus.slick blur.slick')
            .on('focus.slick blur.slick', '*', function(event) {

            event.stopImmediatePropagation();
            var $sf = $(this);

            setTimeout(function() {

                if( _.options.pauseOnFocus ) {
                    _.focussed = $sf.is(':focus');
                    _.autoPlay();
                }

            }, 0);

        });
    };

    Slick.prototype.getCurrent = Slick.prototype.slickCurrentSlide = function() {

        var _ = this;
        return _.currentSlide;

    };

    Slick.prototype.getDotCount = function() {

        var _ = this;

        var breakPoint = 0;
        var counter = 0;
        var pagerQty = 0;

        if (_.options.infinite === true) {
            if (_.slideCount <= _.options.slidesToShow) {
                 ++pagerQty;
            } else {
                while (breakPoint < _.slideCount) {
                    ++pagerQty;
                    breakPoint = counter + _.options.slidesToScroll;
                    counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;
                }
            }
        } else if (_.options.centerMode === true) {
            pagerQty = _.slideCount;
        } else if(!_.options.asNavFor) {
            pagerQty = 1 + Math.ceil((_.slideCount - _.options.slidesToShow) / _.options.slidesToScroll);
        }else {
            while (breakPoint < _.slideCount) {
                ++pagerQty;
                breakPoint = counter + _.options.slidesToScroll;
                counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;
            }
        }

        return pagerQty - 1;

    };

    Slick.prototype.getLeft = function(slideIndex) {

        var _ = this,
            targetLeft,
            verticalHeight,
            verticalOffset = 0,
            targetSlide,
            coef;

        _.slideOffset = 0;
        verticalHeight = _.$slides.first().outerHeight(true);

        if (_.options.infinite === true) {
            if (_.slideCount > _.options.slidesToShow) {
                _.slideOffset = (_.slideWidth * _.options.slidesToShow) * -1;
                coef = -1

                if (_.options.vertical === true && _.options.centerMode === true) {
                    if (_.options.slidesToShow === 2) {
                        coef = -1.5;
                    } else if (_.options.slidesToShow === 1) {
                        coef = -2
                    }
                }
                verticalOffset = (verticalHeight * _.options.slidesToShow) * coef;
            }
            if (_.slideCount % _.options.slidesToScroll !== 0) {
                if (slideIndex + _.options.slidesToScroll > _.slideCount && _.slideCount > _.options.slidesToShow) {
                    if (slideIndex > _.slideCount) {
                        _.slideOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * _.slideWidth) * -1;
                        verticalOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * verticalHeight) * -1;
                    } else {
                        _.slideOffset = ((_.slideCount % _.options.slidesToScroll) * _.slideWidth) * -1;
                        verticalOffset = ((_.slideCount % _.options.slidesToScroll) * verticalHeight) * -1;
                    }
                }
            }
        } else {
            if (slideIndex + _.options.slidesToShow > _.slideCount) {
                _.slideOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * _.slideWidth;
                verticalOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * verticalHeight;
            }
        }

        if (_.slideCount <= _.options.slidesToShow) {
            _.slideOffset = 0;
            verticalOffset = 0;
        }

        if (_.options.centerMode === true && _.slideCount <= _.options.slidesToShow) {
            _.slideOffset = ((_.slideWidth * Math.floor(_.options.slidesToShow)) / 2) - ((_.slideWidth * _.slideCount) / 2);
        } else if (_.options.centerMode === true && _.options.infinite === true) {
            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2) - _.slideWidth;
        } else if (_.options.centerMode === true) {
            _.slideOffset = 0;
            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2);
        }

        if (_.options.vertical === false) {
            targetLeft = ((slideIndex * _.slideWidth) * -1) + _.slideOffset;
        } else {
            targetLeft = ((slideIndex * verticalHeight) * -1) + verticalOffset;
        }

        if (_.options.variableWidth === true) {

            if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {
                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);
            } else {
                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow);
            }

            if (_.options.rtl === true) {
                if (targetSlide[0]) {
                    targetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;
                } else {
                    targetLeft =  0;
                }
            } else {
                targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;
            }

            if (_.options.centerMode === true) {
                if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {
                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);
                } else {
                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow + 1);
                }

                if (_.options.rtl === true) {
                    if (targetSlide[0]) {
                        targetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;
                    } else {
                        targetLeft =  0;
                    }
                } else {
                    targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;
                }

                targetLeft += (_.$list.width() - targetSlide.outerWidth()) / 2;
            }
        }

        return targetLeft;

    };

    Slick.prototype.getOption = Slick.prototype.slickGetOption = function(option) {

        var _ = this;

        return _.options[option];

    };

    Slick.prototype.getNavigableIndexes = function() {

        var _ = this,
            breakPoint = 0,
            counter = 0,
            indexes = [],
            max;

        if (_.options.infinite === false) {
            max = _.slideCount;
        } else {
            breakPoint = _.options.slidesToScroll * -1;
            counter = _.options.slidesToScroll * -1;
            max = _.slideCount * 2;
        }

        while (breakPoint < max) {
            indexes.push(breakPoint);
            breakPoint = counter + _.options.slidesToScroll;
            counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;
        }

        return indexes;

    };

    Slick.prototype.getSlick = function() {

        return this;

    };

    Slick.prototype.getSlideCount = function() {

        var _ = this,
            slidesTraversed, swipedSlide, centerOffset;

        centerOffset = _.options.centerMode === true ? _.slideWidth * Math.floor(_.options.slidesToShow / 2) : 0;

        if (_.options.swipeToSlide === true) {
            _.$slideTrack.find('.slick-slide').each(function(index, slide) {
                if (slide.offsetLeft - centerOffset + ($(slide).outerWidth() / 2) > (_.swipeLeft * -1)) {
                    swipedSlide = slide;
                    return false;
                }
            });

            slidesTraversed = Math.abs($(swipedSlide).attr('data-slick-index') - _.currentSlide) || 1;

            return slidesTraversed;

        } else {
            return _.options.slidesToScroll;
        }

    };

    Slick.prototype.goTo = Slick.prototype.slickGoTo = function(slide, dontAnimate) {

        var _ = this;

        _.changeSlide({
            data: {
                message: 'index',
                index: parseInt(slide)
            }
        }, dontAnimate);

    };

    Slick.prototype.init = function(creation) {

        var _ = this;

        if (!$(_.$slider).hasClass('slick-initialized')) {

            $(_.$slider).addClass('slick-initialized');

            _.buildRows();
            _.buildOut();
            _.setProps();
            _.startLoad();
            _.loadSlider();
            _.initializeEvents();
            _.updateArrows();
            _.updateDots();
            _.checkResponsive(true);
            _.focusHandler();

        }

        if (creation) {
            _.$slider.trigger('init', [_]);
        }

        if (_.options.accessibility === true) {
            _.initADA();
        }

        if ( _.options.autoplay ) {

            _.paused = false;
            _.autoPlay();

        }

    };

    Slick.prototype.initADA = function() {
        var _ = this,
                numDotGroups = Math.ceil(_.slideCount / _.options.slidesToShow),
                tabControlIndexes = _.getNavigableIndexes().filter(function(val) {
                    return (val >= 0) && (val < _.slideCount);
                });

        _.$slides.add(_.$slideTrack.find('.slick-cloned')).attr({
            'aria-hidden': 'true',
            'tabindex': '-1'
        }).find('a, input, button, select').attr({
            'tabindex': '-1'
        });

        if (_.$dots !== null) {
            _.$slides.not(_.$slideTrack.find('.slick-cloned')).each(function(i) {
                var slideControlIndex = tabControlIndexes.indexOf(i);

                $(this).attr({
                    'role': 'tabpanel',
                    'id': 'slick-slide' + _.instanceUid + i,
                    'tabindex': -1
                });

                if (slideControlIndex !== -1) {
                   var ariaButtonControl = 'slick-slide-control' + _.instanceUid + slideControlIndex
                   if ($('#' + ariaButtonControl).length) {
                     $(this).attr({
                         'aria-describedby': ariaButtonControl
                     });
                   }
                }
            });

            _.$dots.attr('role', 'tablist').find('li').each(function(i) {
                var mappedSlideIndex = tabControlIndexes[i];

                $(this).attr({
                    'role': 'presentation'
                });

                $(this).find('button').first().attr({
                    'role': 'tab',
                    'id': 'slick-slide-control' + _.instanceUid + i,
                    'aria-controls': 'slick-slide' + _.instanceUid + mappedSlideIndex,
                    'aria-label': (i + 1) + ' of ' + numDotGroups,
                    'aria-selected': null,
                    'tabindex': '-1'
                });

            }).eq(_.currentSlide).find('button').attr({
                'aria-selected': 'true',
                'tabindex': '0'
            }).end();
        }

        for (var i=_.currentSlide, max=i+_.options.slidesToShow; i < max; i++) {
          if (_.options.focusOnChange) {
            _.$slides.eq(i).attr({'tabindex': '0'});
          } else {
            _.$slides.eq(i).removeAttr('tabindex');
          }
        }

        _.activateADA();

    };

    Slick.prototype.initArrowEvents = function() {

        var _ = this;

        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {
            _.$prevArrow
               .off('click.slick')
               .on('click.slick', {
                    message: 'previous'
               }, _.changeSlide);
            _.$nextArrow
               .off('click.slick')
               .on('click.slick', {
                    message: 'next'
               }, _.changeSlide);

            if (_.options.accessibility === true) {
                _.$prevArrow.on('keydown.slick', _.keyHandler);
                _.$nextArrow.on('keydown.slick', _.keyHandler);
            }
        }

    };

    Slick.prototype.initDotEvents = function() {

        var _ = this;

        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {
            $('li', _.$dots).on('click.slick', {
                message: 'index'
            }, _.changeSlide);

            if (_.options.accessibility === true) {
                _.$dots.on('keydown.slick', _.keyHandler);
            }
        }

        if (_.options.dots === true && _.options.pauseOnDotsHover === true && _.slideCount > _.options.slidesToShow) {

            $('li', _.$dots)
                .on('mouseenter.slick', $.proxy(_.interrupt, _, true))
                .on('mouseleave.slick', $.proxy(_.interrupt, _, false));

        }

    };

    Slick.prototype.initSlideEvents = function() {

        var _ = this;

        if ( _.options.pauseOnHover ) {

            _.$list.on('mouseenter.slick', $.proxy(_.interrupt, _, true));
            _.$list.on('mouseleave.slick', $.proxy(_.interrupt, _, false));

        }

    };

    Slick.prototype.initializeEvents = function() {

        var _ = this;

        _.initArrowEvents();

        _.initDotEvents();
        _.initSlideEvents();

        _.$list.on('touchstart.slick mousedown.slick', {
            action: 'start'
        }, _.swipeHandler);
        _.$list.on('touchmove.slick mousemove.slick', {
            action: 'move'
        }, _.swipeHandler);
        _.$list.on('touchend.slick mouseup.slick', {
            action: 'end'
        }, _.swipeHandler);
        _.$list.on('touchcancel.slick mouseleave.slick', {
            action: 'end'
        }, _.swipeHandler);

        _.$list.on('click.slick', _.clickHandler);

        $(document).on(_.visibilityChange, $.proxy(_.visibility, _));

        if (_.options.accessibility === true) {
            _.$list.on('keydown.slick', _.keyHandler);
        }

        if (_.options.focusOnSelect === true) {
            $(_.$slideTrack).children().on('click.slick', _.selectHandler);
        }

        $(window).on('orientationchange.slick.slick-' + _.instanceUid, $.proxy(_.orientationChange, _));

        $(window).on('resize.slick.slick-' + _.instanceUid, $.proxy(_.resize, _));

        $('[draggable!=true]', _.$slideTrack).on('dragstart', _.preventDefault);

        $(window).on('load.slick.slick-' + _.instanceUid, _.setPosition);
        $(_.setPosition);

    };

    Slick.prototype.initUI = function() {

        var _ = this;

        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {

            _.$prevArrow.show();
            _.$nextArrow.show();

        }

        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {

            _.$dots.show();

        }

    };

    Slick.prototype.keyHandler = function(event) {

        var _ = this;
         //Dont slide if the cursor is inside the form fields and arrow keys are pressed
        if(!event.target.tagName.match('TEXTAREA|INPUT|SELECT')) {
            if (event.keyCode === 37 && _.options.accessibility === true) {
                _.changeSlide({
                    data: {
                        message: _.options.rtl === true ? 'next' :  'previous'
                    }
                });
            } else if (event.keyCode === 39 && _.options.accessibility === true) {
                _.changeSlide({
                    data: {
                        message: _.options.rtl === true ? 'previous' : 'next'
                    }
                });
            }
        }

    };

    Slick.prototype.lazyLoad = function() {

        var _ = this,
            loadRange, cloneRange, rangeStart, rangeEnd;

        function loadImages(imagesScope) {

            $('img[data-lazy]', imagesScope).each(function() {

                var image = $(this),
                    imageSource = $(this).attr('data-lazy'),
                    imageSrcSet = $(this).attr('data-srcset'),
                    imageSizes  = $(this).attr('data-sizes') || _.$slider.attr('data-sizes'),
                    imageToLoad = document.createElement('img');

                imageToLoad.onload = function() {

                    image
                        .animate({ opacity: 0 }, 100, function() {

                            if (imageSrcSet) {
                                image
                                    .attr('srcset', imageSrcSet );

                                if (imageSizes) {
                                    image
                                        .attr('sizes', imageSizes );
                                }
                            }

                            image
                                .attr('src', imageSource)
                                .animate({ opacity: 1 }, 200, function() {
                                    image
                                        .removeAttr('data-lazy data-srcset data-sizes')
                                        .removeClass('slick-loading');
                                });
                            _.$slider.trigger('lazyLoaded', [_, image, imageSource]);
                        });

                };

                imageToLoad.onerror = function() {

                    image
                        .removeAttr( 'data-lazy' )
                        .removeClass( 'slick-loading' )
                        .addClass( 'slick-lazyload-error' );

                    _.$slider.trigger('lazyLoadError', [ _, image, imageSource ]);

                };

                imageToLoad.src = imageSource;

            });

        }

        if (_.options.centerMode === true) {
            if (_.options.infinite === true) {
                rangeStart = _.currentSlide + (_.options.slidesToShow / 2 + 1);
                rangeEnd = rangeStart + _.options.slidesToShow + 2;
            } else {
                rangeStart = Math.max(0, _.currentSlide - (_.options.slidesToShow / 2 + 1));
                rangeEnd = 2 + (_.options.slidesToShow / 2 + 1) + _.currentSlide;
            }
        } else {
            rangeStart = _.options.infinite ? _.options.slidesToShow + _.currentSlide : _.currentSlide;
            rangeEnd = Math.ceil(rangeStart + _.options.slidesToShow);
            if (_.options.fade === true) {
                if (rangeStart > 0) rangeStart--;
                if (rangeEnd <= _.slideCount) rangeEnd++;
            }
        }

        loadRange = _.$slider.find('.slick-slide').slice(rangeStart, rangeEnd);

        if (_.options.lazyLoad === 'anticipated') {
            var prevSlide = rangeStart - 1,
                nextSlide = rangeEnd,
                $slides = _.$slider.find('.slick-slide');

            for (var i = 0; i < _.options.slidesToScroll; i++) {
                if (prevSlide < 0) prevSlide = _.slideCount - 1;
                loadRange = loadRange.add($slides.eq(prevSlide));
                loadRange = loadRange.add($slides.eq(nextSlide));
                prevSlide--;
                nextSlide++;
            }
        }

        loadImages(loadRange);

        if (_.slideCount <= _.options.slidesToShow) {
            cloneRange = _.$slider.find('.slick-slide');
            loadImages(cloneRange);
        } else
        if (_.currentSlide >= _.slideCount - _.options.slidesToShow) {
            cloneRange = _.$slider.find('.slick-cloned').slice(0, _.options.slidesToShow);
            loadImages(cloneRange);
        } else if (_.currentSlide === 0) {
            cloneRange = _.$slider.find('.slick-cloned').slice(_.options.slidesToShow * -1);
            loadImages(cloneRange);
        }

    };

    Slick.prototype.loadSlider = function() {

        var _ = this;

        _.setPosition();

        _.$slideTrack.css({
            opacity: 1
        });

        _.$slider.removeClass('slick-loading');

        _.initUI();

        if (_.options.lazyLoad === 'progressive') {
            _.progressiveLazyLoad();
        }

    };

    Slick.prototype.next = Slick.prototype.slickNext = function() {

        var _ = this;

        _.changeSlide({
            data: {
                message: 'next'
            }
        });

    };

    Slick.prototype.orientationChange = function() {

        var _ = this;

        _.checkResponsive();
        _.setPosition();

    };

    Slick.prototype.pause = Slick.prototype.slickPause = function() {

        var _ = this;

        _.autoPlayClear();
        _.paused = true;

    };

    Slick.prototype.play = Slick.prototype.slickPlay = function() {

        var _ = this;

        _.autoPlay();
        _.options.autoplay = true;
        _.paused = false;
        _.focussed = false;
        _.interrupted = false;

    };

    Slick.prototype.postSlide = function(index) {

        var _ = this;

        if( !_.unslicked ) {

            _.$slider.trigger('afterChange', [_, index]);

            _.animating = false;

            if (_.slideCount > _.options.slidesToShow) {
                _.setPosition();
            }

            _.swipeLeft = null;

            if ( _.options.autoplay ) {
                _.autoPlay();
            }

            if (_.options.accessibility === true) {
                _.initADA();

                if (_.options.focusOnChange) {
                    var $currentSlide = $(_.$slides.get(_.currentSlide));
                    $currentSlide.attr('tabindex', 0).focus();
                }
            }

        }

    };

    Slick.prototype.prev = Slick.prototype.slickPrev = function() {

        var _ = this;

        _.changeSlide({
            data: {
                message: 'previous'
            }
        });

    };

    Slick.prototype.preventDefault = function(event) {

        event.preventDefault();

    };

    Slick.prototype.progressiveLazyLoad = function( tryCount ) {

        tryCount = tryCount || 1;

        var _ = this,
            $imgsToLoad = $( 'img[data-lazy]', _.$slider ),
            image,
            imageSource,
            imageSrcSet,
            imageSizes,
            imageToLoad;

        if ( $imgsToLoad.length ) {

            image = $imgsToLoad.first();
            imageSource = image.attr('data-lazy');
            imageSrcSet = image.attr('data-srcset');
            imageSizes  = image.attr('data-sizes') || _.$slider.attr('data-sizes');
            imageToLoad = document.createElement('img');

            imageToLoad.onload = function() {

                if (imageSrcSet) {
                    image
                        .attr('srcset', imageSrcSet );

                    if (imageSizes) {
                        image
                            .attr('sizes', imageSizes );
                    }
                }

                image
                    .attr( 'src', imageSource )
                    .removeAttr('data-lazy data-srcset data-sizes')
                    .removeClass('slick-loading');

                if ( _.options.adaptiveHeight === true ) {
                    _.setPosition();
                }

                _.$slider.trigger('lazyLoaded', [ _, image, imageSource ]);
                _.progressiveLazyLoad();

            };

            imageToLoad.onerror = function() {

                if ( tryCount < 3 ) {

                    /**
                     * try to load the image 3 times,
                     * leave a slight delay so we don't get
                     * servers blocking the request.
                     */
                    setTimeout( function() {
                        _.progressiveLazyLoad( tryCount + 1 );
                    }, 500 );

                } else {

                    image
                        .removeAttr( 'data-lazy' )
                        .removeClass( 'slick-loading' )
                        .addClass( 'slick-lazyload-error' );

                    _.$slider.trigger('lazyLoadError', [ _, image, imageSource ]);

                    _.progressiveLazyLoad();

                }

            };

            imageToLoad.src = imageSource;

        } else {

            _.$slider.trigger('allImagesLoaded', [ _ ]);

        }

    };

    Slick.prototype.refresh = function( initializing ) {

        var _ = this, currentSlide, lastVisibleIndex;

        lastVisibleIndex = _.slideCount - _.options.slidesToShow;

        // in non-infinite sliders, we don't want to go past the
        // last visible index.
        if( !_.options.infinite && ( _.currentSlide > lastVisibleIndex )) {
            _.currentSlide = lastVisibleIndex;
        }

        // if less slides than to show, go to start.
        if ( _.slideCount <= _.options.slidesToShow ) {
            _.currentSlide = 0;

        }

        currentSlide = _.currentSlide;

        _.destroy(true);

        $.extend(_, _.initials, { currentSlide: currentSlide });

        _.init();

        if( !initializing ) {

            _.changeSlide({
                data: {
                    message: 'index',
                    index: currentSlide
                }
            }, false);

        }

    };

    Slick.prototype.registerBreakpoints = function() {

        var _ = this, breakpoint, currentBreakpoint, l,
            responsiveSettings = _.options.responsive || null;

        if ( $.type(responsiveSettings) === 'array' && responsiveSettings.length ) {

            _.respondTo = _.options.respondTo || 'window';

            for ( breakpoint in responsiveSettings ) {

                l = _.breakpoints.length-1;

                if (responsiveSettings.hasOwnProperty(breakpoint)) {
                    currentBreakpoint = responsiveSettings[breakpoint].breakpoint;

                    // loop through the breakpoints and cut out any existing
                    // ones with the same breakpoint number, we don't want dupes.
                    while( l >= 0 ) {
                        if( _.breakpoints[l] && _.breakpoints[l] === currentBreakpoint ) {
                            _.breakpoints.splice(l,1);
                        }
                        l--;
                    }

                    _.breakpoints.push(currentBreakpoint);
                    _.breakpointSettings[currentBreakpoint] = responsiveSettings[breakpoint].settings;

                }

            }

            _.breakpoints.sort(function(a, b) {
                return ( _.options.mobileFirst ) ? a-b : b-a;
            });

        }

    };

    Slick.prototype.reinit = function() {

        var _ = this;

        _.$slides =
            _.$slideTrack
                .children(_.options.slide)
                .addClass('slick-slide');

        _.slideCount = _.$slides.length;

        if (_.currentSlide >= _.slideCount && _.currentSlide !== 0) {
            _.currentSlide = _.currentSlide - _.options.slidesToScroll;
        }

        if (_.slideCount <= _.options.slidesToShow) {
            _.currentSlide = 0;
        }

        _.registerBreakpoints();

        _.setProps();
        _.setupInfinite();
        _.buildArrows();
        _.updateArrows();
        _.initArrowEvents();
        _.buildDots();
        _.updateDots();
        _.initDotEvents();
        _.cleanUpSlideEvents();
        _.initSlideEvents();

        _.checkResponsive(false, true);

        if (_.options.focusOnSelect === true) {
            $(_.$slideTrack).children().on('click.slick', _.selectHandler);
        }

        _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);

        _.setPosition();
        _.focusHandler();

        _.paused = !_.options.autoplay;
        _.autoPlay();

        _.$slider.trigger('reInit', [_]);

    };

    Slick.prototype.resize = function() {

        var _ = this;

        if ($(window).width() !== _.windowWidth) {
            clearTimeout(_.windowDelay);
            _.windowDelay = window.setTimeout(function() {
                _.windowWidth = $(window).width();
                _.checkResponsive();
                if( !_.unslicked ) { _.setPosition(); }
            }, 50);
        }
    };

    Slick.prototype.removeSlide = Slick.prototype.slickRemove = function(index, removeBefore, removeAll) {

        var _ = this;

        if (typeof(index) === 'boolean') {
            removeBefore = index;
            index = removeBefore === true ? 0 : _.slideCount - 1;
        } else {
            index = removeBefore === true ? --index : index;
        }

        if (_.slideCount < 1 || index < 0 || index > _.slideCount - 1) {
            return false;
        }

        _.unload();

        if (removeAll === true) {
            _.$slideTrack.children().remove();
        } else {
            _.$slideTrack.children(this.options.slide).eq(index).remove();
        }

        _.$slides = _.$slideTrack.children(this.options.slide);

        _.$slideTrack.children(this.options.slide).detach();

        _.$slideTrack.append(_.$slides);

        _.$slidesCache = _.$slides;

        _.reinit();

    };

    Slick.prototype.setCSS = function(position) {

        var _ = this,
            positionProps = {},
            x, y;

        if (_.options.rtl === true) {
            position = -position;
        }
        x = _.positionProp == 'left' ? Math.ceil(position) + 'px' : '0px';
        y = _.positionProp == 'top' ? Math.ceil(position) + 'px' : '0px';

        positionProps[_.positionProp] = position;

        if (_.transformsEnabled === false) {
            _.$slideTrack.css(positionProps);
        } else {
            positionProps = {};
            if (_.cssTransitions === false) {
                positionProps[_.animType] = 'translate(' + x + ', ' + y + ')';
                _.$slideTrack.css(positionProps);
            } else {
                positionProps[_.animType] = 'translate3d(' + x + ', ' + y + ', 0px)';
                _.$slideTrack.css(positionProps);
            }
        }

    };

    Slick.prototype.setDimensions = function() {

        var _ = this;

        if (_.options.vertical === false) {
            if (_.options.centerMode === true) {
                _.$list.css({
                    padding: ('0px ' + _.options.centerPadding)
                });
            }
        } else {
            _.$list.height(_.$slides.first().outerHeight(true) * _.options.slidesToShow);
            if (_.options.centerMode === true) {
                _.$list.css({
                    padding: (_.options.centerPadding + ' 0px')
                });
            }
        }

        _.listWidth = _.$list.width();
        _.listHeight = _.$list.height();


        if (_.options.vertical === false && _.options.variableWidth === false) {
            _.slideWidth = Math.ceil(_.listWidth / _.options.slidesToShow);
            _.$slideTrack.width(Math.ceil((_.slideWidth * _.$slideTrack.children('.slick-slide').length)));

        } else if (_.options.variableWidth === true) {
            _.$slideTrack.width(5000 * _.slideCount);
        } else {
            _.slideWidth = Math.ceil(_.listWidth);
            _.$slideTrack.height(Math.ceil((_.$slides.first().outerHeight(true) * _.$slideTrack.children('.slick-slide').length)));
        }

        var offset = _.$slides.first().outerWidth(true) - _.$slides.first().width();
        if (_.options.variableWidth === false) _.$slideTrack.children('.slick-slide').width(_.slideWidth - offset);

    };

    Slick.prototype.setFade = function() {

        var _ = this,
            targetLeft;

        _.$slides.each(function(index, element) {
            targetLeft = (_.slideWidth * index) * -1;
            if (_.options.rtl === true) {
                $(element).css({
                    position: 'relative',
                    right: targetLeft,
                    top: 0,
                    zIndex: _.options.zIndex - 2,
                    opacity: 0
                });
            } else {
                $(element).css({
                    position: 'relative',
                    left: targetLeft,
                    top: 0,
                    zIndex: _.options.zIndex - 2,
                    opacity: 0
                });
            }
        });

        _.$slides.eq(_.currentSlide).css({
            zIndex: _.options.zIndex - 1,
            opacity: 1
        });

    };

    Slick.prototype.setHeight = function() {

        var _ = this;

        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {
            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);
            _.$list.css('height', targetHeight);
        }

    };

    Slick.prototype.setOption =
    Slick.prototype.slickSetOption = function() {

        /**
         * accepts arguments in format of:
         *
         *  - for changing a single option's value:
         *     .slick("setOption", option, value, refresh )
         *
         *  - for changing a set of responsive options:
         *     .slick("setOption", 'responsive', [{}, ...], refresh )
         *
         *  - for updating multiple values at once (not responsive)
         *     .slick("setOption", { 'option': value, ... }, refresh )
         */

        var _ = this, l, item, option, value, refresh = false, type;

        if( $.type( arguments[0] ) === 'object' ) {

            option =  arguments[0];
            refresh = arguments[1];
            type = 'multiple';

        } else if ( $.type( arguments[0] ) === 'string' ) {

            option =  arguments[0];
            value = arguments[1];
            refresh = arguments[2];

            if ( arguments[0] === 'responsive' && $.type( arguments[1] ) === 'array' ) {

                type = 'responsive';

            } else if ( typeof arguments[1] !== 'undefined' ) {

                type = 'single';

            }

        }

        if ( type === 'single' ) {

            _.options[option] = value;


        } else if ( type === 'multiple' ) {

            $.each( option , function( opt, val ) {

                _.options[opt] = val;

            });


        } else if ( type === 'responsive' ) {

            for ( item in value ) {

                if( $.type( _.options.responsive ) !== 'array' ) {

                    _.options.responsive = [ value[item] ];

                } else {

                    l = _.options.responsive.length-1;

                    // loop through the responsive object and splice out duplicates.
                    while( l >= 0 ) {

                        if( _.options.responsive[l].breakpoint === value[item].breakpoint ) {

                            _.options.responsive.splice(l,1);

                        }

                        l--;

                    }

                    _.options.responsive.push( value[item] );

                }

            }

        }

        if ( refresh ) {

            _.unload();
            _.reinit();

        }

    };

    Slick.prototype.setPosition = function() {

        var _ = this;

        _.setDimensions();

        _.setHeight();

        if (_.options.fade === false) {
            _.setCSS(_.getLeft(_.currentSlide));
        } else {
            _.setFade();
        }

        _.$slider.trigger('setPosition', [_]);

    };

    Slick.prototype.setProps = function() {

        var _ = this,
            bodyStyle = document.body.style;

        _.positionProp = _.options.vertical === true ? 'top' : 'left';

        if (_.positionProp === 'top') {
            _.$slider.addClass('slick-vertical');
        } else {
            _.$slider.removeClass('slick-vertical');
        }

        if (bodyStyle.WebkitTransition !== undefined ||
            bodyStyle.MozTransition !== undefined ||
            bodyStyle.msTransition !== undefined) {
            if (_.options.useCSS === true) {
                _.cssTransitions = true;
            }
        }

        if ( _.options.fade ) {
            if ( typeof _.options.zIndex === 'number' ) {
                if( _.options.zIndex < 3 ) {
                    _.options.zIndex = 3;
                }
            } else {
                _.options.zIndex = _.defaults.zIndex;
            }
        }

        if (bodyStyle.OTransform !== undefined) {
            _.animType = 'OTransform';
            _.transformType = '-o-transform';
            _.transitionType = 'OTransition';
            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;
        }
        if (bodyStyle.MozTransform !== undefined) {
            _.animType = 'MozTransform';
            _.transformType = '-moz-transform';
            _.transitionType = 'MozTransition';
            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.MozPerspective === undefined) _.animType = false;
        }
        if (bodyStyle.webkitTransform !== undefined) {
            _.animType = 'webkitTransform';
            _.transformType = '-webkit-transform';
            _.transitionType = 'webkitTransition';
            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;
        }
        if (bodyStyle.msTransform !== undefined) {
            _.animType = 'msTransform';
            _.transformType = '-ms-transform';
            _.transitionType = 'msTransition';
            if (bodyStyle.msTransform === undefined) _.animType = false;
        }
        if (bodyStyle.transform !== undefined && _.animType !== false) {
            _.animType = 'transform';
            _.transformType = 'transform';
            _.transitionType = 'transition';
        }
        _.transformsEnabled = _.options.useTransform && (_.animType !== null && _.animType !== false);
    };


    Slick.prototype.setSlideClasses = function(index) {

        var _ = this,
            centerOffset, allSlides, indexOffset, remainder;

        allSlides = _.$slider
            .find('.slick-slide')
            .removeClass('slick-active slick-center slick-current')
            .attr('aria-hidden', 'true');

        _.$slides
            .eq(index)
            .addClass('slick-current');

        if (_.options.centerMode === true) {

            var evenCoef = _.options.slidesToShow % 2 === 0 ? 1 : 0;

            centerOffset = Math.floor(_.options.slidesToShow / 2);

            if (_.options.infinite === true) {

                if (index >= centerOffset && index <= (_.slideCount - 1) - centerOffset) {
                    _.$slides
                        .slice(index - centerOffset + evenCoef, index + centerOffset + 1)
                        .addClass('slick-active')
                        .attr('aria-hidden', 'false');

                } else {

                    indexOffset = _.options.slidesToShow + index;
                    allSlides
                        .slice(indexOffset - centerOffset + 1 + evenCoef, indexOffset + centerOffset + 2)
                        .addClass('slick-active')
                        .attr('aria-hidden', 'false');

                }

                if (index === 0) {

                    allSlides
                        .eq(allSlides.length - 1 - _.options.slidesToShow)
                        .addClass('slick-center');

                } else if (index === _.slideCount - 1) {

                    allSlides
                        .eq(_.options.slidesToShow)
                        .addClass('slick-center');

                }

            }

            _.$slides
                .eq(index)
                .addClass('slick-center');

        } else {

            if (index >= 0 && index <= (_.slideCount - _.options.slidesToShow)) {

                _.$slides
                    .slice(index, index + _.options.slidesToShow)
                    .addClass('slick-active')
                    .attr('aria-hidden', 'false');

            } else if (allSlides.length <= _.options.slidesToShow) {

                allSlides
                    .addClass('slick-active')
                    .attr('aria-hidden', 'false');

            } else {

                remainder = _.slideCount % _.options.slidesToShow;
                indexOffset = _.options.infinite === true ? _.options.slidesToShow + index : index;

                if (_.options.slidesToShow == _.options.slidesToScroll && (_.slideCount - index) < _.options.slidesToShow) {

                    allSlides
                        .slice(indexOffset - (_.options.slidesToShow - remainder), indexOffset + remainder)
                        .addClass('slick-active')
                        .attr('aria-hidden', 'false');

                } else {

                    allSlides
                        .slice(indexOffset, indexOffset + _.options.slidesToShow)
                        .addClass('slick-active')
                        .attr('aria-hidden', 'false');

                }

            }

        }

        if (_.options.lazyLoad === 'ondemand' || _.options.lazyLoad === 'anticipated') {
            _.lazyLoad();
        }
    };

    Slick.prototype.setupInfinite = function() {

        var _ = this,
            i, slideIndex, infiniteCount;

        if (_.options.fade === true) {
            _.options.centerMode = false;
        }

        if (_.options.infinite === true && _.options.fade === false) {

            slideIndex = null;

            if (_.slideCount > _.options.slidesToShow) {

                if (_.options.centerMode === true) {
                    infiniteCount = _.options.slidesToShow + 1;
                } else {
                    infiniteCount = _.options.slidesToShow;
                }

                for (i = _.slideCount; i > (_.slideCount -
                        infiniteCount); i -= 1) {
                    slideIndex = i - 1;
                    $(_.$slides[slideIndex]).clone(true).attr('id', '')
                        .attr('data-slick-index', slideIndex - _.slideCount)
                        .prependTo(_.$slideTrack).addClass('slick-cloned');
                }
                for (i = 0; i < infiniteCount  + _.slideCount; i += 1) {
                    slideIndex = i;
                    $(_.$slides[slideIndex]).clone(true).attr('id', '')
                        .attr('data-slick-index', slideIndex + _.slideCount)
                        .appendTo(_.$slideTrack).addClass('slick-cloned');
                }
                _.$slideTrack.find('.slick-cloned').find('[id]').each(function() {
                    $(this).attr('id', '');
                });

            }

        }

    };

    Slick.prototype.interrupt = function( toggle ) {

        var _ = this;

        if( !toggle ) {
            _.autoPlay();
        }
        _.interrupted = toggle;

    };

    Slick.prototype.selectHandler = function(event) {

        var _ = this;

        var targetElement =
            $(event.target).is('.slick-slide') ?
                $(event.target) :
                $(event.target).parents('.slick-slide');

        var index = parseInt(targetElement.attr('data-slick-index'));

        if (!index) index = 0;

        if (_.slideCount <= _.options.slidesToShow) {

            _.slideHandler(index, false, true);
            return;

        }

        _.slideHandler(index);

    };

    Slick.prototype.slideHandler = function(index, sync, dontAnimate) {

        var targetSlide, animSlide, oldSlide, slideLeft, targetLeft = null,
            _ = this, navTarget;

        sync = sync || false;

        if (_.animating === true && _.options.waitForAnimate === true) {
            return;
        }

        if (_.options.fade === true && _.currentSlide === index) {
            return;
        }

        if (sync === false) {
            _.asNavFor(index);
        }

        targetSlide = index;
        targetLeft = _.getLeft(targetSlide);
        slideLeft = _.getLeft(_.currentSlide);

        _.currentLeft = _.swipeLeft === null ? slideLeft : _.swipeLeft;

        if (_.options.infinite === false && _.options.centerMode === false && (index < 0 || index > _.getDotCount() * _.options.slidesToScroll)) {
            if (_.options.fade === false) {
                targetSlide = _.currentSlide;
                if (dontAnimate !== true && _.slideCount > _.options.slidesToShow) {
                    _.animateSlide(slideLeft, function() {
                        _.postSlide(targetSlide);
                    });
                } else {
                    _.postSlide(targetSlide);
                }
            }
            return;
        } else if (_.options.infinite === false && _.options.centerMode === true && (index < 0 || index > (_.slideCount - _.options.slidesToScroll))) {
            if (_.options.fade === false) {
                targetSlide = _.currentSlide;
                if (dontAnimate !== true && _.slideCount > _.options.slidesToShow) {
                    _.animateSlide(slideLeft, function() {
                        _.postSlide(targetSlide);
                    });
                } else {
                    _.postSlide(targetSlide);
                }
            }
            return;
        }

        if ( _.options.autoplay ) {
            clearInterval(_.autoPlayTimer);
        }

        if (targetSlide < 0) {
            if (_.slideCount % _.options.slidesToScroll !== 0) {
                animSlide = _.slideCount - (_.slideCount % _.options.slidesToScroll);
            } else {
                animSlide = _.slideCount + targetSlide;
            }
        } else if (targetSlide >= _.slideCount) {
            if (_.slideCount % _.options.slidesToScroll !== 0) {
                animSlide = 0;
            } else {
                animSlide = targetSlide - _.slideCount;
            }
        } else {
            animSlide = targetSlide;
        }

        _.animating = true;

        _.$slider.trigger('beforeChange', [_, _.currentSlide, animSlide]);

        oldSlide = _.currentSlide;
        _.currentSlide = animSlide;

        _.setSlideClasses(_.currentSlide);

        if ( _.options.asNavFor ) {

            navTarget = _.getNavTarget();
            navTarget = navTarget.slick('getSlick');

            if ( navTarget.slideCount <= navTarget.options.slidesToShow ) {
                navTarget.setSlideClasses(_.currentSlide);
            }

        }

        _.updateDots();
        _.updateArrows();

        if (_.options.fade === true) {
            if (dontAnimate !== true) {

                _.fadeSlideOut(oldSlide);

                _.fadeSlide(animSlide, function() {
                    _.postSlide(animSlide);
                });

            } else {
                _.postSlide(animSlide);
            }
            _.animateHeight();
            return;
        }

        if (dontAnimate !== true && _.slideCount > _.options.slidesToShow) {
            _.animateSlide(targetLeft, function() {
                _.postSlide(animSlide);
            });
        } else {
            _.postSlide(animSlide);
        }

    };

    Slick.prototype.startLoad = function() {

        var _ = this;

        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {

            _.$prevArrow.hide();
            _.$nextArrow.hide();

        }

        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {

            _.$dots.hide();

        }

        _.$slider.addClass('slick-loading');

    };

    Slick.prototype.swipeDirection = function() {

        var xDist, yDist, r, swipeAngle, _ = this;

        xDist = _.touchObject.startX - _.touchObject.curX;
        yDist = _.touchObject.startY - _.touchObject.curY;
        r = Math.atan2(yDist, xDist);

        swipeAngle = Math.round(r * 180 / Math.PI);
        if (swipeAngle < 0) {
            swipeAngle = 360 - Math.abs(swipeAngle);
        }

        if ((swipeAngle <= 45) && (swipeAngle >= 0)) {
            return (_.options.rtl === false ? 'left' : 'right');
        }
        if ((swipeAngle <= 360) && (swipeAngle >= 315)) {
            return (_.options.rtl === false ? 'left' : 'right');
        }
        if ((swipeAngle >= 135) && (swipeAngle <= 225)) {
            return (_.options.rtl === false ? 'right' : 'left');
        }
        if (_.options.verticalSwiping === true) {
            if ((swipeAngle >= 35) && (swipeAngle <= 135)) {
                return 'down';
            } else {
                return 'up';
            }
        }

        return 'vertical';

    };

    Slick.prototype.swipeEnd = function(event) {

        var _ = this,
            slideCount,
            direction;

        _.dragging = false;
        _.swiping = false;

        if (_.scrolling) {
            _.scrolling = false;
            return false;
        }

        _.interrupted = false;
        _.shouldClick = ( _.touchObject.swipeLength > 10 ) ? false : true;

        if ( _.touchObject.curX === undefined ) {
            return false;
        }

        if ( _.touchObject.edgeHit === true ) {
            _.$slider.trigger('edge', [_, _.swipeDirection() ]);
        }

        if ( _.touchObject.swipeLength >= _.touchObject.minSwipe ) {

            direction = _.swipeDirection();

            switch ( direction ) {

                case 'left':
                case 'down':

                    slideCount =
                        _.options.swipeToSlide ?
                            _.checkNavigable( _.currentSlide + _.getSlideCount() ) :
                            _.currentSlide + _.getSlideCount();

                    _.currentDirection = 0;

                    break;

                case 'right':
                case 'up':

                    slideCount =
                        _.options.swipeToSlide ?
                            _.checkNavigable( _.currentSlide - _.getSlideCount() ) :
                            _.currentSlide - _.getSlideCount();

                    _.currentDirection = 1;

                    break;

                default:


            }

            if( direction != 'vertical' ) {

                _.slideHandler( slideCount );
                _.touchObject = {};
                _.$slider.trigger('swipe', [_, direction ]);

            }

        } else {

            if ( _.touchObject.startX !== _.touchObject.curX ) {

                _.slideHandler( _.currentSlide );
                _.touchObject = {};

            }

        }

    };

    Slick.prototype.swipeHandler = function(event) {

        var _ = this;

        if ((_.options.swipe === false) || ('ontouchend' in document && _.options.swipe === false)) {
            return;
        } else if (_.options.draggable === false && event.type.indexOf('mouse') !== -1) {
            return;
        }

        _.touchObject.fingerCount = event.originalEvent && event.originalEvent.touches !== undefined ?
            event.originalEvent.touches.length : 1;

        _.touchObject.minSwipe = _.listWidth / _.options
            .touchThreshold;

        if (_.options.verticalSwiping === true) {
            _.touchObject.minSwipe = _.listHeight / _.options
                .touchThreshold;
        }

        switch (event.data.action) {

            case 'start':
                _.swipeStart(event);
                break;

            case 'move':
                _.swipeMove(event);
                break;

            case 'end':
                _.swipeEnd(event);
                break;

        }

    };

    Slick.prototype.swipeMove = function(event) {

        var _ = this,
            edgeWasHit = false,
            curLeft, swipeDirection, swipeLength, positionOffset, touches, verticalSwipeLength;

        touches = event.originalEvent !== undefined ? event.originalEvent.touches : null;

        if (!_.dragging || _.scrolling || touches && touches.length !== 1) {
            return false;
        }

        curLeft = _.getLeft(_.currentSlide);

        _.touchObject.curX = touches !== undefined ? touches[0].pageX : event.clientX;
        _.touchObject.curY = touches !== undefined ? touches[0].pageY : event.clientY;

        _.touchObject.swipeLength = Math.round(Math.sqrt(
            Math.pow(_.touchObject.curX - _.touchObject.startX, 2)));

        verticalSwipeLength = Math.round(Math.sqrt(
            Math.pow(_.touchObject.curY - _.touchObject.startY, 2)));

        if (!_.options.verticalSwiping && !_.swiping && verticalSwipeLength > 4) {
            _.scrolling = true;
            return false;
        }

        if (_.options.verticalSwiping === true) {
            _.touchObject.swipeLength = verticalSwipeLength;
        }

        swipeDirection = _.swipeDirection();

        if (event.originalEvent !== undefined && _.touchObject.swipeLength > 4) {
            _.swiping = true;
            event.preventDefault();
        }

        positionOffset = (_.options.rtl === false ? 1 : -1) * (_.touchObject.curX > _.touchObject.startX ? 1 : -1);
        if (_.options.verticalSwiping === true) {
            positionOffset = _.touchObject.curY > _.touchObject.startY ? 1 : -1;
        }


        swipeLength = _.touchObject.swipeLength;

        _.touchObject.edgeHit = false;

        if (_.options.infinite === false) {
            if ((_.currentSlide === 0 && swipeDirection === 'right') || (_.currentSlide >= _.getDotCount() && swipeDirection === 'left')) {
                swipeLength = _.touchObject.swipeLength * _.options.edgeFriction;
                _.touchObject.edgeHit = true;
            }
        }

        if (_.options.vertical === false) {
            _.swipeLeft = curLeft + swipeLength * positionOffset;
        } else {
            _.swipeLeft = curLeft + (swipeLength * (_.$list.height() / _.listWidth)) * positionOffset;
        }
        if (_.options.verticalSwiping === true) {
            _.swipeLeft = curLeft + swipeLength * positionOffset;
        }

        if (_.options.fade === true || _.options.touchMove === false) {
            return false;
        }

        if (_.animating === true) {
            _.swipeLeft = null;
            return false;
        }

        _.setCSS(_.swipeLeft);

    };

    Slick.prototype.swipeStart = function(event) {

        var _ = this,
            touches;

        _.interrupted = true;

        if (_.touchObject.fingerCount !== 1 || _.slideCount <= _.options.slidesToShow) {
            _.touchObject = {};
            return false;
        }

        if (event.originalEvent !== undefined && event.originalEvent.touches !== undefined) {
            touches = event.originalEvent.touches[0];
        }

        _.touchObject.startX = _.touchObject.curX = touches !== undefined ? touches.pageX : event.clientX;
        _.touchObject.startY = _.touchObject.curY = touches !== undefined ? touches.pageY : event.clientY;

        _.dragging = true;

    };

    Slick.prototype.unfilterSlides = Slick.prototype.slickUnfilter = function() {

        var _ = this;

        if (_.$slidesCache !== null) {

            _.unload();

            _.$slideTrack.children(this.options.slide).detach();

            _.$slidesCache.appendTo(_.$slideTrack);

            _.reinit();

        }

    };

    Slick.prototype.unload = function() {

        var _ = this;

        $('.slick-cloned', _.$slider).remove();

        if (_.$dots) {
            _.$dots.remove();
        }

        if (_.$prevArrow && _.htmlExpr.test(_.options.prevArrow)) {
            _.$prevArrow.remove();
        }

        if (_.$nextArrow && _.htmlExpr.test(_.options.nextArrow)) {
            _.$nextArrow.remove();
        }

        _.$slides
            .removeClass('slick-slide slick-active slick-visible slick-current')
            .attr('aria-hidden', 'true')
            .css('width', '');

    };

    Slick.prototype.unslick = function(fromBreakpoint) {

        var _ = this;
        _.$slider.trigger('unslick', [_, fromBreakpoint]);
        _.destroy();

    };

    Slick.prototype.updateArrows = function() {

        var _ = this,
            centerOffset;

        centerOffset = Math.floor(_.options.slidesToShow / 2);

        if ( _.options.arrows === true &&
            _.slideCount > _.options.slidesToShow &&
            !_.options.infinite ) {

            _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');
            _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');

            if (_.currentSlide === 0) {

                _.$prevArrow.addClass('slick-disabled').attr('aria-disabled', 'true');
                _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');

            } else if (_.currentSlide >= _.slideCount - _.options.slidesToShow && _.options.centerMode === false) {

                _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');
                _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');

            } else if (_.currentSlide >= _.slideCount - 1 && _.options.centerMode === true) {

                _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');
                _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');

            }

        }

    };

    Slick.prototype.updateDots = function() {

        var _ = this;

        if (_.$dots !== null) {

            _.$dots
                .find('li')
                    .removeClass('slick-active')
                    .end();

            _.$dots
                .find('li')
                .eq(Math.floor(_.currentSlide / _.options.slidesToScroll))
                .addClass('slick-active');

        }

    };

    Slick.prototype.visibility = function() {

        var _ = this;

        if ( _.options.autoplay ) {

            if ( document[_.hidden] ) {

                _.interrupted = true;

            } else {

                _.interrupted = false;

            }

        }

    };

    $.fn.slick = function() {
        var _ = this,
            opt = arguments[0],
            args = Array.prototype.slice.call(arguments, 1),
            l = _.length,
            i,
            ret;
        for (i = 0; i < l; i++) {
            if (typeof opt == 'object' || typeof opt == 'undefined')
                _[i].slick = new Slick(_[i], opt);
            else
                ret = _[i].slick[opt].apply(_[i].slick, args);
            if (typeof ret != 'undefined') return ret;
        }
        return _;
    };

}));

},{"jquery":18}],23:[function(require,module,exports){
/*!
 * Stickyfill -- `position: sticky` polyfill
 * v. 1.1.1 | https://github.com/wilddeer/stickyfill
 * Copyright Oleg Korsunsky | http://wd.dizaina.net/
 *
 * MIT License
 */

module.exports = (function(doc, win) {
    if (!doc) {
        doc = document;
    }

    if (!win) {
        win = window;
    }
    
    var watchArray = [],
        scroll,
        initialized = false,
        html = doc.documentElement,
        noop = function() {},
        checkTimer,

        //visibility API strings
        hiddenPropertyName = 'hidden',
        visibilityChangeEventName = 'visibilitychange';

    //fallback to prefixed names in old webkit browsers
    if (doc.webkitHidden !== undefined) {
        hiddenPropertyName = 'webkitHidden';
        visibilityChangeEventName = 'webkitvisibilitychange';
    }

    //test getComputedStyle
    if (!win.getComputedStyle) {
        seppuku();
    }

    //test for native support
    var prefixes = ['', '-webkit-', '-moz-', '-ms-'],
        block = document.createElement('div');

    for (var i = prefixes.length - 1; i >= 0; i--) {
        try {
            block.style.position = prefixes[i] + 'sticky';
        }
        catch(e) {}
        if (block.style.position != '') {
            seppuku();
        }
    }

    updateScrollPos();

    //commit seppuku!
    function seppuku() {
        init = add = rebuild = pause = stop = kill = noop;
    }

    function mergeObjects(targetObj, sourceObject) {
        for (key in sourceObject) {
            if (sourceObject.hasOwnProperty(key)) {
                targetObj[key] = sourceObject[key];
            }
        }
    }

    function parseNumeric(val) {
        return parseFloat(val) || 0;
    }

    function updateScrollPos() {
        scroll = {
            top: win.pageYOffset,
            left: win.pageXOffset
        };
    }

    function onScroll() {
        if (win.pageXOffset != scroll.left) {
            updateScrollPos();
            rebuild();
            return;
        }
        
        if (win.pageYOffset != scroll.top) {
            updateScrollPos();
            recalcAllPos();
        }
    }

    //fixes flickering
    function onWheel(event) {
        setTimeout(function() {
            if (win.pageYOffset != scroll.top) {
                scroll.top = win.pageYOffset;
                recalcAllPos();
            }
        }, 0);
    }

    function recalcAllPos() {
        for (var i = watchArray.length - 1; i >= 0; i--) {
            recalcElementPos(watchArray[i]);
        }
    }

    function recalcElementPos(el) {
        if (!el.inited) return;

        var currentMode = (scroll.top <= el.limit.start? 0: scroll.top >= el.limit.end? 2: 1);

        if (el.mode != currentMode) {
            switchElementMode(el, currentMode);
        }
    }

    //checks whether stickies start or stop positions have changed
    function fastCheck() {
        for (var i = watchArray.length - 1; i >= 0; i--) {
            if (!watchArray[i].inited) continue;

            var deltaTop = Math.abs(getDocOffsetTop(watchArray[i].clone) - watchArray[i].docOffsetTop),
                deltaHeight = Math.abs(watchArray[i].parent.node.offsetHeight - watchArray[i].parent.height);

            if (deltaTop >= 2 || deltaHeight >= 2) return false;
        }
        return true;
    }

    function initElement(el) {
        if (isNaN(parseFloat(el.computed.top)) || el.isCell) return;

        el.inited = true;

        if (!el.clone) clone(el);
        if (el.parent.computed.position != 'absolute' &&
            el.parent.computed.position != 'relative') el.parent.node.style.position = 'relative';

        recalcElementPos(el);

        el.parent.height = el.parent.node.offsetHeight;
        el.docOffsetTop = getDocOffsetTop(el.clone);
    }

    function deinitElement(el) {
        var deinitParent = true;

        el.clone && killClone(el);
        mergeObjects(el.node.style, el.css);

        //check whether element's parent is used by other stickies
        for (var i = watchArray.length - 1; i >= 0; i--) {
            if (watchArray[i].node !== el.node && watchArray[i].parent.node === el.parent.node) {
                deinitParent = false;
                break;
            }
        };

        if (deinitParent) el.parent.node.style.position = el.parent.css.position;
        el.mode = -1;
    }

    function initAll() {
        for (var i = watchArray.length - 1; i >= 0; i--) {
            initElement(watchArray[i]);
        }
    }

    function deinitAll() {
        for (var i = watchArray.length - 1; i >= 0; i--) {
            deinitElement(watchArray[i]);
        }
    }

    function switchElementMode(el, mode) {
        var nodeStyle = el.node.style;

        switch (mode) {
            case 0:
                nodeStyle.position = 'absolute';
                nodeStyle.left = el.offset.left + 'px';
                nodeStyle.right = el.offset.right + 'px';
                nodeStyle.top = el.offset.top + 'px';
                nodeStyle.bottom = 'auto';
                nodeStyle.width = 'auto';
                nodeStyle.marginLeft = 0;
                nodeStyle.marginRight = 0;
                nodeStyle.marginTop = 0;
                break;

            case 1:
                nodeStyle.position = 'fixed';
                nodeStyle.left = el.box.left + 'px';
                nodeStyle.right = el.box.right + 'px';
                nodeStyle.top = el.css.top;
                nodeStyle.bottom = 'auto';
                nodeStyle.width = 'auto';
                nodeStyle.marginLeft = 0;
                nodeStyle.marginRight = 0;
                nodeStyle.marginTop = 0;
                break;

            case 2:
                nodeStyle.position = 'absolute';
                nodeStyle.left = el.offset.left + 'px';
                nodeStyle.right = el.offset.right + 'px';
                nodeStyle.top = 'auto';
                nodeStyle.bottom = 0;
                nodeStyle.width = 'auto';
                nodeStyle.marginLeft = 0;
                nodeStyle.marginRight = 0;
                break;
        }

        el.mode = mode;
    }

    function clone(el) {
        el.clone = document.createElement('div');

        var refElement = el.node.nextSibling || el.node,
            cloneStyle = el.clone.style;

        cloneStyle.height = el.height + 'px';
        cloneStyle.width = el.width + 'px';
        cloneStyle.marginTop = el.computed.marginTop;
        cloneStyle.marginBottom = el.computed.marginBottom;
        cloneStyle.marginLeft = el.computed.marginLeft;
        cloneStyle.marginRight = el.computed.marginRight;
        cloneStyle.padding = cloneStyle.border = cloneStyle.borderSpacing = 0;
        cloneStyle.fontSize = '1em';
        cloneStyle.position = 'static';
        cloneStyle.cssFloat = el.computed.cssFloat;

        el.node.parentNode.insertBefore(el.clone, refElement);
    }

    function killClone(el) {
        el.clone.parentNode.removeChild(el.clone);
        el.clone = undefined;
    }

    function getElementParams(node) {
        var computedStyle = getComputedStyle(node),
            parentNode = node.parentNode,
            parentComputedStyle = getComputedStyle(parentNode),
            cachedPosition = node.style.position;

        node.style.position = 'relative';

        var computed = {
                top: computedStyle.top,
                marginTop: computedStyle.marginTop,
                marginBottom: computedStyle.marginBottom,
                marginLeft: computedStyle.marginLeft,
                marginRight: computedStyle.marginRight,
                cssFloat: computedStyle.cssFloat
            },
            numeric = {
                top: parseNumeric(computedStyle.top),
                marginBottom: parseNumeric(computedStyle.marginBottom),
                paddingLeft: parseNumeric(computedStyle.paddingLeft),
                paddingRight: parseNumeric(computedStyle.paddingRight),
                borderLeftWidth: parseNumeric(computedStyle.borderLeftWidth),
                borderRightWidth: parseNumeric(computedStyle.borderRightWidth)
            };

        node.style.position = cachedPosition;

        var css = {
                position: node.style.position,
                top: node.style.top,
                bottom: node.style.bottom,
                left: node.style.left,
                right: node.style.right,
                width: node.style.width,
                marginTop: node.style.marginTop,
                marginLeft: node.style.marginLeft,
                marginRight: node.style.marginRight
            },
            nodeOffset = getElementOffset(node),
            parentOffset = getElementOffset(parentNode),
            
            parent = {
                node: parentNode,
                css: {
                    position: parentNode.style.position
                },
                computed: {
                    position: parentComputedStyle.position
                },
                numeric: {
                    borderLeftWidth: parseNumeric(parentComputedStyle.borderLeftWidth),
                    borderRightWidth: parseNumeric(parentComputedStyle.borderRightWidth),
                    borderTopWidth: parseNumeric(parentComputedStyle.borderTopWidth),
                    borderBottomWidth: parseNumeric(parentComputedStyle.borderBottomWidth)
                }
            },

            el = {
                node: node,
                box: {
                    left: nodeOffset.win.left,
                    right: html.clientWidth - nodeOffset.win.right
                },
                offset: {
                    top: nodeOffset.win.top - parentOffset.win.top - parent.numeric.borderTopWidth,
                    left: nodeOffset.win.left - parentOffset.win.left - parent.numeric.borderLeftWidth,
                    right: -nodeOffset.win.right + parentOffset.win.right - parent.numeric.borderRightWidth
                },
                css: css,
                isCell: computedStyle.display == 'table-cell',
                computed: computed,
                numeric: numeric,
                width: nodeOffset.win.right - nodeOffset.win.left,
                height: nodeOffset.win.bottom - nodeOffset.win.top,
                mode: -1,
                inited: false,
                parent: parent,
                limit: {
                    start: nodeOffset.doc.top - numeric.top,
                    end: parentOffset.doc.top + parentNode.offsetHeight - parent.numeric.borderBottomWidth -
                        node.offsetHeight - numeric.top - numeric.marginBottom
                }
            };

        return el;
    }

    function getDocOffsetTop(node) {
        var docOffsetTop = 0;

        while (node) {
            docOffsetTop += node.offsetTop;
            node = node.offsetParent;
        }

        return docOffsetTop;
    }

    function getElementOffset(node) {
        var box = node.getBoundingClientRect();

            return {
                doc: {
                    top: box.top + win.pageYOffset,
                    left: box.left + win.pageXOffset
                },
                win: box
            };
    }

    function startFastCheckTimer() {
        checkTimer = setInterval(function() {
            !fastCheck() && rebuild();
        }, 500);
    }

    function stopFastCheckTimer() {
        clearInterval(checkTimer);
    }

    function handlePageVisibilityChange() {
        if (!initialized) return;

        if (document[hiddenPropertyName]) {
            stopFastCheckTimer();
        }
        else {
            startFastCheckTimer();
        }
    }

    function init() {
        if (initialized) return;

        updateScrollPos();
        initAll();

        win.addEventListener('scroll', onScroll);
        win.addEventListener('wheel', onWheel);

        //watch for width changes
        win.addEventListener('resize', rebuild);
        win.addEventListener('orientationchange', rebuild);

        //watch for page visibility
        doc.addEventListener(visibilityChangeEventName, handlePageVisibilityChange);

        startFastCheckTimer();

        initialized = true;
    }

    function rebuild() {
        if (!initialized) return;

        deinitAll();
        
        for (var i = watchArray.length - 1; i >= 0; i--) {
            watchArray[i] = getElementParams(watchArray[i].node);
        }
        
        initAll();
    }

    function pause() {
        win.removeEventListener('scroll', onScroll);
        win.removeEventListener('wheel', onWheel);
        win.removeEventListener('resize', rebuild);
        win.removeEventListener('orientationchange', rebuild);
        doc.removeEventListener(visibilityChangeEventName, handlePageVisibilityChange);

        stopFastCheckTimer();

        initialized = false;
    }

    function stop() {
        pause();
        deinitAll(); 
    }

    function kill() {
        stop();

        //empty the array without loosing the references,
        //the most performant method according to http://jsperf.com/empty-javascript-array
        while (watchArray.length) {
            watchArray.pop();
        }
    }

    function add(node) {
        //check if Stickyfill is already applied to the node
        for (var i = watchArray.length - 1; i >= 0; i--) {
            if (watchArray[i].node === node) return;
        };

        var el = getElementParams(node);

        watchArray.push(el);

        if (!initialized) {
            init();
        }
        else {
            initElement(el);
        }
    }

    function remove(node) {
        for (var i = watchArray.length - 1; i >= 0; i--) {
            if (watchArray[i].node === node) {
                deinitElement(watchArray[i]);
                watchArray.splice(i, 1);
            }
        };
    }

    //expose Stickyfill
    return {
        stickies: watchArray,
        add: add,
        remove: remove,
        init: init,
        rebuild: rebuild,
        pause: pause,
        stop: stop,
        kill: kill
    };
})
},{}],24:[function(require,module,exports){

/** @module toxi.THREE */
module.exports = {
	ToxiclibsSupport: require('./THREE/ToxiclibsSupport')
};


},{"./THREE/ToxiclibsSupport":25}],25:[function(require,module,exports){
/*global THREE*/
var is = require('../internals/is');
    /**
     * @author Kyle Phillips  / haptic-data.com
     * a bridge between Toxiclibs.js and Three.js
     *
     * Three.js does type-checking to ensure that vectors, vertices and faces are of THREE's types
     * this helps to do that conversion process.
     */
    var	ToxiclibsSupport = function(scene){
        if(THREE === undefined){
            throw new Error("THREE.js has not been loaded");
        }
        this.scene = scene;
        this.objectDictionary = {};
    };

    ToxiclibsSupport.createLineGeometry = function(line3d, geometry){
        return ToxiclibsSupport.createMeshGeometry({ vertices: [line3d.a, line3d.b] }, geometry);
    };
    /**
     * create a THREE.Geometry with matching vertices to your triangleMesh
     * @param {toxi.geom.mesh.TriangleMesh} triangleMesh the toxiclibs.js triangle mesh to convert
     * @param {THREE.Geometry} [geometry] optional geometry to pass in if you would prefer to update
     * a geometry instead of create a new one
     * @returns {THREE.Geometry}
     */

    ToxiclibsSupport.createMeshGeometry = function createMeshGeometry(obj, geometry){
        geometry = geometry || new THREE.Geometry();
        //create a map where the unique id of the Vertex
        //references the index in the array
        var idIndexMap = {};
        var v, i, f, len, vertices;
        //add all vertices
        vertices = is.Array(obj) ? obj : obj.vertices;
        len = vertices.length;
        if( !vertices ){
            throw new Error('no vertices found');
        }
        for( i= 0; i<len; i++ ){
            v = vertices[i];
            geometry.vertices[i] = new THREE.Vector3(v.x, v.y, v.z);
            idIndexMap[v.id] = i;
        }

        if( obj.faces ){
            len = obj.faces.length;
            for( i=0; i<len; i++ ){
                f = obj.faces[i];
                //normal.y *= -1;
                //unlike toxiclibs, a face in three.js are indices related to the vertices array
                geometry.faces[i] = new THREE.Face3(
                    idIndexMap[f.a.id], idIndexMap[f.b.id], idIndexMap[f.c.id],
                    new THREE.Vector3(f.normal.x, f.normal.y, f.normal.z )
                );
            }
        }
        geometry.computeCentroids();
        geometry.computeVertexNormals();
        return geometry;
    };


    ToxiclibsSupport.createMesh = function(triangleMesh,material){
        if(material === undefined){
            material = new THREE.MeshBasicMaterial();
        }
        var geometry = ToxiclibsSupport.createMeshGeometry(triangleMesh);
        return new THREE.Mesh(geometry,material);
    };

    ToxiclibsSupport.createParticle = function(position, materials){
        var particle = new THREE.Particle(materials);
        particle.position.x = position.x;
        particle.position.y = position.y;
        particle.position.z = position.z;
        return particle;
    };

    ToxiclibsSupport.prototype = {
        addLine: function(line3d, material){
            if(material === undefined){
                material = new THREE.LineBasicMaterial();
            }
            var geom = ToxiclibsSupport.createLineGeometry(line3d);
            var line = new THREE.Line(geom,material);
            this.scene.add(line);
            return line;
        },
        /**
         * add a toxiclibs.js mesh to the three.js scene
         * @param {Object|toxi.geom.mesh.TriangleMesh} obj_or_mesh either an options object or
         * the toxiclibsjs mesh
         * --
         * @param {toxi.geom.mesh.Trianglemesh} [obj_or_mesh.geometry] the mesh in the options object
         * @param {THREE.Material} [obj_or_mesh.material] the three.js material for the mesh
         * @param {boolean} [obj_or_mesh.holdInDictionary] should ToxiclibsSupport hold a reference?
         * --
         * @param {THREE.Material} [threeMaterials] the three.js material for the mesh
         */
        addMesh: function(obj_or_mesh,threeMaterials){
            var toxiTriangleMesh;
            if(arguments.length == 1){ //it needs to be an param object
                toxiTriangleMesh = obj_or_mesh.geometry;
                threeMaterials = obj_or_mesh.materials;
            } else {
                toxiTriangleMesh = obj_or_mesh;
            }
            var threeMesh = this.createMesh(toxiTriangleMesh,threeMaterials);
            this.scene.add(threeMesh);
            return threeMesh;
        },
        addParticles: function(positions, material){
            if(material === undefined){
                material = new THREE.ParticleBasicMaterial();
            }
            positions =  is.Array( positions ) ? positions : [ positions ];
            var particle = new THREE.Geometry(),
                pos;
            for(var i=0,len = positions.length;i<len;i++){
                pos = positions[i];
                particle.vertices[i] = new THREE.Vector3( pos.x, pos.y, pos.z );
            }
            var particleSystem = new THREE.ParticleSystem(particle,material);
            this.scene.add(particleSystem);
            return particle;
        },
        createMeshGeometry: function(triangleMesh){
            return ToxiclibsSupport.createMeshGeometry(triangleMesh);
        },
        createMesh: function(triangleMesh,material){
            return ToxiclibsSupport.createMesh(triangleMesh,material);
        }
    };

    module.exports = ToxiclibsSupport;


},{"../internals/is":128}],26:[function(require,module,exports){

	exports.accessCriteria = require('./color/accessCriteria');
    //keep it uppercase also
    exports.AccessCriteria = exports.accessCriteria;
	exports.AlphaAccessor = require('./color/AlphaAccessor');
	exports.CMYKAccessor = require('./color/CMYKAccessor');
	exports.CMYKDDistanceProxy = require('./color/CMYKDistanceProxy');
	exports.ColorGradient = require('./color/ColorGradient');
	exports.ColorList = require('./color/ColorList');
    exports.ColorRange = require('./color/ColorRange');
    exports.ColorTheme = require('./color/ColorTheme');
    exports.createListUsingStrategy = require('./color/createListUsingStrategy');
    exports.HistEntry = require('./color/HistEntry');
    exports.Histogram = require('./color/Histogram');
	exports.HSVAccessor = require('./color/HSVAccessor');
	exports.HSVDistanceProxy = require('./color/HSVDistanceProxy');
    exports.Hue = require('./color/Hue');
	exports.LuminanceAccessor = require('./color/LuminanceAccessor');
    exports.namedColor = require('./color/namedColor');
    exports.NamedColor = exports.namedColor;
	exports.ProximityComparator = require('./color/ProximityComparator');
	exports.RGBAccessor = require('./color/RGBAccessor');
	exports.RGBDistanceProxy = require('./color/RGBDistanceProxy');
	exports.TColor = require('./color/TColor');
    exports.theory = require('./color/theory');
    exports.ToneMap = require('./color/ToneMap');


},{"./color/AlphaAccessor":27,"./color/CMYKAccessor":28,"./color/CMYKDistanceProxy":29,"./color/ColorGradient":30,"./color/ColorList":31,"./color/ColorRange":32,"./color/ColorTheme":33,"./color/HSVAccessor":34,"./color/HSVDistanceProxy":35,"./color/HistEntry":36,"./color/Histogram":37,"./color/Hue":38,"./color/LuminanceAccessor":39,"./color/ProximityComparator":40,"./color/RGBAccessor":41,"./color/RGBDistanceProxy":42,"./color/TColor":43,"./color/ToneMap":44,"./color/accessCriteria":45,"./color/createListUsingStrategy":47,"./color/namedColor":49,"./color/theory":50}],27:[function(require,module,exports){

	module.exports = require('./accessors').AlphaAccessor;


},{"./accessors":46}],28:[function(require,module,exports){

	module.exports = require('./accessors').CMYKAccessor;


},{"./accessors":46}],29:[function(require,module,exports){

	module.exports = require('./distanceProxies').CMYKDistanceProxy;

},{"./distanceProxies":48}],30:[function(require,module,exports){



var filter = require('../internals').filter,
	numberComparator = require('../internals').numberComparator,
	mathUtils = require('../math/mathUtils'),
	LinearInterpolation = require('../math/LinearInterpolation'),
	ColorList = require('./ColorList');

//a protected object for every point on the gradient
var _GradPoint = function(p, c){
	this.pos = p;
	this.color = c;
};

_GradPoint.prototype = {
	compareTo: function(p){
		if(numberComparator(p.pos,this.pos) === 0){
			return 0;
		}
		return this.pos < p.pos ? -1 : 1;
	},
	getColor: function(){
		return this.color;
	},
	getPosition: function(){
		return this.pos;
	}
};

var ColorGradient = function(){
	this.gradient = [];
	this.interpolator = new LinearInterpolation();
	this.maxDither = 0;
};

ColorGradient.prototype = {
	/**
	* Adds a new color at specified position.
	* @param {Number} p position in the gradient
	* @param {toxi.color.TColor} c color to add
	*/
	addColorAt: function(p, c){
		this.gradient.push(new _GradPoint(p,c));
	},
	/**
	* Calculates the gradient from specified position.
	* @param {Number} pos position to start at (float)
	* @param {Number} width (integer)
	* @return list of interpolated gradient colors
	*/
	calcGradient: function(pos, width){
		if( arguments.length === 0 ){
			pos = this.gradient[0].getPosition();
			var last = this.gradient[this.gradient.length-1].getPosition();
			width = Math.floor(last - pos);
		}

		var result = new ColorList();
		if( this.gradient.length === 0 ){
			return result;
		}

		var frac = 0,
			currPoint, nextPoint,
			endPos = pos + width,
			i = 0,
			l = this.gradient.length;

		for( i=0; i<l; i++ ){
			if( this.gradient[i].pos < pos ){
				currPoint = this.gradient[i];
			}
		}

		var isPremature = (currPoint===undefined),
			activeGradient;
		if( !isPremature ){
			activeGradient = filter(this.gradient, function( g ){ return g.pos >= currPoint.pos; });
		} else {
			//start position is before 1st gradient color, so use whole
			activeGradient = this.gradient;
			currPoint = this.gradient[0];
		}

		var currWidth = 0;
		//start over with i, and use it to iterate
		i = 0;
		l = activeGradient.length;
		if( currPoint !== activeGradient[l-1] ){
			nextPoint = activeGradient[i];
			if( isPremature ){
				var d = currPoint.pos - pos;
				currWidth = mathUtils.abs( d ) > 0 ? 1 / d : 1;
			} else {
				if( nextPoint.pos - currPoint.pos > 0 ) {
					currWidth = 1 / (nextPoint.pos - currPoint.pos);
				}
			}
		}
		while( pos < endPos ){
			if( isPremature ){
				frac = 1 - (currPoint.pos - pos) * currWidth;
			} else {
				frac = (pos - currPoint.pos) * currWidth;
			}
			//switch to next color?
			if( frac > 1.0 ){
				currPoint = nextPoint;
				isPremature = false;
				i++;
				if( i < activeGradient.length ){
					nextPoint = activeGradient[i];
					if( currPoint !== activeGradient[l-1] ){
						currWidth = 1 / (nextPoint.pos - currPoint.pos);
					} else {
						currWidth = 0;
					}
					frac = (pos - currPoint.pos) * currWidth;
				}
			}
			if( currPoint  !== activeGradient[l-1] ){
				var ditheredFrac = mathUtils.clip( frac+mathUtils.normalizedRandom() * this.maxDither, 0, 1 );
				ditheredFrac = this.interpolator.interpolate( 0, 1, ditheredFrac );
				result.add( currPoint.color.getBlended(nextPoint.color, ditheredFrac) );
			} else {
				result.add( currPoint.color.copy() );
			}
			pos++;
		}
		return result;

	},
	getGradientPoints: function(){
		return this.gradient;
	},
	/**
	* @return the interpolator
	*/
	getInterpolator: function(){
		return this.interpolator;
	},
	/**
	* @return the maximum dither amount.
	*/
	getMaxDither: function(){
		return this.maxDither;
	},
	/**
	* @param interpolator the interpolator to set
	*/
	setInterpolator: function(interpolator){
		this.interpolator = interpolator;
	},
	/**
	* Sets the maximum dither amount. Setting this to values >0 will jitter the
	* interpolated colors in the calculated gradient. The value range for this
	* parameter is 0.0 (off) to 1.0 (100%).
	* @param {Number} maxDither
	*/
	setMaxDither: function(maxDither){
		this.maxDither = mathUtils.clip(maxDither, 0, 1);
	}
};
	module.exports = ColorGradient;


},{"../internals":120,"../math/LinearInterpolation":141,"../math/mathUtils":147,"./ColorList":31}],31:[function(require,module,exports){


var is = require('../internals/is'),
    each = require('../internals/each'),
    Iterator = require('../internals/Iterator'),
	mathUtils = require('../math/mathUtils'),
	TColor = require('./TColor'),
	HSVDistanceProxy = require('./HSVDistanceProxy'),
	RGBDistanceProxy = require('./RGBDistanceProxy'),
	ProximityComparator = require('./ProximityComparator'),
	AccessCriteria = require('./accessCriteria');

/**
 * A container class of concrete colors. ColorLists can be built manually and
 * are also created when working with {@link ColorRange}s. The class has various
 * methods to manipulate all colors in the list in parallel, as well as sort
 * them by various criteria.
 * @see ColorRange
 * @see AccessCriteria
 */


/**
 @memberOf toxi.color
 @class Creates a ColorList by wrapping the given ArrayList of colors. No copies
 of the given colors are created (shallow copy only).
 @param {TColor[]} colors
*/
var ColorList = function(colors){
	if(arguments.length > 1){
		return ColorList.call(this,arguments);
	}
	this.colors = [];
    var i = 0;
    if( is.Array(colors) && colors.length ){
        if( typeof colors[0] === 'number' ){
            //argb integers
            for( i=0, l = colors.length; i<l; i++){
                this.colors.push(TColor.newARGB(colors[i]));
            }
        } else {
            //an array of tcolors
            this.addAll(colors);
        }
    } else if( is.ColorList(colors) ){
        for( i=0, l=colors.size(); i<l; i++){
            this.add(colors.get(i));
        }
    } else if( is.TColor(colors) ){
        //tcolor
        this.add(colors);
    }
};

ColorList.prototype = {
	constructor: ColorList,
	/**
	* Adds a copy of the given color to the list
	* @param {TColor} c
	* @return itself
	*/
	add: function(c){
		this.colors.push(c.copy());
		return this;
	},
	/**
	* Adds all entries of the TColor collection to the list (shallow copy only,
	* manipulating the new list will modify the original colors).
	* @param {Array} collection
	* @return itself
	*/
	addAll:	function(collection){
		var self = this;
        if( !is.Array(collection) ){
            this.colors.push(collection);
        } else {
            each(collection,function(color){
                self.colors.push(color);
            });
        }
		return this;
	},
	/**
	* Adjusts the brightness component of all list colors by the given amount.
	* @param step adjustment value
	* @return itself
	*/
	adjustBrightness: function(step){
		each(this.colors,function(c){
			c.lighten(step);
		});
		return this;
	},
	/**
	 * Adjusts the saturation component of all list colors by the given amount.
		 * @param step
	 *            adjustment value
	 * @return itself
	 */
	adjustSaturation: function(step){
		each(this.colors,function(c){
			c.saturate(step);
		});
		return this;
	},
	/**
	* Sorts the list based on two criteria to create clusters/segments within
	* the list.
	* @param clusterCriteria main sort criteria
	* @param subClusterCriteria secondary sort criteria
	* @param numClusters number of clusters
	* @param isReversed true, if reversed sort
	* @return itself
	*/
	clusterSort: function(clusterCriteria, subClusterCriteria, numClusters, isReversed){
		var sorted = this.colors.slice(0),
			clusters = [],
			d = 1,
			i = 0,
			num = sorted.length,
			slice;

		sorted.sort( clusterCriteria.compare ).reverse();
		for(var j=0;j<num;j++){
			var c = sorted[j];
			if(c.getComponentValue(clusterCriteria) < d){
				slice = sorted.slice(i, j);
				slice.sort( subClusterCriteria.compare );
				clusters.push.apply(clusters,slice);
				d -= 1.0 / numClusters;
				i = j;
			}
		}
		slice = [];
		Array.prototype.push.apply(slice,sorted.slice(i,sorted.length));
		slice.sort( subClusterCriteria.compare );
		clusters.push.apply(clusters,slice);
		if(isReversed){
			clusters.reverse();
		}
		this.colors = clusters;
		return this;
	},
	/**
	* Switches all list colors to their complementary color.
	* @return itself
	*/
	complement: function(){
		this.each(function(c){
			c.complement();
		});
		return this;
	},
	/**
	* Checks if the given color is part of the list. Check is done by value,
	* not instance.
	* @param color
	* @return true, if the color is present.
	*/
	contains: function(color){
		for( var i=0, l= this.colors.length; i<l; i++){
			if( this.colors[i].equals( color ) ){
				return true;
			}
		}
		return false;
	},
	each: function( fn ){
		each( this.colors, fn );
		return this;
	},
	/**
	* Returns the color at the given index. This function follows Python
	* convention, in that if the index is negative, it is considered relative
	* to the list end. Therefore the color at index -1 is the last color in the
	* list.
	* @param i
	*            index
	* @return color
	*/
	get: function(i){
		if(i < 0){
			i += this.colors.length;
		}
		return this.colors[i];
	},
	/**
	* Calculates and returns the average color of the list.
	* @return average color or null, if there're no entries yet.
	*/
	getAverage: function(){
		var r = 0,
			g = 0,
			b = 0,
			a = 0;

		this.each(function(c){
			r += c.rgb[0];
			g += c.rgb[1];
			b += c.rgb[2];
			a += c.alpha();
		});

		var num = this.colors.length;
		if(num > 0){
			return TColor.newRGBA(r / num, g / num, b / num, a / num);
		}
		return undefined;
	},
	/**
	* Creates a new ColorList by blending all colors in the list with each
	* other (successive indices only)
	* @param amount
	*            blend amount
	* @return new color list
	*/
	getBlended: function(amount){
		var clrs = [],
			len = this.colors.length;
		for(var i=0; i< len; i++){
			var index = i > 0 ? i -1 : clrs.length - 1,
				c = this.colors[index];
			clrs.push(this.colors[i].getBlended(c,amount));
		}
		return new ColorList(clrs);
	},
	/**
	* Finds and returns the darkest color of the list.
	* @return darkest color or null if there're no entries yet.
	*/
	getDarkest: function(){
		var darkest,
			minBrightness = Number.MAX_VALUE;
		this.each(function(c){
			var luma = c.luminance();
			if(luma < minBrightness){
				darkest = c;
				minBrightness = luma;
			}
		});
		return darkest;
	},
	/**
	* Finds and returns the lightest (luminance) color of the list.
	* @return lightest color or null, if there're no entries yet.
	*/
	getLightest: function(){
		var lightest,
			maxBrightness = Number.MIN_VALUE;
		this.each(function(c){
			var luma = c.luminance();
			if(luma > maxBrightness){
				lightest = c;
				maxBrightness = luma;
			}
		});
		return lightest;
	},

	getRandom: function(){
		var index = Math.floor(mathUtils.random(this.colors.length));
		return this.colors[index];
	},

	getReverse: function(){
		return new ColorList(this.colors).reverse();
	},

	invert: function(){
		this.each(function(c){
			c.invert();
		});
		return this;
	},

	iterator: function(){
		return new Iterator(this.colors);
	},

	reverse: function(){
		this.colors.reverse();
		return this;
	},

	rotateRYB: function(theta, isRadians){
		var angle;
		if(theta !== Math.floor(theta) || isRadians){
			angle = mathUtils.degrees(theta);
		} else {
			angle = theta;
		}
		this.each(function(c){
			c.rotateRYB(angle);
		});
		return this;
	},

	size: function(){
		return this.colors.length;
	},

	sort: function(){
		return this.sortByCriteria(AccessCriteria.HUE, false);
	},
	/**
	* Sorts the list using the given comparator.
	* @param comp
	*            comparator
	* @param isReversed
	*            true, if reversed sort
	* @return itself
	*/
	sortByComparator: function(comp, isReversed){
        //if a normal ( a, b ) sort function instead of an AccessCriteria,
        //wrap it so it can be invoked the same
        if( typeof comp === 'function' && typeof comp.compare === 'undefined' ){
            comp = { compare: comp };
        }
		this.colors.sort( comp.compare );
		if(isReversed){
			this.colors.reverse();
		}
		return this;
	},
	/**
	* Sorts the list using the given {@link AccessCriteria}.
	* @param criteria
	*            sort criteria
	* @param isReversed
	*            true, if reversed sort
	* @return itself
	*/
	sortByCriteria: function(criteria, isReversed){
		return this.sortByComparator(criteria, isReversed);
	},
	/**
	* Sorts the list by relative distance to each predecessor, starting with
	* the darkest color in the list.
    * @param {toxi.color.*{DistanceProxy}} proxy
	* @param isReversed
	*            true, if list is to be sorted in reverse.
	* @return itself
	*/

	sortByDistance: function(proxy, isReversed){
		if(arguments.length === 1){
			isReversed = arguments[0];
			proxy = new HSVDistanceProxy();
		}

		if(this.colors.length === 0){
			return this;
		}

		// Remove the darkest color from the stack,
		// put it in the sorted list as starting element.
		var root = this.getDarkest(),
			stack = this.colors.slice(0),
			sorted = [];

		stack.splice(stack.indexOf(root),1);
		sorted.push(root);

		// Now find the color in the stack closest to that color.
		// Take this color from the stack and add it to the sorted list.
		// Now find the color closest to that color, etc.
		var sortedCount = 0;
		while(stack.length > 1){
			var closest = stack[0],
				lastSorted = sorted[sortedCount],
				distance = proxy.distanceBetween(closest, lastSorted);

			for(var i = stack.length - 1; i >= 0; i--){
				var c = stack[i],
					d = proxy.distanceBetween(c, lastSorted);
				if(d < distance){
					closest = c;
					distance = d;
				}
			}
			stack.splice(stack.indexOf(closest),1);
			sorted.push(closest);
			sortedCount++;
		}
		sorted.push(stack[0]);
		if(isReversed){
			sorted.reverse();
		}
		this.colors = sorted;
		return this;
	},
	/**
	* Sorts the list by proximity to the given target color (using RGB distance
	* metrics).
	* @see #sortByProximityTo(ReadonlyTColor, DistanceProxy, boolean)
	* @param target
	*            color
	* @param isReversed
	*            true, if reverse sorted
	* @return sorted list
	*/
	sortByProximityTo: function(target, proxy, isReversed){
		if(arguments.length == 2){
			target = arguments[0];
			proxy = new RGBDistanceProxy();
			isReversed = arguments[1];
		}
		return this.sortByComparator(new ProximityComparator(target,proxy), isReversed);
	},

	toARGBArray: function(){
		var array = [];
		this.each(function(c){
			array.push(c.toARGB());
		});
		return array;
	}
};

/**
 * Factory method. Creates a new ColorList of colors randomly sampled from
 * the given ARGB image array. If the number of samples equals or exceeds
 * the number of pixels in the source image and no unique colors are
 * required, the function will simply return the same as
 * {@link #ColorList(int[])}.
 * @param pixels
 *            int array of ARGB pixels
 * @param num
 *            number of colors samples (clipped automatically to number of
 *            pixels in the image)
 * @param uniqueOnly
 *            flag if only unique samples are to be taken (doesn't guarantee
 *            unique colors though)
 * @param maxIterations (optional)
 *            max number of attempts to find a unique color. If no more
 *            unique colors can be found the search is terminated.
 * @return new color list of samples
 */
 ColorList.createFromARGBArray = function(pixels, num, uniqueOnly, maxIterations){
	maxIterations = maxIterations || 100;
	num = mathUtils.min(num, pixels.length);
	if(!uniqueOnly && num == pixels.length){
		return new ColorList(pixels);
	}

	var colors = [],
		temp = TColor.BLACK.copy(),
		i = 0,
		isUnique = true,
		numTries = 0,
		idx;
	for(i=0;i<num;i++){
		if(uniqueOnly){
			isUnique = true;
			numTries = 0;
			do {
				idx = mathUtils.random(pixels.length);
				temp.setARGB(pixels[idx]);
				isUnique = !(colors.indexOf(temp) >= 0);
			} while (!isUnique && ++numTries < maxIterations);
			if(numTries < maxIterations) {
				colors.push(temp.copy());
			} else {
				break;
			}
		} else {
			idx = mathUtils.random(pixels.length);
			colors.push(TColor.newARGB(pixels[idx]));
		}
	}
	return new ColorList(colors);
 };


ColorList.createUsingStrategy = function(){
    throw new Error('Not allowed, use toxi/color/createListUsingStrategy instead');
};

module.exports = ColorList;


},{"../internals/Iterator":121,"../internals/each":124,"../internals/is":128,"../math/mathUtils":147,"./HSVDistanceProxy":35,"./ProximityComparator":40,"./RGBDistanceProxy":42,"./TColor":43,"./accessCriteria":45}],32:[function(require,module,exports){
var TColor = require('./TColor');
var ColorList = require('./ColorList');
var FloatRange = require('../util/datatypes/FloatRange');
var is = require('../internals/is');
var each = require('../internals/each');
var MathUtils = require('../math/mathUtils');

    var ColorRange,
        UNTITLED_ID = 1,
        addRange,
        addAll,
        pickRandom;


    //@private
    //add all elements to the given array, without creating a new array (like concat)
    addAll = function( arr, elementsArr ){
        arr.push.apply(arr, elementsArr);
    };

    //@private
    //the addAlphaRange, addHueRange… methods are identical, so with js,
    //we can generate them without
    addRange = function(attr){
        return function( min, max ){
            this[attr.toLowerCase()+'Constraint'].push( is.FloatRange(min) ? min : new FloatRange(min,max) );
            return this;
        };
    };

    //@private
    //pickRandom element from array
    pickRandom = function( arr ){
        return arr[Math.floor(Math.random()*arr.length)];
    };

    /**
    * A ColorRange is a set of constraints to specify possible ranges for hue,
    * saturation, brightness and alpha independently and use these as creation
    * rules for new {@link TColor}s or {@link ColorList}s. The class comes with 11
    * preset ranges reflecting common demands and color characters. You can also
    * construct new ranges and manually add additional constraints. Unless the
    * constraints in a range are very narrow the class will always create random
    * variations within the constraints. Please see the examples for further
    * details.
    *
    * {@link ColorRange}s are a key ingredient for defining {@link ColorTheme}s but
    * can also be used individually.
    */


    /**
    * construct a new ColorRange,
    * this constructor takes a wide variety of param signatures,
    * 1.
        * @param {toxi.color.ColorList} list
    * 2.
        * @param {toxi.util.datatypes.FloatRange} [hue]
        * @param {toxi.util.datatypes.FloatRange} [sat]
        * @param {toxi.util.datatypes.FloatRange} [bri]
        * @param {toxi.util.datatypes.FloatRange} [alpha]
        * @param {toxi.util.datatypes.FloatRange} [black]
        * @param {toxi.util.datatypes.FloatRange} [white]
        * @param {String} [name]
    * 3.
        * @param {toxi.util.datatypes.FloatRange} [hue]
        * @param {toxi.util.datatypes.FloatRange} [sat]
        * @param {toxi.util.datatypes.FloatRange} [bri]
        * @param {toxi.util.datatypes.FloatRange} [alpha]
        * @param {String} [name]
    * 4.
        * @param {toxi.util.datatypes.FloatRange} [hue]
        * @param {toxi.util.datatypes.FloatRange} [sat]
        * @param {toxi.util.datatypes.FloatRange} [bri]
        * @param {String} [name]
    * 5.name
        * @param {toxi.color.Hue} hue
    * 6.
        * @param {toxi.color.TColor} c
    */
    ColorRange = function( hue, sat, bri, alpha, black, white, name ){
        var self = this, list; //if ColorList is supplied
        if( arguments.length === 0 ){
            return this;
        }
        //ColorRange( ColorList list)
        if( is.ColorList(hue) ){
            list = hue;
            hue = list.get(0);
        }
        //ColorRange( Hue hue )
        if( is.Hue(hue) ){
            hue = new FloatRange( hue.getHue(), hue.getHue() );
        }
        //ColorRange( TColor c )
        if( is.TColor(hue) ){
            //transform `hue` from a TColor to FloatRange for hue
            hue = new FloatRange( hue.hue(), hue.hue() );
        }
        this.hueConstraint = [is.FloatRange(hue) ? hue : new FloatRange(0,1)];
        this.saturationConstraint = [is.FloatRange(sat) ? sat : new FloatRange(0,1)];
        this.brightnessConstraint = [is.FloatRange(bri) ? bri : new FloatRange(0,1)];
        this.alphaConstraint = [is.FloatRange(alpha) ? alpha : new FloatRange(1,1)];
        //not arrays for black & white
        this.black = is.FloatRange(black) ? black : new FloatRange(0,1);
        this.white = is.FloatRange(white) ? white : new FloatRange(0,1);
        //now that the constraints have all been created
        if( list ){
            this.hueConstraint = []; //clear the hues
            list.each(function(c){ self.add(c); });
        }
        //search arguments for a string that would be the name
        var i=arguments.length-1;
        for(; i>=0; i--){
            if( typeof arguments[i] === 'string' ){
                this.name = arguments[i];
                break;
            }
        }
        if( !this.name ){
            this.name = "untitled"+(UNTITLED_ID++);
        }
    };


    ColorRange.prototype = {
        constructor: ColorRange,
        /**
         * Adds the HSV color components as constraints
         * @param {toxi.color.ColorRange | toxi.color.TColor} rc
         * @return itself
         */
        add: function( rc ){
            if( is.ColorRange(rc) ){
                addAll(this.hueConstraint, rc.hueConstraint);
                addAll(this.saturationConstraint, rc.saturationConstraint);
                addAll(this.brightnessConstraint, rc.brightnessConstraint);
                addAll(this.alphaConstraint, rc.alphaConstraint);
                this.black.min = Math.min( this.black.min, rc.black.min );
                this.black.max = Math.max( this.black.max, rc.black.max );
                this.white.min = Math.min( this.white.min, rc.white.min );
                this.white.max = Math.max( this.white.max, rc.white.max );
            } else {
                this.hueConstraint.push( new FloatRange(rc.hue(),rc.hue()) );
                this.saturationConstraint.push( new FloatRange(rc.saturation(),rc.saturation()) );
                this.brightnessConstraint.push( new FloatRange(rc.brightness(),rc.brightness()) );
                this.alphaConstraint.push( new FloatRange(rc.alpha(),rc.alpha()) );
            }
            return this;
        },
        /**
         * Adds the range between min-max as possible alpha values for this range
         * @param {toxi.util.datatypes.FloatRange | Number} min
         * @param {Number} [max]
         * @return itself
         */
        addAlphaRange: addRange('alpha'),
        addBrightnessRange: addRange('brightness'),
        addHue: function( hue ){
            this.hueConstraint.push( new FloatRange( hue.getHue(), hue.getHue() ) );
            return this;
        },
        addHueRange: addRange('hue'),
        addSaturationRange: addRange('saturation'),
        /**
         * checks if all HSVA components of the given color are within
         * the constraints define for this range
         * @param {toxi.color.TColor} c
         * @return true if is contained
         */
        contains: function( c ){
            var isInRange = this.isValueInConstraint(c.hue(), this.hueConstraint);
            isInRange &= this.isValueInConstraint(c.saturation(), this.saturationConstraint);
            isInRange &= this.isValueInConstraint(c.brightness(), this.brightnessConstraint);
            isInRange &= this.isValueInConstraint(c.alpha(), this.alphaConstraint);
            return isInRange || false; //if its 0, return false
        },
        /**
         * creates a copy of the range but overrides the hue
         * and alpha constraints taken from the given color (if specified)
         * @param {toxi.color.TColor} [c]
         * @param {Number} [variance]
         * @return copy
         */
        copy: function( c, variance ){
            variance = typeof variance === 'number' ? variance : 0;
            var range = new ColorRange();
            range.name = this.name;
            if( c ){
                var hue = c.hue() + variance * MathUtils.normalizedRandom();
                range.hueConstraint = [ new FloatRange(hue,hue) ];
                range.alphaConstraint = [ new FloatRange(c.alpha(),c.alpha()) ];
            } else {
                range.hueConstraint = [].concat(this.hueConstraint);
                range.alphaConstraint = [].concat(this.alphaConstraint);
            }
            range.saturationConstraint = [].concat(this.saturationConstraint);
            range.brightnessConstraint = [].concat(this.brightnessConstraint);
            range.black = this.black.copy();
            range.white = this.white.copy();
            return range;
        },
        /**
         * creates a new shade of the given parameter based on the other constraints
         * of the range. This function has many param options:
         * 1. no params
         * 2.
            * @param {toxi.color.Hue} hue
         * 3.
            * @param {toxi.color.TColor} c
            * @param {Number} variance
        */
        getColor: function( hue_c, variance ){
            if( is.Hue(hue_c) ){
                return TColor.newHSVA(
                    hue_c.getHue(),
                    pickRandom(this.saturationConstraint).pickRandom(),
                    pickRandom(this.brightnessConstraint).pickRandom(),
                    pickRandom(this.alphaConstraint).pickRandom()
                );
            }
            //must be a TColor
            var c = hue_c, h, s, b, a;
            if( c ){
                if( c.isBlack() ){
                    return TColor.newHSVA(c.hue(), 0, this.black.pickRandom(), c.alpha() );
                } else if( c.isWhite() ){
                    return TColor.newHSVA(c.hue(), 0, this.white.pickRandom(), c.alpha() );
                }
                if( c.isGrey() ){
                    return TColor.newHSVA(
                        c.hue(),
                        0,
                        MathUtils.flipCoin() ? this.black.pickRandom() : this.white.pickRandom(),
                        c.alpha()
                    );
                }
                h = c.hue() + variance * MathUtils.normalizedRandom();
                a = c.alpha();
            } else {
                h = pickRandom(this.hueConstraint).pickRandom();
                a = pickRandom(this.alphaConstraint).pickRandom();
            }
            s = pickRandom(this.saturationConstraint).pickRandom();
            b = pickRandom(this.brightnessConstraint).pickRandom();
            return TColor.newHSVA(h,s,b,a);
        },
        /**
        * creates a new `toxi.color.ColorList` of colors based
        * on constraints of this range
        * 1.
            * @param {Number} num integer of how many colors to get
        * 2.
            * @param {toxi.color.TColor} c
            * @param {Number} num
            * @param {Number} variance
        * @return {toxi.color.ColorList} list
        */
        getColors: function( c, num, variance ){
            if( arguments.length < 3 ){
                variance = ColorRange.DEFAULT_VARIANCE;
            }
            if( arguments.length === 1 ){
                num = c;
                c = undefined;
            }
            var list = new ColorList();
            for( var i=0; i<num; i++){
                list.add(this.getColor(c, variance));
            }
            return list;
        },
        /**
         * creates a new shade of gray
         * @param {Number} brightness
         * @param {Number} variance
         */
        getGrayscale: function( brightness, variance ){
            return this.getColor( TColor.newGray(brightness), variance);
        },
        getName: function(){
            return this.name;
        },
        /**
         * creates a copy of the current range and adds the given one to it
         * @param {toxi.color.ColorRange} range
         * @return the summed copy
         */
        getSum: function( range ){
            return this.copy().add(range);
        },
        isValueInConstraint: function( val, rangeSet ){
            var isValid = false;
            each(rangeSet, function(r){
                isValid |= r.isValueInRange(val);
            });
            return isValid;
        }
    };


    //default hue variance for #getColor
    ColorRange.DEFAULT_VARIANCE = 0.035;

    //build static pre-defined ColorRange's
    (function(FR, un){
        ColorRange.PRESETS = {};
        each({
            'light': [ un, new FR(0.3,0.7),new FR(0.9,1.0), un, new FR(0.15,0.3),un],
            'dark': [un, new FR(0.7,1.0), new FR(0.15,0.4),un,un, new FR(0.5,0.75)],
            'bright': [un, new FR(0.8,1.0), new FR(0.8,1.0)],
            'weak': [un, new FR(0.15,0.3), new FR(0.7,1.0), un, new FR(0.2,0.2),un],
            'neutral': [un, new FR(0.25,0.35), new FR(0.3,0.7),un,new FR(0.15,0.15), new FR(0.9,1.0)],
            'fresh': [un, new FR(0.4,0.8), new FR(0.8,1.0), un, new FR(0.05,0.3), new FR(0.8,1.0)],
            'soft': [un, new FR(0.2,0.3),new FR(0.6,0.9), un, new FR(0.05,0.15), new FR(0.6,0.9)],
            'hard': [un, new FR(0.9,1.0), new FR(0.4,1.0)],
            'warm': [un, new FR(0.6,0.9), new FR(0.4,0.9), un, new FR(0.2,0.2), new FR(0.8,1.0)],
            'cool': [un, new FR(0.05, 0.2), new FR(0.9, 1.0), un, un, new FR(0.95,1.0)],
            'intense': [un, new FR(0.9,1.0), new FR(0.2,0.35)]
        }, function( args, name ){
            args.push(name);
            var nameUC = name.toUpperCase();
            //construct a new ColorRange without params (only do this internally)
            ColorRange[nameUC] = new ColorRange();
            //apply the arguments to the constructor
            ColorRange.apply(ColorRange[nameUC], args);
            //reference the same object from the PRESETS object
            ColorRange.PRESETS[nameUC] = ColorRange[nameUC];
        });
        ColorRange.INTENSE.addBrightnessRange( new FR(0.8,1.0) );
    }(FloatRange, undefined));


    ColorRange.getPresetForName = function( name ){
        return ColorRange.PRESETS[name.toUpperCase()];
    };

    module.exports = ColorRange;


},{"../internals/each":124,"../internals/is":128,"../math/mathUtils":147,"../util/datatypes/FloatRange":187,"./ColorList":31,"./TColor":43}],33:[function(require,module,exports){
var each = require('../internals/each');
var MathUtils = require('../math/mathUtils');
var ColorRange = require('./ColorRange');
var NamedColor = require('./namedColor');
var ColorList = require('./ColorList');


    var ColorTheme, _ThemePart;


    /**
     * @private
     * internal object for a part of the theme
     * @param {ColorRange} range
     * @param {TColor} color.
     * @param {Number} weight
     */
    _ThemePart = function( range, color, weight ){
        this.range = range;
        this.color = color;
        this.weight = weight;
    };
    _ThemePart.prototype.getColor = function(){
        return this.range.getColor(this.color, ColorRange.DEFAULT_VARIANCE);
    };

    /**
    * A ColorTheme is a weighted collection of {@link ColorRange}s used to define
    * custom palettes with a certain balance between individual colors/shades. New
    * theme parts can be added via textual descriptors referring to one of the
    * preset {@link ColorRange}s and/or {@link NamedColor}s: e.g.
    * "warm springgreen". For each theme part a weight has to be specified. The
    * magnitude of the weight value is irrelevant and is only important in relation
    * to the weights of other theme parts. For example: Theme part A with a weight
    * of 0.5 will only have 1/20 of the weight of theme part B with a weight of 5.0...
    */
    ColorTheme = function( name ){
        this.name = name;
        this.parts = [];
        this._weightedSum = 0;
    };

    ColorTheme.prototype = {
        constructor: ColorTheme,
        /**
         * Add a range to the theme, 2 paramater options:
         * @param {toxi.color.ColorRange|string} range_or_descriptor either a range
         * or a tokenized string
         * @param {toxi.color.TColor|Number} color_or_weight a color if you provided
         * a ColorRange, or a weight if specified a descriptor
         * @param {Number} [weight] a weight if you specified a ColorRange and a TColor
         * for former parameters
         * @return itself
         */
        addRange: function( range_or_descriptor, color_or_weight, weight ){
            var self = this;
            var _range, _col;
            if( arguments.length === 3 ){
                this.parts.push( new _ThemePart(range_or_descriptor, color_or_weight, weight) );
                this._weightedSum += weight;
            } else {
                //tokenize
                each(range_or_descriptor.split(' '), function( item ){
                    if( ColorRange.getPresetForName(item) ){
                        _range = ColorRange.getPresetForName(item);
                    } else if ( NamedColor.getForName(item) ){
                       _col = NamedColor.getForName(item);
                    }
                });
                if( _range ){
                    self.addRange( _range, _col, color_or_weight );
                }
            }
            return this;
        },
        getColor: function(){
            var self = this,
                rnd = Math.random(),
                t,
                currWeight;
            for( var i = 0, l = this.parts.length; i<l; i++){
                t = this.parts[i];
                currWeight = t.weight / this._weightedSum;
                if( currWeight >= rnd ){
                    return t.getColor();
                }
                rnd -= currWeight;
            }
            return null;
        },
        /**
         * Creates a {ColorList} of {TColor} based on the theme's
         * ranges and balance defined by their weights
         * @param {Number} num the number of colors to put in the list
         */
        getColors: function( num ){
           var list = new ColorList();
           for( var i = 0; i < num; i++) {
               list.add( this.getColor() );
            }
           return list;
        },
        /**
         * @return the theme's name
         */
        getName: function(){
            return this.name;
        }
    };

    module.exports = ColorTheme;


},{"../internals/each":124,"../math/mathUtils":147,"./ColorList":31,"./ColorRange":32,"./namedColor":49}],34:[function(require,module,exports){

	module.exports = require('./accessors').HSVAccessor;


},{"./accessors":46}],35:[function(require,module,exports){

	module.exports = require('./distanceProxies').HSVDistanceProxy;

},{"./distanceProxies":48}],36:[function(require,module,exports){

	var HistEntry = function( c ){
		this.col = c;
		this.freq = 1;
	};

	HistEntry.prototype = {
		constructor: HistEntry,
		compareTo: function( entry ){
			return parseInt( entry.freq - this.freq, 10 );
		},
		getColor: function(){
			return this.col;
		},
		getFrequency: function(){
			return this.freq;
		}
	};
	module.exports = HistEntry;

},{}],37:[function(require,module,exports){


	var each = require('../internals').each,
		Iterator = require('../internals').Iterator,
		HistEntry = require('./HistEntry'),
		ColorList = require('./ColorList');

	/**
	 * Histogram constructor
	 * @param {toxi.color.ColorList} palette
	 */
	var Histogram = function( palette ){
		this.palette = palette;
	};

	Histogram.prototype = {
		constructor: Histogram,
		/**
		 * @param {Number} tolerance color tolerance used to merge similar colors
		 * (based on RGB distance)
		 * @param {Boolean} blendCols switch to enable color blending of binned colors
		 * @type sorted histogram as List of HistEntry
		 */
		compute: function( tolerance, blendCols ){
			var self = this;
			this.entries = [];
			var maxFreq = 1;
			this.palette.each(function( c ){
				var existing, e, i=0, l=self.entries.length;
				for( i=0; i<l; i++ ){
					e = self.entries[i];
					if( e.col.distanceToRGB(c) < tolerance ){
						if( blendCols ){
							e.col.blend( c, 1/(e.freq+1) );
						}
						existing = e;
						break;
					}
				}
				if( existing !== undefined ){
					existing.freq++;
					if( existing.freq > maxFreq ){
						maxFreq = existing.freq;
					}
				} else {
					self.entries.push( new HistEntry(c) );
				}
			});
			this.entries.sort();
			maxFreq = 1/this.palette.size();

			each( this.entries, function( e ){
				e.freq *= maxFreq;
			});

			return this.entries;
		},
		getEntries: function(){
			return this.entries;
		},
		getPalette: function(){
			return this.palette;
		},
		iterator: function(){
			return new Iterator( this.entries );
		},
		setPalette: function( palette ){
			this.palette = palette;
		}
	};

	Histogram.newFromARGBArray = function( pixels, numSamples, tolerance, blendCols ){
		var h = new Histogram( ColorList.createFromARGBArray(pixels, numSamples, false) );
		h.compute( tolerance, blendCols );
		return h;
	};

	module.exports = Histogram;

},{"../internals":120,"./ColorList":31,"./HistEntry":36}],38:[function(require,module,exports){
var LinkedMap = require('../internals/LinkedMap');
var each = require('../internals/each');

    var namedHues = new LinkedMap(),
        primaryHues = [],
        Hue;
    /*
    * This class defines color hues and allows them to be access by name. There are
    * also methods to check if a hue is one of the 7 primary hues (rainbow) or to
    * find the closest defined hue for a given color.
    */

    /**
     * construct a new Hue
     * @param {String} name
     * @param {Number} hue (range 0-1)
     * @param {Boolean} [isPrimary] optionally flag as a primary hue
     * @constructor
     */
    Hue = function( name, hue, isPrimary ){
        this._isPrimary = (isPrimary === true );
        this.name = name;
        this.hue = hue;
        namedHues.put( name, this );
        if( this._isPrimary ){
            primaryHues.push( this );
        }
    };


    Hue.prototype = {
        constructor: Hue,
        getHue: function(){ return this.hue; },
        getName: function(){ return this.name; },
        isPrimary: function(){ return this._isPrimary; },
        toString: function(){
            return "Hue: ID:" + this.name + " @ " + parseInt(this.hue*360, 10) + " degrees";
        }
    };

    //add presets object, like what `toxi.color.ColorRange` has,
    //allows for easy look-up
    Hue.PRESETS = {};
    //add the basic hues
    each([
        ['red', true],
        ['orange', true],
        ['yellow', true],
        ['lime'],
        ['green',true],
        ['teal'],
        ['cyan'],
        ['azure'],
        ['blue',true],
        ['indigo'],
        ['purple',true],
        ['pink',true]
    ], function( item, i ){
        var name = item[0],
            nameUC = name.toUpperCase(),
            isPrimary = item[1];
        Hue[nameUC] = new Hue( name, i * 30 / 360.0, isPrimary );
        Hue.PRESETS[nameUC] = Hue[nameUC];
    });

    // Tolerance value for checking if a given hue is primary
    Hue.PRIMARY_VARIANCE = 0.01;

    /**
     * Finds the closest defined & named Hue for the given hue vale.
     * Optionally, the serach can be limited to primary hues only.
     * @param {Number} hue
     * @param {Boolean} [primaryOnly]
     * @returns Hue
     */
    Hue.getClosest = function( hue, primaryOnly ){
        hue %= 1;
        primaryOnly = (primaryOnly === true);
        var dist = Number.MAX_VALUE,
            closest,
            hues = primaryOnly ? primaryHues : namedHues.getArray();
        each(hues, function(h){
            var d = Math.min( Math.abs(h.getHue() - hue), Math.abs(1 + h.getHue() - hue) );
            if( d < dist ) {
                dist = d;
                closest = h;
            }
        });
        return closest;
    };

    Hue.getForName = function( name ){
        return namedHues.get(name);
    };

    Hue.isPrimary = function( hue, variance ){
        variance = typeof variance === 'number' ? variance : Hue.PRIMARY_VARIANCE;
        var isPrimary = false;
        for( var i=0, len = primaryHues.length; i<len; i++ ){
            var h = primaryHues[i];
            if( Math.abs( hue - h.getHue() ) < variance ) {
                isPrimary = true;
                break;
            }
        }
        return isPrimary;
    };

    module.exports = Hue;


},{"../internals/LinkedMap":122,"../internals/each":124}],39:[function(require,module,exports){

	module.exports = require('./accessors').LuminanceAccessor;


},{"./accessors":46}],40:[function(require,module,exports){

	var ProximityComparator = function( col, proxy ){
		this.col = col;
		this.proxy = proxy;
	};
	ProximityComparator.prototype.compare = function( a, b ){
		var da = this.proxy.distanceBetween( this.col, a );
		var db = this.proxy.distanceBetween( this.col, b );
		return da < db ? -1 : da > db ? 1 : 0;
	};
	module.exports = ProximityComparator;

},{}],41:[function(require,module,exports){

	module.exports = require('./accessors').RGBAccessor;


},{"./accessors":46}],42:[function(require,module,exports){

	module.exports = require('./distanceProxies').RGBDistanceProxy;

},{"./distanceProxies":48}],43:[function(require,module,exports){


var	numberComparator = require('../internals/numberComparator'),
    is = require('../internals/is'),
	mathUtils = require('../math/mathUtils'),
    vectors = require('../geom/vectors'),
	Vec2D = vectors.Vec2D,
	Vec3D = vectors.Vec3D,
    Hue = require('./Hue');


//private
var dec2hex = function decimalToHexString(number){
	if (number < 0){
		number = 0xFFFFFFFF + number + 1;
	}

	return number.toString(16);
};

/**
 @class Creates a new TColor instance
 @memberOf toxi.color
 */
var	TColor = function(tcolor){
	this.rgb = [];
	this.hsv = [];
	this.cmyk = [];
	this._alpha = 1.0;
	if(tcolor !== undefined){
		var buffer = tcolor.toCMYKAArray();
		this.cmyk = buffer.splice(0,4);
		this.hsv = tcolor.toHSVAArray().splice(0,3);
		this.rgb = tcolor.toRGBAArray().splice(0,3);
		this._alpha = tcolor._alpha;
	}
};

TColor.prototype = {

	add: function(c){
		return this.copy().addSelf(c);
	},

	addSelf: function(c) {
		this.rgb[0] = mathUtils.min(this.rgb[0] + c.rgb[0], 1);
		this.rgb[1] = mathUtils.min(this.rgb[1] + c.rgb[1], 1);
		this.rgb[2] = mathUtils.min(this.rgb[2] + c.rgb[2], 1);
		return this.setRGB( this.rgb);
	},

	/**
	 * Changes the brightness of the color by the given amount in the direction
	 * towards either the black or white point (depending on if current
	 * brightness >= 50%)
	 *
	 * @param {Number} amount
	 * @return itself
	 */
	adjustConstrast: function(amount) {
		return this.hsv[2] < 0.5 ? this.darken(amount) : this.lighten(amount);
	},


	/**
	 * Adds the given HSV values as offsets to the current color. Hue will
	 * automatically wrap.
	 *
	 * @param h
	 * @param s
	 * @param v
	 * @return itself
	 */
	adjustHSV: function(h, s, v) {
		return this.setHSV([ this.hsv[0] + h, this.hsv[1] + s, this.hsv[2] + v ]);
	},

	/**
	 * Adds the given RGB values as offsets to the current color. TColor will
	 * clip at black or white.
	 * @param r
	 * @param g
	 * @param b
	 * @return itself
	 */
	adjustRGB: function(r, g,b) {
		return this.setRGB([this.rgb[0] + r, this.rgb[1] + g, this.rgb[2] + b]);
	},

	alpha:function(){
		return this._alpha;
	},

	/**
	 * Rotates this color by a random amount (not exceeding the one specified)
	 * and creates variations in saturation and brightness based on the 2nd
	 * parameter.
	 * @param theta
	 *            max. rotation angle (in radians)
	 * @param delta
	 *            max. sat/bri variance
	 * @return itself
	 */
	analog: function(theta, delta) {
		var angle = mathUtils.degrees(theta);
		this.rotateRYB(angle * mathUtils.normalizedRandom());
		this.hsv[1] += delta * mathUtils.normalizedRandom();
		this.hsv[2] += delta * mathUtils.normalizedRandom();
		return this.setHSV(this.hsv);
	},

	//shouldnt this be this.cmyk[3]?
	black: function(){
		return this.cmyk[3];
	},
	/**
	 * Blends the color with the given one by the stated amount
	 * @param c
	 *            target color
	 * @param t
	 *            interpolation factor
	 * @return itself
	 */
	blend: function(c, t) {
		if(t === undefined) { t = 0.5; }
		var crgb = c.toRGBAArray();
		this.rgb[0] += (crgb[0] - this.rgb[0]) * t;
		this.rgb[1] += (crgb[1] - this.rgb[1]) * t;
		this.rgb[2] += (crgb[2] - this.rgb[2]) * t;
		this._alpha += (c._alpha - this._alpha) * t;
		return this.setRGB(this.rgb);
	},

	blue: function() {
		return this.rgb[2];
	},

	brightness: function(){
		return this.hsv[2];
	},

	complement: function(){
		return this.rotateRYB(180);
	},

	copy: function(){
		return new TColor(this);
	},

	cyan : function(){
		return this.cmyk[0];
	},

	darken: function(step){
		this.hsv[2] = mathUtils.clip((this.hsv[2] -step), 0, 1);
		return this.setHSV(this.hsv);
	},
	/**
	Reduced the color's saturation by the given amount.
	@param step
	@return itself
	*/
	desaturate: function(step) {
		this.hsv[1] = mathUtils.clip((this.hsv[1] - step), 0, 1);
		return this.setHSV(this.hsv);
	},

	differenceTo: function(c) {
		return  TColor.newRGB(Math.abs(this.rgb[0] - c.rgb[0]),
			Math.abs(this.rgb[1] - c.rgb[1]),
			Math.abs(this.rgb[2] - c.rgb[2]));
	},

	distanceToCMYK: function(c) {
		var ccmyk = c.toCMYKAArray();
		var dc = this.cmyk[0] - ccmyk[0];
		var dm = this.cmyk[1] - ccmyk[1];
		var dy = this.cmyk[2] - ccmyk[2];
		var dk = this.cmyk[3] - ccmyk[3];
		return Math.sqrt(dc * dc + dm * dm + dy * dy + dk * dk);
	},

	distanceToHSV: function(c) {
		var hue = this.hsv[0] * mathUtils.TWO_PI;
		var hue2 = c.hue() * mathUtils.TWO_PI;
		var v1 = new Vec3D((mathUtils.cos(hue) * this.hsv[1]), (mathUtils.sin(hue) * this.hsv[1]), this.hsv[2]);
		var v2 = new Vec3D((mathUtils.cos(hue2) * c.saturation()), (mathUtils.sin(hue2) * c.saturation()), c.brightness());
		return v1.distanceTo(v2);
	},

	distanceToRGB: function(c) {
		var crgb = c.toRGBAArray();
		var dr = this.rgb[0] - crgb[0];
		var dg = this.rgb[1] - crgb[1];
		var db = this.rgb[2] - crgb[2];
		return Math.sqrt(dr * dr + dg * dg + db * db);
	},

	equals: function(o) {
		if ( is.TColor( o ) ) {
			var c =  o;
			var dr = c.rgb[0] - this.rgb[0];
			var dg = c.rgb[1] - this.rgb[1];
			var db = c.rgb[2] - this.rgb[2];
			var da = c.alpha() - this._alpha;
			var d = Math.sqrt(dr * dr + dg * dg + db * db + da * da);
			return d < TColor.EPS;
		}
		return false;
	},

	getAnalog: function(theta,delta) {
		return new TColor(this).analog(theta, delta);
	},

	getBlended: function(c,t) {
		return new TColor(this).blend(c, t);
	},

	getClosestHue: function(primaryOnly) {
		return Hue.getClosest(this.hsv[0], primaryOnly === true);
	},

	getComplement: function() {
		return new TColor(this).complement();
	},

	getComponentValue: function(criteria) {
		return criteria.getComponentValueFor(this);
	},

	getDarkened: function(step) {
		return new TColor(this).darken(step);
	},

	getDesaturated: function(step) {
		return new TColor(this).desaturate(step);
	},

	getDifferenceTo: function(c) {
		return this.copy().differenceTo(c);
	},

	getInverted: function() {
		return new TColor(this).invert();
	},

	getLightened: function(step) {
		return new TColor(this).lighten(step);
	},

	getRotatedRYB: function(theta) {
		return new TColor(this).rotateRYB(theta);
	},

	getSaturated: function(step) {
		return new TColor(this).saturate(step);
	},

	green: function() {
		return this.rgb[1];
	},

	hue: function() {
		return this.hsv[0];
	},

	invert: function() {
		this.rgb[0] = 1 - this.rgb[0];
		this.rgb[1] = 1 - this.rgb[1];
		this.rgb[2] = 1 - this.rgb[2];
		return this.setRGB(this.rgb);
	},

	isBlack: function() {
		return (this.rgb[0] <= TColor.BLACK_POINT && ((this.rgb[0]===this.rgb[1]) && this.rgb[0] === this.rgb[2]));
	},

	isGrey:function() {
		return this.hsv[1] < TColor.GREY_THRESHOLD;
	},
	/*
	isPrimary:function() {
		return Hue.isPrimary(this.hsv[0]);
	},*/

	isWhite: function() {
		return (this.rgb[0] >= TColor.WHITE_POINT && (this.rgb[0] === this.rgb[1]) && (this.rgb[0] === this.rgb[2]));
	},

	lighten: function(step) {
		this.hsv[2] = mathUtils.clip(this.hsv[2] + step, 0, 1);
		return this.setHSV(this.hsv);
	},

	luminance: function() {
		return this.rgb[0] * 0.299 + this.rgb[1] * 0.587 + this.rgb[2] * 0.114;
	},

	magenta: function() {
		return this.cmyk[1];
	},

	red: function() {
		return this.rgb[0];
	},

	rotateRYB: function(theta) {
		var deg = parseInt(mathUtils.degrees(theta),10),
			h = this.hsv[0] * 360,
			i = 0,
			p,
			q;
		theta %= 360;

		var resultHue = 0;
		for (i = 0; i < TColor.RYB_WHEEL.length - 1; i++) {
			p = TColor.RYB_WHEEL[i];
			q = TColor.RYB_WHEEL[i + 1];
			if (q.y < p.y) {
				q.y += 360;
			}
			if (p.y <= h && h <= q.y) {
				resultHue = p.x + (q.x - p.x) * (h - p.y) / (q.y - p.y);
				break;
			}
		}

		// And the user-given angle (e.g. complement).
		resultHue = (resultHue + theta) % 360;

		// For the given angle, find out what hue is
		// located there on the artistic color wheel.
		for (i = 0; i < TColor.RYB_WHEEL.length - 1; i++) {
			p = TColor.RYB_WHEEL[i];
			q = TColor.RYB_WHEEL[i + 1];
			if (q.y < p.y) {
				q.y += 360;
			}
			if (p.x <= resultHue && resultHue <= q.x) {
				h = p.y + (q.y - p.y) * (resultHue - p.x) / (q.x - p.x);
				break;
			}
		}

		this.hsv[0] = (h % 360) / 360.0;
		return this.setHSV(this.hsv);

	},

	saturate: function(step) {
		this.hsv[1] = mathUtils.clip(this.hsv[1] + step, 0, 1);
		return this.setHSV(this.hsv);
	},

	saturation: function() {
		return this.hsv[1];
	},

	setAlpha: function(alpha) {
		this._alpha = alpha;
		return this;
	},

	setARGB: function(argb) {
		this.setRGB(((argb >> 16) & 0xff) * TColor.INV8BIT, ((argb >> 8) & 0xff) * TColor.INV8BIT, (argb & 0xff) * TColor.INV8BIT);
		this._alpha = (argb >>> 24) * TColor.INV8BIT;
		return this;
	},

	setBlack: function(val) {
		this.cmyk[3] = val;
		return this.setCMYK( this.cmyk );
	},

	setBlue: function(blue) {
		this.rgb[2] = blue;
		return this.setRGB(this.rgb);
	},

	setBrightness: function(brightness) {
		this.hsv[2] = mathUtils.clip(brightness, 0, 1);
		return this.setHSV(this.hsv);
	},

	setCMYK: function(c,m,y,k) {
		//if it was passed in as an array instead of separate values
		if( is.Array( c ) ){
			m = c[1];
			y = c[2];
			k = c[3];
			c = c[0];
		}
		this.cmyk[0] = c;
		this.cmyk[1] = m;
		this.cmyk[2] = y;
		this.cmyk[3] = k;
		this.rgb = TColor.cmykToRGB(this.cmyk[0],this.cmyk[1],this.cmyk[2],this.cmyk[3]);
		this.hsv = TColor.rgbToHSV(this.rgb[0],this.rgb[1],this.rgb[2]);
		return this;
	},

    setComponent: function(criteria,  val) {
		criteria.setComponentValueFor(this, val);
		return this;
	},

	setCyan: function(val) {
		this.cmyk[0] = val;
		return this.setCMYK(this.cmyk);
	},

	setGreen: function(green) {
		this.rgb[1] = green;
		return this.setRGB(this.rgb);
	},

	setHSV: function(h,s,v) {
		if( is.Array( h ) ){
			s = h[1];
			v = h[2];
			h = h[0];
		}
		var newHSV = [h,s,v];
		this.hsv[0] = newHSV[0] % 1;
		if (this.hsv[0] < 0) {
			this.hsv[0]++;
		}
		this.hsv[1] = mathUtils.clip(newHSV[1], 0, 1);
		this.hsv[2] = mathUtils.clip(newHSV[2], 0, 1);
		this.rgb = TColor.hsvToRGB(this.hsv[0], this.hsv[1], this.hsv[2]);
		this.cmyk = TColor.rgbToCMYK(this.rgb[0], this.rgb[1], this.rgb[2]);
		return this;
	},

	setHue: function(hue) {
		hue %= 1.0;
		if (hue < 0.0) {
			hue++;
		}
		this.hsv[0] = hue;
		return this.setHSV(this.hsv);
	},

	setMagenta: function(val) {
		this.cmyk[1] = val;
		return this.setCMYK(this.cmyk);
	},

	setRed: function(red) {
		this.rgb[0] = red;
		return this.setRGB(this.rgb);
	},

	setRGB: function(r,g,b) {
		if( is.Array( r ) ){
			g = r[1];
			b = r[2];
			r = r[0];
		}
		this.rgb[0] = mathUtils.clip(r,0,1);
		this.rgb[1] = mathUtils.clip(g,0,1);
		this.rgb[2] = mathUtils.clip(b,0,1);
		this.cmyk = TColor.rgbToCMYK(this.rgb[0], this.rgb[1], this.rgb[2]);
		this.hsv = TColor.rgbToHSV(this.rgb[0], this.rgb[1], this.rgb[2]);
		return this;
	},

	setSaturation: function(saturation) {
		this.hsv[1] = mathUtils.clip(saturation, 0, 1);
		return this.setHSV(this.hsv);
	},

	setYellow: function(val) {
		this.cmyk[2] = val;
		return this.setCMYK(this.cmyk);
	},

	sub: function(c) {
		return this.copy().subSelf(c);
	},

	subSelf: function(c) {
		this.rgb[0] = mathUtils.max(this.rgb[0] - c.rgb[0], 0);
		this.rgb[1] = mathUtils.max(this.rgb[1] - c.rgb[1], 0);
		this.rgb[2] = mathUtils.max(this.rgb[2] - c.rgb[2], 0);
		return this.setRGB(this.rgb);
	},

	toARGB: function() {
		var r = parseInt((this.rgb[0] * 255),10),
			g = parseInt((this.rgb[1] * 255),10),
			b = parseInt((this.rgb[2] * 255),10),
			a = parseInt((this._alpha * 255),10);
		return  r << 16 | g << 8 | b | a << 24;
	},

	toCMYKAArray: function(cmyka) {
		if (cmyka === undefined) {
			cmyka = [];
		}
		cmyka[0] = this.cmyk[0];
		cmyka[1] = this.cmyk[1];
		cmyka[2] = this.cmyk[2];
		cmyka[3] = this.cmyk[3];
		cmyka[4] = this._alpha;
		return cmyka;
	},

	toHex: function() {
		var hex = dec2hex(this.toARGB());
		if (hex.length > 6) {
			hex = hex.substring(2);
		}
		return hex;
	},

	toHexCSS: function(){
		return "#"+this.toHex();
	},

	toHSVAArray: function(hsva) {
		if (hsva === undefined) {
			hsva = [];
		}
		hsva[0] = this.hsv[0];
		hsva[1] = this.hsv[1];
		hsva[2] = this.hsv[2];
		hsva[3] = this._alpha;
		return hsva;
	},

	/**
	* to CSS's hsl() string
	*/
	toHSLCSS: function(){
        var hsv = this.hsv;

        //hue is 0 - 360
        var h = Math.floor(hsv[0] * 360);
        //saturation & value/luminosity is 0-100 (%)
        var s = Math.floor(hsv[1] * 100);
        var v = Math.floor(hsv[2] * 100);
		return "hsl(" +h+ "," +s+ "%," +v+ "%)";
	},

	/**
	 * to CSS's hsla() string
	 */
	toHSLACSS: function(){
        var hsv = this.hsv;

        //hue is 0 - 360
        var h = Math.floor(hsv[0] * 360);
        //saturation & value/luminosity is 0-100 (%)
        var s = Math.floor(hsv[1] * 100);
        var v = Math.floor(hsv[2] * 100);
        //alpha stays in range 0 - 1
		return "hsla(" +h+ "," +s+ "%," +v+ "%," +this._alpha+ ")";
	},

	/**
	* to integer for color
	*/
	toInt: function(){
		return Number( '0x' + this.toHex() );
	},

	/**
	 * to an Array of RGBA values
	 * @param rgba
	 * @param offset (optional)
	 * @return rgba array
	 */
	toRGBAArray: function(rgba, offset) {
        rgba = rgba || [];
        offset = offset || 0;
		rgba[offset++] = this.rgb[0];
		rgba[offset++] = this.rgb[1];
		rgba[offset++] = this.rgb[2];
		rgba[offset] = this._alpha;
		return rgba;
	},
    /**
     * to an Array of RGBA decimal values, i.e. [255,255,255,255] for solid white
     * @param {Array|TypedArray} [rgba] optionally pass in an array or a TypedArray such as Uint8ClampedArray
     * @param {Number} [offset] index offset to put these values in the array
     * @return {Array}
     */
    toRGBADecimalArray: function( rgba, offset ) {
        rgba = rgba || [];
        offset = offset || 0;
        rgba[offset++] = this.rgb[0] * 255;
        rgba[offset++] = this.rgb[1] * 255;
        rgba[offset++] = this.rgb[2] * 255;
        rgba[offset] = this._alpha * 255;
        return rgba;
    },

	toRGBCSS: function( asPercents ){
        var rgb = this.rgb,
            mult = asPercents ? 100 : 255,
            u = asPercents ? '%' : '',
            f = Math.floor;

		return "rgb(" + f(rgb[0]*mult) + u + "," + f(rgb[1]*mult) + u + "," + f(rgb[2]*mult) + u + ")";
	},

	/**
	 * to an rgba string valid for CSS Color Module's rgba()
	 * @param asPercents if true creates string based on percents rather than 0-255
	 */
	toRGBACSS: function(asPercents){
        var rgb = this.rgb,
            mult = asPercents ? 100 : 255,
            u = asPercents ? '%' : '',
            f = Math.floor;

		return "rgba(" + f(rgb[0]*mult) + u + "," + f(rgb[1]*mult) + u + "," + f(rgb[2]*mult) + u + "," + this._alpha + ")";
	},

	toString: function(){
		return "TColor: rgb: "+this.rgb[0] + ", " +this.rgb[1] + ", "+this.rgb[2]+
				" hsv: "+ this.hsv[0] + ","+this.hsv[1]+","+this.hsv[2]+
				" cmyk: "+this.cmyk[0] + ", "+this.cmyk[1]+","+this.cmyk[2]+","+this.cmyk[3]+
				" alpha: "+this._alpha;
	},

	yellow: function() {
		return this.cmyk[2];
	}

};

TColor.INV60DEGREES = 60.0 / 360;
TColor.INV8BIT = 1.0 / 255;
TColor.EPS = 0.001;

/**
 * Maximum rgb component value for a color to be classified as black.
 * @see #isBlack()
 */
TColor.BLACK_POINT = 0.08;

/**
 * Minimum rgb component value for a color to be classified as white.
 * @see #isWhite()
 */
TColor.WHITE_POINT = 1.0;

/**
 * Maximum saturations value for a color to be classified as grey
 * @see #isGrey()
 */
TColor.GREY_THRESHOLD = 0.01;



/**
 * Converts CMYK floats into an RGB array.
 * @param c
 * @param m
 * @param y
 * @param k
 * @param rgb optional rgb array to populate
 * @return rgb array
 */
TColor.cmykToRGB = function(c,m,y,k,rgb) {
	if(rgb ===undefined){
		rgb = [0,0,0];
	}
	rgb[0] = 1.0 - Math.min(1.0, c + k);
	rgb[1] = 1.0 - Math.min(1.0, m + k);
	rgb[2] = 1.0 - Math.min(1.0, y + k);
	return rgb;
};


/**
 * Converts hex string into a RGB array.
 * @param hexRGB
 * @param rgb array optional
 * @return rgb array
 */
TColor.hexToRGB = function(hexRGB,rgb) {
	if(rgb === undefined){ rgb = []; }
	//var rgbInt = parseInt(hexRGB,16);
	hexRGB = (hexRGB.charAt(0)=="#") ? hexRGB.substring(1,7):hexRGB;
	rgb[0] = parseInt(hexRGB.substring(0,2),16) * TColor.INV8BIT;//((rgbInt >> 16) & 0xff) * TColor.INV8BIT;
	rgb[1] = parseInt(hexRGB.substring(2,4),16) * TColor.INV8BIT;//((rgbInt >> 8) & 0xff) * TColor.INV8BIT;
	rgb[2] = parseInt(hexRGB.substring(4,6),16) * TColor.INV8BIT;//((rgbInt & 0xff) * TColor.INV8BIT);
	return rgb;
};


/**
 * Converts HSV values into RGB array.
 * @param h
 * @param s
 * @param v
 * @param rgb array optional
 * @return rgb array
 */
TColor.hsvToRGB = function(h, s, v,rgb) {
	if(rgb === undefined){ rgb = []; }
	if(s === 0.0){
		rgb[0] = rgb[1] = rgb[2] = v;
	} else {
		h /= TColor.INV60DEGREES;
		var i =  parseInt(h,10),
			f = h - i,
			p = v * (1 - s),
			q = v * (1 - s * f),
			t = v * (1 - s * (1 - f));

		if (i === 0) {
			rgb[0] = v;
			rgb[1] = t;
			rgb[2] = p;
		} else if (i == 1) {
			rgb[0] = q;
			rgb[1] = v;
			rgb[2] = p;
		} else if (i == 2) {
			rgb[0] = p;
			rgb[1] = v;
			rgb[2] = t;
		} else if (i == 3) {
			rgb[0] = p;
			rgb[1] = q;
			rgb[2] = v;
		} else if (i == 4) {
			rgb[0] = t;
			rgb[1] = p;
			rgb[2] = v;
		} else {
			rgb[0] = v;
			rgb[1] = p;
			rgb[2] = q;
		}
	}
	return rgb;
};

/**
 * Converts CIE Lab to RGB components.
 * First we have to convert to XYZ color space. Conversion involves using a
 * white point, in this case D65 which represents daylight illumination.
 * Algorithm adopted from: http://www.easyrgb.com/math.php
 * @param l
 * @param a
 * @param b
 * @param rgb
 * @return rgb array
 */
TColor.labToRGB = function(l, a, b,rgb) {
	if(rgb === undefined){ rgb = []; }
	var y = (l + 16) / 116.0,
		x = a / 500.0 + y,
		z = y - b / 200.0,
		i = 0;
	rgb[0] = x;
	rgb[1] = y;
	rgb[2] = z;
	for (i = 0; i < 3; i++) {
		var p = Math.pow(rgb[i], 3);
		if (p > 0.008856) {
			rgb[i] = p;
		} else {
			rgb[i] = (rgb[i] - 16 / 116.0) / 7.787;
		}
	}

	// Observer = 2, Illuminant = D65
	x = rgb[0] * 0.95047;
	y = rgb[1];
	z = rgb[2] * 1.08883;

	rgb[0] = x * 3.2406 + y * -1.5372 + z * -0.4986;
	rgb[1] = x * -0.9689 + y * 1.8758 + z * 0.0415;
	rgb[2] = x * 0.0557 + y * -0.2040 + z * 1.0570;
	var tpow = 1 / 2.4;
	for (i = 0; i < 3; i++) {
		if (rgb[i] > 0.0031308) {
			rgb[i] = (1.055 * Math.pow(rgb[i], tpow) - 0.055);
		} else {
			rgb[i] = 12.92 * rgb[i];
		}
	}
	return rgb;
};

/**
 * Factory method. Creates new color from ARGB int.
 * @param argb
 * @return new color
 */
TColor.newARGB = function(argb) {
	return TColor.newRGBA(((argb >> 16) & 0xff) * TColor.INV8BIT, ((argb >> 8) & 0xff) * TColor.INV8BIT, (argb & 0xff) * TColor.INV8BIT, (argb >>> 24) * TColor.INV8BIT);
};

/**
Factory method. Creates new color from CMYK values.
@param c
@param m
@param y
@param k
@return new color
*/
TColor.newCMYK = function(c, m, y, k) {
	return TColor.newCMYKA(c, m, y, k, 1);
};

/**
Factory method. Creates new color from CMYK + alpha values.
@param c
@param m
@param y
@param k
@param a
@return new color
*/
TColor.newCMYKA = function(c, m, y, k, a) {
	var col = new TColor();
	col.setCMYK([c, m, y, k ]);
	col.setAlpha(mathUtils.clip(a, 0, 1));
	return col;
};

/**
Factory method. Creats a new color from any CSS color values
@param {String} css value
@return new color
*/
TColor.newCSS = function( css ){
	//remove all spaces
	while( css.indexOf(' ') > -1 ){
		css = css.replace(' ', '');
	}
	css = css.toLowerCase();

	function digits( colorFnStr ){
		//hack off the trailing )
		var str = css.substr(0, css.length-1);
		//hack off rgb(, rgba(, hsl(, hsla(
		return str.substr( colorFnStr.length + 1, str.length).split(',');
	}
	function makeNumbers( digits ){
		var i=0, l = digits.length;
		for ( i=0; i<l; i++){
			//cast to numbers from Strings
			digits[i] = Number( digits[i] );
		}
		return digits;
	}
	var conversions = {
		'#': function(){ return TColor.newHex( css.substr(1,css.length) ); },
		'rgba': function(){
			var vals = makeNumbers( digits( 'rgba' ) );
			return TColor.newRGBA( vals[0]/255, vals[1]/255, vals[2]/255, vals[3] );
		},
		'rgb': function(){
			var vals = makeNumbers( digits( 'rgb' ) );
			return TColor.newRGBA( vals[0]/255, vals[1]/255, vals[2]/255, 1.0 );
		},
		'hsla': function( vals ){
			vals = vals || digits( 'hsla' );
			vals[0] = Number( vals[0] ) / 360;
			vals[1] = Number( vals[1].substr(0, vals[1].length-1) ) / 100;
			vals[2] = Number( vals[2].substr(0, vals[2].length-1) ) / 100;
			vals[3] = Number( vals[3] );
			return TColor.newHSVA( vals[0], vals[1], vals[2], vals[3] );
		},
		'hsl': function(){
			var vals = digits('hsl');
			vals.push( 1.0 );
			return conversions.hsla( vals );
		}
	};

	//if it was an x11 name return a copy
	if( TColor.X11[css] !== undefined ){
		return TColor.X11[css].copy();
	}
	//else get it from hex or color function
	for( var method in conversions ){
		if( css.indexOf(method) > -1 ){
			return conversions[method]();
		}
	}
};


/**
Factory method. Creates a new shade of gray + alpha.
@param gray
@return new color.
*/
TColor.newGray = function(gray) {
	return TColor.newGrayAlpha(gray, 1);
};

TColor.newGrayAlpha = function(gray, alpha) {
	var c = new TColor();
	c.setRGB([gray, gray, gray ]);
	c.setAlpha(alpha);
	return c;
};

/**
Factory method. New color from hex string.
@param hexRGB
@return new color
*/
TColor.newHex = function(hexRGB) {
	var c = new TColor();
	c.setRGB(TColor.hexToRGB(hexRGB));
	c.setAlpha(1);
	return c;
};

/**
Factory method. New color from hsv values.
@param h
@param s
@param v
@return new color
*/
TColor.newHSV = function(h, s, v) {
	return TColor.newHSVA(h, s, v, 1);
};


TColor.newHSVA = function(h, s,v,a) {
	var c = new TColor();
	c.setHSV(h, s, v);
	c.setAlpha(mathUtils.clip(a, 0, 1));
	return c;
};

/**
Factory method. Creates new random color. Alpha is always 1.0.
@return random color
*/
TColor.newRandom = function() {
	return TColor.newRGBA(Math.random(), Math.random(), Math.random(), 1);
};

/**
Factory method. Creates new color from RGB values. Alpha is set to 1.0.
@param r
@param g
@param b
@return new color
*/
TColor.newRGB = function(r, g, b) {
	return TColor.newRGBA(r, g, b, 1);
};

TColor.newRGBA = function( r, g, b, a) {
	var c = new TColor();
	c.setRGB( r, g, b );
	c.setAlpha(mathUtils.clip(a, 0, 1));
	return c;
};

/**
Converts the RGB values into a CMYK array.
@param r
@param g
@param b
@param cmyk array optional
@return cmyk array
*/
TColor.rgbToCMYK = function(r, g, b,cmyk) {
	if(cmyk === undefined){ cmyk = []; }
	cmyk[0] = 1 - r;
	cmyk[1] = 1 - g;
	cmyk[2] = 1 - b;
	cmyk[3] = mathUtils.min(cmyk[0], cmyk[1], cmyk[2]);
	cmyk[0] = mathUtils.clip(cmyk[0] - cmyk[3], 0, 1);
	cmyk[1] = mathUtils.clip(cmyk[1] - cmyk[3], 0, 1);
	cmyk[2] = mathUtils.clip(cmyk[2] - cmyk[3], 0, 1);
	cmyk[3] = mathUtils.clip(cmyk[3], 0, 1);
	return cmyk;
};


/**
Formats the RGB float values into hex integers.
@param r
@param g
@param b
@return hex string
*/
TColor.rgbToHex = function(r, g, b) {
	var hex = dec2hex(mathUtils.clip(r, 0, 1) * 0xff) + dec2hex(mathUtils.clip(g, 0, 1) * 0xff) + dec2hex(mathUtils.clip(b, 0, 1) * 0xff);
	return hex;
};

/**
Converts the RGB values into an HSV array.
@param r
@param g
@param b
@param hsv optional
@return hsv array
*/
TColor.rgbToHSV = function(r, g, b,hsv) {
	if(hsv ===undefined){ hsv = []; }
	var h = 0,
		s = 0,
		v = mathUtils.max(r, g, b),
		d = v - mathUtils.min(r, g, b);

	if (v !== 0) {
		s = d / v;
	}
	if (s !== 0) {
        if( numberComparator( r, v ) === 0 ){
			h = (g - b) / d;
		} else if ( numberComparator( g, v ) === 0 ) {
			h = 2 + (b - r) / d;
		} else {
			h = 4 + (r - g) / d;
		}
	}
	h *= TColor.INV60DEGREES;
	if (h < 0) {
		h += 1.0;
	}
	hsv[0] = h;
	hsv[1] = s;
	hsv[2] = v;
	return hsv;
};

TColor.RED = TColor.newRGB(1, 0, 0);
TColor.RYB_WHEEL = [
	new Vec2D(0, 0),
	new Vec2D(15, 8), new Vec2D(30, 17), new Vec2D(45, 26),
	new Vec2D(60, 34), new Vec2D(75, 41), new Vec2D(90, 48),
	new Vec2D(105, 54), new Vec2D(120, 60), new Vec2D(135, 81),
	new Vec2D(150, 103), new Vec2D(165, 123), new Vec2D(180, 138),
	new Vec2D(195, 155), new Vec2D(210, 171), new Vec2D(225, 187),
	new Vec2D(240, 204), new Vec2D(255, 219), new Vec2D(270, 234),
	new Vec2D(285, 251), new Vec2D(300, 267), new Vec2D(315, 282),
	new Vec2D(330, 298), new Vec2D(345, 329), new Vec2D(360, 0)
];
TColor.GREEN = TColor.newRGB(0, 1, 0);
TColor.BLUE = TColor.newRGB(0, 0, 1);
TColor.CYAN = TColor.newRGB(0, 1, 1);
TColor.MAGENTA = TColor.newRGB(1, 0, 1);
TColor.YELLOW = TColor.newRGB(1, 1, 0);
TColor.BLACK = TColor.newRGB(0, 0, 0);
TColor.WHITE = TColor.newRGB(1, 1, 1);


//Generate a TColor for every X11 color
TColor.X11 = {};
 (function(){
	//RGB values for every X11 Color Name
	//http://en.wikipedia.org/wiki/Web_colors
	var x11 = {
		indianred: [205, 92, 92],
		lightcoral: [240, 128, 128],
		salmon: [250, 128, 114],
		darksalmon: [233, 150, 122],
		lightsalmon: [255, 160, 122],
		red: [255, 0, 0],
		crimson: [220, 20, 60],
		fireBrick: [178, 34, 34],
		darkred: [139, 0, 0],
		pink: [255, 192, 203],
		lightpink: [255, 182, 193],
		hotpink: [255, 105, 180],
		deeppink: [255, 20, 147],
		mediumvioletred: [199, 21, 133],
		palevioletred: [219, 112, 147],
		coral: [255, 127, 80],
		tomato: [255, 99,  71],
		orangered: [255, 69, 0],
		darkorange: [255, 140, 0],
		orange: [255, 165, 0],
		gold: [255, 215, 0],
		yellow: [255, 255, 0],
		lightyellow: [255, 255, 224],
		lemonchiffon: [255, 250, 205],
		lightgoldenrodyellow: [250, 250, 210],
		papayawhip: [255, 239, 213],
		moccasin: [255, 228, 181],
		peachpuff: [255, 218, 185],
		palegoldenrod: [238, 232, 170],
		khaki: [240, 230, 140],
		darkkhaki: [189, 183, 107],
		lavender: [230, 230, 250],
		thistle: [216, 191, 216],
		plum: [221, 160, 221],
		violet: [238, 130, 238],
		orchid: [218, 112, 214],
		fuchsia: [255, 0, 255],
		Magenta: [255, 0, 255],
		mediumorchid: [186,  85, 211],
		mediumpurple: [147, 112, 219],
		blueviolet: [138,  43, 226],
		darkviolet: [148, 0, 211],
		darkorchid: [153,  50, 204],
		darkmagenta: [139, 0, 139],
		purple: [128, 0, 128],
		indigo: [75, 0, 130],
		darkslateblue: [72, 61, 139],
		slateblue: [106, 90, 205],
		mediumslateblue: [123, 104, 238],
		greenyellow: [173, 255, 47],
		chartreuse: [127, 255, 0],
		lawngreen: [124, 252, 0],
		lime: [0, 255, 0],
		limegreen: [50, 205, 50],
		palegreen: [152, 251, 152],
		lightgreen: [144, 238, 144],
		mediumspringgreen: [0, 250, 154],
		springgreen: [0, 255, 127],
		mediumseagreen: [60, 179, 113],
		seagreen: [46, 139, 87],
		forestgreen: [34, 139, 34],
		green: [0, 128, 0],
		darkgreen: [0, 100, 0],
		yellowgreen: [154, 205, 50],
		olivedrab: [107, 142, 35],
		olive: [128, 128, 0],
		darkolivegreen: [85, 107, 47],
		mediumaquamarine: [102, 205, 170],
		darkseagreen: [143, 188, 143],
		lightseagreen: [32, 178, 170],
		darkcyan: [0, 139, 139],
		teal: [0, 128, 128],
		aqua: [0, 255, 255],
		cyan: [0, 255, 255],
		lightcyan: [224, 255, 255],
		paleturquoise: [175, 238, 238],
		aquamarine: [127, 255, 212],
		turquoise: [64, 224, 208],
		mediumturquoise: [72, 209, 204],
		darkturquoise: [0, 206, 209],
		cadetblue: [95, 158, 160],
		steelblue: [70, 130, 180],
		lightsteelblue: [176, 196, 222],
		powderblue: [176, 224, 230],
		lightblue: [173, 216, 230],
		skyblue: [135, 206, 235],
		lightskyblue: [135, 206, 250],
		deepskyblue: [0, 191, 255],
		dodgerblue: [30, 144, 255],
		cornflowerblue: [100, 149, 237],
		royalblue: [65, 105, 225],
		blue: [0, 0, 255],
		mediumblue: [0, 0, 205],
		darkblue: [0, 0, 139],
		navy: [0, 0, 128],
		midnightblue: [25, 25, 112],
		cornsilk: [255, 248, 220],
		blanchedalmond: [255, 235, 205],
		bisque: [255, 228, 196],
		navajowhite: [255, 222, 173],
		wheat: [245, 222, 179],
		burlywood: [222, 184, 135],
		tan: [210, 180, 140],
		rosybrown: [188, 143, 143],
		sandybrown: [244, 164, 96],
		goldenrod: [218, 165, 32],
		darkgoldenrod: [184, 134, 11],
		Peru: [205, 133, 63],
		chocolate: [210, 105, 30],
		saddlebrown: [139, 69, 19],
		sienna: [160, 82, 45],
		brown: [165, 42, 42],
		maroon: [128, 0, 0],
		white: [255, 255, 255],
		snow: [255, 250, 250],
		honeydew: [240, 255, 240],
		mintcream: [245, 255, 250],
		azure: [240, 255, 255],
		aliceblue: [240, 248, 255],
		ghostwhite: [248, 248, 255],
		whitesmoke: [245, 245, 245],
		seashell: [255, 245, 238],
		beige: [245, 245, 220],
		oldlace: [253, 245, 230],
		floralwhite: [255, 250, 240],
		ivory: [255, 255, 240],
		antiquewhite: [250, 235, 215],
		linen: [250, 240, 230],
		lavenderblush: [255, 240, 245],
		mistyrose: [255, 228, 225],
		gainsboro: [220, 220, 220],
		lightgray: [211, 211, 211],
		silver: [192, 192, 192],
		darkgray: [169, 169, 169],
		gray: [128, 128, 128],
		dimgray: [105, 105, 105],
		lightslategray: [119, 136, 153],
		slategray: [112, 128, 144],
		darkslategray: [47, 79, 79],
		black: [0, 0, 0],
		bark: [64, 48, 33]
	};

	var name, clr;
	for( name in x11 ){
        if( x11.hasOwnProperty( name ) ){
            clr = x11[name];
            TColor.X11[name] = TColor.newRGB( clr[0]/255, clr[1]/255, clr[2]/255 );
            //for all of the grays duplicate with grey
            if( name.indexOf('gray') >= 0 ){
                TColor.X11[ name.replace('gray','grey') ] = TColor.X11[name];
            }
        }
	}

    //add `transparent`
    TColor.X11.transparent = TColor.newRGBA(0,0,0,0);
}());


module.exports = TColor;



},{"../geom/vectors":118,"../internals/is":128,"../internals/numberComparator":131,"../math/mathUtils":147,"./Hue":38}],44:[function(require,module,exports){
var is = require('../internals/is');
var ScaleMap = require('../math/ScaleMap');
var ColorList = require('./ColorList');
var ColorGradient = require('./ColorGradient');

    var ToneMap;
    /**
     * ToneMap
     * @constructor
     * @param {Number} min `min` or `a`
     * @param {Number} max `max` or `b`
     * @param {toxi.color.ColorGradient|ColorList|TColor} g
     * @param {toxi.color.TColor} [colorB]
     * @param {Number} [resolution]
     *
     * @usages
     * new ToneMap( min, max, gradient );
     * or
     * new ToneMap( min, max, colorList );
     * or
     * new ToneMap( a, b, colorA, colorB );
     * or
     * new ToneMap( min, max, colorA, colorB, resolution );
     */
    ToneMap = function( min, max, list, colorB, resolution ){
        var al = arguments.length;
        if( al > 3 ){
            //( a, b, colorA, colorB )
            if( al === 4 ){
                list = new ColorList( list, colorB );
            } else {
                //( min, max, colorA, colorB, resolution )
                var colA = list;
                list = new ColorGradient();
                list.addColorAt(0, colA);
                list.addColorAt(resolution-1, colorB);
                list = list.calcGradient(0, resolution);
            }
        //by now all of the variables are syphoned down to min, max, colorList
        }
        //( min, max, gradient ) or
        //( min, max, colorlist )
        if( is.ColorGradient( list ) ){
            //make it a colorlist
            list = list.calcGradient();
        }
        this.map = new ScaleMap( min, max, 0, list.size()-1 );
        this.colors = list;
    };

    ToneMap.prototype = {
        constructor: ToneMap,
        getARGBToneFor: function( t  ){
            return this.getToneFor(t).toARGB();
        },
        /**
        * get a color from a tonal value
        * @param {Number} t
        * @return {toxi.color.TColor}
        */
        getToneFor: function( t ){
            var idx;
            if( this.colors.size() > 2 ){
                idx = Math.floor( this.map.getClippedValueFor(t) + 0.5 );
            } else {
                idx = t >= this.map.getInputMedian() ? 1 : 0;
            }
            return this.colors.get(idx);
        },
        /**
        * Applies the tonemap to all elements in the given source array of
        * values and places the resulting ARGB color in the corresponding
        * index of the target pixel buffer. If the target buffer is null, a new one
        * will be created automatically.
        *
        * @param {Array<Number>}src source array of values to be tone mapped
        * @param {Array<Number>}pixels target pixel buffer
        * @param {Number} [offset] optionally provide an index-offset to start
        * at in the destination pixels array
        * @return pixel array
        */
        getToneMappedArray: function( src, pixels, offset ){
            if( typeof offset !== 'number'){
                offset = 0;
            } else if ( offset < 0 ){
                throw new Error("offset into target pixel array is negative");
            }
            pixels = pixels || new Array(src.length);
            for(var i=0, l=src.length; i<l; i++){
                pixels[offset++] = this.getToneFor(src[i]).toARGB();
            }
            return pixels;
        },
        /**
         * @param {toxi.math.InterpolateStrategy} func
         */
        setMapFunction: function( func ){
            this.map.setMapFunction( func );
        }
    };

    module.exports = ToneMap;



},{"../internals/is":128,"../math/ScaleMap":142,"./ColorGradient":30,"./ColorList":31}],45:[function(require,module,exports){



var HSVAccessor = require('./HSVAccessor'),
	RGBAccessor = require('./RGBAccessor'),
	CMYKAccessor = require('./CMYKAccessor'),
	AlphaAccessor = require('./AlphaAccessor'),
	LuminanceAccessor = require('./LuminanceAccessor');
/**
* Defines standard color component access criterias and associated comparators
* used to sort colors based on component values. If a new custom accessor is
* needed (e.g. for sub-classes TColor's), then simply sub-class this class and
* implement the {@link Comparator} interface and the 2 abstract getter & setter
* methods defined by this class.
*/
exports.HUE = new HSVAccessor(0),
exports.SATURATION = new HSVAccessor(1),
exports.BRIGHTNESS = new HSVAccessor(2),

exports.RED = new RGBAccessor(0),
exports.GREEN = new RGBAccessor(1),
exports.BLUE = new RGBAccessor(2),

exports.CYAN = new CMYKAccessor(0),
exports.MAGENTA = new CMYKAccessor(1),
exports.YELLOW = new CMYKAccessor(2),
exports.BLACK = new CMYKAccessor(3),

exports.ALPHA = new AlphaAccessor(),
exports.LUMINANCE = new LuminanceAccessor();



},{"./AlphaAccessor":27,"./CMYKAccessor":28,"./HSVAccessor":34,"./LuminanceAccessor":39,"./RGBAccessor":41}],46:[function(require,module,exports){


	var numberComparator = require('../internals').numberComparator,
		bind = require('../internals').bind;

	//this will attach proper exported objects for each accessor
	function make( type, setters ){
		var name = type + 'Accessor', arry = type.toLowerCase(); //make HSV hsv etc
		exports[name] = function( comp ){
			this.component = comp;
			//compare() could easily be used in incorrect scope, bind it
			this.compare = bind( this.compare, this );
		};

		exports[name].prototype.compare = function( a, b ){
			var ca = a[arry][this.component],
				cb = b[arry][this.component];
			return numberComparator( ca, cb );
		};

		exports[name].prototype.getComponentValueFor = function( col ){
			return col[arry][this.component];
		};

		exports[name].prototype.setComponentValueFor = function( col, val ){
			col[ 'set'+setters[this.component] ]( val );
		};

	}

	make('RGB',['Red','Green','Blue']);
	make('HSV',['Hue','Saturation','Brightness']);
	make('CMYK',['Cyan','Magenta','Yellow','Black']);

	var LuminanceAccessor = function(){};
	LuminanceAccessor.prototype.compare = function( a, b ){
		return numberComparator( a.luminance(), b.luminance() );
	};
	LuminanceAccessor.prototype.getComponentValueFor = function( col ){
		return col.luminance();
	};
	LuminanceAccessor.prototype.setComponentValueFor = function(){};

	var AlphaAccessor = function(){};
	AlphaAccessor.prototype.compare = function(a,b){
		return numberComparator( a.alpha(), b.alpha() );
	};
	AlphaAccessor.prototype.getComponentValueFor = function(col){
		return col.alpha();
	};
	AlphaAccessor.prototype.setComponentValueFor = function(col, value){
		col.setAlpha(value);
	};

	exports.LuminanceAccessor = LuminanceAccessor;
	exports.AlphaAccessor = AlphaAccessor;



},{"../internals":120}],47:[function(require,module,exports){
var ColorTheoryRegistry = require('./theory/colorTheoryRegistry');
    /**
    * Factory method. Creates a new ColorList based on the given
    * {@link ColorTheoryStrategy} instance and the given source color. The
    * number of colors returned will vary with the strategy chosen.
    * @param {string|toxi.color.theory.*Strategy} strategy either a string
    * for a strategy, such as "splitComplementary" or an instance of a strategy
    * @param {toxi.color.TColor} c a color to base the strategy off
    * @return {toxi.color.ColorList} new list
    */
    module.exports = function(strategy, c){
        if(typeof strategy == 'string'){
            strategy = ColorTheoryRegistry.getStrategyForName(strategy);
        }
        var list;
        if(strategy !== undefined){
            list = strategy.createListFromColor(c);
        }
        return list;
    };


},{"./theory/colorTheoryRegistry":61}],48:[function(require,module,exports){

	function makeProxy( type ){
		var name = type + 'DistanceProxy';
		exports[name] = function(){};
		exports[name].prototype.distanceBetween = function( a, b ){
			//a.distanceToHSV( b );
			return a['distanceTo'+type]( b );
		};
	}
	makeProxy('HSV');
	makeProxy('RGB');
	makeProxy('CMYK');

},{}],49:[function(require,module,exports){
var TColor = require('./TColor');
var internals = require('../internals');
    var each = internals.each,
        names = [],
        //kept private, used for `getForName`
        namedColorMap = {};

    //attach every one of the X11 colors to NamedColor
    //make all names uppercase
    each(TColor.X11, function( value, key ){
        var upkey = key.toUpperCase();
        names.push(upkey);
        namedColorMap[upkey] = value;
        namedColorMap[key] = value;
        exports[upkey] = value;
    });


    /**
     * Returns the color for the given name
     * @param {String} name
     * @return color or undefined if name not found
     */
    exports.getForName = function( name ){
        //return the color, and if it was sent like "springGreen", lowercase it to be nice :)
        return namedColorMap[name] || namedColorMap[name.toLowerCase()];
    };

    /**
     * Return the names of all defined colors
     * @return list of names
     */
    exports.getNames = function(){
        return names.slice(0);
    };



},{"../internals":120,"./TColor":43}],50:[function(require,module,exports){

    exports.AnalagousStrategy = require('./theory/AnalagousStrategy');
    exports.colorTheoryRegistry = require('./theory/colorTheoryRegistry');
    //keep it uppercase also
    exports.ColorTheoryRegistry = exports.colorTheoryRegistry;
    exports.ComplementaryStrategy = require('./theory/ComplementaryStrategy');
    exports.CompoundTheoryStrategy = require('./theory/CompoundTheoryStrategy');
    exports.LeftSplitComplementaryStrategy = require('./theory/LeftSplitComplementaryStrategy');
    exports.MonochromeTheoryStrategy = require('./theory/MonochromeTheoryStrategy');
    exports.RightSplitComplementaryStrategy = require('./theory/RightSplitComplementaryStrategy');
    exports.SingleComplementStrategy = require('./theory/SingleComplementStrategy');
    exports.SplitComplementaryStrategy = require('./theory/SplitComplementaryStrategy');
    exports.TetradTheoryStrategy = require('./theory/TetradTheoryStrategy');
    exports.TriadTheoryStrategy = require('./theory/TriadTheoryStrategy');
    //for creating custom strategies
    exports.strategies = require('./theory/strategies');


},{"./theory/AnalagousStrategy":51,"./theory/ComplementaryStrategy":52,"./theory/CompoundTheoryStrategy":53,"./theory/LeftSplitComplementaryStrategy":54,"./theory/MonochromeTheoryStrategy":55,"./theory/RightSplitComplementaryStrategy":56,"./theory/SingleComplementStrategy":57,"./theory/SplitComplementaryStrategy":58,"./theory/TetradTheoryStrategy":59,"./theory/TriadTheoryStrategy":60,"./theory/colorTheoryRegistry":61,"./theory/strategies":62}],51:[function(require,module,exports){
var strategies = require('./strategies');
var vectors = require('../../geom/vectors');
var MathUtils = require('../../math/mathUtils');
var internals = require('../../internals');
var ColorList = require('../ColorList');
    var each = internals.each,
        Vec2D = vectors.Vec2D;

    //@private
    var _tones = [
        new Vec2D(1,2.2),
        new Vec2D(2,1),
        new Vec2D(-1,-0.5),
        new Vec2D(-2,1)
    ];

    module.exports = strategies.create('Analagous',
        /**
        * Creates a new instance
        * @param {Number} [theta] optionally provide an angle in degrees, defaults to 10
        * @param {Number} [contrast] optionally provide a contrast, defaults to 0.25
        */
        function( theta, contrast ){
            this.contrast = typeof contrast === 'number' ? contrast : 0.25;
            this.theta = MathUtils.radians( typeof theta === 'number' ? theta : 10 );
        }, {
        createListFromColor: function( src ){
            var self = this;
            this.contrast = MathUtils.clipNormalized( this.contrast );
            var colors = new ColorList( src );
            each(_tones, function(currTone){
                var c = src.getRotatedRYB(self.theta * currTone.x),
                    t = 0.44 - currTone.y * 0.1;
                if(src.brightness() - self.contras * currTone.y < t){
                    c.setBrightness(t);
                } else {
                    c.setBrightness(src.brightness() - self.contrast * currTone.y);
                }
                c.desaturate(0.05);
                colors.add( c );
            });
            return colors;
        },
        toString: function(){
            return 'analagous contrast: ' + this.contrast + ' theta: ' + MathUtils.degrees(this.theta);
        }
    });


},{"../../geom/vectors":118,"../../internals":120,"../../math/mathUtils":147,"../ColorList":31,"./strategies":62}],52:[function(require,module,exports){
var strategies = require('./strategies');
var ColorList = require('../ColorList');

    var adjust = function( c, thresh ){
        var b = c.brightness();
        if( b > thresh ){
            c.setBrightness( 0.1 + b * 0.25 );
        } else {
            c.setBrightness(1.0 - b * 0.25 );
        }
        return c;
    };

    module.exports = strategies.create('Complementary',{
        createListFromColor: function( src ){
            var colors = new ColorList(src),
                c;

            // A contrasting color: much darker or lighter than the original
            colors.add( adjust(src.copy(),0.4) );

            // A soft supporting color: lighter and less saturated
            c = src.copy();
            c.lighten(0.3);
            c.setSaturation(0.1 + c.saturation() * 0.3);
            colors.add(c);

            // A contrasting complement: very dark or very light
            colors.add( adjust(src.getComplement(),0.3) );

            // The complment and a light supporting variant
            colors.add( src.getComplement() );

            c = src.getComplement();
            c.lighten(0.3);
            c.setSaturation(0.1 + c.saturation() * 0.25);
            colors.add(c);

            return colors;
        }
    });


},{"../ColorList":31,"./strategies":62}],53:[function(require,module,exports){
var strategies = require('./strategies');
var ColorList = require('../ColorList');

    var wrap = strategies.wrap;

    module.exports = strategies.create('Compound',
        function( flipped ){
            this._isFlipped = flipped === true;
        }, {
        createListFromColor: function( src ){
            var colors = new ColorList(src),
                direction = this._isFlipped ? -1 : 1,
                c;

            c = src.getRotatedRYB(30 * direction);
            c.setBrightness(wrap(c.brightness(), 0.25, 0.6, 0.25));
            colors.add(c);

            c = src.getRotatedRYB(30 * direction);
            c.setSaturation(wrap(c.saturation(), 0.4, 0.1, 0.4));
            c.setBrightness(wrap(c.brightness(), 0.4, 0.2, 0.4));
            colors.add(c);

            c = src.getRotatedRYB(160 * direction);
            c.setSaturation(wrap(c.saturation(), 0.25, 0.1, 0.25));
            c.setBrightness(Math.max(0.2, c.brightness()));
            colors.add(c);

            c = src.getRotatedRYB(150 * direction);
            c.setSaturation(wrap(c.saturation(), 0.1, 0.8, 0.1));
            c.setBrightness(wrap(c.brightness(), 0.3, 0.6, 0.3));
            colors.add(c);

            /* disabled in java: http://hg.postspectacular.com/toxiclibs/src/4cfadbbea3b0bd02e2081e532f44782c5bfd67d7/src.color/toxi/color/theory/CompoundTheoryStrategy.java?at=default#cl-89
            c = src.getRotatedRYB(150 * direction);
            c.setSaturation(wrap(c.saturation(), 0.1, 0.8, 0.1));
            c.setBrightness(wrap(c.brightness(), 0.4, 0.2, 0.4));
            colors.add(c);*/

            return colors;
        },
        isFlipped: function(){
            return this._isFlipped;
        },
        setFlipped: function( state ){
            this._isFlipped = state;
        },
        toString: function(){
            return 'Compound' + (this.isFlipped() ? "_flipped" : "");
        }
    });



},{"../ColorList":31,"./strategies":62}],54:[function(require,module,exports){
var strategies = require('./strategies');
var ColorList = require('../ColorList');
var ComplementaryStrategy = require('./ComplementaryStrategy');

    var complementary;

    /**
     * creates an instance of a LeftSplitComplementaryStrategy
     * @constructor
     */
    module.exports = strategies.create('LeftSplitComplementary',{
        createListFromColor: function( src ){
            //first time create the instance, then just reuse it
            complementary = complementary || new ComplementaryStrategy();
            var left = src.getComplement().rotateRYB(-30).lighten(0.1),
                colors = complementary.createListFromColor(src),
                c;
            for( var i = 3; i < 6; i++){
                c = colors.get(i);
                c.setHue(left.hue());
            }
            return colors;
        }
    });


},{"../ColorList":31,"./ComplementaryStrategy":52,"./strategies":62}],55:[function(require,module,exports){
var strategies = require('./strategies');
var ColorList = require('../ColorList');

    var wrap = strategies.wrap;

    module.exports = strategies.create('Monochrome', {
        createListFromColor: function( src ){
            var colors = new ColorList(src),
                c = src.copy();
            c.setBrightness(wrap(c.brightness(), 0.5, 0.2, 0.3));
            c.setSaturation(wrap(c.saturation(), 0.3, 0.1, 0.3));
            colors.add(c);

            c = src.copy();
            c.setBrightness(wrap(c.brightness(), 0.2, 0.2, 0.6));
            colors.add(c);

            c = src.copy();
            c.setBrightness(Math.max(0.2, c.brightness() + (1-c.brightness()) * 0.2));
            c.setSaturation(wrap(c.saturation(), 0.3, 0.1, 0.3));
            colors.add(c);

            c = src.copy();
            c.setBrightness(wrap(c.brightness(), 0.5, 0.2, 0.3));
            colors.add(c);

            return colors;
        }
    });


},{"../ColorList":31,"./strategies":62}],56:[function(require,module,exports){
var strategies = require('./strategies');
var ColorList = require('../ColorList');
var ComplementaryStrategy = require('./ComplementaryStrategy');

    var complementary;

    module.exports = strategies.create('RightSplitComplementary', {
        createListFromColor: function( src ){
            complementary = complementary || new ComplementaryStrategy();
            var left = src.getComplement().rotateRYB(30).lighten(0.1),
                colors = complementary.createListFromColor(src),
                c;

            for(var i=3; i<6; i++){
                c = colors.get(i);
                c.setHue(left.hue());
            }
            return colors;
        }
    });


},{"../ColorList":31,"./ComplementaryStrategy":52,"./strategies":62}],57:[function(require,module,exports){
var strategies = require('./strategies');
var ColorList = require('../ColorList');
    /**
    * Implements the <a href=
    * "http://www.tigercolor.com/color-lab/color-theory/color-theory-intro.htm#complementary"
    * >single complementary color scheme</a> to create a compatible color for the
    * given one.
    */

    var getName = function(){ return "complement"; };

    module.exports = strategies.create('SingleComplement', {
        createListFromColor: function( src ){
            var list = new ColorList(src);
            list.add(src.getComplement());
            return list;
        },
        getName: getName,
        toString: getName
    });



},{"../ColorList":31,"./strategies":62}],58:[function(require,module,exports){
var strategies = require('./strategies');
var ColorList = require('../ColorList');
    /**
    * Implements the <a href=
    * "http://www.tigercolor.com/color-lab/color-theory/color-theory-intro.htm#split-complementary"
    * >split-complementary color scheme</a> to create 2 compatible colors for the
    * given one.
    */
    module.exports = strategies.create('SplitComplementary', {
        createListFromColor: function( src ){
            var colors = new ColorList(src);
            colors.add(src.getRotatedRYB(150).lighten(0.1));
            colors.add(src.getRotatedRYB(210).lighten(0.1));
            return colors;
        }
    });


},{"../ColorList":31,"./strategies":62}],59:[function(require,module,exports){
var strategies = require('./strategies');
var ColorList = require('../ColorList');

    var getName = function(){ return 'tetrad'; },
        adjust = function( c ){
            return c[ c.brightness() < 0.5 ? 'lighten' : 'darken'](0.2);
        };
    /**
    * Implements the <a href=
    * "http://www.tigercolor.com/color-lab/color-theory/color-theory-intro.htm#rectangle"
    * >tetradic color scheme</a> to create 4 compatible colors for the given one.
    */
    module.exports = strategies.create('TetradTheory',
        /**
        * Constructs a new instance with the given color offset angle
        * @param {Number} hue rotation angle in degrees
        */
        function( theta ){
            this.theta = typeof theta === 'number' ? theta : 90;
        }, {
        createListFromColor: function( src ){
            var colors = new ColorList(src);
            colors.add( adjust(src.getRotatedRYB(this.theta)) );
            colors.add( adjust(src.getRotatedRYB(this.theta*2)) );
            colors.add( src.getRotatedRYB(this.theta*3).lighten(0.1));
            return colors;
        },
        getName: getName,
        toString: getName
    });


},{"../ColorList":31,"./strategies":62}],60:[function(require,module,exports){
var strategies = require('./strategies');
var ColorList = require('../ColorList');

    var getName = function(){ return 'triad'; };
    /**
    * Implements the <a href=
    * "http://www.tigercolor.com/color-lab/color-theory/color-theory-intro.htm#triadic"
    * >triadic color scheme</a> to create 3 compatible colors for the given one.
    */
    module.exports = strategies.create('TriadTheory', {
        createListFromColor: function( src ){
            var colors = new ColorList(src);
            colors.add( src.getRotatedRYB(120).lighten(0.1) );
            colors.add( src.getRotatedRYB(-120).lighten(0.1) );
            return colors;
        },
        getName: getName,
        toString: toString
    });


},{"../ColorList":31,"./strategies":62}],61:[function(require,module,exports){


    var internals = require('../../internals'),
        each = internals.each,
        keys = internals.keys,
        values = internals.values,
        implementations = {};

    var strats = {
        SINGLE_COMPLEMENT: require('./SingleComplementStrategy'),
        COMPLEMENTARY: require('./ComplementaryStrategy'),
        SPLIT_COMPLEMENTARY: require('./SplitComplementaryStrategy'),
        LEFT_SPLIT_COMPLEMENTARY: require('./LeftSplitComplementaryStrategy'),
        RIGHT_SPLIT_COMPLEMENTARY: require('./RightSplitComplementaryStrategy'),
        ANALAGOUS: require('./AnalagousStrategy'),
        MONOCHROME: require('./MonochromeTheoryStrategy'),
        TRIAD: require('./TriadTheoryStrategy'),
        TETRAD: require('./TetradTheoryStrategy'),
        COMPOUND: require('./CompoundTheoryStrategy')
    };

    exports.getRegisteredNames = function(){
        return keys(implementations);
    };

    exports.getRegisteredStrategies = function(){
        return values(implementations);
    };

    exports.getStrategyForName = function( id ){
        return implementations[id];
    };

    exports.registerImplementation = function( impl ){
        implementations[ impl.getName() ] = impl;
    };

    each(strats, function( Constructor, type ){
        exports[type] = new (strats[type])();
        exports.registerImplementation( exports[type] );
    });




},{"../../internals":120,"./AnalagousStrategy":51,"./ComplementaryStrategy":52,"./CompoundTheoryStrategy":53,"./LeftSplitComplementaryStrategy":54,"./MonochromeTheoryStrategy":55,"./RightSplitComplementaryStrategy":56,"./SingleComplementStrategy":57,"./SplitComplementaryStrategy":58,"./TetradTheoryStrategy":59,"./TriadTheoryStrategy":60}],62:[function(require,module,exports){
var has = require('../../internals/has');
var is = require('../../internals/is');

    var has = has.all,
        isTColor = is.TColor;

    exports.create = function( name, constructor, extend ){
        if( arguments.length === 2 ){
            extend = constructor;
            constructor = function(){};
        }
        var _NAME = name.charAt(0).toLowerCase() + name.slice(1,name.length);
        constructor.prototype.constructor = constructor;
        constructor.prototype.getName = function(){ return _NAME; };
        constructor.prototype.toString = constructor.prototype.getName;
        for( var prop in extend ){
            constructor.prototype[prop] = extend[prop];
        }
        //wrap this function in an error-condition
        (function(createList){
            constructor.prototype.createListFromColor = function( src ){
                if( !isTColor(src) ){
                    throw new Error('src color was not a valid TColor');
                }
                return createList.call(this, src);
            };
        })(constructor.prototype.createListFromColor);

        return constructor;
    };

    exports.wrap = function( x, min, threshold, plus ){
        if( x - min < threshold ){
            return x + plus;
        }
        return x - min;
    };



},{"../../internals/has":127,"../../internals/is":128}],63:[function(require,module,exports){

	exports.AABB = require('./geom/AABB');
	exports.mesh = require('./geom/mesh');
	exports.BernsteinPolynomial = require('./geom/BernsteinPolynomial');
	exports.Circle = require('./geom/Circle');
	exports.CircleIntersector = require('./geom/CircleIntersector');
	exports.Cone = require('./geom/Cone');
    exports.ConvexPolygonClipper = require('./geom/ConvexPolygonClipper');
	exports.Ellipse = require('./geom/Ellipse');
	exports.IsectData2D = require('./geom/IsectData2D');
	exports.IsectData3D = require('./geom/IsectData3D');
	exports.Line2D = require('./geom/Line2D');
	exports.Line3D = require('./geom/Line3D');
    exports.LineStrip3D = require('./geom/LineStrip3D');
	exports.Matrix4x4 = require('./geom/Matrix4x4');
	exports.Plane = require('./geom/Plane');
	exports.Polygon2D = require('./geom/Polygon2D');
	exports.Quaternion = require('./geom/Quaternion');
	exports.Ray2D = require('./geom/Ray2D');
	exports.Ray3D = require('./geom/Ray3D');
	exports.Ray3DIntersector = require('./geom/Ray3DIntersector');
	exports.Rect = require('./geom/Rect');
	exports.Sphere = require('./geom/Sphere');
	exports.Spline2D = require('./geom/Spline2D');
    exports.Spline3D = require('./geom/Spline3D');
    exports.SutherlandHodgemanClipper = require('./geom/SutherlandHodgemanClipper');
	exports.Triangle2D = require('./geom/Triangle2D');
	exports.Triangle3D = require('./geom/Triangle3D');
	exports.Vec2D = require('./geom/Vec2D');
	exports.Vec3D = require('./geom/Vec3D');
	exports.XAxisCylinder = require('./geom/XAxisCylinder');
	exports.YAxisCylinder = require('./geom/YAxisCylinder');
	exports.ZAxisCylinder = require('./geom/ZAxisCylinder');



},{"./geom/AABB":64,"./geom/BernsteinPolynomial":66,"./geom/Circle":67,"./geom/CircleIntersector":68,"./geom/Cone":69,"./geom/ConvexPolygonClipper":70,"./geom/Ellipse":71,"./geom/IsectData2D":72,"./geom/IsectData3D":73,"./geom/Line2D":74,"./geom/Line3D":75,"./geom/LineStrip3D":76,"./geom/Matrix4x4":77,"./geom/Plane":78,"./geom/Polygon2D":79,"./geom/Quaternion":80,"./geom/Ray2D":81,"./geom/Ray3D":82,"./geom/Ray3DIntersector":83,"./geom/Rect":84,"./geom/Sphere":85,"./geom/Spline2D":86,"./geom/Spline3D":87,"./geom/SutherlandHodgemanClipper":88,"./geom/Triangle2D":89,"./geom/Triangle3D":90,"./geom/Vec2D":92,"./geom/Vec3D":93,"./geom/XAxisCylinder":94,"./geom/YAxisCylinder":95,"./geom/ZAxisCylinder":96,"./geom/mesh":97}],64:[function(require,module,exports){


var	internals = require('../internals'),
	Vec3D = require('./Vec3D'),
	Vec2D = require('./Vec2D'),
	mathUtils = require('../math/mathUtils');




/**
 @class Axis-aligned Bounding Box
 @member
 */
var AABB = function(a,b){
	if(a === undefined){
		Vec3D.call(this);
		this.setExtent(new Vec3D());
	} else if(typeof(a) == "number") {
		Vec3D.call(this,new Vec3D());
		this.setExtent(a);
	} else if( internals.has.XYZ( a ) ) {
		Vec3D.call(this,a);
		if(b === undefined && internals.is.AABB( a )) {
			this.setExtent(a.getExtent());
		} else {
			if(typeof b == "number"){
				this.setExtent(new Vec3D(b,b,b));
			}else { //should be an AABB
				this.setExtent(b);
			}
		}
	}


};

internals.extend(AABB,Vec3D);

AABB.fromMinMax = function(min,max){
	var a = Vec3D.min(min, max);
	var b = Vec3D.max(min, max);
	return new AABB( a.interpolateTo(b,0.5), b.sub(a).scaleSelf(0.5) );
};

AABB.prototype.containsPoint = function(p) {
    return p.isInAABB(this);
};

AABB.prototype.copy = function() {
    return new AABB(this);
};

/**
 * Returns the current box size as new Vec3D instance (updating this vector
 * will NOT update the box size! Use {@link #setExtent(ReadonlyVec3D)} for
 * those purposes)
 *
 * @return box size
 */
AABB.prototype.getExtent = function() {
   return this.extent.copy();
};

AABB.prototype.getMax = function() {
   // return this.add(extent);
   return this.max.copy();
};

AABB.prototype.getMin = function() {
   return this.min.copy();
};

AABB.prototype.getNormalForPoint = function(p) {
    p = p.sub(this);
    var pabs = this.extent.sub(p.getAbs());
    var psign = p.getSignum();
    var normal = Vec3D.X_AXIS.scale(psign.x);
    var minDist = pabs.x;
    if (pabs.y < minDist) {
        minDist = pabs.y;
        normal = Vec3D.Y_AXIS.scale(psign.y);
    }
    if (pabs.z < minDist) {
        normal = Vec3D.Z_AXIS.scale(psign.z);
    }
    return normal;
};

/**
 * Adjusts the box size and position such that it includes the given point.
 *
 * @param p
 *            point to include
 * @return itself
 */
AABB.prototype.includePoint = function(p) {
    this.min.minSelf(p);
    this.max.maxSelf(p);
    this.set(this.min.interpolateTo(this.max, 0.5));
    this.extent.set(this.max.sub(this.min).scaleSelf(0.5));
    return this;
};

/**
* Checks if the box intersects the passed in one.
*
* @param box
*            box to check
* @return true, if boxes overlap
*/
AABB.prototype.intersectsBox = function(box) {
    var t = box.sub(this);
    return Math.abs(t.x) <= (this.extent.x + box.extent.x) && Math.abs(t.y) <= (this.extent.y + box.extent.y) && Math.abs(t.z) <= (this.extent.z + box.extent.z);
};

/**
 * Calculates intersection with the given ray between a certain distance
 * interval.
 *
 * Ray-box intersection is using IEEE numerical properties to ensure the
 * test is both robust and efficient, as described in:
 *
 * Amy Williams, Steve Barrus, R. Keith Morley, and Peter Shirley: "An
 * Efficient and Robust Ray-Box Intersection Algorithm" Journal of graphics
 * tools, 10(1):49-54, 2005
 *
 * @param ray incident ray
 * @param minDist
 * @param maxDist
 * @return intersection point on the bounding box (only the first is
 *         returned) or null if no intersection
 */

AABB.prototype.intersectsRay = function(ray, minDist, maxDist) {
    var invDir = ray.getDirection().reciprocal();
    var signDirX = invDir.x < 0;
    var signDirY = invDir.y < 0;
    var signDirZ = invDir.z < 0;
    var bbox = signDirX ? this.max : this.min;
    var tmin = (bbox.x - ray.x) * invDir.x;
    bbox = signDirX ? this.min : this.max;
    var tmax = (bbox.x - ray.x) * invDir.x;
    bbox = signDirY ? this.max : this.min;
    var tymin = (bbox.y - ray.y) * invDir.y;
    bbox = signDirY ? this.min : this.max;
    var tymax = (bbox.y - ray.y) * invDir.y;
    if ((tmin > tymax) || (tymin > tmax)) {
        return null;
    }
    if (tymin > tmin) {
        tmin = tymin;
    }
    if (tymax < tmax) {
        tmax = tymax;
    }
    bbox = signDirZ ? this.max : this.min;
    var tzmin = (bbox.z - ray.z) * invDir.z;
    bbox = signDirZ ? this.min : this.max;
    var tzmax = (bbox.z - ray.z) * invDir.z;
    if ((tmin > tzmax) || (tzmin > tmax)) {
        return null;
    }
    if (tzmin > tmin) {
        tmin = tzmin;
    }
    if (tzmax < tmax) {
        tmax = tzmax;
    }
    if ((tmin < maxDist) && (tmax > minDist)) {
        return ray.getPointAtDistance(tmin);
    }
    return undefined;
};

/**
 * @param c
 *            sphere centre
 * @param r
 *            sphere radius
 * @return true, if AABB intersects with sphere
 */

AABB.prototype.intersectsSphere = function(c, r) {
	if(arguments.length == 1){ //must've been a sphere
		r = c.radius;
	}
    var s,
		d = 0;
    // find the square of the distance
    // from the sphere to the box
    if (c.x < this.min.x) {
        s = c.x - this.min.x;
        d = s * s;
    } else if (c.x > this.max.x) {
        s = c.x - this.max.x;
        d += s * s;
    }

    if (c.y < this.min.y) {
        s = c.y - this.min.y;
        d += s * s;
    } else if (c.y > this.max.y) {
        s = c.y - this.max.y;
        d += s * s;
    }

    if (c.z < this.min.z) {
        s = c.z - this.min.z;
        d += s * s;
    } else if (c.z > this.max.z) {
        s = c.z - this.max.z;
        d += s * s;
    }

    return d <= r * r;
};

AABB.prototype.intersectsTriangle = function(tri) {
	// use separating axis theorem to test overlap between triangle and box
	// need to test for overlap in these directions:
	//
	// 1) the {x,y,z}-directions (actually, since we use the AABB of the
	// triangle
	// we do not even need to test these)
	// 2) normal of the triangle
	// 3) crossproduct(edge from tri, {x,y,z}-directin)
	// this gives 3x3=9 more tests
	var v0,
		v1,
		v2,
		normal,
		e0,
		e1,
		e2,
		f;

	// move everything so that the boxcenter is in (0,0,0)
	v0 = tri.a.sub(this);
	v1 = tri.b.sub(this);
	v2 = tri.c.sub(this);

	// compute triangle edges
	e0 = v1.sub(v0);
	e1 = v2.sub(v1);
	e2 = v0.sub(v2);

	// test the 9 tests first (this was faster)
	f = e0.getAbs();
	if (this.testAxis(e0.z, -e0.y, f.z, f.y, v0.y, v0.z, v2.y, v2.z, this.extent.y, this.extent.z)) {
		return false;
	}
	if (this.testAxis(-e0.z, e0.x, f.z, f.x, v0.x, v0.z, v2.x, v2.z, this.extent.x, this.extent.z)) {
		return false;
	}
	if (this.testAxis(e0.y, -e0.x, f.y, f.x, v1.x, v1.y, v2.x, v2.y, this.extent.x, this.extent.y)) {
		return false;
	}

	f = e1.getAbs();
	if (this.testAxis(e1.z, -e1.y, f.z, f.y, v0.y, v0.z, v2.y, v2.z, this.extent.y, this.extent.z)) {
		return false;
	}
	if (this.testAxis(-e1.z, e1.x, f.z, f.x, v0.x, v0.z, v2.x, v2.z, this.extent.x, this.extent.z)) {
		return false;
	}
	if (this.testAxis(e1.y, -e1.x, f.y, f.x, v0.x, v0.y, v1.x, v1.y, this.extent.x, this.extent.y)) {
		return false;
	}

	f = e2.getAbs();
	if (this.testAxis(e2.z, -e2.y, f.z, f.y, v0.y, v0.z, v1.y, v1.z, this.extent.y, this.extent.z)) {
		return false;
	}
	if (this.testAxis(-e2.z, e2.x, f.z, f.x, v0.x, v0.z, v1.x, v1.z, this.extent.x, this.extent.z)) {
		return false;
	}
	if (this.testAxis(e2.y, -e2.x, f.y, f.x, v1.x, v1.y, v2.x, v2.y, this.extent.x, this.extent.y)) {
		return false;
	}

	// first test overlap in the {x,y,z}-directions
	// find min, max of the triangle each direction, and test for overlap in
	// that direction -- this is equivalent to testing a minimal AABB around
	// the triangle against the AABB

	// test in X-direction
	if (mathUtils.min(v0.x, v1.x, v2.x) > this.extent.x || mathUtils.max(v0.x, v1.x, v2.x) < -this.extent.x) {
		return false;
	}

	// test in Y-direction
	if (mathUtils.min(v0.y, v1.y, v2.y) > this.extent.y || mathUtils.max(v0.y, v1.y, v2.y) < -this.extent.y) {
		return false;
	}

	// test in Z-direction
	if (mathUtils.min(v0.z, v1.z, v2.z) > this.extent.z || mathUtils.max(v0.z, v1.z, v2.z) < -this.extent.z) {
		return false;
	}

	// test if the box intersects the plane of the triangle
	// compute plane equation of triangle: normal*x+d=0
	normal = e0.cross(e1);
	var d = -normal.dot(v0);
	if (!this.planeBoxOverlap(normal, d, this.extent)) {
		return false;
	}
	return true;
};

AABB.prototype.planeBoxOverlap = function(normal, d, maxbox) {
    var vmin = new Vec3D();
    var vmax = new Vec3D();

    if (normal.x > 0.0) {
        vmin.x = -maxbox.x;
        vmax.x = maxbox.x;
    } else {
        vmin.x = maxbox.x;
        vmax.x = -maxbox.x;
    }

    if (normal.y > 0.0) {
        vmin.y = -maxbox.y;
        vmax.y = maxbox.y;
    } else {
        vmin.y = maxbox.y;
        vmax.y = -maxbox.y;
    }

    if (normal.z > 0.0) {
        vmin.z = -maxbox.z;
        vmax.z = maxbox.z;
    } else {
        vmin.z = maxbox.z;
        vmax.z = -maxbox.z;
    }
    if (normal.dot(vmin) + d > 0.0) {
        return false;
    }
    if (normal.dot(vmax) + d >= 0.0) {
        return true;
    }
    return false;
};

/**
 * Updates the position of the box in space and calls
 * {@link #updateBounds()} immediately
 *
 * @see geom.Vec3D#set(float, float, float)
 */

AABB.prototype.set = function(a,b,c) {
		if(internals.is.AABB( a )) {
			this.extent.set(a.extent);
			return Vec3D.set.apply(this,[a]);
		}
		if( internals.has.XYZ( a )){
			b = a.y;
			c = a.z;
			a = a.a;
		}
		this.x = a;
		this.y = b;
		this.z = c;
		this.updateBounds();
		return this;
 };


AABB.prototype.setExtent = function(extent) {
        this.extent = extent.copy();
        return this.updateBounds();
};

AABB.prototype.testAxis = function(a, b, fa, fb, va, vb, wa, wb, ea, eb) {
    var p0 = a * va + b * vb;
    var p2 = a * wa + b * wb;
    var min;
	var max;
    if (p0 < p2) {
        min = p0;
        max = p2;
    } else {
        min = p2;
        max = p0;
    }
    var rad = fa * ea + fb * eb;
    return (min > rad || max < -rad);
};

AABB.prototype.toMesh = function(mesh){
	if(mesh === undefined){
		var TriangleMesh = require('./mesh/meshCommon').TriangleMesh;
		mesh = new TriangleMesh("aabb",8,12);
	}
	var a = this.min,//new Vec3D(this.min.x,this.max.y,this.max.z),
		g = this.max,//new Vec3D(this.max.x,this.max.y,this.max.z),
		b = new Vec3D(a.x, a.y, g.z),
		c = new Vec3D(g.x, a.y, g.z),
		d = new Vec3D(g.x, a.y, a.z),
		e = new Vec3D(a.x, g.y, a.z),
		f = new Vec3D(a.x, g.y, g.z),
		h = new Vec3D(g.x, g.y, a.z),
		ua = new Vec2D(0,0),
		ub = new Vec2D(1,0),
		uc = new Vec2D(1,1),
		ud = new Vec2D(0,1);
	// left
	mesh.addFace(a, b, f, ud, uc, ub);
	mesh.addFace(a, f, e, ud, ub, ua);
	// front
	mesh.addFace(b, c, g, ud, uc, ub);
	mesh.addFace(b, g, f, ud, ub, ua);
	// right
	mesh.addFace(c, d, h, ud, uc, ub);
	mesh.addFace(c, h, g, ud, ub, ua);
	// back
	mesh.addFace(d, a, e, ud, uc, ub);
	mesh.addFace(d, e, h, ud, ub, ua);
	// top
	mesh.addFace(e, f, h, ua, ud, ub);
	mesh.addFace(f, g, h, ud, uc, ub);
	// bottom
	mesh.addFace(a, d, b, ud, uc, ua);
	mesh.addFace(b, d, c, ua, uc, ub);
	return mesh;

};


AABB.prototype.toString = function() {
   return "<aabb> pos: "+Vec3D.prototype.toString.call(this)+" ext: "+this.extent.toString();
};

/**
* Updates the min/max corner points of the box. MUST be called after moving
* the box in space by manipulating the public x,y,z coordinates directly.
*
* @return itself
*/
AABB.prototype.updateBounds = function() {
  // this is check is necessary for the constructor
  if (this.extent !== undefined) {
      this.min = this.sub(this.extent);
      this.max = this.add(this.extent);
  }
  return this;
};

module.exports = AABB;



},{"../internals":120,"../math/mathUtils":147,"./Vec2D":92,"./Vec3D":93,"./mesh/meshCommon":114}],65:[function(require,module,exports){


var Cone = require('./Cone');

/** 
 @member toxi
 @constructor
 @description An Abstract (don't use this directly) Axis-aligned Cylinder class
 */
var	AxisAlignedCylinder = function(pos,radius,length) {
	this.pos = (pos===undefined)? undefined: pos.copy();
	this.setRadius(radius);
	this.setLength(length);
};

AxisAlignedCylinder.prototype = {
	/**
	Checks if the given point is inside the cylinder. 
	@param p
	@return true, if inside
	*/
	containsPoint: function(p){
		throw Error("AxisAlignedCylinder.containsPoint(): not implmented");
	},

	/**
	@return the length
	*/
	getLength: function() {
		return this.length;
	},

	/**
	@return the cylinder's orientation axis
	*/
	getMajorAxis: function(){
		throw Error("AxisAlignedCylinder.getMajorAxis(): not implemented");
	},

	/**
	Returns the cylinder's position (centroid).
	@return the pos
	*/
	getPosition: function() {
		return this.pos.copy();
	},

	/**
	@return the cylinder radius
	*/
	getRadius: function() {
		return this.radius;
	},

	/**
	@param length the length to set
	*/
	setLength: function(length) {
		this.length = length;
	},

	/**
	@param pos the pos to set
	*/
	setPosition: function(pos) {
		this.pos.set(pos);
	},

   setRadius: function(radius) {
		this.radius = radius;
		this.radiusSquared = radius * radius;
	},

	/**
	Builds a TriangleMesh representation of the cylinder at a default
	resolution 30 degrees. 
	@return mesh instance
	*/
	toMesh: function(a,b,c) {
		var opts = {
			mesh: undefined,
			steps: 12,
			thetaOffset: 0
		};
		if(arguments.length == 1 && typeof arguments[0] == 'object'){ //options object
			for(var prop in arguments[0]){
				opts[prop] = arguments[0][prop];
			}
		} else if(arguments.length == 2){
			opts.steps = arguments[0];
			opts.thetaOffset = arguments[1];
		}
		var cone = new Cone(this.pos,this.getMajorAxis().getVector(), this.radius, this.radius, this.length);
		return cone.toMesh(opts.mesh,opts.steps,opts.thetaOffset,true,true);
	}
};

module.exports = AxisAlignedCylinder;


},{"./Cone":69}],66:[function(require,module,exports){

/**
 * @class
 * Helper class for the spline3d classes in this package. Used to compute
 * subdivision points of the curve.
 * @member toxi
 * @param {Number} res number of subdivision steps between each control point of the spline3d
 */
var	BernsteinPolynomial = function(res) {
	this.resolution = res;
	var b0 = [],
		b1 = [],
		b2 = [],
		b3 = [];
	var t = 0;
	var dt = 1.0 / (res - 1);
	for (var i = 0; i < res; i++) {
		var t1 = 1 - t;
		var t12 = t1 * t1;
		var t2 = t * t;
		b0[i] = t1 * t12;
		b1[i] = 3 * t * t12;
		b2[i] = 3 * t2 * t1;
		b3[i] = t * t2;
		t += dt;
	}
	this.b0 = b0;
	this.b1 = b1;
	this.b2 = b2;
	this.b3 = b3;
};

module.exports = BernsteinPolynomial;



},{}],67:[function(require,module,exports){

    module.exports = require('./Ellipse').Circle;


},{"./Ellipse":71}],68:[function(require,module,exports){

/**
 @class CircleIntersector
 @member toxi
 */
var CircleIntersector = function(circle) {
    this.circle = circle;
    this.isec = undefined;
};

CircleIntersector.prototype = {

    getIntersectionData: function() {
        return this.isec;
    },

    intersectsRay: function(ray) {
        this.isec.clear();
        var q = circle.sub(ray),
        distSquared = q.magSquared(),
        v = q.dot(ray.getDirection()),
        r = circle.getRadius(),
        d = r * r - (distSquared - v * v);
        if (d >= 0.0) {
            this.isec.isIntersection = true;
            this.isec.dist = v -Math.sqrt(d);
            this.isec.pos = ray.getPointAtDistance(isec.dist);
            this.isec.normal = this.isec.pos.sub(this.circle).normalize();
        }
        return this.isec.isIntersection;
    }
};

module.exports = CircleIntersector;


},{}],69:[function(require,module,exports){


var extend = require('../internals').extend,
	Vec3D = require('./Vec3D'),
	TriangleMesh = require('./mesh/TriangleMesh');

/**
 * @class A geometric definition of a cone (and cylinder as a special case) with
 * support for mesh creation/representation. The class is currently still
 * incomplete in that it doesn't provide any other features than the
 * construction of a cone shaped mesh.
 * @augments toxi.Vec3D
 * @member toxi
 * @param pos
 *            centre position
 * @param dir
 *            direction vector
 * @param rNorth
 *            radius on the side in the forward direction
 * @param rSouth
 *            radius on the side in the opposite direction
 * @param len
 *            length of the cone
 */

function err( param ){
	throw Error("Missing parameter: " + param);
}
var	Cone = function(pos,dir,rNorth, rSouth,len) {
	//if its a parameter object
	var self = this;
	if ( typeof pos === 'object' && arguments.length === 1 ){
		process(
			pos.pos || pos.position || new Vec3D(),
			pos.dir || pos.direction || err( "direction" ),
			pos.rNorth || pos.radiusNorth || err("radiusNorth"),
			pos.rSouth || pos.radiusSouth || err("radiusSouth"),
			pos.len || pos.length || err("length")
		);
	} else {
		process( pos, dir, rNorth, rSouth, len );
	}
	function process( pos, dir, radiusNorth, radiusSouth, length ){
		Vec3D.apply(self,[pos]);
		self.dir = dir.getNormalized();
		self.radiusNorth = radiusNorth;
		self.radiusSouth = radiusSouth;
		self.length = length;
	}
};

extend(Cone,Vec3D);

Cone.prototype.toMesh = function(args) {
	var opts = {
		mesh : undefined,
		steps : NaN,
		thetaOffset : 0,
		topClosed : true,
		bottomClosed : true
	};
	
		
	if ( arguments.length == 1) {
		if (typeof arguments[0] == 'object') {
			//##then it was a javascript option-object
			var optionsObject = arguments[0];
			opts.mesh = optionsObject.mesh;
			opts.steps = optionsObject.steps || optionsObject.resolution || optionsObject.res;
			opts.thetaOffset = optionsObject.thetaOffset || opts.thetaOffset;
			opts.topClosed = optionsObject.topClosed || opts.topClosed;
			opts.bottomClosed = optionsObject.bottomClosed || opts.bottomClosed;
		} else {
			opts.steps = arguments[0];
		}
	}
	else if ( arguments.length == 2 ) {
		opts.steps = arguments[0];
		opts.thetaOffset = arguments[1];
	}
	else if ( arguments.length == 5 ) {
		opts.mesh = arguments[0];
		opts.steps = arguments[1];
		opts.thetaOffset = arguments[2];
		opts.topClosed = arguments[3];
		opts.bottomClosed = arguments[4];
	}
	
	var c = this.add(0.01, 0.01, 0.01),
		n = c.cross(this.dir.getNormalized()).normalize(),
		halfAxis = this.dir.scale(this.length * 0.5),
		p = this.sub(halfAxis),
		q = this.add(halfAxis),
		south = [],
		north = [],
		phi = (Math.PI*2) / opts.steps;
	
	
	var i = 0, j=1;
	for(i=0;i<opts.steps;i++){
		var theta = i * phi + opts.thetaOffset;
		var nr = n.getRotatedAroundAxis(this.dir,theta);
			
		south[i] = nr.scale(this.radiusSouth).addSelf(p);
		north[i] = nr.scale(this.radiusNorth).addSelf(q);
	}
	
	
	var numV = opts.steps * 2 + 2,
		numF = opts.steps * 2 + (opts.topClosed ? opts.steps : 0) + (opts.bottomClosed ? opts.steps : 0),
		mesh = opts.mesh || new TriangleMesh("cone",numV,numF);

	for(i=0; i<opts.steps; i++, j++){
		if(j == opts.steps){
			j = 0;
		}
		mesh.addFace(south[i],north[i],south[j],undefined,undefined,undefined,undefined);
		mesh.addFace(south[j],north[i],north[j],undefined,undefined,undefined,undefined);
		if(opts.bottomClosed){
			mesh.addFace(p, south[i], south[j], undefined,undefined,undefined,undefined);
		}
		if(opts.topClosed){
			mesh.addFace(north[i], q, north[j], undefined,undefined,undefined,undefined);
		}
	}
	
	return mesh;
};

module.exports = Cone;



},{"../internals":120,"./Vec3D":93,"./mesh/TriangleMesh":109}],70:[function(require,module,exports){
var Line2D = require('./Line2D');
var Polygon2D = require('./Polygon2D');

    var ConvexPolygonClipper = function(polygonBounds){
        this.setBounds(polygonBounds);
    };


    ConvexPolygonClipper.prototype = {
        constructor: ConvexPolygonClipper,

        clipPolygon: function(poly){

            //make a shallow copy to a new array
            var points = poly.vertices.slice(0),
                //hold clipped points
                clipped,
                //the boundary edges of the clipping path
                boundsEdges = this.bounds.getEdges(),
                //the current Line2D of the edge to clip along
                clipEdge,
                i = 0,
                j = 0,
                _tmp,
                //point classification for testing
                sign,
                //vectors
                p,
                q;

            //add the first one as a double-entry
            points.push(points[0]);

            for( i = 0; i < boundsEdges.length; i++ ){
                clipEdge = boundsEdges[i];

                clipped = [];

                sign = clipEdge.classifyPoint(this.boundsCentroid);

                for( j = 0; j < points.length - 1; j++ ){
                    p = points[j];
                    q = points[j+1];

                    if( clipEdge.classifyPoint(p) === sign ){
                        if( clipEdge.classifyPoint(q) === sign ){
                            clipped.push(q.copy());
                        } else {
                            clipped.push(this._getClippedPosOnEdge(clipEdge, p, q));
                        }
                        continue;
                    }
                    if( clipEdge.classifyPoint(q) === sign ){
                        clipped.push(this._getClippedPosOnEdge(clipEdge, p, q));
                        clipped.push(q.copy());
                    }
                }
                //if points have been clipped, make sure the last entry is still the same
                //as the first entry
                if( clipped.length > 0 && clipped[0] !== clipped[clipped.length-1] ){
                    clipped.push(clipped[0]);
                }

                _tmp = points;
                points = clipped;
                clipped = _tmp;
            }

            return new Polygon2D(points).removeDuplicates(0.001);
        },

        getBounds: function(){
            return this.bounds;
        },

        _getClippedPosOnEdge: function(clipEdge, p, q){
            return clipEdge.intersectLine(new Line2D(p, q)).getPos();
        },

        //unused but included to match, source
        _isKnownVertex: function(list, q){
            for(var i=0, l=list.length; i<l; i++){
                if( list[i].equalsWitTolerance(q, 0.001) ){
                    return true;
                }
            }
            return false;
        },

        setBounds: function(bounds){
            this.bounds = bounds;
            this.boundsCentroid = this.bounds.getCentroid();
        }
    };



    module.exports = ConvexPolygonClipper;




},{"./Line2D":74,"./Polygon2D":79}],71:[function(require,module,exports){


var extend = require('../internals/extend'),
	has = require('../internals/has'),
	is = require('../internals/is'),
	mathUtils = require('../math/mathUtils'),
	Vec2D = require('./Vec2D');


//declared in this module
var Ellipse, Circle;

/**
 * @class defines a 2D ellipse and provides several utility methods for it.
 * @member toxi
 * @augments Vec2D
 */

Ellipse = function(a,b,c,d) {
	this.radius = new Vec2D();
	if(arguments.length === 0){
		Vec2D.apply(this,[0,0]);
		this.setRadii(1,1);
	} else if( has.XY( a ) ) {
		Vec2D.apply(this,[a.x,a.y]);
		if( has.XY( b ) ){
			this.setRadii(b.x,b.y);
		} else {
			this.setRadii(b,c);
		}
	} else {
		if(d === undefined) {
			if(c === undefined) {
				Vec2D.call(this, 0, 0 );
				this.setRadii(a,b);
			} else {
				Vec2D.call(this, a, b );
				this.setRadii(c,c);
			}
		} else {
			Vec2D.call(this, a,b);
			this.setRadii(c,d);
		}
	}
};

extend(Ellipse,Vec2D);

Ellipse.prototype.containsPoint = function(p) {
    // Immediately reject points outside the containing rectangle
    if (mathUtils.abs(p.x - this.x) > this.radius.x ||
        mathUtils.abs(p.y - this.y) > this.radius.y) {
        return false;
    }
    var foci = this.getFoci();
    return p.distanceTo(foci[0]) + p.distanceTo(foci[1]) < 2 * mathUtils.max(this.radius.x, this.radius.y);
};

/**
 * Computes the area covered by the ellipse.
 */
Ellipse.prototype.getArea = function() {
    return mathUtils.PI * this.radius.x * this.radius.y;
};

/**
 * Computes the approximate circumference of the ellipse, using this
 * equation: <code>2 * PI * sqrt(1/2 * (rx*rx+ry*ry))</code>.
 *
 * The precise value is an infinite series elliptical integral, but the
 * approximation comes sufficiently close. See Wikipedia for more details:
 *
 * http://en.wikipedia.org/wiki/Ellipse
 *
 * @return circumference
 */
Ellipse.prototype.getCircumference = function() {
    // wikipedia solution:
    // return (float) (MathUtils.PI * (3 * (radius.x + radius.y) - Math
    // .sqrt((3 * radius.x + radius.y) * (radius.x + 3 * radius.y))));
    return Math.sqrt(0.5 * this.radius.magSquared()) * mathUtils.TWO_PI;
};

/**
 * @return the focus
 */
Ellipse.prototype.getFoci = function() {
    if (this.radius.x > this.radius.y) {
        return [
            this.sub(this.focus, 0),
            this.add(this.focus, 0)
        ];
    }
    return [
        this.sub(0, this.focus),
        this.add(0, this.focus)
    ];
};

/**
 * @return the 2 radii of the ellipse as a Vec2D
 */
Ellipse.prototype.getRadii = function() {
    return this.radius.copy();
};


/**
 * Sets the radii of the ellipse to the new values.
 *
 * @param rx
 * @param ry
 * @return itself
 */
Ellipse.prototype.setRadii = function(rx,ry) {
	if( has.XY( rx ) ){
		ry = rx.y;
		rx = rx.x;
	}
    this.radius.set(rx, ry);

    if (this.radius.x > this.radius.y) {
        this.focus = Math.sqrt(this.radius.x * this.radius.x - this.radius.y * this.radius.y);
    } else {
        this.focus = Math.sqrt(this.radius.y * this.radius.y - this.radius.x * this.radius.x);
    }

    return this;
};

/**
 * Creates a {@link Polygon2D} instance of the ellipse sampling it at the
 * given resolution.
 *
 * @param res
 *            number of steps
 * @return ellipse as polygon
 */
Ellipse.prototype.toPolygon2D = function(res) {
    var Polygon2D = require('./Polygon2D');
    var poly = new Polygon2D();
    var step = mathUtils.TWO_PI / res;
    for (var i = 0; i < res; i++) {
		var v = Vec2D.fromTheta(i * step).scaleSelf(this.radius).addSelf(this);
		poly.add(v);
	}
    return poly;
};


exports = module.exports = Ellipse;

/**
 * Circle
 * @class This class overrides {@link Ellipse} to define a 2D circle and provides
 * several utility methods for it, including factory methods to construct
 * circles from points.
 * @member toxi
 * @augments Ellipse
 */
Circle = function(a,b,c) {
	if(arguments.length == 1){
		if( is.Circle( a ) ){
			Ellipse.apply(this,[a,a.radius.x]);
		} else {
			Ellipse.apply(this,[0,0,a]);
		}
	} else if(arguments.length == 2){
		Ellipse.apply(this,[a,b]);
	} else {
		Ellipse.apply(this,[a,b,c,c]);
	}
};

extend(Circle,Ellipse);





/**
 * Factory method to construct a circle which has the two given points lying
 * on its perimeter. If the points are coincident, the circle will have a
 * radius of zero.
 *
 * @param p1
 * @param p2
 * @return new circle instance
 */
Circle.from2Points = function(p1,p2) {
    var m = p1.interpolateTo(p2, 0.5);
    var distanceTo = m.distanceTo(p1);
    return new Circle(m, distanceTo);
};

/**
 * Factory method to construct a circle which has the three given points
 * lying on its perimeter. The function returns null, if the 3 points are
 * co-linear (in which case it's impossible to find a circle).
 *
 * Based on CPP code by Paul Bourke:
 * http://local.wasp.uwa.edu.au/~pbourke/geometry/circlefrom3/
 *
 * @param p1
 * @param p2
 * @param p3
 * @return new circle instance or null
 */
Circle.from3Points = function(p1,p2,p3) {
    var circle,
		deltaA = p2.sub(p1),
		deltaB = p3.sub(p2),
		centroid,
		radius;
	if (mathUtils.abs(deltaA.x) <= 0.0000001 && mathUtils.abs(deltaB.y) <= 0.0000001) {
		centroid = new Vec2D(p2.x + p3.x, p1.y + p2.y).scaleSelf(0.5);
		radius = centroid.distanceTo(p1);
		circle = new Circle(centroid, radius);
	} else {
		var aSlope = deltaA.y / deltaA.x;
		var bSlope = deltaB.y / deltaB.x;
		if (mathUtils.abs(aSlope - bSlope) > 0.0000001 && aSlope !== 0) {
			var x = (aSlope * bSlope * (p1.y - p3.y) + bSlope * (p1.x + p2.x) - aSlope * (p2.x + p3.x)) / (2 * (bSlope - aSlope));
			var y = -(x - (p1.x + p2.x) / 2) / aSlope + (p1.y + p2.y) / 2;
			centroid = new Vec2D(x, y);
			radius = centroid.distanceTo(p1);
			circle = new Circle(centroid, radius);
		}
	}
    return circle;
};


Circle.newBoundingCircle = function( vertices ){
	var origin = new Vec2D();
	var maxD = 0;
	var i = 0;
	var l = vertices.length;
	for( ; i<l; i++ ){
		origin.addSelf( vertices[i] );
	}
	origin.scaleSelf( 1 / vertices.length );
	for( i = 0; i<l; i++ ){
		var d = origin.distanceToSquared( vertices[i] );
		if( d > maxD ) {
			maxD = d;
		}
	}
	return new Circle( origin, Math.sqrt( maxD ) );
};




Circle.prototype.containsPoint = function(p) {
    return this.distanceToSquared(p) <= this.radius.x * this.radius.x;
};

Circle.prototype.getCircumference = function() {
    return mathUtils.TWO_PI * this.radius.x;
};

Circle.prototype.getRadius = function() {
    return this.radius.x;
};

Circle.prototype.getTangentPoints = function(p) {
    var m = this.interpolateTo(p, 0.5);
    return this.intersectsCircle(new Circle(m, m.distanceTo(p)));
};


Circle.prototype.intersectsCircle = function(c) {
    var res,
		delta = c.sub(this),
		d = delta.magnitude(),
		r1 = this.radius.x,
		r2 = c.radius.x;
    if (d <= r1 + r2 && d >= Math.abs(r1 - r2)) {
        var a = (r1 * r1 - r2 * r2 + d * d) / (2.0 * d);
        d = 1 / d;
        var p = this.add(delta.scale(a * d));
        var h = Math.sqrt(r1 * r1 - a * a);
        delta.perpendicular().scaleSelf(h * d);
        var i1 = p.add(delta);
        var i2 = p.sub(delta);
        res = [i1, i2 ];
    }
    return res;
};

Circle.prototype.setRadius = function(r) {
    this.setRadii(r, r);
    return this;
};


exports.Circle = Circle;



},{"../internals/extend":125,"../internals/has":127,"../internals/is":128,"../math/mathUtils":147,"./Polygon2D":79,"./Vec2D":92}],72:[function(require,module,exports){


var Vec2D = require('./Vec2D');

/**
 * @class
 * @member toxi
 */
var	IsectData2D = function(isec){
	if(isec !== undefined){
		this.isIntersection = isec.isIntersection;
		this.dist = isec.dist;
		this.pos = isec.pos.copy();
		this.dir = isec.dir.copy();
		this.normal = isec.normal.copy();
	}
	else {
		this.clear();
	}
};

IsectData2D.prototype = {
	clear: function(){
		this.isIntersection = false;
		this.dist = 0;
		this.pos = new Vec2D();
		this.dir = new Vec2D();
		this.normal = new Vec2D();
	},
	
	toString: function(){
		var s = "isec: "+this.isIntersection;
		if(this.isIntersection){
			s+= " at:"+this.pos+ " dist:"+this.dist+" normal:"+this.normal;
		}
		return s;
	}
};

module.exports = IsectData2D;


},{"./Vec2D":92}],73:[function(require,module,exports){


var Vec3D = require('./Vec3D');

/**
 * @class
 * @member toxi
 */
var	IsectData3D = function(isec){
	if(isec !== undefined){
		this.isIntersection = isec.isIntersection;
		this.dist = isec.dist;
		this.pos = isec.pos.copy();
		this.dir = isec.dir.copy();
		this.normal = isec.normal.copy();
	}
	else {
		this.clear();
	}
};

IsectData3D.prototype = {
	clear: function(){
		this.isIntersection = false;
		this.dist = 0;
		this.pos = new Vec3D();
		this.dir = new Vec3D();
		this.normal = new Vec3D();
	},
	
	toString: function(){
		var s = "isec: "+this.isIntersection;
		if(this.isIntersection){
			s += " at:"+this.pos+ " dist:"+this.dist+" normal:"+this.normal;
		}
		return s;
	}
};

module.exports = IsectData3D;


},{"./Vec3D":93}],74:[function(require,module,exports){


var	Ray2D = require('./Ray2D'),
	internals = require('../internals'),
    mathUtils = require('../math/mathUtils');


/**
 @class
 @member toxi
 */
var Line2D = function( a, b) {
	this.a = a;
	this.b = b;
};


Line2D.prototype = {
    constructor: Line2D,

    /**
     * Computes the dot product of these 2 vectors: line start -> point
     * and the perpendicular line direction if the result is negative.
     *
     * @param {Vec2D} p
     * @return classifier Number
     */
    classifyPoint: function(p){
        var normal = this.b.sub(this.a).perpendicular();
        var d = p.sub(this.a).dot(normal);
        return mathUtils.sign(d);
    },

	/**
    * Computes the closest point on this line to the point given.
    *
    * @param {Vec2D} p point to check against
    * @return closest point on the line
    */
	closestPointTo: function(p) {
		var v = this.b.sub(this.a);
		var t = p.sub(this.a).dot(v) / v.magSquared();
		// Check to see if t is beyond the extents of the line segment
		if (t < 0.0) {
			return this.a.copy();
		} else if (t > 1.0) {
			return this.b.copy();
		}
		// Return the point between 'a' and 'b'
		return this.a.add(v.scaleSelf(t));
	},

	copy: function() {
		return new Line2D(this.a.copy(), this.b.copy());
	},

    distanceToPoint: function(p){
        return this.closestPointTo(p).distanceTo(p);
    },

    distanceToPointSquared: function(p){
        return this.closestPointTo(p).distanceToSquared(p);
    },

	equals: function(obj) {
		if (this == obj) {
			return true;
		}
		if (!( internals.is.Line2D( obj ) ) ) {
			return false;
		}
		var l = obj;
		return (this.a.equals(l.a) || this.a.equals(l.b)) && (this.b.equals(l.b) || this.b.equals(l.a));
	},

	getDirection: function() {
		return this.b.sub(this.a).normalize();
	},

    getHeading: function(){
        return this.b.sub(this.a).heading();
    },

	getLength: function() {
		return this.a.distanceTo(this.b);
	},

	getLengthSquared: function() {
		return this.a.distanceToSquared(this.b);
	},

	getMidPoint: function() {
		return this.a.add(this.b).scaleSelf(0.5);
	},

	getNormal: function() {
		return this.b.sub(this.a).perpendicular();
	},

	getTheta: function() {
		return this.a.angleBetween(this.b, true);
	},

	hasEndPoint: function(p) {
		return this.a.equals(p) || this.b.equals(p);
	},

	/**
    * Computes intersection between this and the given line. The returned value
    * is a {@link LineIntersection} instance and contains both the type of
    * intersection as well as the intersection point (if existing).
    *
    * Based on: http://local.wasp.uwa.edu.au/~pbourke/geometry/lineline2d/
    *
    * @param l
    *            line to intersect with
    * @return intersection result
    */
	intersectLine: function(l) {

        var Type = Line2D.LineIntersection.Type;

		var isec,
			denom = (l.b.y - l.a.y) * (this.b.x - this.a.x) - (l.b.x - l.a.x) * (this.b.y - this.a.y),
			na = (l.b.x - l.a.x) * (this.a.y - l.a.y) - (l.b.y - l.a.y) * (this.a.x - l.a.x),
			nb = (this.b.x - this.a.x) * (this.a.y - l.a.y) - (this.b.y - this.a.y) * (this.a.x - l.a.x);
		if (denom !== 0) {
			var ua = na / denom,
				ub = nb / denom,
                vecI = this.a.interpolateTo(this.b, ua);

			if (ua >= 0.0 && ua <= 1.0 && ub >= 0.0 && ub <= 1.0) {
				isec =new Line2D.LineIntersection(Type.INTERSECTING, vecI, ua, ub);
			} else {
				isec = new Line2D.LineIntersection(Type.NON_INTERSECTING, vecI, ua, ub);
			}
		} else {
			if (na === 0 && nb === 0) {
                if( this.distanceToPoint(l.a) === 0) {
                    isec = new Line2D.LineIntersection(Type.COINCIDENT, undefined);
                } else {
                    isec = new Line2D.LineIntersection(Type.COINCIDENT_NO_INTERSECT, undefined);
                }
			} else {
				isec = new Line2D.LineIntersection(Type.PARALLEL, undefined);
			}
		}
		return isec;
	},

	offsetAndGrowBy: function(offset,scale, ref) {
		var m = this.getMidPoint();
		var d = this.getDirection();
		var n = d.getPerpendicular();
		if (ref !== undefined && m.sub(ref).dot(n) < 0) {
			n.invert();
		}
		n.normalizeTo(offset);
		this.a.addSelf(n);
		this.b.addSelf(n);
		d.scaleSelf(scale);
		this.a.subSelf(d);
		this.b.addSelf(d);
		return this;
	},

	scale: function(scale) {
		var delta = (1 - scale) * 0.5;
		var newA = this.a.interpolateTo(this.b, delta);
		this.b.interpolateToSelf(this.a, delta);
		this.a.set(newA);
		return this;
	},

	set: function(a, b) {
		this.a = a;
		this.b = b;
		return this;
	},

	splitIntoSegments: function(segments,stepLength,addFirst) {
		return Line2D.splitIntoSegments(this.a, this.b, stepLength, segments, addFirst);
	},

	toRay2D: function() {
        var Ray2D = require('./Ray2D');
		return new Ray2D(this.a.copy(), this.b.sub(this.a).normalize());
	}
};



/**
 * Splits the line between A and B into segments of the given length,
 * starting at point A. The tweened points are added to the given result
 * list. The last point added is B itself and hence it is likely that the
 * last segment has a shorter length than the step length requested. The
 * first point (A) can be omitted and not be added to the list if so
 * desired.
 *
 * @param a start point
 * @param b end point (always added to results)
 * @param stepLength desired distance between points
 * @param segments existing array list for results (or a new list, if null)
 * @param addFirst false, if A is NOT to be added to results
 * @return list of result vectors
 */
Line2D.splitIntoSegments = function(a, b, stepLength, segments, addFirst) {
	if (segments === undefined) {
		segments = [];
	}
	if (addFirst) {
		segments.push(a.copy());
	}
	var dist = a.distanceTo(b);
	if (dist > stepLength) {
		var pos = a.copy();
		var step = b.sub(a).limit(stepLength);
		while (dist > stepLength) {
			pos.addSelf(step);
			segments.push(pos.copy());
			dist -= stepLength;
		}
	}
	segments.push(b.copy());
	return segments;
};


/**
 * Internal class for LineIntersection
 * @param {Number} type one of the Line2D.LineIntersection.Type
 * @param {Vec2D} pos the intersected point
 * @param {Number} ua coefficient
 * @param {Number} ub coefficient
 */
Line2D.LineIntersection = function(type, pos, ua, ub) {
	this.type = type;
	this.pos = pos;
    this.coeff = [ua, ub];
};

Line2D.LineIntersection.prototype = {
	getPos: function(){
		return this.pos ? this.pos.copy() : undefined;
	},

    getCoefficients: function(){
        return this.coeff;
    },

	getType: function(){
		return this.type;
	},

	toString: function(){
		return "type: "+this.type+ " pos: "+this.pos;
	}
};

Line2D.LineIntersection.Type = {
    COINCIDENT: 0,
	COINCIDENT_NO_INTERSECT: 4,
    PARALLEL: 1,
    NON_INTERSECTING: 2,
	INTERSECTING: 3,
};


module.exports = Line2D;


},{"../internals":120,"../math/mathUtils":147,"./Ray2D":81}],75:[function(require,module,exports){


var mathUtils = require('../math/mathUtils'),
    Ray3D = require('./Ray3D');

/**
 @class
 @member toxi
 */
var Line3D = function(vec_a, vec_b) {
    this.a = vec_a;
    this.b = vec_b;
};

Line3D.prototype = {
    constructor: Line3D,
    closestLineTo: function(l) {

        var p43 = l.a.sub(l.b);
        if (p43.isZeroVector()) {
            return new Line3D.LineIntersection(Line3D.LineIntersection.Type.NON_INTERSECTING);
        }

        var p21 = this.b.sub(this.a);
        if (p21.isZeroVector()) {
            return new Line3D.LineIntersection(Line3D.LineIntersection.Type.NON_INTERSECTING);
        }
        var p13 = this.a.sub(l.a);

        var d1343 = p13.x * p43.x + p13.y * p43.y + p13.z * p43.z;
        var d4321 = p43.x * p21.x + p43.y * p21.y + p43.z * p21.z;
        var d1321 = p13.x * p21.x + p13.y * p21.y + p13.z * p21.z;
        var d4343 = p43.x * p43.x + p43.y * p43.y + p43.z * p43.z;
        var d2121 = p21.x * p21.x + p21.y * p21.y + p21.z * p21.z;

        var denom = d2121 * d4343 - d4321 * d4321;
        if (Math.abs(denom) < mathUtils.EPS) {
            return new Line3D.LineIntersection(Line3D.LineIntersection.Type.NON_INTERSECTING);
        }
        var numer = d1343 * d4321 - d1321 * d4343;
        var mua = numer / denom;
        var mub = (d1343 + d4321 * mua) / d4343;

        var pa = this.a.add(p21.scaleSelf(mua));
        var pb = l.a.add(p43.scaleSelf(mub));
        return new Line3D.LineIntersection(Line3D.LineIntersection.Type.INTERSECTING, new Line3D(pa, pb), mua,mub);
    },

    /**
    * Computes the closest point on this line to the given one.
    *
    * @param p
    *            point to check against
    * @return closest point on the line
    */
    closestPointTo: function(p) {
        var v = this.b.sub(this.a);
        var t = p.sub(this.a).dot(v) / v.magSquared();
        // Check to see if t is beyond the extents of the line segment
        if (t < 0.0) {
            return this.a.copy();
        } else if (t > 1.0) {
            return this.b.copy();
        }
        // Return the point between 'a' and 'b'
        return this.a.add(v.scaleSelf(t));
    },

    copy: function() {
        return new Line3D(this.a.copy(), this.b.copy());
    },

    equals: function(obj) {
        if (this == obj) {
            return true;
        }
        if ((typeof(obj) != Line3D)) {
            return false;
        }
        return (this.a.equals(obj.a) || this.a.equals(l.b)) && (this.b.equals(l.b) || this.b.equals(l.a));
    },

    getDirection: function() {
        return this.b.sub(this.a).normalize();
    },

    getLength: function() {
        return this.a.distanceTo(this.b);
    },

    getLengthSquared: function() {
        return this.a.distanceToSquared(this.b);
    },

    getMidPoint: function() {
        return this.a.add(this.b).scaleSelf(0.5);
    },

    getNormal: function() {
        return this.b.cross(this.a);
    },

    hasEndPoint: function(p) {
        return this.a.equals(p) || this.b.equals(p);
    },


    offsetAndGrowBy: function(offset,scale,ref) {
        var m = this.getMidPoint(),
            d = this.getDirection(),
            n = this.a.cross(d).normalize();
        if (ref !== undefined && m.sub(ref).dot(n) < 0) {
            n.invert();
        }
        n.normalizeTo(offset);
        this.a.addSelf(n);
        this.b.addSelf(n);
        d.scaleSelf(scale);
        this.a.subSelf(d);
        this.b.addSelf(d);
        return this;
    },

    set: function(vec_a, vec_b) {
        this.a = vec_a;
        this.b = vec_b;
        return this;
    },

    splitIntoSegments: function(segments,stepLength, addFirst) {
        return Line3D.splitIntoSegments(this.a, this.b, stepLength, segments, addFirst);
    },

    toRay3D: function(){
        return new Ray3D( this.a.copy(), this.getDirection() );
    },

    toString: function() {
        return this.a.toString() + " -> " + this.b.toString();
    }
};

/**
    * Splits the line between A and B into segments of the given length,
    * starting at point A. The tweened points are added to the given result
    * list. The last point added is B itself and hence it is likely that the
    * last segment has a shorter length than the step length requested. The
    * first point (A) can be omitted and not be added to the list if so
    * desired.
    *
    * @param a
    *            start point
    * @param b
    *            end point (always added to results)
    * @param stepLength
    *            desired distance between points
    * @param segments
    *            existing array list for results (or a new list, if null)
    * @param addFirst
    *            false, if A is NOT to be added to results
    * @return list of result vectors
    */
Line3D.splitIntoSegments = function(vec_a, vec_b, stepLength, segments, addFirst) {
    if (segments === undefined) {
        segments = [];
    }
    if (addFirst) {
        segments.push(vec_a.copy());
    }
    var dist = vec_a.distanceTo(vec_b);
    if (dist > stepLength) {
        var pos = vec_a.copy();
        var step = vec_b.sub(vec_a).limit(stepLength);
        while (dist > stepLength) {
            pos.addSelf(step);
            segments.push(pos.copy());
            dist -= stepLength;
        }
    }
    segments.push(vec_b.copy());
    return segments;
};


Line3D.LineIntersection = function(type,line,mua,mub){
    this.type = type;
    if(mua === undefined){ mua = 0; }
    if(mub === undefined){ mub = 0; }
    this.line = line;
    this.coeff = [mua,mub];
};

Line3D.LineIntersection.prototype = {

    getCoefficient: function(){
        return this.coeff;
    },

    getLength: function(){
        if(this.line === undefined){ return undefined; }
        return this.line.getLength();
    },

    getLine: function(){
        if(this.line === undefined){ return undefined; }
        return this.line.copy();
    },

    getType: function(){
        return this.type;
    },

    isIntersectionInside: function(){
        return this.type == Line3D.LineIntersection.Type.INTERSECTING && this.coeff[0] >= 0 && this.coeff[0] <= 1 && this.coeff[1] >=0 && this.coeff[1] <= 1;
    },

    toString: function(){
        return "type: "+this.type+ " line: "+this.line;
    }
};

Line3D.LineIntersection.Type = {
    NON_INTERSECTING: 0,
    INTERSECTING: 1
};

module.exports = Line3D;



},{"../math/mathUtils":147,"./Ray3D":82}],76:[function(require,module,exports){


	var Vec3D = require('./vectors').Vec3D,
		Line3D = require('./Line3D'),
		hasXYZ = require('../internals/has').XYZ,
		Iterator = require('../internals/Iterator');

	/**
	* construct a LineStrip3D
	* @constructor
	* @param {Vec3D[]} [vertices] optional vertices to start with
	*/
	var LineStrip3D = function( vertices ){
		this.vertices = vertices || [];
	};

	LineStrip3D.prototype = {
		constructor: LineStrip3D,
		/**
		* add a vector to the line-strip, it will always be a copy
		* @param {Vec3D | Number } x either a Vec3D or an x coordinate
		* @param {Number} [y]
		* @param {Number} [z]
		* @return itself
		*/
		add: function( x, y, z ){
			if( hasXYZ( x ) ){
				//it was 1 param, it was a vector or object
				this.vertices.push( new Vec3D(x) );
			} else {
				this.vertices.push( new Vec3D(x,y,z) );
			}
			return this;
		},
		get: function( i ){
			if( i < 0 ){
				i += this.vertices.length;
			}
			return this.vertices[i];
		},
		/**
		* Computes a list of points along the spline which are uniformly separated
		* by the given step distance.
		*
		* @param {Number} step
		* @param {Boolean} [doAddFinalVertex] true by default
		* @return {Vec3D[]} point list
		*/
		getDecimatedVertices: function( step, doAddFinalVertex ){
			if( doAddFinalVertex !== false ){
				doAddFinalVertex = true;
			}
			var uniform = [];
			if( this.vertices.length < 3 ){
				if( this.vertices.length === 2 ){
					new Line3D( this.vertices[0], this.vertices[1])
						.splitIntoSegments( uniform, step, true );
					if( !doAddFinalVertex ){
						uniform.pop();
					}
				} else {
					return;
				}
			}
			var arcLen = this.getEstimatedArcLength(),
				delta = step / arcLen,
				currIdx = 0,
				currT,
				t,
				p,
				q,
				frac,
				i;

			for( t = 0; t<1.0; t+=delta ){
				currT = t * arcLen;
				while( currT >= this.arcLenIndex[currIdx] ){
					currIdx++;
				}
				p = this.get(currIdx-1);
				q = this.get(currIdx);
				frac = ((currT-this.arcLenIndex[currIdx-1]) / (this.arcLenIndex[currIdx] - this.arcLenIndex[currIdx-1]) );
				i = p.interpolateTo( q, frac );
				uniform.push( i );
			}
			if( doAddFinalVertex ){
				uniform.push( this.get(-1).copy() );
			}
			return uniform;
		},
		getEstimatedArcLength: function(){
			if( this.arcLenIndex === undefined || this.arcLenIndex.length !== this.vertices.length ){
				this.arcLenIndex = [0];
			}
			var arcLen = 0,
				p,
				q;
			for( var i=1, l = this.vertices.length; i<l; i++){
				p = this.vertices[i-1];
				q = this.vertices[i];
				arcLen += p.distanceTo(q);
				//this will start at index 1
				this.arcLenIndex[i] = arcLen;
			}
			return arcLen;
		},
		getSegments: function(){
			var i = 1,
				num = this.vertices.length,
				segments = [];
			for( ; i<num; i++ ){
				segments.push( new Line3D(this.get(i-1), this.get(i)) );
			}
			return segments;
		},
		getVertices: function(){
			return vertices;
		},
		iterator: function(){
			return new Iterator( this.vertices );
		},
		setVertices: function( vertices ){
			this.vertices = vertices;
		}
	};

	module.exports = LineStrip3D;


},{"../internals/Iterator":121,"../internals/has":127,"./Line3D":75,"./vectors":118}],77:[function(require,module,exports){


var mathUtils = require('../math/mathUtils'),
    internals = require('../internals'),
	Vec3D = require('./Vec3D');


/**
 * @description Implements a simple row-major 4x4 matrix class, all matrix operations are
 * applied to new instances. Use {@link #transpose()} to convert from
 * column-major formats...
 * @exports Matrix4x4 as toxi.Matrix4x4
 * @constructor
 */
var Matrix4x4 = function(v11,v12,v13,v14,v21,v22,v23,v24,v31,v32,v33,v34,v41,v42,v43,v44){
	this.temp = [];
	this.matrix = [];
	var self = this;
	if(arguments.length === 0) { //if no variables were supplied
		this.matrix[0] = [1,0,0,0];
		this.matrix[1] = [0,1,0,0];
		this.matrix[2] = [0,0,1,0];
		this.matrix[3] = [0,0,0,1];
	} else if(typeof(v11) == 'number'){ //if the variables were numbers
		var m1 = [v11,v12,v13,v14];
		var m2 = [v21,v22,v23,v24];
		var m3 = [v31,v32,v33,v34];
		var m4 = [v41,v42,v43,v44];
		this.matrix = [m1,m2,m3,m4];
	} else if( internals.is.Array( v11 ) ){ //if it was sent in as one array
		var array = v11;
		if (array.length != 9 && array.length != 16) {
			throw new Error("Matrix4x4: Array length must == 9 or 16");
		}
		if (array.length == 16) {
			this.matrix = [];
			this.matrix[0] = array.slice(0,4);
			this.matrix[1] = array.slice(4,8);
			this.matrix[2] = array.slice(8,12);
			this.matrix[3] = array.slice(12);
		} else {
			this.matrix[0] = array.slice(0,3);
			this.matrix[0][3] = NaN;
			this.matrix[1] = array.slice(3,6);
			this.matrix[1][3] = NaN;
			this.matrix[2] = array.slice(6,9);
			this.matrix[2][3] = NaN;
			this.matrix[3] = [NaN,NaN,NaN,NaN];
		}
	} else if( internals.is.Matrix4x4( v11 ) ){

	//else it should've been a Matrix4x4 that was passed in
		var m = v11,
			i = 0,
			j = 0,
			lenM,
			lenMM;

		if(m.matrix.length == 16){
			for(i=0;i<4;i++){
				this.matrix[i] = [m.matrix[i][0], m.matrix[i][1],m.matrix[i][2],m.matrix[i][3]];
			}
		} else {
			if(m.matrix.length == 4){
				lenM = m.matrix.length;
				for(i = 0; i < lenM; i++){
					lenMM = m.matrix[i].length;
					self.matrix[i] = [];
					for(j = 0; j < lenMM; j++){
						self.matrix[i][j] = m.matrix[i][j];
					}
				}
			}
			/*console.log("m.matrix.length: "+m.matrix.length);
			//should be a length of 9
			for(i=0;i<3;i++){
				this.matrix[i] = [m.matrix[i][0], m.matrix[i][1],m.matrix[i][2],NaN];
			}
			this.matrix[3] = [NaN,NaN,NaN,NaN];*/
		}
	} else {
		console.error("Matrix4x4: incorrect parameters used to construct new instance");
	}
};

Matrix4x4.prototype = {
	add: function(rhs) {
        var result = new Matrix4x4(this);
        return result.addSelf(rhs);
    },

    addSelf: function(m) {
        for (var i = 0; i < 4; i++) {
            var mi = this.matrix[i];
            var rhsm = m.matrix[i];
            mi[0] += rhsm[0];
            mi[1] += rhsm[1];
            mi[2] += rhsm[2];
            mi[3] += rhsm[3];
        }
        return this;
    },

    /**
     * Creates a copy of the given vector, transformed by this matrix.
     *
     * @param v
     * @return transformed vector
     */
    applyTo: function(v) {
        return this.applyToSelf(new Vec3D(v));
    },

    applyToSelf: function(v) {
        for (var i = 0; i < 4; i++) {
            var m = this.matrix[i];
            this.temp[i] = v.x * m[0] + v.y * m[1] + v.z * m[2] + m[3];
        }
        v.set(this.temp[0], this.temp[1], this.temp[2]).scaleSelf((1.0 / this.temp[3]));
        return v;
    },

    copy: function() {
        return new Matrix4x4(this);
    },

    getInverted: function() {
        return new Matrix4x4(this).invert();
    },

    getRotatedAroundAxis: function(axis,theta) {
        return new Matrix4x4(this).rotateAroundAxis(axis, theta);
    },

    getRotatedX: function(theta) {
        return new Matrix4x4(this).rotateX(theta);
    },

    getRotatedY: function(theta) {
        return new Matrix4x4(this).rotateY(theta);
    },

    getRotatedZ: function(theta) {
        return new Matrix4x4(this).rotateZ(theta);
    },

    getTransposed: function() {
        return new Matrix4x4(this).transpose();
    },

    identity: function() {
        var m = this.matrix[0];
        m[1] = m[2] = m[3] = 0;
        m = this.matrix[1];
        m[0] = m[2] = m[3] = 0;
        m = this.matrix[2];
        m[0] = m[1] = m[3] = 0;
        m = this.matrix[3];
        m[0] = m[1] = m[2] = 0;
        this.matrix[0][0] = 1;
        this.matrix[1][1] = 1;
        this.matrix[2][2] = 1;
        this.matrix[3][3] = 1;
        return this;
    },

    /**
     * Matrix Inversion using Cramer's Method Computes Adjoint matrix divided by
     * determinant Code modified from
     * http://www.intel.com/design/pentiumiii/sml/24504301.pdf
     *
     * @return itself
     */
	invert: function() {
        var tmp = [], //12
			src = [], //16
			dst = [], //16
			mat = this.toArray(),
			i = 0;

        for (i = 0; i < 4; i++) {
            var i4 = i << 2;
            src[i] = mat[i4];
            src[i + 4] = mat[i4 + 1];
            src[i + 8] = mat[i4 + 2];
            src[i + 12] = mat[i4 + 3];
        }

        // calculate pairs for first 8 elements (cofactors)
        tmp[0] = src[10] * src[15];
        tmp[1] = src[11] * src[14];
        tmp[2] = src[9] * src[15];
        tmp[3] = src[11] * src[13];
        tmp[4] = src[9] * src[14];
        tmp[5] = src[10] * src[13];
        tmp[6] = src[8] * src[15];
        tmp[7] = src[11] * src[12];
        tmp[8] = src[8] * src[14];
        tmp[9] = src[10] * src[12];
        tmp[10] = src[8] * src[13];
        tmp[11] = src[9] * src[12];

        // calculate first 8 elements (cofactors)
        var src0 = src[0],
			src1 = src[1],
			src2 = src[2],
			src3 = src[3],
			src4 = src[4],
			src5 = src[5],
			src6 = src[6],
			src7 = src[7];
		dst[0] = tmp[0] * src5 + tmp[3] * src6 + tmp[4] * src7;
		dst[0] -= tmp[1] * src5 + tmp[2] * src6 + tmp[5] * src7;
		dst[1] = tmp[1] * src4 + tmp[6] * src6 + tmp[9] * src7;
		dst[1] -= tmp[0] * src4 + tmp[7] * src6 + tmp[8] * src7;
		dst[2] = tmp[2] * src4 + tmp[7] * src5 + tmp[10] * src7;
		dst[2] -= tmp[3] * src4 + tmp[6] * src5 + tmp[11] * src7;
		dst[3] = tmp[5] * src4 + tmp[8] * src5 + tmp[11] * src6;
		dst[3] -= tmp[4] * src4 + tmp[9] * src5 + tmp[10] * src6;
		dst[4] = tmp[1] * src1 + tmp[2] * src2 + tmp[5] * src3;
		dst[4] -= tmp[0] * src1 + tmp[3] * src2 + tmp[4] * src3;
		dst[5] = tmp[0] * src0 + tmp[7] * src2 + tmp[8] * src3;
		dst[5] -= tmp[1] * src0 + tmp[6] * src2 + tmp[9] * src3;
		dst[6] = tmp[3] * src0 + tmp[6] * src1 + tmp[11] * src3;
		dst[6] -= tmp[2] * src0 + tmp[7] * src1 + tmp[10] * src3;
		dst[7] = tmp[4] * src0 + tmp[9] * src1 + tmp[10] * src2;
		dst[7] -= tmp[5] * src0 + tmp[8] * src1 + tmp[11] * src2;

        // calculate pairs for second 8 elements (cofactors)
		tmp[0] = src2 * src7;
		tmp[1] = src3 * src6;
		tmp[2] = src1 * src7;
		tmp[3] = src3 * src5;
		tmp[4] = src1 * src6;
		tmp[5] = src2 * src5;
		tmp[6] = src0 * src7;
		tmp[7] = src3 * src4;
		tmp[8] = src0 * src6;
		tmp[9] = src2 * src4;
		tmp[10] = src0 * src5;
		tmp[11] = src1 * src4;

        // calculate second 8 elements (cofactors)
		src0 = src[8];
		src1 = src[9];
		src2 = src[10];
		src3 = src[11];
		src4 = src[12];
		src5 = src[13];
		src6 = src[14];
		src7 = src[15];
		dst[8] = tmp[0] * src5 + tmp[3] * src6 + tmp[4] * src7;
		dst[8] -= tmp[1] * src5 + tmp[2] * src6 + tmp[5] * src7;
		dst[9] = tmp[1] * src4 + tmp[6] * src6 + tmp[9] * src7;
		dst[9] -= tmp[0] * src4 + tmp[7] * src6 + tmp[8] * src7;
		dst[10] = tmp[2] * src4 + tmp[7] * src5 + tmp[10] * src7;
		dst[10] -= tmp[3] * src4 + tmp[6] * src5 + tmp[11] * src7;
		dst[11] = tmp[5] * src4 + tmp[8] * src5 + tmp[11] * src6;
		dst[11] -= tmp[4] * src4 + tmp[9] * src5 + tmp[10] * src6;
		dst[12] = tmp[2] * src2 + tmp[5] * src3 + tmp[1] * src1;
		dst[12] -= tmp[4] * src3 + tmp[0] * src1 + tmp[3] * src2;
		dst[13] = tmp[8] * src3 + tmp[0] * src0 + tmp[7] * src2;
		dst[13] -= tmp[6] * src2 + tmp[9] * src3 + tmp[1] * src0;
		dst[14] = tmp[6] * src1 + tmp[11] * src3 + tmp[3] * src0;
		dst[14] -= tmp[10] * src3 + tmp[2] * src0 + tmp[7] * src1;
		dst[15] = tmp[10] * src2 + tmp[4] * src0 + tmp[9] * src1;
		dst[15] -= tmp[8] * src1 + tmp[11] * src2 + tmp[5] * src0;

		var det = 1.0 / (src[0] * dst[0] + src[1] * dst[1] + src[2] * dst[2] + src[3] * dst[3]);
		for (i = 0, k = 0; i < 4; i++) {
			var m = this.matrix[i];
			for (var j = 0; j < 4; j++) {
				m[j] = dst[k++] * det;
			}
		}
		return this;
    },

    multiply: function(a) {
		if(typeof(a) == "number"){
			return new Matrix4x4(this).multiply(a);
		}
		//otherwise it should be a Matrix4x4
		return new Matrix4x4(this).multiplySelf(a);
    },

    multiplySelf: function(a) {
		var i = 0,
			m;
		if(typeof(a) == "number"){
			for (i = 0; i < 4; i++) {
				m = this.matrix[i];
				m[0] *= a;
				m[1] *= a;
				m[2] *= a;
				m[3] *= a;
			}
			return this;
		}
		//otherwise it should be a matrix4x4
		var mm0 = a.matrix[0],
			mm1 = a.matrix[1],
			mm2 = a.matrix[2],
			mm3 = a.matrix[3];
        for (i = 0; i < 4; i++) {
            m = this.matrix[i];
            for (var j = 0; j < 4; j++) {
                this.temp[j] = m[0] * mm0[j] + m[1] * mm1[j] + m[2] * mm2[j] + m[3] * mm3[j];
            }
            m[0] = this.temp[0];
            m[1] = this.temp[1];
            m[2] = this.temp[2];
            m[3] = this.temp[3];
        }
        return this;
    },
    /**
     * Applies rotation about arbitrary axis to matrix
     *
     * @param axis
     * @param theta
     * @return rotation applied to this matrix
     */
    rotateAroundAxis: function(axis, theta) {
        var x, y, z, s, c, t, tx, ty;
        x = axis.x;
        y = axis.y;
        z = axis.z;
        s = Math.sin(theta);
        c = Math.cos(theta);
        t = 1 - c;
        tx = t * x;
        ty = t * y;
		_TEMP.set(
			tx * x + c, tx * y + s * z, tx * z - s * y, 0, tx * y - s * z,
			ty * y + c, ty * z + s * x, 0, tx * z + s * y, ty * z - s * x,
			t * z * z + c, 0, 0, 0, 0, 1
		);
        return this.multiplySelf(_TEMP);
    },

    /**
     * Applies rotation about X to this matrix.
     *
     * @param theta
     *            rotation angle in radians
     * @return itself
     */
    rotateX: function(theta) {
        _TEMP.identity();
        _TEMP.matrix[1][1] = _TEMP.matrix[2][2] = Math.cos(theta);
        _TEMP.matrix[2][1] = Math.sin(theta);
        _TEMP.matrix[1][2] = -_TEMP.matrix[2][1];
        return this.multiplySelf(_TEMP);
    },

    /**
     * Applies rotation about Y to this matrix.
     *
     * @param theta
     *            rotation angle in radians
     * @return itself
     */
    rotateY: function(theta) {
        _TEMP.identity();
        _TEMP.matrix[0][0] = _TEMP.matrix[2][2] = Math.cos(theta);
        _TEMP.matrix[0][2] = Math.sin(theta);
        _TEMP.matrix[2][0] = -_TEMP.matrix[0][2];
        return this.multiplySelf(_TEMP);
    },

    // Apply Rotation about Z to Matrix
    rotateZ: function(theta) {
        _TEMP.identity();
        _TEMP.matrix[0][0] = _TEMP.matrix[1][1] = Math.cos(theta);
        _TEMP.matrix[1][0] = Math.sin(theta);
        _TEMP.matrix[0][1] = -_TEMP.matrix[1][0];
        return this.multiplySelf(_TEMP);
    },

    scale: function(a,b,c) {
		return new Matrix4x4(this).scaleSelf(a,b,c);
    },

    scaleSelf: function(a,b,c) {
		if( internals.has.XYZ( a ) ){
			b = a.y;
			c = a.z;
			a = a.x;
		} else if(b === undefined || c === undefined) {
			b = a;
			c = a;
		}
        _TEMP.identity();
        _TEMP.matrix[0][0] = a;
        _TEMP.matrix[1][1] = b;
        _TEMP.matrix[2][2] = c;
        return this.multiplySelf(_TEMP);
    },

	set: function(a,b,c, d, e,f,g, h, i, j, k, l, m, n, o, p) {
		var mat;
		if(typeof(a) == "number"){
			mat = this.matrix[0];
			mat[0] = a;
			mat[1] = b;
			mat[2] = c;
			mat[3] = d;
			mat = this.matrix[1];
			mat[0] = e;
			mat[1] = f;
			mat[2] = g;
			mat[3] = h;
			mat = this.matrix[2];
			mat[0] = i;
			mat[1] = j;
			mat[2] = k;
			mat[3] = l;
			mat = this.matrix[3];
			mat[0] = m;
			mat[1] = n;
			mat[2] = o;
			mat[3] = p;
		} else {
			//it must be a matrix4x4
			for (var it_n = 0; it_n < 4; it_n++) {
	            mat = this.matrix[it_n];
				var mat_n = mat.matrix[it_n];
				mat[0] = mat_n[0];
				mat[1] = mat_n[1];
				mat[2] = mat_n[2];
				mat[3] = mat_n[3];
			}
		}
		return this;
    },

    setFrustrum: function(left,right,top,bottom,near,far){
    	var rl = (right - left),
    		tb = (top - bottom),
    		fn = (far - near);


    	return this.set(
    		(2.0 * near) / rl,
    		0,
    		(left + right) / rl,
    		0,
    		0,
    		(2.0 * near) / tb,
    		(top + bottom) / tb,
    		0,
    		0,
    		0,
    		-(near + far) / fn,
    		(-2 * near * far) / fn,
    		0,
    		0,
    		-1,
    		0
    	);
    },

    setOrtho: function(left,right,top,bottom,near,far){
    	var mat = [
    		2.0 / (right - left),
    		0,
    		0,
    		(left + right) / (right - left),
            0,
            2.0 / (top - bottom),
            0,
            (top + bottom) / (top - bottom),
            0,
            0,
            -2.0 / (far - near),
            (far + near) / (far - near),
            0,
            0,
            0,
            1
    	];

    	return this.set.apply(this,mat);
    },

    setPerspective: function(fov,aspect,near,far){
    	var y = near * Math.tan(0.5 * mathUtils.radians(fov)),
    		x = aspect * y;
    	return this.setFrustrum(-x,x,y,-y,near,far);
    },

    setPosition: function(x,y,z){
    	this.matrix[0][3] = x;
    	this.matrix[1][3] = y;
    	this.matrix[2][3] = z;
    	return this;
    },

    setScale: function(sX,sY,sZ){
    	this.matrix[0][0] = sX;
    	this.matrix[1][1] = sY;
    	this.matrix[2][2] = sZ;
    	return this;
    },


    sub: function(m) {
		return new Matrix4x4(this).subSelf(m);
    },

    subSelf: function(mat) {
        for (var i = 0; i < 4; i++) {
            var m = this.matrix[i];
            var n = mat.matrix[i];
            m[0] -= n[0];
            m[1] -= n[1];
            m[2] -= n[2];
            m[3] -= n[3];
        }
        return this;
    },

    /**
     * Copies all matrix elements into an linear array.
     *
     * @param result
     *            array (or null to create a new one)
     * @return matrix as 16 element array
     */
    toArray: function(result) {
        if (result === undefined) {
            result = [];
        }
        for (var i = 0, k = 0; i < 4; i++) {
            var m = this.matrix[i];
            for (var j = 0; j < 4; j++) {
                result[k++] = m[j];
            }
        }
        return result;
    },

    toFloatArray:function(result) {
        return new Float32Array(this.toArray(result));
    },

    /*
     * (non-Javadoc)
     *
     * @see java.lang.Object#toString()
     */
    toString: function() {
        return "| " + this.matrix[0][0] + " " + this.matrix[0][1] + " " + this.matrix[0][2] + " " + this.matrix[0][3] + " |\n" + "| " + this.matrix[1][0] + " " + this.matrix[1][1] + " " + this.matrix[1][2] + " " + this.matrix[1][3] + " |\n" + "| " + this.matrix[2][0] + " " + this.matrix[2][1] + " " + this.matrix[2][2] + " " + this.matrix[2][3] + " |\n" + "| " + this.matrix[3][0] + " " + this.matrix[3][1] + " " + this.matrix[3][2] + " " + this.matrix[3][3] + " |";
    },

    toTransposedFloatArray: function(result) {
        if (result === undefined) {
            result = [];
        }
        for (var i = 0, k = 0; i < 4; i++) {
            for (var j = 0; j < 4; j++) {
                result[k++] = this.matrix[j][i];
            }
        }
        return result;
    },

    translate: function(dx,dy,dz) {
		return new Matrix4x4(this).translateSelf(dx, dy, dz);
    },

    translateSelf: function( dx, dy, dz) {
		if( internals.has.XYZ( dx ) ){
			dy = dx.y;
			dz = dx.z;
			dx = dx.x;
		}
		_TEMP.identity();
		_TEMP.setPosition(dx,dy,dz);
		return this.multiplySelf(_TEMP);
    },

    /**
     * Converts the matrix (in-place) between column-major to row-major order
     * (and vice versa).
     *
     * @return itself
     */
    transpose: function() {
        return this.set(
			this.matrix[0][0], this.matrix[1][0], this.matrix[2][0], this.matrix[3][0],
			this.matrix[0][1], this.matrix[1][1], this.matrix[2][1], this.matrix[3][1],
			this.matrix[0][2], this.matrix[1][2], this.matrix[2][2], this.matrix[3][2],
			this.matrix[0][3], this.matrix[1][3], this.matrix[2][3], this.matrix[3][3]
		);
	}
};

//private temp matrix
var _TEMP = new Matrix4x4();

module.exports = Matrix4x4;



},{"../internals":120,"../math/mathUtils":147,"./Vec3D":93}],78:[function(require,module,exports){


    var extend = require('../internals').extend,
        mathUtils = require('../math/mathUtils'),
        Ray3D = require('./Ray3D'),
        vectors = require('./vectors'),
        Vec3D = vectors.Vec3D,
        Vec2D = vectors.Vec2D,
        TriangleMesh = require('./mesh/TriangleMesh');

    /**
    * @class
    * @member toxi
    * @augments Vec3D
    */
    var	Plane = function(tri_or_origin,norm) {
        var origin, normal;
        if(arguments.length === 0){
            origin = new Vec3D();
            normal = Vec3D.Y_AXIS.copy();
        } else if(arguments.length == 1){ //it should've been a Triangle
            origin = arguments[0].computeCentroid();
            normal = arguments[0].computeNormal();
        } else { //Vec3D, Vec3D
            origin = arguments[0];
            normal = arguments[1].getNormalized();
        }
        Vec3D.apply(this,[origin]);
        this.normal = normal;
    };
    extend(Plane,Vec3D);
    Plane.Classifier = {
        FRONT: "front",
        BACK: "back",
        ON_PLANE: "on plane"
    };
    Plane.XY = new Plane(new Vec3D(), Vec3D.Z_AXIS);
    Plane.XZ = new Plane(new Vec3D(), Vec3D.Y_AXIS);
    Plane.YZ = new Plane(new Vec3D(), Vec3D.X_AXIS);


    /**
    * Classifies the relative position of the given point to the plane using
    * the given tolerance.
    * @return One of the 3 classification types: FRONT, BACK, ON_PLANE
    */
    Plane.prototype.classifyPoint = function(p, tolerance){
        var d = this.sub(p).normalize().dot(this.normal);
        if( d < -tolerance){
            return Plane.Classifier.FRONT;
        } else if( d > tolerance){
            return Plane.Classifier.BACK;
        }
        return Plane.Classifier.ON_PLANE;
    };

    Plane.prototype.containsPoint = function(p){
        return this.classifyPoint(p, mathUtils.EPS) == Plane.Classifier.ON_PLANE;
    };

    Plane.prototype.getDistanceToPoint = function(p){
        var sn = this.normal.dot(p.sub(this)),
            sd = this.normal.magSquared(),
            isec = p.add(this.normal.scale(sn / sd));
            return isec.distanceTo(p);
    };

    Plane.prototype.getIntersectionWithRay = function(r){
        var denom = this.normal.dot(r.getDirection()),
            u;
        if(denom > mathUtils.EPS){
            u = this.normal.dot(this.sub(r)) / denom;
            return r.getPointAtDistance(u);
        } else {
            return undefined;
        }
    };

    Plane.prototype.getProjectedPoint = function(p){
        var dir, proj;
        if(this.normal.dot(this.sub(p)) < 0){
            dir = this.normal.getInverted();
        } else {
            dir = this.normal;
        }
        proj = new Ray3D(p,dir).getPointAtDistance(this.getDistanceToPoint(p));
        return proj;
    };
    /**
    * Calculates the distance of the vector to the given plane in the specified
    * direction. A plane is specified by a 3D point and a normal vector
    * perpendicular to the plane. Normalized directional vectors expected (for
    * rayDir and planeNormal).
    *
    * @param {Ray3D} ray intersection ray
    * @return {Number} distance to plane in world units, -1 if no intersection.
    */

    Plane.prototype.intersectRayDistance = function(ray){
        var d = this.normal.dot(this),
            numer = this.normal.dot(ray) + d,
            denom = this.normal.dot(ray.dir);

            //normal is orthogonal to vector, cant intersect
            if(mathUtils.abs(denom) < mathUtils.EPS){
                return -1;
            }
            return - (numer / denom);
    };

    /**
    * Creates a TriangleMesh representation of the plane as a finite, squared
    * quad of the requested size, centred around the current plane point.
    * @param {TriangleMesh} mesh (optional)
    * @param size desired edge length
    * @return mesh
    */
    Plane.prototype.toMesh = function( mesh, size ){
        if( arguments.length === 1 && typeof arguments[0] == 'number' ){
            size = mesh;
            mesh = null;
        }
        mesh = mesh || new TriangleMesh("plane", 4, 2);
        var p = this.equalsWithTolerance(Vec3D.ZERO, 0.01) ? this.add(0.01, 0.01, 0.01) : this;
        size *= 0.5;
        var n = p.cross(this.normal).normalizeTo(size),
            m = n.cross(this.normal).normalizeTo(size),
            a = this.add(n).addSelf(m),
            b = this.add(n).subSelf(m),
            c = this.sub(n).subSelf(m),
            d = this.sub(n).addSelf(m);

        mesh.addFace(a, d, b, undefined, undefined, undefined, undefined);
        mesh.addFace(b, d, c, undefined, undefined, undefined, undefined);
        return mesh;
    };


    module.exports = Plane;




},{"../internals":120,"../math/mathUtils":147,"./Ray3D":82,"./mesh/TriangleMesh":109,"./vectors":118}],79:[function(require,module,exports){
var MathUtils = require('../math/mathUtils');
var Vec2D = require('./Vec2D');
var Line2D = require('./Line2D');
var Circle = require('./Circle');
var Rect = require('./Rect');
var TriangleMesh = require('./mesh/TriangleMesh');
var has = require('../internals/has');
var is = require('../internals/is');

    /**
    * @class
    * @member toxi
    * @param {Array<Vec2D>|Vec2D...} [points] optionally provide points for the polygon
    */
    var Polygon2D = function(){
        this.vertices = [];
        var i,l;
        if(arguments.length > 1){ //comma-separated Vec2D's were passed in
            for(i=0, l = arguments.length;i<l;i++){
                this.add(arguments[i].copy());
            }
        } else if(arguments.length == 1){
            var arg = arguments[0];
            if( is.Array( arg ) ){ // if it was an array of points
                for(i=0,l = arg.length;i<l;i++){
                    this.add(arg[i].copy());
                }
            }
        } //otherwise no args were passed, and thats ok

    };


    Polygon2D.prototype = {
        constructor: Polygon2D,

        add: function(p){
            //accept an array also
            if( is.Array(p) ){
                for( var i=0, l = p.length; i<l; i++ ){
                    if( this.vertices.indexOf(p[i]) < 0 ){
                        this.vertices.push(p[i]);
                    }
                }
                return;
            }
            if(this.vertices.indexOf(p) < 0){
                this.vertices.push(p);
            }
        },

        /**
        * centers the polygon so that its new centroid is at the given point
        * @param {Vec2D} [origin]
        * @return itself
        */
        center: function( origin ){
            var centroid = this.getCentroid();
            var delta = origin !== undefined ? origin.sub( centroid ) : centroid.invert();
            for( var i=0, l = this.vertices.length; i<l; i++){
                this.vertices[i].addSelf( delta );
            }
            return this;
        },

        containsPoint: function(p){
            var num = this.vertices.length,
                i = 0,
                j = num-1,
                oddNodes = false,
                px = p.x,
                py = p.y;
            for(i=0;i<num;i++){
                var vi = this.vertices[i],
                    vj = this.vertices[j];
                if (vi.y < py && vj.y >= py || vj.y < py && vi.y >= py) {
                    if (vi.x + (py - vi.y) / (vj.y - vi.y) * (vj.x - vi.x) < px) {
                        oddNodes = !oddNodes;
                    }
                }
                j = i;
            }
            return oddNodes;
        },

        containsPolygon: function(poly) {
            for (var i=0,num=poly.vertices.length; i<num; i++) {
                if (!this.containsPoint(poly.vertices[i])) {
                    return false;
                }
            }
            return true;
        },

        copy: function(){
            return new Polygon2D( this.vertices );
        },

        flipVertexOrder: function(){
            this.vertices.reverse();
            return this;
        },

        /**
        * Returns the vertex at the given index. This function follows Python
        * convention, in that if the index is negative, it is considered relative
        * to the list end. Therefore the vertex at index -1 is the last vertex in
        * the list.
        * @param {Number} i index
        * @return vertex
        */
        get: function( i ){
            if( i < 0 ){
                i += this.vertices.length;
            }
            return this.vertices[i];
        },

        /**
        * Computes the length of this polygon's apothem. This will only be valid if
        * the polygon is regular. More info: http://en.wikipedia.org/wiki/Apothem
        * @return apothem length
        */
        getApothem: function() {
            return this.vertices[0]
                .interpolateTo(this.vertices[1], 0.5)
                .distanceTo( this.getCentroid() );
        },

        getArea: function(){
            var area = 0,
                numPoints = this.vertices.length;
            for(var i=0;i<numPoints;i++){
                var a = this.vertices[i],
                    b = this.vertices[(i+1) % numPoints];
                area += a.x * b.y;
                area -= a.y * b.x;
            }
            area *= 0.5;
            return area;
        },

        getBoundingCircle: function() {
            var Circle = require('./Circle');
            return Circle.newBoundingCircle( this.vertices );
        },

        getBounds: function(){
            var Rect = require('./Rect');
            return Rect.getBoundingRect(this.vertices);
        },

        getCentroid: function(){
            var res = new Vec2D(),
                numPoints = this.vertices.length;
            for(var i=0;i<numPoints;i++){
                var a = this.vertices[i],
                    b = this.vertices[(i+1) %numPoints],
                    factor = a.x * b.y - b.x * a.y;
                res.x += (a.x + b.x) * factor;
                res.y += (a.y + b.y) * factor;
            }
            return res.scale(1 / (this.getArea() * 6));
        },

        getCircumference: function(){
            var circ = 0;
            for(var i=0,num=this.vertices.length;i<num;i++){
                circ += this.vertices[i].distanceTo(this.vertices[(i+1)%num]);
            }
            return circ;
        },

        getClosestPointTo: function( p ){
            var minD = Number.MAX_VALUE;
            var q, c, d;
            var edges = this.getEdges();
            for( var i=0, len = edges.length; i<len; i++ ){
                c = edges[i].closestPointTo( p );
                d = c.distanceToSquared( p );
                if( d < minD ){
                    q = c;
                    minD = d;
                }
            }
            return q;
        },

        getClosestVertexTo: function( p ){
            var minD = Number.MAX_VALUE;
            var q, d, i = 0, len = this.vertices.length;
            for( ; i<len; i++){
                d = this.vertices[i].distanceToSquared( p );
                if( d < minD ){
                    q = this.vertices[i];
                    minD = d;
                }
            }
            return q;
        },

        getEdges: function() {
            var num = this.vertices.length,
                edges = [];
            for (var i = 0; i < num; i++) {
                edges[i] = new Line2D(this.vertices[i], this.vertices[(i + 1) % num]);
            }
            return edges;
        },

        //@deprecated
        getNumPoints: function(){
            return this.getNumVertices();
        },

        getNumVertices: function(){
            return this.vertices.length;
        },

        getRandomPoint: function(){
            var edges = this.getEdges();
            var numEdges = edges.length;
            var ea = edges[MathUtils.random(numEdges)],
                eb;
            while( eb === undefined || eb.equals( ea ) ){
                eb = edges[ MathUtils.random(numEdges) ];
            }
            //pick a random point on edge A
            var p = ea.a.interpolateTo( ea.b, Math.random() );
            //then randomly interpolate to another point on b
            return p.interpolateToSelf(
                eb.a.interpolateTo( eb.b, Math.random() ),
                Math.random()
            );
        },

        /**
        * Repeatedly inserts vertices as mid points of the longest edges until the
        * new vertex count is reached.
        * @param {Number} count new vertex count
        * @return itself
        */
        increaseVertexCount: function( count ){
            var num = this.vertices.length,
                longestID = 0,
                maxD = 0,
                i = 0,
                d,
                m;

            while( num < count ){
                //find longest edge
                longestID = 0;
                maxD = 0;
                for( i=0; i<num; i++ ){
                    d = this.vertices[i].distanceToSquared( this.vertices[ (i+1) % num ] );
                    if( d > maxD ){
                        longestID = i;
                        maxD = d;
                    }
                }
                //insert mid point of longest segment
                m = this.vertices[longestID]
                    .add(this.vertices[(longestID + 1) % num])
                    .scaleSelf(0.5);
                //push this into the array inbetween the 2 points
                this.vertices.splice( longestID+1, 0, m );
                num++;
            }
            return this;
        },

        intersectsPolygon: function(poly) {
            if (!this.containsPolygon(poly)) {
                var edges=this.getEdges();
                var pedges=poly.getEdges();
                for(var i=0, n=edges.length; i < n; i++) {
                    for(var j=0, m = pedges.length, e = edges[i]; j < m; j++) {
                        if (e.intersectLine(pedges[j]).getType() == Line2D.LineIntersection.Type.INTERSECTING) {
                            return true;
                        }
                    }
                }
                return false;
            } else {
                return true;
            }
        },

        isClockwise: function(){
            return this.getArea() > 0;
        },

        /**
        * Checks if the polygon is convex.
        * @return true, if convex.
        */
        isConvex: function(){
            var isPositive = false,
                num = this.vertices.length,
                prev,
                next,
                d0,
                d1,
                newIsP;

            for( var i = 0; i < num; i++ ){
                prev = (i===0) ? num -1 : i - 1;
                next = (i===num-1) ? 0 : i + 1;
                d0 = this.vertices[i].sub(this.vertices[prev]);
                d1 = this.vertices[next].sub(this.vertices[i]);
                newIsP = (d0.cross(d1) > 0);
                if( i === 0 ) {
                    isPositive = true;
                } else if( isPositive != newIsP ) {
                    return false;
                }
            }
            return true;
        },

        /**
        * Given the sequentially connected points p1, p2, p3, this function returns
        * a bevel-offset replacement for point p2.
        *
        * Note: If vectors p1->p2 and p2->p3 are exactly 180 degrees opposed, or if
        * either segment is zero then no offset will be applied.
        *
        * @param x1
        * @param y1
        * @param x2
        * @param y2
        * @param x3
        * @param y3
        * @param distance
        * @param out
        *
        * @see http://alienryderflex.com/polygon_inset/
        */
        _offsetCorner: function( x1, y1, x2, y2, x3, y3, distance, out ){
            var c1 = x2,
                d1 = y2,
                c2 = x2,
                d2 = y2;
            var dx1,
                dy1,
                dist1,
                dx2,
                dy2,
                dist2,
                insetX,
                insetY;

            dx1 = x2-x1;
            dy1 = y2-y1;
            dist1 = Math.sqrt(dx1*dx1 + dy1*dy1);
            dx2 = x3-x2;
            dy2 = y3-y2;
            dist2 = Math.sqrt(dx2*dx2 + dy2*dy2);

            if( dist1 < MathUtils.EPS || dist2 < MathUtils.EPS ){
                return;
            }

            dist1 = distance / dist1;
            dist2 = distance / dist2;

            insetX = dy1 * dist1;
            insetY = -dx1 * dist1;
            x1 += insetX;
            c1 += insetX;
            y1 += insetY;
            d1 += insetY;
            insetX = dy2 * dist2;
            insetY = -dx2 * dist2;
            x3 += insetX;
            c2 += insetX;
            y3 += insetY;
            d2 += insetY;

            if( c1 === c2 && d1 === d2 ){
                out.set(c1,d1);
                return;
            }

            var l1 = new Line2D( new Vec2D(x1,y1), new Vec2D(c1,d1) ),
                l2 = new Line2D( new Vec2D(c2,d2), new Vec2D(x3,y3) ),
                isec = l1.intersectLine(l2),
                ipos = isec.getPos();
            if( ipos !== null || ipos !== undefined ){
                out.set(ipos);
            }
        },

        /**
        * Moves each line segment of the polygon in/outward perpendicular by the
        * given distance. New line segments and polygon vertices are created by
        * computing the intersection points of the displaced segments. Choosing an
        * too large displacement amount will result in deformation/undefined
        * behavior with various self intersections. Should that happen, please try
        * to clean up the shape using the {@link #toOutline()} method.
        *
        * @param distance
        *            offset/inset distance (negative for inset)
        * @return itself
        */
        offsetShape: function( distance ){
            var v = this.vertices;
            var num = v.length - 1;
            if( num > 1 ){
                var startX = v[0].x,
                    startY = v[0].y,
                    c = v[num].x,
                    d = v[num].y,
                    e = startX,
                    f = startY,
                    a,
                    b;
                for( var i = 0; i < num; i++ ){
                    a = c;
                    b = d;
                    c = e;
                    d = f;
                    e = v[i + 1].x;
                    f = v[i + 1].y;
                    this._offsetCorner(a, b, c, d, e, f, distance, v[i]);
                }
                this._offsetCorner(c, d, e, f, startX, startY, distance, v[num]);
            }
            return this;
        },

        /**
        * Reduces the number of vertices in the polygon based on the given minimum
        * edge length. Only vertices with at least this distance between them will
        * be kept.
        *
        * @param minEdgeLen
        * @return itself
        */
        reduceVertices: function( minEdgeLen ){
            minEdgeLen *= minEdgeLen;
            var vs = this.vertices,
                reduced = [],
                prev = vs[0],
                num = vs.length - 1,
                vec;
            reduced.push(prev);
            for( var i = 0; i < num; i++ ){
                vec = vs[i];
                if( prev.distanceToSquared(vec) >= minEdgeLen ){
                    reduced.push(vec);
                    prev = vec;
                }
            }
            if( vs[0].distanceToSquared(vs[num]) >= minEdgeLen ){
                reduced.push(vs[num]);
            }
            this.vertices = reduced;
            return this;
        },


        /**
        * Removes duplicate vertices from the polygon. Only successive points are
        * recognized as duplicates.
        * @param {Number} tolerance snap distance for finding duplicates
        * @return itself
        */
        removeDuplicates: function( tolerance ){
            //if tolerance is 0, it will be faster to just use 'equals' method
            var equals = tolerance ? 'equalsWithTolerance' : 'equals';
            var p, prev, i = 0, num = this.vertices.length;
            var last;
            for( ; i<num; i++ ){
                p = this.vertices[i];
                //if its the 'equals' method tolerance will just be ingored
                if( p[equals]( prev, tolerance ) ){
                    //remove from array, step back counter
                    this.vertices.splice( i, 1 );
                    i--;
                    num--;
                } else {
                    prev = p;
                }
            }
            num = this.vertices.length;
            if( num >  0 ){
                last = this.vertices[num-1];
                if( last[equals]( this.vertices[0], tolerance ) ){
                    this.vertices.splice( num-1, 1 );
                }
            }
            return this;
        },

        rotate: function(theta) {
            for (var i=0, num=this.vertices.length; i < num; i++) {
                this.vertices[i].rotate(theta);
            }
            return this;
        },

        scale: function( x, y ) {
            if (arguments.length==1) {
                var arg = arguments[0];
                if( has.XY( arg ) ){
                    x=arg.x;
                    y=arg.y;
                } else {
                    // uniform scale
                    x=arg;
                    y=arg;
                }
            } else if (arguments.length==2) {
                x=arguments[0];
                y=arguments[1];
            } else {
                throw "Invalid argument(s) passed.";
            }
            for (var i=0, num=this.vertices.length; i < num; i++) {
                this.vertices[i].scaleSelf(x, y);
            }
            return this;
        },

        scaleSize: function( x, y ){
            var centroid;
            if(arguments.length===1) {
                var arg = arguments[0];
                if( has.XY(arg) ){
                    x = arg.x;
                    y = arg.y;
                } else {
                    //uniform
                    x = arg;
                    y = arg;
                }
            } else if ( arguments.length===2) {
                x = arguments[0];
                y = arguments[1];
            } else {
                throw new Error('Invalid argument(s) passed.');
            }
            centroid = this.getCentroid();
            for( var i = 0, l = this.vertices.length; i<l; i++ ){
                var v = this.vertices[i];
                v.subSelf(centroid).scaleSelf(x,y).addSelf(centroid);
            }
            return this;
        },

        smooth: function(amount, baseWeight){
            var centroid = this.getCentroid();
            var num = this.vertices.length;
            var filtered = [];
            for(var i=0,j=num-1,k=1;i<num;i++){
                var a = this.vertices[i];
                var dir = this.vertices[j].sub(a).addSelf(this.vertices[k].sub(a))
                    .addSelf(a.sub(centroid).scaleSelf(baseWeight));
                filtered.push(a.add(dir.scaleSelf(amount)));
                j++;
                if(j == num){
                    j=0;
                }
                k++;
                if(k == num){
                    k=0;
                }
            }
            this.vertices = filtered;
            return this;
        },

        toMesh: function( mesh, centroid2D, extrude ){
            mesh = mesh || new TriangleMesh();
            var num = this.vertices.length;
            centroid2D = centroid2D || this.getCentroid();
            var centroid = centroid2D.to3DXY();
            centroid.z = extrude;
            var bounds = this.getBounds(),
                boundScale = new Vec2D(1/bounds.width, 1/bounds.height),
                uvC = centroid2D.sub(bounds.getTopLeft()).scaleSelf(boundScale),
                a, b, uvA, uvB;

            for( var i=1; i<=num; i++ ){
                a = this.vertices[i % num];
                b = this.vertices[i - 1];
                uvA = a.sub(bounds.getTopLeft()).scaleSelf(boundScale);
                uvB = b.sub(bounds.getTopLeft()).scaleSelf(boundScale);
                mesh.addFace(centroid, a.to3DXY(), b.to3DXY(), uvC, uvA, uvB);
            }
            return mesh;
        },

        toPolygon2D: function(){
            return this;
        },

        toString: function(){
            var s = "";
            for(var i=0;i<this.vertices.length;i++){
                s += this.vertices[i];
                if(i<this.vertices.length-1){
                    s+= ", ";
                }
            }
            return s;
        },

        translate: function() {
            var x,y;
            if (arguments.length==1 && has.XY( arguments[0] ) ){
                x=arguments[0].x;
                y=arguments[0].y;
            } else if (arguments.length==2) {
                x=arguments[0];
                y=arguments[1];
            } else {
                throw "Invalid argument(s) passed.";
            }
            for (var i=0, num=this.vertices.length; i < num; i++) {
                this.vertices[i].addSelf(x, y);
            }
            return this;
        }
    };

    /**
    * Constructs a new regular polygon from the given base line/edge.
    * @param {Vec2D} baseA left point of the base edge
    * @param {Vec2D} baseB right point of the base edge
    * @param {Number} res number of polygon vertices
    * @return polygon
    */
    Polygon2D.fromBaseEdge = function( baseA, baseB, res ){
        var theta = -( MathUtils.PI - (MathUtils.PI*(res-2) / res) ),
            dir = baseB.sub( baseA ),
            prev = baseB,
            poly = new Polygon2D( baseA, baseB ),
            p;
        for( var i=0; i< res-1; i++){
            p = prev.add( dir.getRotated(theta*i) );
            poly.add( p );
            prev = p;
        }
        return poly;
    };

    /**
    * Constructs a regular polygon from the given edge length and number of
    * vertices. This automatically computes the radius of the circle the
    * polygon is inscribed in.
    * More information: http://en.wikipedia.org/wiki/Regular_polygon#Radius
    *
    * @param {Number} len desired edge length
    * @param {Number} res number of vertices
    * @return polygon
    */
    Polygon2D.fromEdgeLength = function( len, res ){
        var Circle = require('./Circle');
        return new Circle( Polygon2D.getRadiusForEdgeLength(len,res) ).toPolygon2D( res );
    };

    /**
    * Computes the radius of the circle the regular polygon with the desired
    * edge length is inscribed in
    * @param {Number} len edge length
    * @param {Number} res number of polygon vertices
    * @return radius
    */
    Polygon2D.getRadiusForEdgeLength = function( len, res ){
        return len / ( 2 * MathUtils.sin(MathUtils.PI/res) );
    };

    module.exports = Polygon2D;


},{"../internals/has":127,"../internals/is":128,"../math/mathUtils":147,"./Circle":67,"./Line2D":74,"./Rect":84,"./Vec2D":92,"./mesh/TriangleMesh":109}],80:[function(require,module,exports){


var mathUtils = require('../math/mathUtils'),
	Matrix4x4 = require('./Matrix4x4');

/**
 * @class
 * @member toxi
 */
var	Quaternion = function (qw,vx,y,z){
	if(arguments.length == 4){
		this.w = qw;
		this.x = vx;
		this.y = y;
		this.z = z;
	} else if(arguments.length == 2){
		this.x = vx.x;
		this.y = vx.y;
		this.z = vx.z;
		this.w = qw;
	} else if(arguments.length == 1) {
		this.w = q.w;
		this.x = q.x;
		this.y = q.y;
		this.z = q.z;
	}
};


Quaternion.prototype = {
	add: function(q){
		return new Quaternion(this.x + q.x, this.y + q.y, this.z + q.z, this.w + q.w);
	},
	addSelf: function(q){
		this.x += q.x;
		this.y += q.y;
		this.z += q.z;
		return this;
	},
	copy: function(){
		return new Quaternion(this.w,this.x,this.y,this.z);
	},
	dot: function(q){
		return (this.x * q.x) + (this.y * q.y) + (this.z * q.z) + (this.w * q.w);
	},
	getConjugate: function(){
		var q = new Quaternion();
		q.x = -this.x;
		q.y = -this.y;
		q.z = -this.z;
		q.w = w;
		return q;
	},
	identity: function(){
		this.w = 1.0;
		this.x = 0.0;
		this.y = 0.0;
		this.z = 0.0;
		return this;
	},
	interpolateTo: function(target,t,is){
		return (arguments.length == 3) ? this.copy().interpolateTo(target,is.interpolate(0,1,t)) : this.copy().interpolateToSelf(target,t);
	},
	interpolateToSelf: function(target,t,is){
		if(arguments.length == 3){
			t = is.interpolate(0,1,t);
		}
		var scale,
			invscale,
			dot = mathUtils.clip(this.dot(target),-1,1);
			if((1.0-dot) >= mathUtils.EPS){
				var theta = Math.acos(dot);
				var invsintheta = 1.0 / Math.sin(theta);
				scale = (Math.sin(theta *(1.0 - t)) * invsintheta);
				invscale = (Math.sin(theta * t) * invsintheta);
			} else {
				scale = 1 - t;
				invscale = t;
			}
			if(dot < 0.0){
				this.w = scale * this.w - invscale * target.w;
				this.x = scale * this.x - invscale * target.x;
				this.y = scale * this.y - invscale * target.y;
				this.z = scale * this.z - invscale * target.z;
			} else {
				this.w = scale * w + invscale * target.w;
				this.x = scale * x + invscale * target.x;
				this.y = scale * y + invscale * target.y;
				this.z = scale * z + invscale * target.z;
			}
			return this;
	},
	magnitude: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
	},
	multiply: function(q2){
		var res = new Quaternion();
		res.w = this.w * q2.w - x * q2.x - y * q2.y - z * q2.z;
		res.x = this.w * q2.x + x * q2.w + y * q2.z - z * q2.y;
		res.y = this.w * q2.y + y * q2.w + z * q2.x - x * q2.z;
		res.z = this.w * q2.z + z * q2.w + x * q2.y - y * q2.x;
		
		return res;
	},
	normalize: function(){
		var mag = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
		if(mag > mathUtils.EPS){
			mag = 1 / mag;
			this.x *= mag;
			this.y *= mag;
			this.z *= mag;
			this.w *= mag;
		}
		return this;
	},
	scale: function(t){
		return new Quaternion(this.x * t, this.y * t, this.z * t, this.w * t);
	},
	scaleSelf: function(t){
		this.x *= t;
		this.y *= t;
		this.z *= t;
		this.w *= t;
		return this;
	},
	set: function(w,x,y,z){
		if(arguments.length == 4){
			this.w = w;
			this.x = x;
			this.y = y;
			this.z = z;
		} else if(arguments.length == 2){
			this.w = w;
			this.x = v.x;
			this.y = v.y;
			this.z = v.z;
		}
		else { //must be 1
			this.w = q.w;
			this.x = q.x;
			this.y = q.y;
			this.z = q.z;
		}
		return this;
	},
	sub: function(q){
		return new Quaternion(this.x - q.x, this.y - q.y, this.z - q.z, this.w - q.w);
	},
	subSelf: function(q){
		this.x -= q.x;
		this.y -= q.y;
		this.z -= q.z;
		this.w -= q.w;
		return this;
	},
	toArray: function(){
		return [this.w,this.x,this.y,this.z];
	},
	toAxisAngle: function(){
		var res = [];
		var sa = Math.sqrt(1.0 - this.w * this.w);
		if(sa < mathUtils.EPS){
			sa = 1.0;
		} else {
			sa = 1.0 / sa;
		}
		res[0] = Math.acos(this.w) * 2.0;
		res[1] = this.x * sa;
		res[2] = this.y * sa;
		res[3] = this.z * sa;
		return res;
	},
	toMatrix4x4: function(result){
		if(result === undefined){
			result = new Matrix4x4();
		}
		var x2 = this.x + this.x;
		var y2 = this.y + this.y;
		var z2 = this.z + this.z;
		var xx = this.x * x2;
		var xy = this.x * y2;
		var xz = this.x * z2;
		var yy = this.y * y2;
		var yz = this.y * z2;
		var zz = this.z * z2;
		var wx = this.w * x2;
		var wy = this.w * y2;
		var wz = this.w * z2;
		
		var st = x2 +','+y2+','+z2+','+xx+','+xy+','+xz+','+yy+','+yz+','+zz+','+wx+','+wy+','+wz;
		return result.set(
			1 - (yy + zz), xy - wz, xz + wy, 0, xy + wz,
			1 - (xx + zz), yz - wx, 0, xz - wy, yz + wx, 1 - (xx + yy), 0,
			0, 0, 0, 1
		);
	},
	toString: function(){
		return "{axis: ["+this.x+","+this.y+","+this.z+"], w: "+this.w+"}";
	}
	
};

Quaternion.DOT_THRESHOLD = 0.9995;

Quaternion.createFromAxisAngle = function(axis,angle){
	angle *= 0.5;
	var sin = mathUtils.sin(angle),
		cos = mathUtils.cos(angle),
		q = new Quaternion(cos,axis.getNormalizedTo(sin));
	return q;
};

Quaternion.createFromEuler = function(pitch,yaw,roll){
	pitch *= 0.5;
	yaw *=0.5;
	roll *= 0.5;
	
	var sinPitch = mathUtils.sin(pitch),
		cosPitch = mathUtils.cos(pitch),
		sinYaw = mathUtils.sin(yaw),
		cosYaw = mathUtils.cos(yaw),
		sinRoll = mathUtils.sin(roll),
		cosRoll = mathUtils.cos(roll);
	
	var cosPitchCosYaw = cosPitch * cosYaw,
		sinPitchSinYaw = sinPitch * sinYaw;
		
		var q = new Quaternion();
		q.x = sinRoll * cosPitchCosYaw - cosRoll * sinPitchSinYaw;
		q.y = cosRoll * sinPitch * cosYaw + sinRoll * cosPitch * sinYaw;
		q.z = cosRoll * cosPitch * sinYaw - sinRoll * sinPitch * cosYaw;
		q.w = cosRoll * cosPitchCosYaw + sinRoll * sinPitchSinYaw;
		
		return q;
};

Quaternion.createFromMatrix = function(m){
	var s = 0.0;
	var q = [];
	var trace = m.matrix[0][0] + m.matrix[1][1] + m.matrix[2][2];
	
	if(trace > 0.0){
		s = Math.sqrt(trace + 1.0);
		q[3] = s * 0.5;
		s = 0.5 / s;
		q[0] = (m.matrix[1][2] - m.matrix[2][1] * s);
		q[1] = (m.matrix[2][0] - m.matrix[0][2] * s);
		q[2] = (m.matrix[0][1] - m.matrix[1][0] * s);
	} else {
		
		var nxt = [ 1, 2, 0 ];
        var i = 0, j = 0, k = 0;

        if (m.matrix[1][1] > m.matrix[0][0]) {
            i = 1;
        }

        if (m.matrix[2][2] > m.matrix[i][i]) {
            i = 2;
        }

        j = nxt[i];
        k = nxt[j];
        s = Math.sqrt((m.matrix[i][i] - (m.matrix[j][j] + m.matrix[k][k])) + 1.0);

        q[i] = s * 0.5;
        s = 0.5 / s;
        q[3] = (m.matrix[j][k] - m.matrix[k][j]) * s;
        q[j] = (m.matrix[i][j] + m.matrix[j][i]) * s;
        q[k] = (m.matrix[i][k] + m.matrix[k][i]) * s;
    }
    
     return new Quaternion(q[3],q[0],q[1],q[2]);
 };
 
 Quaternion.getAlignmentQuat = function(dir,forward){
		var target = dir.getNormalized(),
			axis = forward.cross(target),
			length = axis.magnitude() + 0.0001,
			angle = Math.atan2(length, forward.dot(target));
        return this.createFromAxisAngle(axis, angle);
 };

 module.exports = Quaternion;


},{"../math/mathUtils":147,"./Matrix4x4":77}],81:[function(require,module,exports){


var extend = require('../internals').extend,
	Vec2D = require('./Vec2D'),
	Line2D = require('./Line2D');

/**
* Ray2D accepts 2 formats for its constructor
* Option 1:
* @param {Number} x,
* @param {Number} y,
* @param {toxi.geom.Vec2D} direction
*
* Option 2:
* @param {toxi.geom.Vec2D} position
* @param {toxi.geom.Vec2D} direction
*/
var	Ray2D = function(a,b,d){
	var o, dir;
	if(arguments.length == 3){
		Vec2D.apply(this,[a,b]);
		this.dir = d.getNormalized();
	} else if(arguments.length == 2){
		Vec2D.apply(this,[a]);
		this.dir = b.getNormalized();
	} else if(arguments.length === 0){
		Vec2D.apply(this);
		this.dir = Vec2D.Y_AXIS.copy();
	}
};
extend(Ray2D,Vec2D);

Ray2D.prototype.getDirection = function() {
	  return this.dir.copy();
};
/**
 * Calculates the distance between the given point and the infinite line
 * coinciding with this ray.
 */
Ray2D.prototype.getDistanceToPoint = function(p) {
	var sp = p.sub(this);
	return sp.distanceTo(this.dir.scale(sp.dot(this.dir)));
};

Ray2D.prototype.getPointAtDistance = function(dist) {
	return this.add(this.dir.scale(dist));
};

/**
 * Uses a normalized copy of the given vector as the ray direction.
 *
 * @param d new direction
 * @return itself
 */
Ray2D.prototype.setDirection = function(d) {
	this.dir.set(d).normalize();
	return this;
};

/**
 * Converts the ray into a 2D Line segment with its start point coinciding
 * with the ray origin and its other end point at the given distance along
 * the ray.
 *
 * @param dist end point distance
 * @return line segment
 */
Ray2D.prototype.toLine2DWithPointAtDistance = function(dist) {
	var Line2D = require('./Line2D');
	return new Line2D(this, this.getPointAtDistance(dist));
};

Ray2D.prototype.toString = function() {
	return "origin: " + Vec2D.prototype.toString.apply(this) + " dir: " + this.dir;
};

module.exports = Ray2D;


},{"../internals":120,"./Line2D":74,"./Vec2D":92}],82:[function(require,module,exports){


var extend = require('../internals').extend,
	Vec3D = require('./Vec3D'),
	Line3D = require('./Line3D');

/**
 * @class
 * @member toxi
 */
var	Ray3D = function(a,b,c,d){
	var o, dir;
	if(arguments.length == 4){
		o = new Vec3D(a,b,c);
		dir = d;
	}
	else if(arguments.length == 2){
		o = a;
		dir = b;
	}
	else {
		o = new Vec3D();
		dir = Vec3D.Y_AXIS.copy();
	}
	Vec3D.apply(this,[o]);
	this.dir = dir;
};

extend(Ray3D,Vec3D);

/**
	Returns a copy of the ray's direction vector.
	@return vector
*/
Ray3D.prototype.getDirection = function() {
    return this.dir.copy();
};

/**
	Calculates the distance between the given point and the infinite line
	coinciding with this ray.
	@param p
*/
Ray3D.prototype.getDistanceToPoint = function(p) {
    var sp = p.sub(this);
    return sp.distanceTo(this.dir.scale(sp.dot(this.dir)));
};

/**
	Returns the point at the given distance on the ray. The distance can be
	any real number.
	@param dist
	@return vector
*/
Ray3D.prototype.getPointAtDistance = function(dist) {
    return this.add(this.dir.scale(dist));
};

/**
  Uses a normalized copy of the given vector as the ray direction.
  @param d new direction
  @return itself
*/
Ray3D.prototype.setDirection = function(d) {
    this.dir.set(d).normalize();
    return this;
};

/**
  Converts the ray into a 3D Line segment with its start point coinciding
  with the ray origin and its other end point at the given distance along
  the ray.

  @param dist end point distance
  @return line segment
*/
Ray3D.prototype.toLine3DWithPointAtDistance = function(dist) {
    Line3D = require('./Line3D');
    return new Line3D(this, this.getPointAtDistance(dist));
};

Ray3D.prototype.toString = function() {
    return "origin: " + this.parent.toString.call(this) + " dir: " + this.dir;
};

module.exports = Ray3D;


},{"../internals":120,"./Line3D":75,"./Vec3D":93}],83:[function(require,module,exports){


var IsectData3D = require('./IsectData3D'),
	mathUtils = require('../math/mathUtils'),
    Ray3DIntersector;

/**
 * @class
 * @member toxi
 */
Ray3DIntersector = function(ray){
	this.ray = ray;
	this.isec = new IsectData3D();
};

Ray3DIntersector.prototype = {
	getIntersectionData: function(){
		return this.isec;
	},

	intersectsRay: function(other){
		var n = this.ray.dir.cross(other.dir);
		var sr = this.ray.sub(other);
		var absX = mathUtils.abs(n.x);
		var absY = mathUtils.abs(n.y);
		var absZ = mathUtils.abs(n.z);
		var t;
		if(absZ > absX && absZ > absY){
			t = (sr.x * other.dir.y - sr.y * other.dir.x) / n.z;
		} else if(absX > absY){
			t = (sr.y * other.dir.z - sr.z * other.dir.y) / n.x;
		} else {
			t = (sr.z * other.dir.x - sr.x * other.dir.z) / n.y;
		}
		this.isec.isIntersection = (t <= mathUtils.EPS && !isFinite(t));
		this.isec.pos = this.ray.getPointAtDistance(-t);
		return this.isec.isIntersection;
	}
};

module.exports = Ray3DIntersector;


},{"../math/mathUtils":147,"./IsectData3D":73}],84:[function(require,module,exports){


    var	internals = require('../internals'),
        mathUtils = require('../math/mathUtils'),
        Vec2D = require('./Vec2D'),
        Line2D = require('./Line2D');

    /**
     * @class
     * @member toxi
     * @param {Number} [x]
     * @param {Number} [y]
     * @param {Number} [width]
     * @param {Number} [height]
     */
    var	Rect = function(a,b,width,height){
        if(arguments.length === 2){ //then it should've been 2 Vec2D's
            if( !( internals.has.XY( a ) ) ){
                throw new Error("Rect received incorrect parameters");
            } else {
                this.x = a.x;
                this.y = a.y;
                this.width = b.x - this.x;
                this.height = b.y - this.y;
            }
        } else if(arguments.length == 4){
            this.x = a;
            this.y = b;
            this.width = width;
            this.height = height;
        } else if(arguments.length === 1){ //object literal with x,y,width,height
            var o = arguments[0];
            if( internals.has.XYWidthHeight( o ) ){
                this.x = o.x;
                this.y = o.y;
                this.width = o.width;
                this.height = o.height;
            }
        } else if(arguments.length > 0){
            throw new Error("Rect received incorrect parameters");
        }
    };

    Rect.fromCenterExtent = function(center,extent){
        return new Rect(center.sub(extent),center.add(extent));
    };


    Rect.getBoundingRect = function( points ){
        var first = points[0];
        var bounds = new Rect(first.x, first.y, 0, 0);
        for (var i = 1, num = points.length; i < num; i++) {
            bounds.growToContainPoint(points[i]);
        }
        return bounds;
    };

    Rect.prototype = {
        containsPoint: function(p){
            var px = p.x;
            var py = p.y;
            if(px < this.x || px >= this.x + this.width){
                return false;
            }
            if(py < this.y || py >= this.y + this.height){
                return false;
            }
            return true;
        },

        copy: function(){
            return new Rect(this.x,this.y,this.width,this.height);
        },

        getArea: function(){
            return this.width * this.height;
        },

        getAspect: function(){
            return this.width / this.height;
        },

        getBottom: function(){
            return this.y + this.height;
        },

        getBottomRight: function(){
            return new Vec2D(this.x + this.width, this.y + this.height);
        },

        getCentroid: function(){
            return new Vec2D(this.x + this.width * 0.5, this.y + this.height * 0.5);
        },

        getDimensions: function(){
            return new Vec2D(this.width,this.height);
        },

        getEdge: function(id){
            var edge;
            switch(id){
                case 0:
                    edge = new Line2D(
                        new Vec2D(this.x,this.y),
                        new Vec2D(this.x + this.width, this.y)
                    );
                    break;
                case 1:
                    edge = new Line2D(
                        new Vec2D(this.x + this.width, this.y),
                        new Vec2D(this.x + this.width, this.y + this.height)
                    );
                    break;
                case 2:
                    edge = new Line2D(
                        new Vec2D(this.x, this.y + this.height),
                        new Vec2D(this.x + this.width, this.y + this.height)
                    );
                    break;
                case 3:
                    edge = new Line2D(
                        new Vec2D(this.x,this.y),
                        new Vec2D(this.x,this.y+this.height)
                    );
                    break;
                default:
                    throw new Error("edge ID needs to be 0...3");
            }
            return edge;
        },

        getLeft: function(){
            return this.x;
        },

        getRight: function(){
            return this.x + this.width;
        },

        getTop: function(){
            return this.y;
        },

        getTopLeft: function(){
            return new Vec2D(this.x,this.y);
        },

        growToContainPoint: function( p ){
            if (!this.containsPoint(p)) {
                if (p.x < this.x) {
                    this.width = this.getRight() - p.x;
                    this.x = p.x;
                } else if (p.x > this.getRight()) {
                    this.width = p.x - this.x;
                }
                if (p.y < this.y) {
                    this.height = this.getBottom() - p.y;
                    this.y = p.y;
                } else if (p.y > this.getBottom()) {
                    this.height = p.y - this.y;
                }
            }
            return this;
        },

        intersectsRay: function(ray,minDist,maxDist){
            //returns Vec2D of point intersection
            var invDir = ray.getDirection().reciprocal();
            var signDirX = invDir.x < 0;
            var signDirY = invDir.y < 0;
            var min = this.getTopLeft();
            var max = this.getBottomRight();
            var bbox = signDirX ? max : min;
            var tmin = (bbox.x - ray.x) * invDir.x;
            bbox = signDirX ? min : max;
            var tmax = (bbox.x - ray.x) * invDir.x;
            bbox = signDirY ? max : min;
            var tymin = (bbox.y - ray.y) * invDir.y;
            bbox = signDirY ? min : max;
            var tymax = (bbox.y - ray.y) * invDir.y;
            if((tmin > tymax) || (tymin > tmax)){
                return undefined;
            }
            if(tymin > tmin){
                tmin = tymin;
            }
            if (tymax < tmax) {
                tmax = tymax;
            }
            if ((tmin < maxDist) && (tmax > minDist)) {
                return ray.getPointAtDistance(tmin);
            }
            return undefined;
        },

        intersectsRect: function(r){
            return !(this.x > r.x + r.width || this.x + this.width < r.x || this.y > r.y + r.height || this.y + this.height < r.y);
        },

        scale: function(s){
            var c = this.getCentroid();
            this.width *= s;
            this.height *= s;
            this.x = c.x - this.width * 0.5;
            this.y = c.y - this.height * 0.5;
            return this;
        },

        set: function(x,y,width,height){
            if(arguments.length === 1){
                this.y = x.y;
                this.width = x.width;
                this.height = x.height;
                this.x = x.x;
            } else if(arguments.length === 4) {
                this.x = x;
                this.y = y;
                this.width = width;
                this.height = height;
            } else {
                throw new Error("Rect set() received wrong parameters");
            }
        },

        setDimensions: function(dim){
            if( arguments.length == 2 ){
                dim = { x: arguments[0], y: arguments[1] };
            }
            this.width = dim.x;
            this.height = dim.y;
            return this;
        },

        setPosition: function(pos){
            this.x = pos.x;
            this.y = pos.y;
            return this;
        },

        toPolygon2D: function(){
            var Polygon2D = require('./Polygon2D');
            var poly = new Polygon2D();
            poly.add(new Vec2D(this.x,this.y));
            poly.add(new Vec2D(this.x+this.width,this.y));
            poly.add(new Vec2D(this.x+this.width,this.y+this.height));
            poly.add(new Vec2D(this.x,this.y+this.height));
            return poly;
        },

        toString: function(){
            return "rect: {x: "+this.x +", y: "+this.y+ ", width: "+this.width+ ", height: "+this.height+"}";
        },

        union: function(r){
            var tmp = mathUtils.max(this.x + this.width, r.x + r.width);
            this.x = mathUtils.min(this.x,r.x);
            this.width = tmp - this.x;
            tmp = mathUtils.max(this.y + this.height, r.y + r.height);
            this.y = mathUtils.min(this.y,r.y);
            this.height = tmp - this.y;
            return this;
        }
    };


    module.exports = Rect;


},{"../internals":120,"../math/mathUtils":147,"./Line2D":74,"./Polygon2D":79,"./Vec2D":92}],85:[function(require,module,exports){


	//2 modules defined
	var Sphere, SphereFunction;

	//Sphere
	(function(){
		var internals = require('../internals');
		var meshCommon = require('./mesh/meshCommon');
		var Vec3D = require('./Vec3D');
		/**
		 * @module toxi.geom.Sphere
		 * @augments toxi.geom.Vec3D
		 */
		Sphere = function(a,b){
			if(a === undefined){
				Vec3D.apply(this,[new Vec3D()]);
				this.radius = 1;
			} else if( internals.has.XYZ( a ) ){
				Vec3D.apply(this,[a]);
				if( internals.is.Sphere( a ) ){
					this.radius = a.radius;
				} else {
					this.radius = b;
				}
			} else {
				Vec3D.apply(this,[new Vec3D()]);
				this.radius = a;
			}
		};
		internals.extend(Sphere,Vec3D);

		Sphere.prototype.containsPoint = function(p) {
			var d = this.sub(p).magSquared();
			return (d <= this.radius * this.radius);
		};

		/**
		 * Alternative to {@link SphereIntersectorReflector}. Computes primary &
		 * secondary intersection points of this sphere with the given ray. If no
		 * intersection is found the method returns null. In all other cases, the
		 * returned array will contain the distance to the primary intersection
		 * point (i.e. the closest in the direction of the ray) as its first index
		 * and the other one as its second. If any of distance values is negative,
		 * the intersection point lies in the opposite ray direction (might be
		 * useful to know). To get the actual intersection point coordinates, simply
		 * pass the returned values to {@link Ray3D#getPointAtDistance(float)}.
		 * @param ray
		 * @return 2-element float array of intersection points or null if ray
		 * doesn't intersect sphere at all.
		 */
		Sphere.prototype.intersectRay = function(ray) {
			var result, a, b, t,
				q = ray.sub(this),
				distSquared = q.magSquared(),
				v = -q.dot(ray.getDirection()),
				d = this.radius * this.radius - (distSquared - v * v);
			if (d >= 0.0) {
				d = Math.sqrt(d);
				a = v + d;
				b = v - d;
				if (!(a < 0 && b < 0)) {
					if (a > 0 && b > 0) {
						if (a > b) {
							t = a;
							a = b;
							b = t;
						}
					} else {
						if (b > 0) {
							t = a;
							a = b;
							b = t;
						}
					}
				}
				result = [a,b];
			}
			return result;
		};

		/**
		 * Considers the current vector as centre of a collision sphere with radius
		 * r and checks if the triangle abc intersects with this sphere. The Vec3D p
		 * The point on abc closest to the sphere center is returned via the
		 * supplied result vector argument.
		 * @param t
		 *			triangle to check for intersection
		 * @param result
		 *			a non-null vector for storing the result
		 * @return true, if sphere intersects triangle ABC
		 */
		Sphere.prototype.intersectSphereTriangle = function(t,result) {
			// Find Vec3D P on triangle ABC closest to sphere center
			result.set(t.closestPointOnSurface(this));

			// Sphere and triangle intersect if the (squared) distance from sphere
			// center to Vec3D p is less than the (squared) sphere radius
			var v = result.sub(this);
			return v.magSquared() <= this.radius * this.radius;
		};

		/**
		 * Calculates the normal vector on the sphere in the direction of the
		 * current point.
		 * @param q
		 * @return a unit normal vector to the tangent plane of the ellipsoid in the
		 * point.
		 */
		Sphere.prototype.tangentPlaneNormalAt = function(q) {
			return this.sub(q).normalize();
		};

		Sphere.prototype.toMesh = function() {
			//this fn requires SurfaceMeshBuilder, loading it here to avoid circular dependency
			//var SurfaceMeshBuilder = require('./mesh/SurfaceMeshBuilder');

			//if one argument is passed it can either be a Number for resolution, or an options object
			//if 2 parameters are passed it must be a TriangleMesh and then a Number for resolution
			var opts = {
				mesh: undefined,
				resolution: 0
			};
			if(arguments.length === 1){
				if(typeof(arguments[0]) == 'object'){ //options object
					opts.mesh = arguments[0].mesh;
					opts.resolution = arguments[0].res || arguments[0].resolution;
				} else { //it was just the resolution Number
					opts.resolution = arguments[0];
				}
			} else {
				opts.mesh = arguments[0];
				opts.resolution = arguments[1];
			}

			var builder = new meshCommon.SurfaceMeshBuilder(new SphereFunction(this));
			return builder.createMesh(opts.mesh, opts.resolution, 1);
		};
	}());


	//toxi.geom.mesh.SphereFunction
	(function( Sphere ){
		//SphereFunction
		var mathUtils = require('../math/mathUtils'),
			Vec3D = require('./Vec3D'),
			internals = require('../internals');

		/**
		 * @class This implementation of a {@link SurfaceFunction} samples a given
		 * {@link Sphere} instance when called by the {@link SurfaceMeshBuilder}.
		 * @member toxi
		 */
		SphereFunction = function(sphere_or_radius) {
			if(sphere_or_radius === undefined){
				this.sphere = new Sphere(new Vec3D(),1);
			}

			if(internals.is.Sphere( sphere_or_radius )){
				this.sphere = sphere_or_radius;
			}
			else{
				this.sphere = new Sphere(new Vec3D(),sphere_or_radius);
			}
			this.phiRange = mathUtils.PI;
			this.thetaRange = mathUtils.TWO_PI;
		};

		SphereFunction.prototype = {
			computeVertexFor: function(p,phi,theta) {
				phi -= mathUtils.HALF_PI;
				var cosPhi = mathUtils.cos(phi);
				var cosTheta = mathUtils.cos(theta);
				var sinPhi = mathUtils.sin(phi);
				var sinTheta = mathUtils.sin(theta);
				var t = mathUtils.sign(cosPhi) * mathUtils.abs(cosPhi);
				p.x = t * mathUtils.sign(cosTheta) * mathUtils.abs(cosTheta);
				p.y = mathUtils.sign(sinPhi) * mathUtils.abs(sinPhi);
				p.z = t * mathUtils.sign(sinTheta) * mathUtils.abs(sinTheta);
				return p.scaleSelf(this.sphere.radius).addSelf(this.sphere);
			},
			getPhiRange: function() {
				return this.phiRange;
			},
			getPhiResolutionLimit: function(res) {
				return res;
			},
			getThetaRange: function() {
				return this.thetaRange;
			},
			getThetaResolutionLimit: function(res) {
				return res;
			},
			setMaxPhi: function(max) {
				this.phiRange = mathUtils.min(max / 2, mathUtils.PI);
			},
			setMaxTheta: function(max) {
				this.thetaRange = mathUtils.min(max, mathUtils.TWO_PI);
			}
		};
	}( Sphere ));

	Sphere.SphereFunction = SphereFunction;
	module.exports = Sphere;



},{"../internals":120,"../math/mathUtils":147,"./Vec3D":93,"./mesh/meshCommon":114}],86:[function(require,module,exports){
var Vec2D = require('./Vec2D');
var is = require('../internals/is');
var BernsteinPolynomial = require('./BernsteinPolynomial');

/**
 * @class
 * @member toxi
 * @param {Vec2D[]} points array of Vec2D's
 * @param {BernsteinPolynomial} [bernsteinPoly]
 */
var	Spline2D = function(points, bernsteinPoly, tightness){
	if( arguments.length === 1 && !is.Array( points ) && is.Object(points)){
		//if its an options object
		bernsteinPoly = bernsteinPoly || points.bernsteinPoly;
		tightness = tightness || points.tightness;
		points = points.points;
	}
	var i = 0, l;
	this.pointList = [];
	if( typeof tightness !== 'number' ){
		tightness = Spline2D.DEFAULT_TIGHTNESS;
	}
	this.setTightness(tightness);
	//this may be undefined
	this.bernstein = bernsteinPoly;
	if( points !== undefined ){
		for(i = 0, l = points.length; i<l; i++){
			this.add( points[i].copy() );
		}
	}
	this.coeffA = [];
	this.delta = [];
	this.bi = [];
	for (i = 0; i < this.numP; i++) {
		this.coeffA[i] = new Vec2D();
		this.delta[i] = new Vec2D();
		this.bi[i] = 0;
	}
	this.bi = [];
};


Spline2D.prototype = {
	add: function(p){
		this.pointList.push(p.copy());
		this.numP = this.pointList.length;
		return this;
	},


	computeVertices: function(res){
		this.updateCoefficients();
        if( res < 1 ){
            res = 1;
        }
        res++;
		if (this.bernstein === undefined || this.bernstein.resolution != res) {
			this.bernstein = new BernsteinPolynomial(res);
		}
		var bst = this.bernstein;
		this.findCPoints();
		var deltaP = new Vec2D();
		var deltaQ = new Vec2D();
        res--;
        var verticeCount = (this.numP - 1) * res + 1;
        if ( typeof(this.vertices) == 'undefined' || this.vertices.length != verticeCount ) {
        	this.vertices = Array.apply( null, Array( verticeCount ) ).map( function () { return new Vec2D(); } );
        }
		var vertexIdx = 0;
		for (var i = 0; i < this.numP - 1; i++) {
			var p = this.points[i];
			var q = this.points[i + 1];
			deltaP.x = this.delta[i].x + p.x;
			deltaP.y = this.delta[i].y + p.y;
			deltaQ.x = q.x - this.delta[i + 1].x;
			deltaQ.y = q.y - this.delta[i + 1].y;

			for (var k = 0; k < res; k++) {
				var x = p.x * bst.b0[k] + deltaP.x * bst.b1[k] +
				deltaQ.x * bst.b2[k] +
				q.x * bst.b3[k];
				var y = p.y * bst.b0[k] + deltaP.y * bst.b1[k] +
				deltaQ.y * bst.b2[k] +
				q.y * bst.b3[k];
				this.vertices[ vertexIdx ].x = x;
				this.vertices[ vertexIdx ].y = y;
				vertexIdx++;
			}
		}
		this.vertices[ vertexIdx ].x = this.vertices[ vertexIdx - 1 ].x;
		this.vertices[ vertexIdx ].y = this.vertices[ vertexIdx - 1 ].y;
		return this.vertices;
	},

	findCPoints: function(){
		this.bi[1] = -0.25;
		var i, p0, p2, d0;
		p0 = this.pointList[0];
		p2 = this.pointList[2];
		d0 = this.delta[0];
		this.coeffA[1].x = (p2.x - p0.x - d0.x) * this.tightness;
		this.coeffA[1].y = (p2.y - p0.y - d0.y) * this.tightness;

		for (i = 2; i < this.numP - 1; i++) {
			this.bi[i] = -1 / (this.invTightness + this.bi[i - 1]);
			this.coeffA[i].x = -(this.points[i + 1].x - this.points[i - 1].x - this.coeffA[i - 1].x) *this.bi[i];
			this.coeffA[i].y = -(this.points[i + 1].y - this.points[i - 1].y - this.coeffA[i - 1].y) *this.bi[i];
		}
		for (i = this.numP - 2; i > 0; i--) {
			this.delta[i].x = this.coeffA[i].x + this.delta[i + 1].x * this.bi[i];
			this.delta[i].y = this.coeffA[i].y + this.delta[i + 1].y * this.bi[i];
		}
	},

	getDecimatedVertices: function(step,doAddFinalVertex){
		if(doAddFinalVertex === undefined)doAddFinalVertex = true;
		if(this.vertices === undefined || this.vertices.length < 2){
			this.computeVertices(Spline2D.DEFAULT_RES);
		}
		var arcLen = this.getEstimatedArcLength();
		var uniform = [];
		var delta = step / arcLen;
		var currIdx = 0;
		for(var t =0; t<1.0; t+= delta){
			var currT = t * arcLen;
			while(currT >= this.arcLenIndex[currIdx]){
				currIdx++;
			}
			var p = this.vertices[currIdx - 1];
			var q = this.vertices[currIdx];
			var frac = ((currT - this.arcLenIndex[currIdx - 1]) / (this.arcLenIndex[currIdx] - this.arcLenIndex[currIdx - 1]));

			var i = p.interpolateTo(q,frac);
			uniform.push(i);
		}
		if(doAddFinalVertex){
			uniform.push(this.vertices[this.vertices.length-1]);
		}
		return uniform;
	},


	getEstimatedArcLength: function(){
		var len;
		var arcLen = 0;

		if(this.arcLenIndex === undefined || (this.arcLenIndex !== undefined && this.arcLenIndex.length != this.vertices.length)){
			this.arcLenIndex = [0];
			len = this.vertices.length;
		}
		else {
			len = this.arcLenIndex.length;
		}

		for(var i=1;i<len;i++){
			var p = this.vertices[i-1];
			var q = this.vertices[i];
			arcLen += p.distanceTo(q);
			this.arcLenIndex[i] = arcLen;
		}

		return arcLen;
	},


	getNumPoints: function(){
		return this.numP;
	},

	getPointList: function(){
		return this.pointList;
	},

	getTightness: function(){
		return this.tightness;
	},

	setPointList: function(plist){
		this.pointList =plist.slice(0);
		return this;
	},

	setTightness: function(tight){
		this.tightness = tight;
		this.invTightness = 1 / this.tightness;
		return this;
	},

	updateCoefficients: function(){
		this.numP = this.pointList.length;
		if(this.points === undefined || (this.points !== undefined && this.points.length != this.numP)) {
			this.coeffA = [];
			this.delta = [];
			this.bi = [];
			for(var i=0;i<this.numP; i++){
				this.coeffA[i] = new Vec2D();
				this.delta[i] = new Vec2D();
			}
			this.setTightness(this.tightness);
		}
		this.points = this.pointList.slice(0);
	}

};

Spline2D.DEFAULT_TIGHTNESS = 0.25;
Spline2D.DEFAULT_RES = 16;

module.exports = Spline2D;


},{"../internals/is":128,"./BernsteinPolynomial":66,"./Vec2D":92}],87:[function(require,module,exports){
var Vec3D = require('./Vec3D');
var is = require('../internals/is');
var BernsteinPolynomial = require('./BernsteinPolynomial');

    /**
     * @class
     * @member toxi
     * @param {Vec3D[]} points array of Vec3D's
     * @param {BernsteinPolynomial} [bernsteinPoly]
     */
    var	Spline3D = function(points, bernsteinPoly, tightness){
        if( arguments.length === 1 && !is.Array( points ) && is.Object(points) ){
            //if its an options object
            bernsteinPoly = bernsteinPoly || points.bernsteinPoly;
            tightness = tightness || points.tightness;
            points = points.points;
        }
        var i = 0, l;
        this.pointList = [];
        if( typeof tightness !== 'number' ){
            tightness = Spline3D.DEFAULT_TIGHTNESS;
        }
        this.setTightness(tightness);
        //this may be undefined
        this.bernstein = bernsteinPoly;
        if( points !== undefined ){
            for(i = 0, l = points.length; i<l; i++){
                this.add( points[i].copy() );
            }
        }
        this.coeffA = [];
        this.delta = [];
        this.bi = [];
        for (i = 0; i < this.numP; i++) {
            this.coeffA[i] = new Vec3D();
            this.delta[i] = new Vec3D();
            this.bi[i] = 0;
        }
        this.bi = [];
    };


    Spline3D.prototype = {
        add: function(p){
            this.pointList.push(p.copy());
            this.numP = this.pointList.length;
            return this;
        },


        computeVertices: function(res){
            this.updateCoefficients();
            if( res < 1 ){
                res = 1;
            }
            res++;
            if (this.bernstein === undefined || this.bernstein.resolution != res) {
                this.bernstein = new BernsteinPolynomial(res);
            }
            var bst = this.bernstein;
            this.vertices = [];
            this.findCPoints();
            var deltaP = new Vec3D();
            var deltaQ = new Vec3D();
            res--;
            for (var i = 0; i < this.numP - 1; i++) {
                var p = this.points[i];
                var q = this.points[i + 1];
                deltaP.set(this.delta[i]).addSelf(p);
                deltaQ.set(q).subSelf(this.delta[i + 1]);
                for (var k = 0; k < res; k++) {
                    var x = p.x * bst.b0[k] + deltaP.x * bst.b1[k] +
                        deltaQ.x * bst.b2[k] +
                        q.x * bst.b3[k];
                    var y = p.y * bst.b0[k] + deltaP.y * bst.b1[k] +
                        deltaQ.y * bst.b2[k] +
                        q.y * bst.b3[k];
                    var z = p.z * bst.b0[k] + deltaP.z * bst.b1[k] +
                        deltaQ.z * bst.b2[k] + q.z * bst.b3[k];
                    this.vertices.push(new Vec3D(x, y, z));
                }
            }
            this.vertices.push(this.points[this.points.length-1].copy());
            return this.vertices;
        },

        findCPoints: function(){
            this.bi[1] = -0.25;
            var i, p0, p2, d0;
            p0 = this.pointList[0];
            p2 = this.pointList[2];
            d0 = this.delta[0];
            this.coeffA[1].set(
                (p2.x - p0.x - d0.x) * this.tightness, //x
                (p2.y - p0.y - d0.y) * this.tightness, //y
                (p2.z - p0.z - d0.z) * this.tightness //z
            );
            for (i = 2; i < this.numP - 1; i++) {
                this.bi[i] = -1 / (this.invTightness + this.bi[i - 1]);
                this.coeffA[i].set(
                    -(this.points[i + 1].x - this.points[i - 1].x - this.coeffA[i - 1].x) * this.bi[i],
                    -(this.points[i + 1].y - this.points[i - 1].y - this.coeffA[i - 1].y) * this.bi[i],
                    -(this.points[i + 1].z - this.points[i - 1].z - this.coeffA[i - 1].z) * this.bi[i]
                );
            }
            for (i = this.numP - 2; i > 0; i--) {
                this.delta[i].set(
                    this.coeffA[i].x + this.delta[i + 1].x * this.bi[i],
                    this.coeffA[i].y + this.delta[i + 1].y * this.bi[i],
                    this.coeffA[i].z + this.delta[i + 1].z * this.bi[i]
                );
            }
        },

        getDecimatedVertices: function(step,doAddFinalVertex){
            if(doAddFinalVertex === undefined)doAddFinalVertex = true;
            if(this.vertices === undefined || this.vertices.length < 2){
                this.computeVertices(Spline3D.DEFAULT_RES);
            }
            var arcLen = this.getEstimatedArcLength();
            var uniform = [];
            var delta = step / arcLen;
            var currIdx = 0;
            for(var t =0; t<1.0; t+= delta){
                var currT = t * arcLen;
                while(currT >= this.arcLenIndex[currIdx]){
                    currIdx++;
                }
                var p = this.vertices[currIdx - 1];
                var q = this.vertices[currIdx];
                var frac = ((currT - this.arcLenIndex[currIdx - 1]) / (this.arcLenIndex[currIdx] - this.arcLenIndex[currIdx - 1]));

                var i = p.interpolateTo(q,frac);
                uniform.push(i);
            }
            if(doAddFinalVertex){
                uniform.push(this.vertices[this.vertices.length-1]);
            }
            return uniform;
        },


        getEstimatedArcLength: function(){
            var len;
            var arcLen = 0;

            if(this.arcLenIndex === undefined || (this.arcLenIndex !== undefined && this.arcLenIndex.length != this.vertices.length)){
                this.arcLenIndex = [0];
                len = this.vertices.length;
            }
            else {
                len = this.arcLenIndex.length;
            }

            for(var i=1;i<len;i++){
                var p = this.vertices[i-1];
                var q = this.vertices[i];
                arcLen += p.distanceTo(q);
                this.arcLenIndex[i] = arcLen;
            }

            return arcLen;
        },


        getNumPoints: function(){
            return this.numP;
        },

        getPointList: function(){
            return this.pointList;
        },

        getTightness: function(){
            return this.tightness;
        },

        setPointList: function(plist){
            this.pointList =plist.slice(0);
            return this;
        },

        setTightness: function(tight){
            this.tightness = tight;
            this.invTightness = 1 / this.tightness;
            return this;
        },

        updateCoefficients: function(){
            this.numP = this.pointList.length;
            if(this.points === undefined || (this.points !== undefined && this.points.length != this.numP)) {
                this.coeffA = [];
                this.delta = [];
                this.bi = [];
                for(var i=0;i<this.numP; i++){
                    this.coeffA[i] = new Vec3D();
                    this.delta[i] = new Vec3D();
                }
                this.setTightness(this.tightness);
            }
            this.points = this.pointList.slice(0);
        }

    };

    Spline3D.DEFAULT_TIGHTNESS = 0.25;
    Spline3D.DEFAULT_RES = 16;

    module.exports = Spline3D;


},{"../internals/is":128,"./BernsteinPolynomial":66,"./Vec3D":93}],88:[function(require,module,exports){

	/**
	* A version of the Sutherland-Hodgeman algorithm to clip 2D polygons optimized
	* for rectangular clipping regions.
	* More information: http://en.wikipedia.org/wiki/Sutherland-Hodgman_algorithm
	*/
	var Polygon2D = require('./Polygon2D'),
		Vec2D = require('./vectors').Vec2D;

	//function for finding clipped position on each edge
	//faster than a switch
	var clippedPos = {
		0: function( b, p1, p2 ){
			var x = p1.x + ( (b.y-p1.y) * (p2.x-p1.x) ) / ( p2.y-p1.y );
			return new Vec2D( x, b.y );
		},
		1: function( b, p1, p2 ){
			var bx = b.x + b.width;
			var y = p1.y + ( (bx-p1.x) * (p2.y-p1.y) ) / (p2.x-p1.x);
			return new Vec2D( bx, y );
		},
		2: function( b, p1, p2 ){
			var by = b.y + b.height;
			var x = p1.x + ( (by-p1.y) * (p2.x-p1.x) ) / ( p2.y-p1.y );
			return new Vec2D( x, by );
		},
		3: function( b, p1, p2 ){
			var y = p1.y + ( (b.x-p1.x) * (p2.y-p1.y) ) / ( p2.x-p1.x );
			return new Vec2D( b.x, y );
		}
	};

	/**
	 * method for getting the position on the edge
	 * @private
	 * @param {Rect} bounds
	 * @param {Number} edgeID
	 * @param {Vec2D} p1
	 * @param {Vec2D} p2
	 * @returns Vec2D
	 */
	var getClippedPosOnEdge = function( bounds, edgeID, p1, p2 ){
		return clippedPos[edgeID]( bounds, p1, p2 );
	};


	//tests for each edgeID whether the point is within the edge
	var insideEdgeConditions = {
		0: function( bounds, p ){
			return p.y >= bounds.y;
		},
		1: function( bounds, p ){
			return p.x < bounds.x + bounds.width;
		},
		2: function( bounds, p ){
			return p.y < bounds.y + bounds.height;
		},
		3: function( bounds, p ){
			return p.x >= bounds.x;
		}
	};

	/**
	 * @private
	 * @param {Rect} bounds
	 * @param {Vec2D} p
	 * @param {Number} edgeID
	 * @return {Boolean}
	 */
	var isInsideEdge = function( bounds, p, edgeID ){
		return insideEdgeConditions[edgeID]( bounds, p );
	};


	/**
	 * SutherlandHodgemanClipper constructor
	 * @param {Rect} bounds
	 */
	var SutherlandHodgemanClipper = function( bounds ){
		this.bounds = bounds;
	};

	SutherlandHodgemanClipper.prototype = {
		constructor: SutherlandHodgemanClipper,
		clipPolygon: function( poly ){
			var points = poly.vertices.slice(0), //copy of poly's points
				clipped, //will contain the clipped points
				edgeID = 0, //numeric id for each edge
				i = 0,
				num = points.length-1,
				p, //current point in loop
				q; //next point in loop

			//duplicate the first point ref
			points.push( points[0] );
			for( ; edgeID < 4; edgeID++ ){
				i = 0; //make sure the inner-loop starts over
                num = points.length - 1;
				clipped = []; //new clipped coords for this iteration
				for( ; i<num; i++ ){
					p = points[i];
					q = points[i+1];
					if( isInsideEdge( this.bounds, p, edgeID ) ){
						if( isInsideEdge( this.bounds, q, edgeID ) ){
							clipped.push( q.copy() );
						} else {
							clipped.push( getClippedPosOnEdge(this.bounds, edgeID, p, q) );
						}
						continue;
					}
					if( isInsideEdge( this.bounds, q, edgeID) ){
						clipped.push( getClippedPosOnEdge(this.bounds, edgeID, p, q) );
						clipped.push( q.copy() );
					}
				}
				if( clipped.length > 0 && clipped[0] !== clipped[clipped.length-1] ){
					clipped.push( clipped[0] );
				}
				points = clipped;
			}
			return new Polygon2D( points ).removeDuplicates( 0.001 );
		},
		getBounds: function(){
			return this.bounds;
		},
		//protected + unused in java
		isKnownVertex: function( list, q ){
			for( var i=0, l=list.length; i<l; i++){
				if( list[i].equalsWithTolerance(q, 0.0001) ){
					return true;
				}
			}
			return false;
		},
		setBounds: function( bounds ){
			this.bounds = bounds;
		}
	};

	module.exports = SutherlandHodgemanClipper;

},{"./Polygon2D":79,"./vectors":118}],89:[function(require,module,exports){


var Vec2D = require('./Vec2D'),
	Line2D = require('./Line2D'),
	Rect = require('./Rect'),
	Circle = require('./Circle'),
	Polygon2D = require('./Polygon2D'),
	mathUtils = require('../math/mathUtils');

/**
 * @class
 * @member toxi
 * @param {toxi.Vec2D} a
 * @param {toxi.Vec2D} b
 * @param {toxi.Vec2D} c
 */
var	Triangle2D = function(_a,_b,_c){
	if(arguments.length === 3){
		this.a = _a.copy();
		this.b = _b.copy();
		this.c = _c.copy();
	}
};

Triangle2D.createEquilateralFrom = function(a,b){
	var c = a.interpolateTo(b,0.5),
		dir = a.sub(b),
		n = dir.getPerpendicular();
		c.addSelf(n.normalizeTo(dir.magnitude() * mathUtils.SQRT3 / 2));
		return new Triangle2D(a,b,c);
};

Triangle2D.isClockwise = function(a,b,c){
	var determ = (b.x-a.x) * (c.y - a.y) - (c.x - a.x) * (b.y - a.y);
	return (determ < 0.0);
};


Triangle2D.prototype = {
	adjustTriangleSizeBy: function(offAB,offBC,offCA){
		if(arguments.length == 1){
			offBC = offAB;
			offCA = offAB;
		}
		this.computeCentroid();
		var ab = new Line2D(this.a.copy(),this.b.copy()).offsetAndGrowBy(offAB,100000,this.centroid);
		var bc = new Line2D(this.b.copy(),this.c.copy()).offsetAndGrowBy(offBC,100000,this.centroid);
		var ca = new Line2D(this.c.copy(),this.a.copy()).offsetAndGrowBy(offCA,100000,this.centroid);
		
		this.a = ab.intersectLine(ca).getPos();
		this.b = ab.intersectLine(bc).getPos();
		this.c = bc.intersectLine(ca).getPos();
		this.computeCentroid();
		return this;
	},
	
	computeCentroid: function(){
		this.centroid = this.a.add(this.b).addSelf(this.c).scaleSelf(1/3);
		return this.centroid;
	},
	/**
     * Checks if point vector is inside the triangle created by the points a, b
     * and c. These points will create a plane and the point checked will have
     * to be on this plane in the region between a,b,c.
     * 
     * Note: The triangle must be defined in clockwise order a,b,c
     * 
     * @return true, if point is in triangle.
     */
     containsPoint: function(_p){
		var v1 = _p.sub(this.a).normalize(),
			v2 = _p.sub(this.b).normalize(),
			v3 = _p.sub(this.c).normalize(),
			totalAngles = Math.acos(v1.dot(v2));
			totalAngles += Math.acos(v2.dot(v3));
			totalAngles += Math.acos(v3.dot(v1));
			return (mathUtils.abs(totalAngles- mathUtils.TWO_PI) <= 0.01);
     },
     
     copy: function(){
		return new Triangle2D(this.a.copy(),this.b.copy(),this.c.copy());
     },
     
     flipVertexOrder: function(){
		var t = this.a;
		this.a = this.c;
		this.c = t;
		return this;
     },
     
     getArea: function(){
		return this.b.sub(this.a).cross(this.c.sub(this.a)) * 0.5;
     },
     
     getBounds: function(){
		return new Rect(Vec2D.min(Vec2D.min(this.a,this.b),this.c),Vec2D.max(Vec2D.max(this.a,this.b),this.c));
     },
     
     getCircumCircle: function(){
		var cr = this.a.bisect(this.b).cross(this.b.bisect(this.c)),
			circa = new Vec2D(cr.x/cr.z, cr.y / cr.z),
			sa = this.a.distanceTo(this.b),
			sb = this.b.distanceTo(this.c),
			sc = this.c.distanceTo(this.a);
		var radius = sa * sb * sc / Math.sqrt((sa+sb+sc) * (-sa+sb+sc)*(sa-sb+sc)*(sa+sb-sc));
		return new Circle(circa,radius);
     },
     
     getCircumference: function(){
		return this.a.distanceTo(this.b) + this.b.distanceTo(this.c) + this.c.distanceTo(this.a);
     },
     
     getClosestPointTo: function(_p){
		var edge = new Line2D(this.a,this.b),
			Rab = edge.closestPointTo(_p),
			Rbc = edge.set(this.b,this.c).closestPointTo(_p),
			Rca = edge.set(this.c,this.a).closestPointTo(_p),
			dAB = _p.sub(Rab).magSquared(),
			dBC = _p.sub(Rbc).magSquared(),
			dCA = _p.sub(Rca).magSquared(),
			min = dAB,
			result = Rab;

		if(dBC < min){
			min = dBC;
			result = Rbc;
		}
		if(dCA < min){
			result = Rca;
		}
		return result;
	},
     
	intersectsTriangle: function(tri){
		if(this.containsPoint(tri.a) || this.containsPoint(tri.b) || this.containsPoint(tri.c)){
			return true;
		}
		if(tri.containsPoint(this.a) || tri.containsPoint(this.b) || tri.containsPoint(this.c)){
			return true;
		}
		var ea = [
			new Line2D(this.a,this.b),
			new Line2D(this.b,this.c),
			new Line2D(this.c,this.a)
		];
		var eb = [
			new Line2D(tri.a,tri.b),
			new Line2D(tri.b,tri.c),
			new Line2D(tri.c,tri.a)
		];
		for(var i=0,eaLen = ea.length;i<eaLen;i++){
			var la = ea[i];
			for(var j=0,ebLen = eb.length;j<ebLen;j++){
				var lb = eb[j];
				var type = la.intersectLine(lb).getType();
				if(type != Line2D.LineIntersection.Type.NON_INTERSECTING && type != Line2D.LineIntersection.Type.PARALLEL){
					return true;
				}
			}
		}
		return false;
	},
	
	isClockwise: function(){
		return Triangle2D.isClockwise(this.a,this.b,this.c);
	},
	
	set: function(a2,b2,c2){
		this.a = a2;
		this.b = b2;
		this.c = c2;
	},
	
	toPolygon2D: function(){
		var poly = new Polygon2D();
		poly.add(this.a.copy());
		poly.add(this.b.copy());
		poly.add(this.c.copy());
		return poly;
	},
	
	toString: function(){
		return "Triangle2D: "+this.a+ ","+this.b+","+this.c;
	}

};

module.exports = Triangle2D;


},{"../math/mathUtils":147,"./Circle":67,"./Line2D":74,"./Polygon2D":79,"./Rect":84,"./Vec2D":92}],90:[function(require,module,exports){


var mathUtils = require('../math/mathUtils'),
    Vec3D = require('./Vec3D'),
    Line3D = require('./Line3D'),
    AABB = require('./AABB');

/**
 * @class
 * @member toxi
 * @param {toxi.Vec3D} a
 * @param {toxi.Vec3D} b
 * @param {toxi.Vec3D} c
 */
var Triangle3D = function(a,b,c){
	this.a = a;
	this.b = b;
	this.c = c;
};

Triangle3D.createEquilateralFrom = function(a, b) {
    var c = a.interpolateTo(b, 0.5);
    var dir = b.sub(a);
    var n = a.cross(dir.normalize());
    c.addSelf(n.normalizeTo(dir.magnitude() * mathUtils.SQRT3 / 2));
    return new Triangle3D(a, b, c);
};

Triangle3D.isClockwiseInXY = function(a, b, c) {
	var determ = (b.x - a.x) * (c.y - a.y) - (c.x - a.x) * (b.y - a.y);
	return (determ < 0.0);
};

Triangle3D.isClockwiseInXZ = function(a, b,c) {
	var determ = (b.x - a.x) * (c.z - a.z) - (c.x - a.x) * (b.z - a.z);
	return (determ < 0.0);
};

Triangle3D.isClockwiseInYZ = function(a,b,c) {
    var determ = (b.y - a.y) * (c.z - a.z) - (c.y - a.y) * (b.z - a.z);
    return (determ < 0.0);
};


Triangle3D.prototype = {
	closestPointOnSurface: function(p) {
        var ab = this.b.sub(this.a);
        var ac = this.c.sub(this.a);
        var bc = this.c.sub(this.b);

        var pa = p.sub(this.a);
        var pb = p.sub(this.b);
        var pc = p.sub(this.c);

        var ap = a.sub(this.p);
        var bp = b.sub(this.p);
        var cp = c.sub(this.p);

        // Compute parametric position s for projection P' of P on AB,
        // P' = A + s*AB, s = snom/(snom+sdenom)
        var snom = pa.dot(ab);

        // Compute parametric position t for projection P' of P on AC,
        // P' = A + t*AC, s = tnom/(tnom+tdenom)
        var tnom = pa.dot(ac);

        if (snom <= 0.0 && tnom <= 0.0) {
            return this.a; // Vertex region early out
        }

        var sdenom = pb.dot(this.a.sub(this.b));
        var	tdenom = pc.dot(this.a.sub(this.c));

        // Compute parametric position u for projection P' of P on BC,
        // P' = B + u*BC, u = unom/(unom+udenom)
        var unom = pb.dot(bc);
        var udenom = pc.dot(this.b.sub(this.c));

        if (sdenom <= 0.0 && unom <= 0.0) {
            return this.b; // Vertex region early out
        }
        if (tdenom <= 0.0 && udenom <= 0.0) {
            return this.c; // Vertex region early out
        }

        // P is outside (or on) AB if the triple scalar product [N PA PB] <= 0
        var n = ab.cross(ac);
        var vc = n.dot(ap.crossSelf(bp));

        // If P outside AB and within feature region of AB,
        // return projection of P onto AB
        if (vc <= 0.0 && snom >= 0.0 && sdenom >= 0.0) {
            // return a + snom / (snom + sdenom) * ab;
            return this.a.add(ab.scaleSelf(snom / (snom + sdenom)));
        }

        // P is outside (or on) BC if the triple scalar product [N PB PC] <= 0
        var va = n.dot(bp.crossSelf(cp));
        // If P outside BC and within feature region of BC,
        // return projection of P onto BC
        if (va <= 0.0 && unom >= 0.0 && udenom >= 0.0) {
            // return b + unom / (unom + udenom) * bc;
            return this.b.add(bc.scaleSelf(unom / (unom + udenom)));
        }

        // P is outside (or on) CA if the triple scalar product [N PC PA] <= 0
        var vb = n.dot(cp.crossSelf(ap));
        // If P outside CA and within feature region of CA,
        // return projection of P onto CA
        if (vb <= 0.0 && tnom >= 0.0 && tdenom >= 0.0) {
            // return a + tnom / (tnom + tdenom) * ac;
            return this.a.add(ac.scaleSelf(tnom / (tnom + tdenom)));
        }

        // P must project inside face region. Compute Q using barycentric
        // coordinates
        var u = va / (va + vb + vc);
        var v = vb / (va + vb + vc);
        var w = 1.0 - u - v; // = vc / (va + vb + vc)
        // return u * a + v * b + w * c;
        return this.a.scale(u).addSelf(this.b.scale(v)).addSelf(this.c.scale(w));
    },
    
    computeCentroid: function() {
        this.centroid = this.a.add(this.b).addSelf(this.c).scaleSelf(1 / 3);
        return this.centroid;
    },
    
    computeNormal: function() {
        this.normal = this.a.sub(this.c).crossSelf(this.a.sub(this.b)).normalize();
        return this.normal;
    },
    
    containsPoint: function(p) {
        if (p.equals(this.a) || p.equals(this.b) || p.equals(this.c)) {
            return true;
        }
        var v1 = p.sub(this.a).normalize();
        var v2 = p.sub(this.b).normalize();
        var v3 = p.sub(this.c).normalize();

        var total_angles = Math.acos(v1.dot(v2));
        total_angles += Math.acos(v2.dot(v3));
        total_angles += Math.acos(v3.dot(v1));

        return (mathUtils.abs(total_angles - mathUtils.TWO_PI) <= 0.005);
    },

   flipVertexOrder: function() {
        var t = this.a;
        this.a = this.c;
        this.c = this.t;
        return this;
    },

    fromBarycentric: function(p) {
        return new Vec3D(this.a.x * p.x + this.b.x * p.y + this.c.x * p.z, this.a.y * p.x + this.b.y * p.y + this.c.y * p.z, this.a.z * p.x + this.b.z * p.y + this.c.z * p.z);
    },

    getBoundingBox: function() {
        var min = Vec3D.min(Vec3D.min(this.a, this.b), this.c);
        var max = Vec3D.max(Vec3D.max(this.a, this.b), this.c);
        return AABB.fromMinMax(min, max);
    },
    getClosestPointTo: function(p) {
        var edge = new Line3D(this.a, this.b);
        var Rab = edge.closestPointTo(p);
        var Rbc = edge.set(this.b, this.c).closestPointTo(p);
        var Rca = edge.set(this.c, this.a).closestPointTo(p);

        var dAB = p.sub(Rab).magSquared();
        var dBC = p.sub(Rbc).magSquared();
        var dCA = p.sub(Rca).magSquared();

        var min = dAB;
        var result = Rab;

        if (dBC < min) {
            min = dBC;
            result = Rbc;
        }
        if (dCA < min) {
            result = Rca;
        }

        return result;
    },

    isClockwiseInXY: function() {
        return Triangle3D.isClockwiseInXY(this.a, this.b, this.c);
    },

    isClockwiseInXZ: function() {
        return Triangle3D.isClockwiseInXY(this.a, this.b, this.c);
    },

    isClockwiseInYZ: function() {
        return Triangle3D.isClockwiseInXY(this.a, this.b, this.c);
    },
    
    set: function(a2, b2, c2) {
        this.a = a2;
        this.b = b2;
        this.c = c2;
    },

    toBarycentric: function(p) {
        var  e = b.sub(this.a).cross(this.c.sub(this.a));
        var  n = e.getNormalized();

        // Compute twice area of triangle ABC
        var areaABC = n.dot(e);
        // Compute lambda1
        var areaPBC = n.dot(this.b.sub(p).cross(this.c.sub(p)));
        var l1 = areaPBC / areaABC;

        // Compute lambda2
        var areaPCA = n.dot(this.c.sub(p).cross(this.a.sub(p)));
        var l2 = areaPCA / areaABC;

        // Compute lambda3
        var l3 = 1.0 - l1 - l2;

        return new Vec3D(l1, l2, l3);
    },

    toString: function() {
        return "Triangle: " + this.a + "," + this.b + "," + this.c;
    }

};

module.exports = Triangle3D;


},{"../math/mathUtils":147,"./AABB":64,"./Line3D":75,"./Vec3D":93}],91:[function(require,module,exports){
var mathUtils = require('../math/mathUtils');
var Triangle3D = require('./Triangle3D');
var Vec3D = require('./Vec3D');
var IsectData3D = require('./IsectData3D');

	/**
	 * @param {Triangle3D} [t]
	 */
	var TriangleIntersector = function(t){
		this.triangle = t || new Triangle3D();
		this.isectData = new IsectData3D();
	};

	TriangleIntersector.prototype = {
		getIntersectionData: function(){
			return this.isectData;
		},
		getTriangle: function(){
			return this.triangle;
		},
		/**
		 * @param {Ray3D} ray
		 * @returns {Boolean}
		 */
		intersectsRay: function(ray){
			this.isectData.isIntersection = false;
			var n = this.triangle.computeNormal(),
				dotprod = n.dot(ray.dir);
			if(dotprod < 0){
				var rt = ray.sub(this.triangle.a),
					t = -(n.x * rt.x + n.y * rt.y + n.z * rt.z) / (n.x * ray.dir.x + n.y * ray.dir.y + n.z * ray.dir.z);
				if(t >= mathUtils.EPS){
					var pos = ray.getPointAtDistance(t);
					//check if pos is inside triangle
					if(this.triangle.containsPoint(pos)){
						this.isectData.isIntersection = true;
						this.isectData.pos = pos;
						this.isectData.normal = n;
						this.isectData.dist = t;
						this.isectData.dir = this.isectData.pos.sub(ray).normalize();
					}
				}
			}
			return this.isectData.isIntersection;
		},
		/**
		 * @param {Triangle3D} tri
		 * @returns {TriangleIntersector}
		 */
		setTriangle: function(tri){
			this.triangle = tri;
			return this;
		}
	};

	module.exports = TriangleIntersector;


},{"../math/mathUtils":147,"./IsectData3D":73,"./Triangle3D":90,"./Vec3D":93}],92:[function(require,module,exports){

    //Vec2D is located in toxi/geom/vectors to circumvent circular dependencies
    module.exports = require('./vectors').Vec2D;

},{"./vectors":118}],93:[function(require,module,exports){

	//Vec3D is defined in toxi/geom/vectors to circumvent circular dependencies
	module.exports = require('./vectors').Vec3D;

},{"./vectors":118}],94:[function(require,module,exports){


var extend = require('../internals').extend,
	mathUtils = require('../math/mathUtils'),
	Vec3D = require('./Vec3D'),
	AxisAlignedCylinder = require('./AxisAlignedCylinder');

/**
 @module toxi/XAxisCylinder
 @constructor 
 X-axis aligned Cylinder
 @member toxi
 @author Kyle Phillips
 @augments AxisAlignedCylinder
 */
var	XAxisCylinder = function(pos,radius,length){
	AxisAlignedCylinder.apply(this,[pos,radius,length]);
};

extend(XAxisCylinder,AxisAlignedCylinder);

XAxisCylinder.prototype.containsPoint = function(p){
	if(mathUtils.abs(p.x - this.pos.x) < this.length * 0.5){
		var dy = p.y - this.pos.y;
		var dz = p.z - this.pos.z;
		if(Math.abs(dz * dz + dy * dy) < this.radiusSquared){
			return true;
		}
	}
	return false;
};
XAxisCylinder.prototype.getMajorAxis = function(){
	return Vec3D.Axis.X;
};


module.exports = XAxisCylinder;


},{"../internals":120,"../math/mathUtils":147,"./AxisAlignedCylinder":65,"./Vec3D":93}],95:[function(require,module,exports){


var extend = require('../internals').extend,
	mathUtils = require('../math/mathUtils'),
	Vec3D = require('./Vec3D'),
	AxisAlignedCylinder = require('./AxisAlignedCylinder');
	
/**
 @member toxi
 @class Y-axis aligned Cylinder
 */
var	YAxisCylinder = function(pos,radius,length){
	AxisAlignedCylinder.apply(this,[pos,radius,length]);
};
extend(YAxisCylinder,AxisAlignedCylinder);

YAxisCylinder.prototype.containsPoint = function(p){
	if(mathUtils.abs(p.y - this.pos.y) < this.length * 0.5){
		var dx = p.x - this.pos.x;
		var dz = p.z - this.pos.z;
		if(Math.abs(dz * dz + dx * dx) < this.radiusSquared){
			return true;
		}
	}
	return false;
};
YAxisCylinder.prototype.getMajorAxis = function(){
	return Vec3D.Axis.Y;
};

module.exports = YAxisCylinder;



},{"../internals":120,"../math/mathUtils":147,"./AxisAlignedCylinder":65,"./Vec3D":93}],96:[function(require,module,exports){


var extend = require('../internals').extend,
	mathUtils = require('../math/mathUtils'),
	Vec3D = require('./Vec3D'),
	AxisAlignedCylinder = require('./AxisAlignedCylinder');

/**
 @member toxi
 @constructor Z-axis aligned Cylinder
 */
var	ZAxisCylinder = function(pos,radius,length){
	AxisAlignedCylinder.apply(this,[pos,radius,length]);
};
extend(ZAxisCylinder,AxisAlignedCylinder);
ZAxisCylinder.prototype.containsPoint = function(p){
	 if (mathUtils.abs(p.z - this.pos.z) < this.length * 0.5) {
            var dx = p.x - this.pos.x;
            var dy = p.y - this.pos.y;
            if (Math.abs(dx * dx + dy * dy) < this.radiusSquared) {
                return true;
            }
	}
	return false;
};
ZAxisCylinder.prototype.getMajorAxis = function(){
	return Vec3D.Axis.Z;
};

module.exports = ZAxisCylinder;


},{"../internals":120,"../math/mathUtils":147,"./AxisAlignedCylinder":65,"./Vec3D":93}],97:[function(require,module,exports){

	exports.TriangleMesh = require('./mesh/TriangleMesh');
	exports.BezierPatch = require('./mesh/BezierPatch');
	exports.BoxSelector = require('./mesh/BoxSelector');
	exports.DefaultSelector = require('./mesh/DefaultSelector');
	exports.Face = require('./mesh/Face');
	//exports.LaplacianSmooth = require('./mesh/LaplacianSmooth');
	exports.OBJWriter = require('./mesh/OBJWriter');
	exports.PlaneSelector = require('./mesh/PlaneSelector');
	exports.SphereFunction = require('./mesh/SphereFunction');
	exports.SphericalHarmonics = require('./mesh/SphericalHarmonics');
	exports.SurfaceMeshBuilder = require('./mesh/SurfaceMeshBuilder');
	exports.SuperEllipsoid = require('./mesh/SuperEllipsoid');
	exports.Terrain = require('./mesh/Terrain');
	exports.TriangleMesh = require('./mesh/TriangleMesh');
	exports.Vertex = require('./mesh/Vertex');
	exports.VertexSelector = require('./mesh/VertexSelector');
	exports.WETriangleMesh = require('./mesh/WETriangleMesh');
	//exports.subdiv = require('./mesh/subdiv');


},{"./mesh/BezierPatch":98,"./mesh/BoxSelector":99,"./mesh/DefaultSelector":100,"./mesh/Face":101,"./mesh/OBJWriter":102,"./mesh/PlaneSelector":103,"./mesh/SphereFunction":104,"./mesh/SphericalHarmonics":105,"./mesh/SuperEllipsoid":106,"./mesh/SurfaceMeshBuilder":107,"./mesh/Terrain":108,"./mesh/TriangleMesh":109,"./mesh/Vertex":110,"./mesh/VertexSelector":111,"./mesh/WETriangleMesh":112}],98:[function(require,module,exports){

var Vec3D = require('../Vec3D'),
	TriangleMesh = require('./TriangleMesh'),
	is = require('../../internals/is');

/**
 * @class 4x4 bezier patch implementation with tesselation support (dynamic resolution)
 * for generating triangle mesh representations.
 * @member toxi
 */
var BezierPatch = function(points){
	if( is.Array(points) ){
		this.points = points;
	} else {
		this.points = [];
		for (var i = 0; i < 4; i++) {
			this.points[i] = this.points[i] || [];
			for (var j = 0; j < 4; j++) {
				this.points[i][j] = new Vec3D();
			}
		}
	}
};

BezierPatch.prototype = {

	computePointAt: function(u,v) {
		return BezierPatch.computePointAt(u, v, this.points);
	},

	set: function(x,y,p) {
		this.points[y][x].set(p);
		return this;
	},

	toMesh: function(mesh_or_res,_res) {
		var mesh,
			res;
		if(_res === undefined){
			mesh = new TriangleMesh();
			res = mesh_or_res;
		} else {
			mesh = mesh_or_res;
			res = _res;
		}
		var curr = new Array(res + 1),
			prev = new Array(res + 1);
		var r1 = 1.0 / res;
		for (var y = 0; y <= res; y++) {
			for (var x = 0; x <= res; x++) {
				var p = this.computePointAt(x * r1, y * r1, this.points);
				if (x > 0 && y > 0) {
					mesh.addFace(p, curr[x - 1], prev[x - 1]);
					mesh.addFace(p, prev[x - 1], prev[x]);
				}
				curr[x] = p;
			}
			var tmp = prev;
			prev = curr;
			curr = tmp;
		}
		return mesh;

	}
};

/**
Computes a single point on the bezier surface given by the 2d array of
control points. The desired point's coordinates have to be specified in
UV space (range 0.0 .. 1.0). The implementation does not check or enforce
the correct range of these coords and will not return valid points if the
range is exceeded.
@param u positive normalized U coordinate on the bezier surface
@param v positive normalized V coordinate on the bezier surface
@param points 4x4 array defining the patch's control points
@return point on surface
*/

BezierPatch.computePointAt = function(u,v,points){
		var u1 = 1 - u;
		var u1squared = u1 * u1 * 3 * u,
		u1cubed = u1 * u1 * u1,
		usquared = u * u,
		v1 = 1 - v,
		vsquared = v * v * 3,
		v1squared = v1 * v1 * 3,
		v1cubed = v1 * v1 * v1,
		vcubed = v * v * v,

		u1usq = u1 * usquared * 3,
		usqu = u * usquared,
		v1vsq = v1 * vsquared,
		v1sqv = v1squared * v;

		var p0 = points[0];
		var p1 = points[1];
		var p2 = points[2];
		var p3 = points[3];

		var x = u1cubed * (p0[0].x * v1cubed + p0[1].x * v1sqv + p0[2].x * v1vsq + p0[3].x * vcubed) + u1squared * (p1[0].x * v1cubed + p1[1].x * v1sqv + p1[2].x * v1vsq + p1[3].x * vcubed) + u1usq * (p2[0].x * v1cubed + p2[1].x * v1sqv + p2[2].x * v1vsq + p2[3].x * vcubed) + usqu * (p3[0].x * v1cubed + p3[1].x * v1sqv + p3[2].x * v1vsq + p3[3].x * vcubed);

		var y = u1cubed * (p0[0].y * v1cubed + p0[1].y * v1sqv + p0[2].y * v1vsq + p0[3].y * vcubed) + u1squared * (p1[0].y * v1cubed + p1[1].y * v1sqv + p1[2].y * v1vsq + p1[3].y * vcubed) + u1usq * (p2[0].y * v1cubed + p2[1].y * v1sqv + p2[2].y * v1vsq + p2[3].y * vcubed) + usqu * (p3[0].y * v1cubed + p3[1].y * v1sqv + p3[2].y * v1vsq + p3[3].y * vcubed);

		var z = u1cubed * (p0[0].z * v1cubed + p0[1].z * v1sqv + p0[2].z * v1vsq + p0[3].z * vcubed) + u1squared * (p1[0].z * v1cubed + p1[1].z * v1sqv + p1[2].z * v1vsq + p1[3].z * vcubed) + u1usq * (p2[0].z * v1cubed + p2[1].z * v1sqv + p2[2].z * v1vsq + p2[3].z * vcubed) + usqu * (p3[0].z * v1cubed + p3[1].z * v1sqv + p3[2].z * v1vsq + p3[3].z * vcubed);

		return new Vec3D(x, y, z);

};

module.exports = BezierPatch;


},{"../../internals/is":128,"../Vec3D":93,"./TriangleMesh":109}],99:[function(require,module,exports){


var extend = require('../../internals').extend,
    VertexSelector = require('./VertexSelector');

/**
 * @class
 * @member toxi
 * @augments toxi.VertexSelector
 */
var BoxSelector = function(mesh,box) {
    VertexSelector.apply(this,[mesh]);
    this.box = box;
};

extend(BoxSelector,VertexSelector);

BoxSelector.prototype.selectVertices = function() {
    this.clearSelection();
    var verts = this.mesh.getVertices();
    var l = verts.length;
    for (var i=0;i<l;i++) {
		var v = verts[i];
        if (this.box.containsPoint(v)) {
            this.selection.add(v);
        }
    }
    return this;
};


module.exports = BoxSelector;



},{"../../internals":120,"./VertexSelector":111}],100:[function(require,module,exports){

	var extend = require('../../internals').extend,
		VertexSelector = require('./VertexSelector');
	/**
	 * @class
	 * @member toxi
	 * @augments toxi.VertexSelector
	 */
	var DefaultSelector = function(mesh){
		VertexSelector.call(this,mesh);
	};
	extend(DefaultSelector,VertexSelector);
	DefaultSelector.prototype.selectVertices = function(){
		this.clearSelection();
		this.selection = this.selection.concat( this.mesh.getVertices() );
		return this;
	};

	module.exports = DefaultSelector;


},{"../../internals":120,"./VertexSelector":111}],101:[function(require,module,exports){

	//these 2 modules get defined
	var Face, WEFace;

	(function(){
		var Triangle3D = require('../Triangle3D');
		Face = function(a,b,c,uvA,uvB,uvC) {
			this.a = a;
			this.b = b;
			this.c = c;
			var aminusc = this.a.sub(this.c);
			var aminusb = this.a.sub(this.b);
			var cross = aminusc.crossSelf(aminusb);
			this.normal = cross.normalize();
			this.a.addFaceNormal(this.normal);
			this.b.addFaceNormal(this.normal);
			this.c.addFaceNormal(this.normal);
			
			if(uvA !== undefined){
				this.uvA = uvA;
				this.uvB = uvB;
				this.uvC = uvC;
			}
		};

		Face.prototype = {
			computeNormal: function() {
				this.normal = this.a.sub(this.c).crossSelf(this.a.sub(this.b)).normalize();
			},

			flipVertexOrder: function() {
				var t = this.a;
				this.a = this.b;
				this.b = t;
				this.normal.invert();
			},
			
			getCentroid: function() {
				return this.a.add(this.b).addSelf(this.c).scale(1.0 / 3);
			},
			
			getClass: function(){
				return "Face";
			},

			getVertices: function(verts) {
				if (verts !== undefined) {
					verts[0] = this.a;
					verts[1] = this.b;
					verts[2] = this.c;
				} else {
					verts = [ this.a, this.b, this.c ];
				}
				return verts;
			},

			toString: function() {
				return this.getClass() + " " + this.a + ", " + this.b + ", " + this.c;
			},

			/**
			 * Creates a generic {@link Triangle3D} instance using this face's vertices.
			 * The new instance is made up of copies of the original vertices and
			 * manipulating them will not impact the originals.
			 *
			 * @return triangle copy of this mesh face
			 */
			toTriangle: function() {
				return new Triangle3D(this.a.copy(), this.b.copy(), this.c.copy());
			}
		};
	}());

	//define WEFace
	(function(){
		var internals = require('../../internals');
		var proto;
		//@param {WEVertex} a
		//@param {WEVertex} b
		//@param {WEVertex} c
		//@param {Vec2D} [uvA]
		//@param {Vec2D} [uvB]
		//@param {Vec2D} [uvC]
		WEFace = function( a, b, c, uvA, uvB, uvC ){
			Face.call(this, a, b, c, uvA, uvB, uvC);
			this.edges = [];
		};
		internals.extend( WEFace, Face );
		proto = WEFace.prototype;
		//@param {WingedEdge} edge
		proto.addEdge = function( edge ){
			this.edges.push( edge );
		};
		proto.getEdges = function(){
			return this.edges;
		};
		//@param {WEVertex[]} [verts]
		proto.getVertices = function( verts ){
			if( verts !== undefined ){
				verts[0] = this.a;
				verts[1] = this.b;
				verts[2] = this.c;
			} else {
				verts = [ this.a, this.b, this.c ];
			}
			return verts;
		};
	}());
	Face.WEFace = WEFace;
	module.exports = Face;


},{"../../internals":120,"../Triangle3D":90}],102:[function(require,module,exports){
var internals = require('../../internals');

	//faster than str += " "
	var StringBuffer = function(){
		this.buffer = [];
	};
	StringBuffer.prototype.append = function(string){
		this.buffer.push(string);
		return this;
	};
	StringBuffer.prototype.toString = function(){
		return this.buffer.join("");
	};
	
	var OBJWriter = function(){
		this.VERSION = "0.3";
		this.__stringBuffer = new StringBuffer();
		this.objStream = undefined;
		this.__filename = "objwriter.obj";
		this._numVerticesWritten = 0;
		this._numNormalsWritten = 0;
	};


	OBJWriter.prototype = {
		/**
		 * begin saving
		 * @param {WritableStream | String} [stream] stream can be a node.js WritableStream, or it can be a filename or undefined
		 */
		beginSave: function( stream ){
			if( typeof stream == 'string' ){
				//if node.js create a writeable stream with this filename
			} else if( internals.hasProperties(stream,['write','end','writable'] && stream.writable)){
				this.objStream = stream;
			} else {
			}
			this._handleBeginSave();
		},

		endSave: function(){
			if(this.objStream !== undefined ){
				try {
					this.objStream.destroy();
				} catch( e ){

				}
			}
		},

		face: function( a, b, c ){
			this.__stringBuffer.append("f " + a + " " + b + " " + c + "\n");
		},

		faceList: function(){
			this.__stringBuffer.append("s off \n");
		},

		faceWithNormals: function( a, b, c, na, nb, nc ){
			this.__stringBuffer.append("f " + a + "//" + na + " " + b + "//" + nb + " " + c + "//" + nc + "\n");
		},

		getCurrNormalOffset: function(){
			return this._numNormalsWritten;
		},

		getCurrVertexOffset: function(){
			return this._numVerticesWritten;
		},

		//not in java version
		getOutput: function(){
			return this.__stringBuffer.toString();
		},

		_handleBeginSave: function(){
			this.numVerticesWritten = 0;
			this.numNormalsWrittern = 0;
			this.__stringBuffer.append("# generated by OBJExport (js) v" + this.VERSION+'\n');
		},

		newObject: function( name ){
			this.__stringBuffer.append("o " + name + "\n");
		},

		normal: function( vecN ){
			this.__stringBuffer.append("vn " + vecN.x + " " + vecN.y + " " + vecN.z + "\n");
			this._numNormalsWritten++;
		},

		vertex: function( vecV ){
			this.__stringBuffer.append("v " + vecV.x + " " + vecV.y + " " + vecV.z +"\n");
			this._numVerticesWritten++;
		}
	};


	module.exports = OBJWriter;


},{"../../internals":120}],103:[function(require,module,exports){

var extend = require('../../internals').extend,
    VertexSelector = require('./VertexSelector');

/**
 * @class
 * @member toxi
 * @augments toxi.VertexSelector
 */
var PlaneSelector = function(mesh,plane,classifier, tolerance) {
    VertexSelector.apply(this,[mesh]);
    this.plane = plane;
    this.classifier = classifier;
    this.tolerances = (tolerance === undefined)? 0.0001 : tolerance;
};
extend(PlaneSelector,VertexSelector);
PlaneSelector.prototype.selectVertices = function() {
    this.clearSelection();
    var verts = this.mesh.getVertices();
    var l = verts.length;
    for (var i=0;i<l;i++) {
		var v = verts[i];
        if (this.plane.classifyPoint(v, this.tolerance) == this.classifier) {
            this.selection.add(v);
        }
    }
    return this;
};

module.exports = PlaneSelector;


},{"../../internals":120,"./VertexSelector":111}],104:[function(require,module,exports){

	module.exports = require('../Sphere').SphereFunction;


},{"../Sphere":85}],105:[function(require,module,exports){


var mathUtils = require('../../math/mathUtils');

/**
 * @class Spherical harmonics surface evaluator based on code by Paul Bourke:
 * http://local.wasp.uwa.edu.au/~pbourke/geometry/sphericalh/
 * @member toxi
 */
var SphericalHarmonics = function(m) {
    this.m = m;
};

SphericalHarmonics.prototype = {
    // toxiclibs - FIXME check where flipped vertex order is coming from sometimes
    computeVertexFor: function(p,phi,theta) {
        var r = 0;
        r += Math.pow(mathUtils.sin(this.m[0] * theta), this.m[1]);
        r += Math.pow(mathUtils.cos(this.m[2] * theta), this.m[3]);
        r += Math.pow(mathUtils.sin(this.m[4] * phi), this.m[5]);
        r += Math.pow(mathUtils.cos(this.m[6] * phi), this.m[7]);

        var sinTheta = mathUtils.sin(theta);
        p.x = r * sinTheta * mathUtils.cos(phi);
        p.y = r * mathUtils.cos(theta);
        p.z = r * sinTheta * mathUtils.sin(phi);
        return p;
    },

    getPhiRange: function() {
        return mathUtils.TWO_PI;
    },

    getPhiResolutionLimit: function(res) {
        return res;
    },

    getThetaRange: function() {
        return mathUtils.PI;
    },

    getThetaResolutionLimit: function(res) {
        return res;
    }
};

module.exports = SphericalHarmonics;


},{"../../math/mathUtils":147}],106:[function(require,module,exports){


var mathUtils = require('../../math/mathUtils');

var TriangleMesh = require('./TriangleMesh');

/**
 * @class
 * @member toxi
 */
var	SuperEllipsoid = function(n1,n2) {
	this.p1 = n1;
	this.p2 = n2;
};

SuperEllipsoid.prototype = {
	computeVertexFor: function(p,phi,theta) {
		phi -= mathUtils.HALF_PI;
		var cosPhi = mathUtils.cos(phi),
			cosTheta = mathUtils.cos(theta),
			sinPhi = mathUtils.sin(phi),
			sinTheta = mathUtils.sin(theta);

		var t = mathUtils.sign(cosPhi) * Math.pow(mathUtils.abs(cosPhi), this.p1);
		p.x = t * mathUtils.sign(cosTheta) * Math.pow(Math.abs(cosTheta), this.p2);
		p.y = mathUtils.sign(sinPhi) * Math.pow(Math.abs(sinPhi), this.p1);
		p.z = t * mathUtils.sign(sinTheta) * Math.pow(mathUtils.abs(sinTheta), this.p2);
		return p;
	},
 
	getPhiRange: function() {
		return mathUtils.TWO_PI;
	},

	getPhiResolutionLimit: function(res) {
		return res / 2;
	},

	getThetaRange: function() {
		return mathUtils.TWO_PI;
	},

	getThetaResolutionLimit: function(res) {
		return res;
	}
};

module.exports = SuperEllipsoid;


},{"../../math/mathUtils":147,"./TriangleMesh":109}],107:[function(require,module,exports){

	module.exports = require('./meshCommon').SurfaceMeshBuilder;


},{"./meshCommon":114}],108:[function(require,module,exports){
/**
 * Implementation of a 2D grid based heightfield with basic intersection
 * features and conversion to {@link TriangleMesh}. The terrain is always
 * located in the XZ plane with the positive Y axis as up vector.
 */

	//toxi.geom.mesh.Terrain is in meshCommon to avoid circular dependencies
	module.exports = require('./meshCommon').Terrain;

},{"./meshCommon":114}],109:[function(require,module,exports){

	module.exports = require('./meshCommon').TriangleMesh;


},{"./meshCommon":114}],110:[function(require,module,exports){


	//WEVertex becomes a property on Vertex
	var Vertex, WEVertex;

	(function(){
		var extend = require('../../internals').extend,
			Vec3D = require('../Vec3D'),
			proto;

		Vertex = function(v,id) {
			Vec3D.call(this,v);
			this.id = id;
			this.normal = new Vec3D();
		};
		extend(Vertex,Vec3D);
		proto = Vertex.prototype;
		proto.addFaceNormal = function(n) {
			this.normal.addSelf(n);
		};

		proto.clearNormal = function() {
			this.normal.clear();
		};

		proto.computeNormal = function() {
			this.normal.normalize();
		};

		proto.toString = function() {
			return this.id + ": p: " + this.parent.toString.call(this) + " n:" + this.normal.toString();
		};
	}());

	(function(){
		var extend = require('../../internals').extend, proto;

		WEVertex = function( vec3d, id ){
			Vertex.call(this, vec3d, id);
			this.edges = [];
		};
		extend( WEVertex, Vertex );
		proto = WEVertex.prototype;
		//@param {WingedEdge} edge to add
		proto.addEdge = function( edge ){
			this.edges.push( edge );
		};
		//@param {Vec3D} dir
		//@param {Number} tolerance
		//@return {WingedEdge} closest
		proto.getNeighborInDirection = function( dir, tolerance ){
			var closest, delta = 1 - tolerance;
			var neighbors = this.getNeighbors();
			var d;
			for(var i=0, l=neighbors.length; i<l; i++){
				d = neighbors[i].sub( this ).normalize().dot( dir );
				if( d > delta ){
					closest = neighbors[i];
					delta = d;
				}
			}
			return closest;
		};
		//@return {WingedEdge[]} neighbors
		proto.getNeighbors = function(){
			var neighbors = [];
			for(var i=0, l=this.edges.length; i<l; i++){
				neighbors.push( this.edges[i].getOtherEndFor(this) );
			}
			return neighbors;
		};

		proto.removeEdge = function( e ){
			this.edges.splice( this.edges.indexOf( e ), 1 );
		};

		proto.toString = function(){
			return this.id + " {" + this.x + "," + this.y + "," + this.z + "}";
		};

		return WEVertex;
	}());
	Vertex.WEVertex = WEVertex;
	module.exports = Vertex;


},{"../../internals":120,"../Vec3D":93}],111:[function(require,module,exports){

/**
 * @class
 * @member toxi
 */
var VertexSelector = function(mesh){
	this.mesh = mesh;
	this.selection = [];
};

VertexSelector.prototype = {
	/**
     * Adds all vertices selected by the given selector to the current
     * selection. The other selector needs to be assigned to the same mesh
     * instance.
     * @param sel2 other selector
     * @return itself
     */
	addSelection: function(sel2){
		this.checkMeshIdentity(sel2.getMesh());
		this.selection = this.selection.concat(sel2.getSelection());
		return this;
	},
	/**
     * Utility function to check if the given mesh is the same instance as ours.
     * @param mesh2
     */
    checkMeshIdentity: function(mesh2) {
        if (mesh2 != this.mesh) {
            throw new Error("The given selector is not using the same mesh instance");
        }
    },
    
    clearSelection: function() {
        this.selection = [];
        return this;
    },

	getMesh: function() {
        return this.mesh;
    },
    
    getSelection: function() {
        return this.selection;
    },
    /**
     * Creates a new selection of all vertices NOT currently selected.
     * @return itself
     */
    invertSelection: function() {
        var newSel = [];
        var vertices = this.mesh.getVertices();
        var l = vertices.length;
        for (var i=0;i<l;i++) {
			var v = vertices[i];
            if (this.selection.indexOf(v) < 0 ) {
                newSel.push(v);
            }
        }
        this.selection = newSel;
        return this;
    },

	/**
     * Selects vertices identical or closest to the ones given in the list of
     * points.
     * @param points
     * @return itself
     */
    selectSimilar: function(points) {
		var l = points.length;
        for (var i=0;i<l;i++) {
			var v = points[i];
            this.selection.push( this.mesh.getClosestVertexToPoint(v) );
        }
        return this;
    },
    
     /**
     * Selects vertices using an implementation specific method. This is the
     * only method which needs to be implemented by any selector subclass.
     * @return itself
     */
   selectVertices: function(){
        return this;
   },
	
	setMesh: function(mesh) {
        this.mesh = mesh;
        this.clearSelection();
    },
    
    size: function() {
        return this.selection.length;
    },
	/**
     * Removes all vertices selected by the given selector from the current
     * selection. The other selector needs to be assigned to the same mesh
     * instance.
     * @param sel2 other selector
     * @return itself
     */
	subtractSelection: function(sel2) {
        this.checkMeshIdentity(sel2.getMesh());
        var removeThese = sel2.getSelection();
        var i,l = removeThese.length;
        for ( i=0; i<l; i++ ) {
            this.selection.splice( this.selection.indexOf(removeThese[i]), 1 );
        }
        return this;
	}
};

module.exports = VertexSelector;

   
  


},{}],112:[function(require,module,exports){

	module.exports = require('./meshCommon').WETriangleMesh;

},{"./meshCommon":114}],113:[function(require,module,exports){
var internals = require('../../internals');
var Line3D = require('../Line3D');

	var WingedEdge, proto;
	//@param {WEVertex} va
	//@param {WEVertex} vb
	//@param {WEFace} face
	//@param {Number} id
	WingedEdge = function( va, vb, face, id ){
		Line3D.call(this, va, vb);
		this.id = id;
		this.faces = [];
		this.addFace( face );
	};
	internals.extend( WingedEdge, Line3D );
	proto = WingedEdge.prototype;
	//@param {WEFace} face
	//@return {WingedEdge} this
	proto.addFace = function( face ){
		this.faces.push( face );
		return this;
	};
	//@return {WEFace[]} faces
	proto.getFaces = function() {
		return this.faces;
	};
	//@param {WEVertex} wevert
	//@return {WingedEdge}
	proto.getOtherEndFor = function( wevert ){
		if( this.a === wevert ){
			return this.b;
		}
		if( this.b === wevert ){
			return this.a;
		}
	};

	proto.remove = function(){
		var self = this;
		var rm = function( edges ){
			edges.splice( edges.indexOf( self ), 1 );
		};
		for( var i=0, l = this.faces.length; i<l; i++){
			rm( this.faces[i].edges );
		}
		rm( this.a.edges );
		rm( this.b.edges );
	};

	proto.toString = function(){
		return "id: " + this.id + " " + Line3D.prototype.toString.call(this) + " f: " + this.faces.length;
	};

	module.exports = WingedEdge;


},{"../../internals":120,"../Line3D":75}],114:[function(require,module,exports){


	var TriangleMesh, WETriangleMesh, Terrain, SurfaceMeshBuilder;

    var precision = 1000000;
    var format = function( n ){
        return Math.floor(n*precision) / precision;
    };
	//private: way of generating object keys for point map in meshes
	function vertexKeyGenerator( v ){
		//this will hold the ids consistently between vertex and vec3ds
		return "[ x: "+format(v.x)+ ", y: "+format(v.y)+ ", z: "+format(v.z)+"]";
	}
	//private: used for tracking edges in the internals.LinkedMap
	function edgeKeyGenerator( edge ){
        return edge.a.id + '->'+ edge.b.id;
	}


	//#TriangleMesh
	(function(){
		var	internals = require('../../internals'),
			mathUtils = require('../../math/mathUtils'),
			Matrix4x4 = require('../Matrix4x4'),
			Face = require('./Face'),
			Vec3D = require('../Vec3D'),
			Triangle3D = require('../Triangle3D'),
            TriangleIntersector = require('../TriangleIntersector'),
			Quaternion = require('../Quaternion'),
			Vertex = require('./Vertex');

		/**
		 * @class
		 * @member toxi
		 */
		//java TriangleMesh constructor is (name, numVertices, numFaces)
		//numVertices, numFaces is irrelevant with js arrays
		TriangleMesh = function(name){
			if(name === undefined)name = "untitled";
			this.init( name );
			return this;
		};

		TriangleMesh.__vertexKeyGenerator = vertexKeyGenerator;


		//statics
		TriangleMesh.DEFAULT_NUM_VERTICES = 1000;
		TriangleMesh.DEFAULT_NUM_FACES = 3000;
		TriangleMesh.DEFAULT_STRIDE = 4;

		TriangleMesh.prototype = {
            /**
             * add a Face to the mesh
             * @param {Vec3D} a
             * @param {Vec3D} b
             * @param {Vec3D} c
             * @param {Vec3D} [n] the normal
             * @param {Vec2D} [uvA]
             * @param {Vec2D} [uvB]
             * @param {Vec2D} [uvC]
             * @returns itself
             */
			addFace: function(a,b,c,n,uvA,uvB,uvC){
				//can be 3 args, 4 args, 6 args, or 7 args
				//if it was 6 swap vars around,
				if( arguments.length == 6 ){
					uvC = uvB;
					uvB = uvA;
					uvA = n;
					n = undefined;
				}
				//7 param method
				var va = this.__checkVertex(a);
				var vb = this.__checkVertex(b);
				var vc = this.__checkVertex(c);

				if(va.id === vb.id || va.id === vc.id || vb.id === vc.id){
					//console.log("ignoring invalid face: "+a + ", " +b+ ", "+c);
				} else {
					if(n != null ){
						var nc = va.sub(vc).crossSelf(va.sub(vb));
						if(n.dot(nc)<0){
							var t = va;
							va = vb;
							vb = t;
						}
					}
					var f = new Face(va,vb,vc,uvA,uvB,uvC);
					this.faces.push(f);
				}
				return this;
			},

            /**
             * add the contents of a TriangleMesh to this TriangleMesh
             * @param {TriangleMesh} m
             * @returns itself
             */
			addMesh: function(m){
				var l = m.getFaces().length;
				for(var i=0;i<l;i++){
					var f = m.getFaces()[i];
					this.addFace(f.a,f.b,f.c);
				}
				return this;
			},

			center: function(origin){
				this.computeCentroid();
				var delta = (origin != null) ? origin.sub(this.centroid) : this.centroid.getInverted();
				var l = this.vertices.length;
				for(var i=0;i<l;i++){
					var v = this.vertices[i];
					v.addSelf(delta);
				}

				return this.getBoundingBox();
			},

			__checkVertex: function(v){
				var vertex = this.vertexMap.get(v);
				if(!vertex){
					vertex = this._createVertex(v,this.uniqueVertexID++);
					this.vertexMap.put( vertex, vertex );
				}
				return vertex;
			},

			clear: function(){
				this.vertexMap = new internals.LinkedMap( vertexKeyGenerator );
				this.vertices = this.vertexMap.getArray();
				this.faces = [];
				this.bounds = undefined;
				return this;
			},

			computeCentroid: function(){
				this.centroid.clear();
				var l = this.vertices.length;
				for(var i=0;i<l;i++){
					this.centroid.addSelf(this.vertices[i]);
				}
				return this.centroid.scaleSelf(1.0/this.vertexMap.size()).copy();
			},

			computeFaceNormals: function(){
				var l = this.faces.length;
				for(var i=0;i<l;i++){
					this.faces[i].computeNormal();
				}
			},

			computeVertexNormals: function(){
				var l = this.vertices.length,
					i = 0;
				for(i=0;i<l;i++){
					this.vertices[i].clearNormal();
				}
				l = this.faces.length;
				for(i=0;i<l;i++){
					var f = this.faces[i];
					f.a.addFaceNormal(f.normal);
					f.b.addFaceNormal(f.normal);
					f.c.addFaceNormal(f.normal);
				}
				l = this.vertices.length;
				for(i=0;i<l;i++){
					this.vertices[i].computeNormal();
				}
				return this;
			},

			copy: function(){
				var m = new TriangleMesh(this.name+"-copy",this.vertexMap.size(),this.faces.length);
				var l = this.faces.length;
				for(var i=0;i<l;i++){
					var f = this.faces[i];
					m.addFace(f.a,f.b,f.c,f.normal,f.uvA,f.uvB,f.uvC);
				}
				return m;
			},

			_createVertex: function(vec3D,id){
				var vertex = new Vertex( vec3D, id );
				return vertex;
			},

			faceOutwards: function(){
				this.computeCentroid();
				var l = this.faces.length;
				for(var i=0;i<l;i++){
					var f = this.faces[i];
					var n = f.getCentroid().sub(this.centroid);
					var dot = n.dot(f.normal);
					if(dot <0) {
						f.flipVertexOrder();
					}
				}
				return this;
			},

			flipVertexOrder: function(){
				var l = this.faces.length,
                    tuv;
				for(var i=0;i<l;i++){
					var f = this.faces[i];
					var t = f.a;
					f.a = f.b;
					f.b = t;
                    if( f.uvA ){
                        tuv = f.uvA;
                        f.uvA = f.uvB;
                        f.uvB = tuv;
                    }
					f.normal.invert();
				}
				return this;
			},

			flipYAxis: function(){
				this.transform(new Matrix4x4().scaleSelf(1,-1,1));
				this.flipVertexOrder();
				return this;
			},

			getBoundingBox: function( ){
				var AABB = require('../AABB');
				var self = this;
				var minBounds = Vec3D.MAX_VALUE.copy();
				var maxBounds = Vec3D.MIN_VALUE.copy();
				var l = self.vertices.length;

				for(var i=0;i<l;i++){
					var v = self.vertices[i];
					minBounds.minSelf(v);
					maxBounds.maxSelf(v);
				}
				self.bounds = AABB.fromMinMax(minBounds,maxBounds);
				return self.bounds;
			},

			getBoundingSphere:function(){
				var Sphere = require('../Sphere');
				var radius = 0;
				this.computeCentroid();
				var l = this.vertices.length;
				for(var i=0;i<l;i++){
					var v = this.vertices[i];
					radius = mathUtils.max(radius,v.distanceToSquared(this.centroid));
				}
				var sph = new Sphere(this.centroid,Math.sqrt(radius));
				return sph;
			},

			getClosestVertexToPoint: function(p){
				var closest,
					minDist = Number.MAX_VALUE,
					l = this.vertices.length;
				for(var i=0;i<l;i++){
					var v = this.vertices[i];
					var d = v.distanceToSquared(p);
					if(d<minDist){
						closest = v;
						minDist = d;
					}
				}
				return closest;
			},

			/**
			 * Creates an array of unravelled normal coordinates. For each vertex the
			 * normal vector of its parent face is used. This method can be used to
			 * translate the internal mesh data structure into a format suitable for
			 * OpenGL Vertex Buffer Objects (by choosing stride=4). For more detail,
			 * please see {@link #getMeshAsVertexArray(float[], int, int)}
			 *
			 * @see #getMeshAsVertexArray(float[], int, int)
			 *
			 * @param normals existing float array or null to automatically create one
			 * @param offset start index in array to place normals
			 * @param stride stride/alignment setting for individual coordinates (min value = 3)
			 * @return array of xyz normal coords
			 */
			getFaceNormalsAsArray: function(normals, offset, stride) {
				if(arguments.length === 0){
					normals = undefined;
					offset = 0;
					stride = TriangleMesh.DEFAULT_STRIDE;
				} else if(arguments.length == 1 && typeof(arguments[0]) == 'object'){ //options object
					var opts = arguments[0];
					normals = opts.normals;
					offset = opts.offset;
					stride = opts.stride;
				}
				stride = mathUtils.max(stride, 3);
				if (normals === undefined) {
					normals = [];
				}
				var i = offset;
				var l = this.faces.length;
				for (var j=0;j<l;j++) {
					var f = this.faces[j];
					normals[i] = f.normal.x;
					normals[i + 1] = f.normal.y;
					normals[i + 2] = f.normal.z;
					i += stride;
					normals[i] = f.normal.x;
					normals[i + 1] = f.normal.y;
					normals[i + 2] = f.normal.z;
					i += stride;
					normals[i] = f.normal.x;
					normals[i + 1] = f.normal.y;
					normals[i + 2] = f.normal.z;
					i += stride;
				}
				return normals;
			},

			getFaces: function() {
				return this.faces;
			},

			/**
			 * Builds an array of vertex indices of all faces. Each vertex ID
			 * corresponds to its position in the vertices Array. The
			 * resulting array will be 3 times the face count.
			 * please see {@link #getUniqueVerticesAsArray([array])}
             * and {@link #getUniqueVertexNormalsAsArray([array])}
			 *
			 * @see #getUniqueVerticesAsArray([array])
             * @see #getUniqueVertexNormalsAsArray([array])
			 *
             * @param {Array|Unit16Array} [faceList] optionally provide an array or typed-array
			 * @return array of vertex indices
			 */
			getFacesAsArray: function(faceList) {
				faceList = faceList || [];
				var i = 0;
				var l = this.faces.length;
				for (var j=0;j<l;j++) {
					var f = this.faces[j];
					faceList[i++] = f.a.id;
					faceList[i++] = f.b.id;
					faceList[i++] = f.c.id;
				}
				return faceList;
			},

			getIntersectionData: function() {
				return this.intersector.getIntersectionData();
			},


			/**
			 * Creates an array of unravelled vertex coordinates for all faces. This
			 * method can be used to translate the internal mesh data structure into a
			 * format suitable for OpenGL Vertex Buffer Objects (by choosing stride=4).
			 * The order of the array will be as follows:
			 *
			 * <ul>
			 * <li>Face 1:
			 * <ul>
			 * <li>Vertex #1
			 * <ul>
			 * <li>x</li>
			 * <li>y</li>
			 * <li>z</li>
			 * <li>[optional empty indices to match stride setting]</li>
			 * </ul>
			 * </li>
			 * <li>Vertex #2
			 * <ul>
			 * <li>x</li>
			 * <li>y</li>
			 * <li>z</li>
			 * <li>[optional empty indices to match stride setting]</li>
			 * </ul>
			 * </li>
			 * <li>Vertex #3
			 * <ul>
			 * <li>x</li>
			 * <li>y</li>
			 * <li>z</li>
			 * <li>[optional empty indices to match stride setting]</li>
			 * </ul>
			 * </li>
			 * </ul>
			 * <li>Face 2:
			 * <ul>
			 * <li>Vertex #1</li>
			 * <li>...etc.</li>
			 * </ul>
			 * </ul>
			 *
			 * @param verts  an existing target array or null to automatically create one
			 * @param offset start index in arrtay to place vertices
			 * @param stride stride/alignment setting for individual coordinates
			 * @return array of xyz vertex coords
			 */
			getMeshAsVertexArray: function(verts, offset, stride) {
				if(verts ===undefined){
					verts = undefined;
				}
				if(offset === undefined){
					offset = 0;
				}
				if(stride === undefined){
					stride = TriangleMesh.DEFAULT_STRIDE;
				}
				stride = mathUtils.max(stride, 3);
				if (verts === undefined) {
					verts = [];
				}
				var i = 0,//offset
					l = this.faces.length;
				for (var j=0;j<l;++j) {
					var f = this.faces[j];
					verts[i] = f.a.x;
					verts[i + 1] = f.a.y;
					verts[i + 2] = f.a.z;
					i += stride;
					verts[i] = f.b.x;
					verts[i + 1] = f.b.y;
					verts[i + 2] = f.b.z;
					i += stride;
					verts[i] = f.c.x;
					verts[i + 1] = f.c.y;
					verts[i + 2] = f.c.z;
					i += stride;
				}
				return verts;
			},

			getNumFaces: function() {
				return this.faces.length;
			},

			getNumVertices: function() {
				return this.vertexMap.size();
			},

			getRotatedAroundAxis: function(axis,theta) {
				return this.copy().rotateAroundAxis(axis, theta);
			},

			getRotatedX: function(theta) {
				return this.copy().rotateX(theta);
			},

			getRotatedY: function(theta) {
				return this.copy().rotateY(theta);
			},

			getRotatedZ: function(theta) {
				return this.copy().rotateZ(theta);
			},

			getScaled: function(scale) {
				return this.copy().scale(scale);
			},

			getTranslated: function(trans) {
				return this.copy().translate(trans);
			},

            /**
             * flatten each vertex once into an array, useful for OpenGL attributes
             * @param {Array|Float32Array} [array] optionally pass in an array or typed-array to reuse
             * @return {Array|Float32Array}
             */
			getUniqueVerticesAsArray: function(array) {
				array = array || [];
				var i = 0;
				var l = this.vertices.length;
				for (var j=0;j<l;j++) {
					var v = this.vertices[j];
					array[i++] = v.x;
					array[i++] = v.y;
					array[i++] = v.z;
				}
				return array;
			},

            /**
             * flatten each vertex normal once into an array, useful for OpenGL attributes
             * @param {Array|Float32Array} [array] optionally pass in an array or typed-array to reuse
             * @return {Array|Float32Array}
             */
            getUniqueVertexNormalsAsArray: function(array){
                array = array || [];
                var n = 0;
                for(i=0; i<this.vertices.length; i++){
                    var v = this.vertices[i];
                    array[n++] = v.normal.x;
                    array[n++] = v.normal.y;
                    array[n++] = v.normal.z;
                }

                return array;
            },

            /**
             * get the UVs of all faces in flattened array that is, usefl for OpenGL attributes
             * any missing UV coordinates are returned as 0
             * @param {Array|Float32Array} [array] optionally pass in an array or typed-array to reuse
             * @return {Array|Float32Array}
             */
            getUVsAsArray: function(array){
                array = array || [];
                var i = 0;
                for(f=0; f<this.faces.length; f++){
                    var face = this.faces[f];
                    array[i++] = face.uvA ? face.uvA.x : 0;
                    array[i++] = face.uvA ? face.uvA.y : 0;
                    array[i++] = face.uvB ? face.uvB.x : 0;
                    array[i++] = face.uvB ? face.uvB.y : 0;
                    array[i++] = face.uvC ? face.uvC.x : 0;
                    array[i++] = face.uvC ? face.uvC.y : 0;
                }

                return array;
            },

			getVertexAtPoint: function(v) {
				var index;
				for(var i=0;i<this.vertices.length;i++){
					if(this.vertices[i].equals(v)){
						index = i;
					}
				}
				return this.vertices[index];
			},
			//my own method to help
			getVertexIndex: function(vec) {
				var matchedVertex = -1;
				var l = this.vertices.length;
				for(var i=0;i<l;i++)
				{
					var vert = this.vertices[i];
					if(vert.equals(vec))
					{
						matchedVertex =i;
					}
				}
				return matchedVertex;

			},

			getVertexForID: function(id) {
				var vertex,
					l = this.vertices.length;
				for (var i=0;i<l;i++) {
					var v = this.vertices[i];
					if (v.id == id) {
						vertex = v;
						break;
					}
				}
				return vertex;
			},

			/**
			 * Creates an array of unravelled vertex normal coordinates for all faces.
			 * This method can be used to translate the internal mesh data structure
			 * into a format suitable for OpenGL Vertex Buffer Objects (by choosing
			 * stride=4). For more detail, please see
			 * {@link #getMeshAsVertexArray(float[], int, int)}
			 *
			 * @see #getMeshAsVertexArray(float[], int, int)
			 *
			 * @param normals existing float array or null to automatically create one
			 * @param offset start index in array to place normals
			 * @param stride stride/alignment setting for individual coordinates (min value
			 *            = 3)
			 * @return array of xyz normal coords
			 */
			getVertexNormalsAsArray: function(normals, offset,stride) {
				if(offset === undefined)offset = 0;
				if(stride === undefined)stride = TriangleMesh.DEFAULT_STRIDE;
				stride = mathUtils.max(stride, 3);
				if (normals === undefined) {
					normals = [];
				}
				var i = offset;
				var l = this.faces.length;
				for (var j=0;j<l;j++) {
					var f = this.faces[j];
					normals[i] = f.a.normal.x;
					normals[i + 1] = f.a.normal.y;
					normals[i + 2] = f.a.normal.z;
					i += stride;
					normals[i] = f.b.normal.x;
					normals[i + 1] = f.b.normal.y;
					normals[i + 2] = f.b.normal.z;
					i += stride;
					normals[i] = f.c.normal.x;
					normals[i + 1] = f.c.normal.y;
					normals[i + 2] = f.c.normal.z;
					i += stride;
				}
				return normals;
			},

			getVertices: function() {
				return this.vertices;
			},

			handleSaveAsSTL: function(stl,useFlippedY) {
				/*f (useFlippedY) {
					stl.setScale(new Vec3D(1, -1, 1));
					for (Face f : faces) {
						stl.face(f.a, f.b, f.c, f.normal, STLWriter.DEFAULT_RGB);
					}
				} else {
					for (Face f : faces) {
						stl.face(f.b, f.a, f.c, f.normal, STLWriter.DEFAULT_RGB);
					}
				}
				stl.endSave();
				console.log(numFaces + " faces written");
				*/
				throw new Error("TriangleMesh.handleSaveAsSTL() currently not implemented");

			},

			init: function( name ){
				this.setName(name);
				this.matrix = new Matrix4x4();
				this.centroid = new Vec3D();
				this.vertexMap = new internals.LinkedMap( vertexKeyGenerator );
				//used for checking if theres an existing Vertex
				this.vertices = this.vertexMap.getArray();
				this.faces = [];
				this.uniqueVertexID = 0;
                this.intersector = new TriangleIntersector();
			},

			intersectsRay: function(ray) {
				var tri = this.intersector.getTriangle();
				var l = this.faces.length;
				var f;
				for (var i =0;i<l;i++) {
					f = this.faces[i];
					tri.a = f.a;
					tri.b = f.b;
					tri.c = f.c;
					if (this.intersector.intersectsRay(ray)) {
						return true;
					}
				}
				return false;
			},

			perforateFace: function(f, size) {
				var centroid = f.getCentroid();
				var d = 1 - size;
				var a2 = f.a.interpolateTo(centroid, d);
				var b2 = f.b.interpolateTo(centroid, d);
				var c2 = f.c.interpolateTo(centroid, d);
				this.removeFace(f);
				this.addFace(f.a, b2, a2);
				this.addFace(f.a, f.b, b2);
				this.addFace(f.b, c2, b2);
				this.addFace(f.b, f.c, c2);
				this.addFace(f.c, a2, c2);
				this.addFace(f.c, f.a, a2);
				return new Triangle3D(a2, b2, c2);
			},

			/**
			 * Rotates the mesh in such a way so that its "forward" axis is aligned with
			 * the given direction. This version uses the positive Z-axis as default
			 * forward direction.
			 *
			 * @param dir, new target direction to point in
			 * @param [forward], optional vector, defaults to Vec3D.Z_AXIS
			 * @return itself
			 */
			pointTowards: function(dir, forward) {
				forward = forward || Vec3D.Z_AXIS;
				return this.transform( Quaternion.getAlignmentQuat(dir, forward).toMatrix4x4(this.matrix), true);
			},

			removeFace: function(f) {
				var index = -1;
				var l = this.faces.length;
				for(var i=0;i<l;i++){
					if(this.faces[i] == f){
						index = i;
						break;
					}
				}
				if(index > -1){
					this.faces.splice(index,1);
				}
			},


			rotateAroundAxis: function(axis, theta) {
				return this.transform(this.matrix.identity().rotateAroundAxis(axis, theta));
			},

			rotateX: function(theta) {
				return this.transform(this.matrix.identity().rotateX(theta));
			},

			rotateY: function(theta) {
				return this.transform(this.matrix.identity().rotateY(theta));
			},

			rotateZ: function(theta) {
				return this.transform(this.matrix.identity().rotateZ(theta));
			},

			saveAsOBJ: function(obj, saveNormals) {
				if( saveNormals === undefined){
					saveNormals = true;
				}
				var vOffset = obj.getCurrVertexOffset() + 1,
					nOffset = obj.getCurrNormalOffset() + 1;
				obj.newObject( this.name );
				//vertices
				var v = 0, f = 0,
					vlen = this.vertices.length,
					flen = this.faces.length,
					face;
				for( v=0; v<vlen; v++ ){
					obj.vertex( this.vertices[v] );
				}
				//faces
				if( saveNormals ){
					//normals
					for( v=0; v<vlen; v++){
						obj.normal( this.vertices[v].normal );
					}
					for( f=0; f<flen; f++){
						face = this.faces[f];
						obj.faceWithNormals(face.b.id + vOffset, face.a.id + vOffset, face.c.id + vOffset, face.b.id + nOffset, face.a.id + nOffset, face.c.id + nOffset);
					}
				} else {
					for( f=0; f<flen; f++){
						face = this.faces[f];
						obj.face(face.b.id + vOffset, face.a.id + vOffset, face.c.id + vOffset);
					}
				}
			},

			saveAsSTL: function(a,b,c){
				throw new Error("TriangleMesh.saveAsSTL() currently not implemented");
			},

			scale: function(scale) {
				return this.transform(this.matrix.identity().scaleSelf(scale));
			},

			setName: function(name) {
				this.name = name;
				return this;
			},

			toString: function() {
				return "TriangleMesh: " + this.name + " vertices: " + this.getNumVertices() + " faces: " + this.getNumFaces();
			},

			toWEMesh: function() {
				return new WETriangleMesh(this.name).addMesh(this);
			},

			/**
			* Applies the given matrix transform to all mesh vertices. If the
			* updateNormals flag is true, all face normals are updated automatically,
			* however vertex normals need a manual update.
			* @param mat
			* @param updateNormals
			* @return itself
			*/
			transform: function(mat,updateNormals) {
				if(updateNormals === undefined){
					updateNormals = true;
				}
				var l = this.vertices.length;
				for(var i=0;i<l;i++){
					var v = this.vertices[i];
					v.set(mat.applyTo(v));
				}
				if(updateNormals){
					this.computeFaceNormals();
				}
				return this;
			},

			translate: function(x,y,z){
				if(arguments.length == 1){
					y = x.y;
					z = x.z;
					x = x.x;
				}
				return this.transform(this.matrix.identity().translateSelf(x,y,z));
			},

			updateVertex: function(origVec3D,newPos) {
				var vertex = this.vertexMap.get( origVec3D );
				if (vertex !== undefined ) {
					this.vertexMap.remove( vertex );
					vertex.set( newPos );
					this.vertexMap.put( newPos, vertex );
				}
				return this;
			}
		};
	}());

	//define WETriangleMesh
	(function( TriangleMesh ){
		//dependenecies
		var internals = require('../../internals');
		var Line3D = require('../Line3D');
		var Vec3D = require('../Vec3D');
		var WEVertex = require('./Vertex').WEVertex;
		var WEFace = require('./Face').WEFace;
		var WingedEdge = require('./WingedEdge');
		var MidpointSubdivision = require('./subdiv/MidpointSubdivision');

		//locals
		var proto;
		//constructor
		WETriangleMesh = function( name ){
			name = name || "untitled";
			TriangleMesh.call(this, name);
		};
		//passing these on to match java api
		WETriangleMesh.DEFAULT_NUM_FACES = TriangleMesh.DEFAULT_NUM_FACES;
		WETriangleMesh.DEFAULT_NUM_VERTICES = TriangleMesh.DEFAULT_NUM_VERTICES;

		internals.extend( WETriangleMesh, TriangleMesh );
		proto = WETriangleMesh.prototype;

		proto.addFace = function( a, b, c, norm, uvA, uvB, uvC ){
			if( arguments.length === 6 ){
				//6-arg a,b,c,uvA,uvB,uvC pass everything up one
				uvC = uvB;
				uvB = uvA;
				uvA = norm;
				norm = undefined;
			}

			var va = this.__checkVertex(a),
				vb = this.__checkVertex(b),
				vc = this.__checkVertex(c),
				nc, t, f;

			if( va.id === vb.id || va.id === vc.id || vb.id === vc.id ){
				console.log('Ignoring invalid face: ' + a + ',' + b + ',' + c);
			} else {
				if( norm !== undefined && norm !== null ){
					nc = va.sub(vc).crossSelf(va.sub(vb));
					if( norm.dot(nc) < 0 ){
						t = va;
						va = vb;
						vb = t;
					}
				}
				f = new WEFace(va, vb, vc, uvA, uvB, uvC);
				this.faces.push(f);
				this.updateEdge( va,vb,f );
				this.updateEdge( vb,vc,f );
				this.updateEdge( vc,va,f );
			}
			return this;
		};

		proto.center = function( origin, callback ){
			TriangleMesh.prototype.center.call(this, origin, callback);
			this.rebuildIndex();
		};

		proto.clear = function(){
			TriangleMesh.prototype.clear.call(this);
			this.edgeMap = new internals.LinkedMap( edgeKeyGenerator );
			this.edges = this.edgeMap.getArray();
			return this;
		};

		proto.copy = function(){
			var m = new WETriangleMesh( this.name+"-copy" );
			var i, l, f;
			l = this.faces.length;
			for(i=0; i<l; i++){
				f = this.faces[i];
				m.addFace( f.a, f.b, f.c, f.normal, f.uvA, f.uvB, f.uvC );
			}
			return m;
		};

		proto._createVertex = function( vec3D, id ){
			var vertex = new WEVertex( vec3D, id );
			return vertex;
		};
		//TODO: numEdges currently not hooked up
		proto.getNumEdges = function(){
			return this.edgeMap.size();
		};

		proto.init = function( name ){
			TriangleMesh.prototype.init.call(this, name);
			//this.edgeMap.put(va.toString()+vb.toString(), {WingedEdge} );
			this.edgeMap = new internals.LinkedMap( edgeKeyGenerator );
			this.edges = this.edgeMap.getArray();
			this.__edgeCheck = new Line3D( new Vec3D(), new Vec3D() );
			this.__uniqueEdgeID = 0;
		};

		proto.rebuildIndex = function(){
			//if vertices have moved / transformed a new vertexMap and edgeMap must be made
			//in order to have updated string keys of new positions
			//newVertexDictionary[{String}] = {Vertex}
			var newVertexMap = new internals.LinkedMap( vertexKeyGenerator );
			var newEdgeMap = new internals.LinkedMap( edgeKeyGenerator );

            var i = 0,
                arr = this.vertexMap.getArray();
            for(i=0; i<arr.length; i++){
				newVertexMap.put( arr[i], arr[i] );
			}

            arr = this.edgeMap.getArray();
            for(i=0; i<arr.length; i++){
				newEdgeMap.put( arr[i], arr[i] );
			}

			this.vertexMap = newVertexMap;
			this.vertices = newVertexMap.getArray();
			this.edgeMap = newEdgeMap;
			this.edges = newEdgeMap.getArray();
		};

		proto.removeEdge = function( edge ){
			edge.remove();
			var v = edge.a;
			if( v.edges.length === 0 ){
				this.vertexMap.remove( v );
			}
			v = edge.b;
			if( v.edges.length === 0 ){
				this.vertexMap.remove( v );
			}
            for(var i=0; i<edge.faces.length; i++){
                this.removeFace(edge.faces[i]);
            }
			var removed = this.edgeMap.remove( this.__edgeCheck.set( edge.a, edge.b ) );
            if(!removed){
                this.edgeMap.remove( this.__edgeCheck.set(edge.b, edge.a) );
            }
			if( removed !== edge ){
				throw new Error("Can't remove edge");
			}
		};

		proto.removeFace = function( face ){
			var i = this.faces.indexOf( face );
			if( i > -1 ){
				this.faces.splice( i, 1 );
			}

            i = 0;
            var edge;

            for(i=0; i<face.edges.length; i++){
                edge = face.edges[i];
                edge.faces.splice(edge.faces.indexOf(face), 1);
                if(edge.faces.length === 0){
                    this.removeEdge(edge);
                }
            }
		};

		//FIXME (FIXME in original java source)
		//TODO UNIT TEST .splice
		proto.removeUnusedVertices = function(){
			internals.each( this.vertices, function( vertex, i ){
				var isUsed = false;
				internals.each( this.faces, function( f ){
					if( f.a == vertex || f.b == vertex || f.c == vertex ){
						isUsed = true;
						return;
					}
				});
				if( !isUsed ){
					this.vertices.splice( i, 1 );
				}
			});
		};

		/**
		* @param {Vertex[] | Vertex{}} selection, array or object of Vertex's to remove
		*/
		proto.removeVertices = function( selection ){
			internals.each( selection, function( vertex ){
				//WingedEdgeVertex
				internals.each( vertex.edges, function( edge ){
					internals.each( edge.faces, function( face ){
						this.removeFace( face );
					});
				});
			});
		};

		//@param {Vec3D | WingedEdge} a or edge
		//@param {Vec3D | SubdivisionStrategy} b or strategy if edge supplied
		//@param {SubdivisionStrategy} [subDiv] or undefined
		proto.splitEdge = function( a, b, subDiv ){
			var edge, mid;
			if( arguments.length === 3 ){
				edge = this.edgeMap.get( this.__edgeCheck.set(a, b) );

                if(!edge){
                    this.edgeMap.get( this.__edgeCheck.set(b,a) );
                }

			} else if( arguments.length == 2 ){
				edge = a;
				subDiv = b;
			}
			mid = subDiv.computeSplitPoints( edge );
			this.splitFace( edge.faces[0], edge, mid);
			if( edge.faces.length > 1 ){
				this.splitFace( edge.faces[1], edge, mid);
			}
			this.removeEdge( edge );
		};
		//@param {WEFace} face,
		//@param {WingedEdge} edge,
		//@param {Vec3D[]} midPoints
		proto.splitFace = function( face, edge, midPoints ){
			var p, i, ec, prev, num, mid;
			for(i=0; i<3; i++){
				ec = face.edges[i];
				if( !ec.equals(edge) ){
					if( ec.a.equals(edge.a) || ec.a.equals(edge.b) ){
						p = ec.b;
					} else {
						p = ec.a;
					}
					break;
				}
			}
			num = midPoints.length;
			for(i=0; i<num; i++){
				mid = midPoints[i];
				if( i === 0 ){
					this.addFace( p, edge.a, mid, face.normal );
				} else {
					this.addFace( p, prev, mid, face.normal );
				}
				if( i === num-1 ){
					this.addFace( p, mid, edge.b, face.normal );
				}
				prev = mid;
			}
		};

		//@param {SubdivisionStrategy | Number} subDiv or minLength
		//@param {Number} [minLength] if also supplying subDiv
		proto.subdivide = function( subDiv, minLength ){
			if( arguments.length === 1 ){
				minLength = subDiv;
				subDiv = new MidpointSubdivision();
			}
			this.subdivideEdges( this.edges.slice(0), subDiv, minLength);
		};

		proto.subdivideEdges = function( origEdges, subDiv, minLength ){
			origEdges.sort( subDiv.getEdgeOrdering() );
			minLength *= minLength;
			var i=0, l = origEdges.length;
			for(i=0; i<l; i++){
				var e = origEdges[i];
				if( this.edges.indexOf( e ) > -1 ) {
					if( e.getLengthSquared() >= minLength ) {
						this.splitEdge( e, subDiv );
					}
				}
			}
		};

		proto.subdivideFaceEdges = function( faces, subDiv, minLength ){
			var fedges = [], i,j, f, e, fl, el;
			fl = this.faces.length;
			for(i=0; i<fl; i++){
				f = this.faces[i];
				el = f.edges.length;
				for(j=0; j<el; j++){
					e = f.edges[j];
					if( fedges.indexOf(e) < 0 ){
						fedges.push( e );
					}
				}
			}
			this.subdividEdges( fedges, subDiv, minLength );
		};

		proto.toString = function(){
			return "WETriangleMesh: " + this.name + " vertices: " + this.getNumVertices() + " faces: " + this.getNumFaces() + " edges:" + this.getNumEdges();
		};

		/**
		* Applies the given matrix transform to all mesh vertices. If the
		* updateNormals flag is true, all face normals are updated automatically,
		* however vertex normals still need a manual update.
		* @param {toxi.geom.Matrix4x4} matrix
		* @param {Boolean} [updateNormals]
		*/
		proto.transform = function( matrix, updateNormals ){
			if( updateNormals === undefined || updateNormals === null ){
				updateNormals = true;
			}
			for(var i=0, l = this.vertices.length; i<l; i++){
				matrix.applyToSelf( this.vertices[i] );
			}
			this.rebuildIndex();
			if( updateNormals ){
				this.computeFaceNormals();
			}
			return this;
		};

		proto.updateEdge = function( va, vb, face ){
			//dictionary key is va.toString() + vb.toString()
			//because Line3D toString would be different than WingedEdge toString()
			this.__edgeCheck.set( va, vb );
			var e = this.edgeMap.get( this.__edgeCheck );
            if(!e){
                //edge could be as b->a or a->b
                this.__edgeCheck.set(vb, va);
                e = this.edgeMap.get(this.__edgeCheck);
            }
			if( e !== undefined ){
				e.addFace( face );
			} else {
				e = new WingedEdge( va, vb, face, this.__uniqueEdgeID++ );
				this.edgeMap.put( e, e );
				va.addEdge( e );
				vb.addEdge( e );
			}
			face.addEdge( e );
		};
	}( TriangleMesh ));


	//Terrain
	(function( TriangleMesh ){
		var internals = require('../../internals'),
			mathUtils = require('../../math/mathUtils'),
			Interpolation2D = require('../../math/Interpolation2D'),
			Ray3D = require('../Ray3D'),
			TriangleIntersector = require('../TriangleIntersector'),
			Triangle3D = require('../Triangle3D'),
			IsectData3D = require('../IsectData3D'),
			Vec2D = require('../vectors').Vec2D,
			Vec3D = require('../vectors').Vec3D;
		/**
		* Constructs a new and initially flat terrain of the given size in the XZ
		* plane, centred around the world origin.
		*
		* @param {Number} width
		* @param {Number} depth
		* @param {toxi.geom.Vec2D | Number} scale
		*/
		Terrain = function(width, depth, scale){
			this.width = width;
			this._depth = depth;
			if( !internals.has.XY(scale) ){
				scale = new Vec2D(scale,scale);
			}
			this.setScale( scale );
			this.elevation = [];
			var i = 0,
				len = width * depth;
			for(i=0; i<len; i++){
				this.elevation[i] = 0;
			}

			this.__elevationLength = this.width * this._depth;
			this.vertices = [];
			var offset = new Vec3D(parseInt(this.width / 2,10), 0, parseInt(this._depth / 2,10)),
				scaleXZ = this.getScale().to3DXZ();
			i=0;
			for(var z = 0; z < this._depth; z++){
				for(var x = 0; x < this.width; x++){
					this.vertices[i++] = new Vec3D(x,0,z).subSelf(offset).scaleSelf(scaleXZ);
				}
			}
		};

		Terrain.prototype = {
			/**
			* @return number of grid cells along the Z axis.
			*/
			getDepth: function(){
				return this._depth;
			},
			getElevation: function(){
				return this.elevation;
			},
			/**
			* @param {Number} x
			* @param {Number} z
			* @return the elevation at grid point
			*/
			getHeightAtCell: function(x,z){
				//console.log("["+x+","+z+"]");
				return this.elevation[this._getIndex(x,z)];
			},
			/**
			* Computes the elevation of the terrain at the given 2D world coordinate
			* (based on current terrain scale).
			*
			* @param {Number} x scaled world coord x
			* @param {Number} z scaled world coord z
			* @return {Number} interpolated elevation
			*/
			getHeightAtPoint: function(x,z){
				var xx = x / this._scale.x + this.width * 0.5,
					zz = z / this._scale.y + this._depth * 0.5,
					y = 0,
					flxx = ~~x,
					flzz = ~~zz;

				if(xx >= 0 & xx < this.width && zz >= 0 && zz < this._depth){

					var x2 = ~~Math.min(xx + 1, this.width - 1),
						z2 = ~~Math.min(zz + 1, this._depth - 1);

					var	a = this.getHeightAtCell(flxx, flzz),
						b = this.getHeightAtCell(x2, flzz),
						c = this.getHeightAtCell(flxx, z2),
						d = this.getHeightAtCell(x2, z2);

					y = Interpolation2D.bilinear(xx,zz, flxx, flzz, x2, z2, a, b, c, d);
				}
				return y;
			},
			/**
			* Computes the array index for the given cell coords & checks if they're in
			* bounds. If not an {@link IndexOutOfBoundsException} is thrown.
			* @param {Number} x
			* @param {Number} z
			* @return {Number} array index
			*/
			_getIndex: function(x,z){
				var idx = z * this.width + x;
				if(idx < 0 || idx > this.__elevationLength){
					throw new Error("the given terrain cell is invalid: "+x+ ";"+z);
				}
				return idx;
			},
			/**
			 * @return {Vec2D} the scale
			 */
			getScale: function(){
				return this._scale;
			},

			getVertexAtCell: function(x,z){
				return this.vertices[this._getIndex(x,z)];
			},
			/**
			 * @return {Number} number of grid cells along X axis
			 */
			getWidth: function(){
				return this.width;
			},
			/**
			* Computes the 3D position (with elevation) and normal vector at the given
			* 2D location in the terrain. The position is in scaled world coordinates
			* based on the given terrain scale. The returned data is encapsulated in a
			* {@link toxi.geom.IsectData3D} instance.
			* @param {Number} x
			* @param {Number} z
			* @return {IsectData3D} intersection data parcel
			*/
			intersectAtPoint: function(x,z){
				var xx = x / this._scale.x + this.width * 0.5,
					zz = z / this._scale.y + this._depth * 0.5,
					isec = new IsectData3D();
				if(xx >= 0 && xx < this.width && zz >= 0 && zz < this._depth){
					var x2 = ~~Math.min(xx + 1, this.width - 1),
						z2 = ~~Math.min(zz + 1, this._depth - 1),
						flxx = ~~xx,
						flzz = ~~zz,

						a = this.getVertexAtCell(flxx,flzz),
						b = this.getVertexAtCell(x2, flzz),
						c = this.getVertexAtCell(x2,z2),
						d = this.getVertexAtCell(flxx,z2),
						r = new Ray3D(new Vec3D(x, 10000, z), new Vec3D(0, -1, 0)),
						i = new TriangleIntersector(new Triangle3D(a, b, d));

					if(i.intersectsRay(r)){
						isec = i.getIntersectionData();
					} else {
						i.setTriangle(new Triangle3D(b, c, d));
						i.intersectsRay(r);
						isec = i.getIntersectionData();
					}
				}
				return isec;
			},
			/**
			* Sets the elevation of all cells to those of the given array values.
			* @param {Array} elevation array of height values
			* @return itself
			*/
			setElevation: function(elevation){
				if(this.__elevationLength == elevation.length){
					for(var i = 0, len = elevation.length; i<len; i++){
						this.vertices[i].y = this.elevation[i] = elevation[i];
					}
				} else {
					throw new Error("the given elevation array size does not match terrain");
				}
				return this;
			},
			/**
			* Sets the elevation for a single given grid cell.
			* @param {Number} x
			* @param {Number} z
			* @param {Number} h new elevation value
			* @return itself
			*/
			setHeightAtCell: function(x,z,h){
				var index = this._getIndex(x,z);
				this.elevation[index] = h;
				this.vertices[index].y = h;
				return this;
			},
			setScale: function(scale){
				if(!internals.has.XY(scale) ){
					scale = new Vec2D(scale,scale);
				}
				this._scale = scale;
			},
			toMesh: function(){
				var opts = {
					mesh: undefined,
					minX: 0,
					minZ: 0,
					maxX: this.width,
					maxZ: this._depth
				};

				var v = this.vertices,
					w = this.width,
					d = this._depth;

				if(arguments.length == 1 && typeof arguments[0] == 'object'){
					//options object
					var args = arguments[0];
					opts.mesh = args.mesh || new TriangleMesh("terrain");
					opts.minX = args.minX || opts.minX;
					opts.minZ = args.minZ || opts.minZ;
					opts.maxX = args.maxX || opts.maxX;
					opts.maxZ = args.maxZ || opts.maxZ;
				} else if(arguments.length >= 5){
					opts.mesh = arguments[0];
					opts.minX = arguments[1];
					opts.minZ = arguments[2];
					opts.maxX  = arguments[3];
					opts.maxZ = arguments[4];
				}

				opts.mesh = opts.mesh || new TriangleMesh("terrain");
				opts.minX = mathUtils.clip(opts.minX, 0, w - 1);
				opts.maxX = mathUtils.clip(opts.maxX, 0, w);
				opts.minZ = mathUtils.clip(opts.minZ, 0, d-1);
				opts.maxZ = mathUtils.clip(opts.maxZ, 0, d);
				opts.minX++;
				opts.minZ++;


				for(var z = opts.minZ, idx = opts.minX * w; z < opts.maxZ; z++, idx += w){
					for(var x = opts.minX; x < opts.maxX; x++){
						opts.mesh.addFace(v[idx - w + x - 1], v[idx - w + x], v[idx + x - 1]);
						opts.mesh.addFace(v[idx - w + x], v[idx + x], v[idx + x - 1]);
					}
				}
				return opts.mesh;
			}
		};

	}( TriangleMesh ));


	//SurfaceMeshBuilder
	(function( TriangleMesh ){
		var Vec3D = require('../Vec3D'),
			Vec2D = require('../Vec2D');

		/**
		 * @class An extensible builder class for {@link TriangleMesh}es based on 3D surface
		 * functions using spherical coordinates. In order to create mesh, you'll need
		 * to supply a {@link SurfaceFunction} implementation to the builder.
		 * @member toxi
		 */
		SurfaceMeshBuilder = function(func) {
			this.func = func;
		};

		SurfaceMeshBuilder.prototype = {
			/*
				create a mesh from a surface,
				parameter options:
					1 - Object options
					1 - Number resolution
					3 - TriangleMesh mesh, Number resolution, Number size
					4 - TriangleMesh mesh, Number resolution, Number size, boolean isClosed
			*/
			createMesh: function() {
				var opts = {
					mesh: undefined,
					resolution: 0,
					size: 1,
					isClosed: true
				};
				if(arguments.length == 1){
					if(typeof arguments[0] == 'object'){ //options object
						var arg = arguments[0];
						//if a mesh was provided as an option, use it, otherwise make one
						opts.mesh = arg.mesh;
						opts.resolution = arg.res || arg.resoultion || 0;
						if(arg.size !== undefined){
							opts.size = arg.size;
						}
						if(arg.isClosed !== undefined){
							opts.isClosed = arg.isClosed;
						}
					} else { //resolution Number
						opts.resolution = arguments[0];
					}
				} else if(arguments.length > 2){
					opts.mesh = arguments[0];
					opts.resolution = arguments[1];
					opts.size = arguments[2];
					if(arguments.length == 4){
						opts.isClosed = arguments[3];
					}
				}
				var mesh = opts.mesh;
				if(mesh === undefined || mesh === null){
					mesh = new TriangleMesh();
				}

				var a = new Vec3D(),
					b = new Vec3D(),
					pa = new Vec3D(),
					pb = new Vec3D(),
					a0 = new Vec3D(),
					b0 = new Vec3D(),
					phiRes = this.func.getPhiResolutionLimit(opts.resolution),
					phiRange = this.func.getPhiRange(),
					thetaRes = this.func.getThetaResolutionLimit(opts.resolution),
					thetaRange = this.func.getThetaRange(),
					pres = 1.0 / phiRes, //(1 == opts.resolution % 2 ? opts.resolution - 0 : opts.resolution);
					tres = 1.0 / thetaRes,
					ires = 1.0 / opts.resolution,
					pauv = new Vec2D(),
					pbuv = new Vec2D(),
					auv = new Vec2D(),
					buv = new Vec2D();

				for (var p = 0; p < phiRes; p++) {
					var phi = p * phiRange * ires;
					var phiNext = (p + 1) * phiRange * ires;
					for (var t = 0; t <= thetaRes; t++) {
						var theta = t * thetaRange * ires;
						var func = this.func;
						a =	func.computeVertexFor(a, phiNext, theta).scaleSelf(opts.size);
						auv.set( t * tres, 1 - (p + 1) * pres);
						b = func.computeVertexFor(b, phi, theta).scaleSelf(opts.size);
						buv.set( t * tres, 1 - p * pres );
						if (b.equalsWithTolerance(a, 0.0001) ) {
							b.set(a);
						}
						if (t > 0) {
							if (t == thetaRes && opts.isClosed) {
								a.set(a0);
								b.set(b0);
							}
							mesh.addFace(pa, pb, a, pauv.copy(), pbuv.copy(), auv.copy());
							mesh.addFace(pb, b, a, pbuv.copy(), buv.copy(), auv.copy());
						} else {
							a0.set(a);
							b0.set(b);
						}
						pa.set(a);
						pb.set(b);
						pauv.set(auv);
						pbuv.set(buv);
					}
				}
				return mesh;
			},


			/**
			@return the function
			*/
			getFunction: function() {
				return this.func;
			},

			setFunction: function(func) {
				this.func = func;
			}
		};
	}( TriangleMesh ));

	exports.TriangleMesh = TriangleMesh;
	exports.WETriangleMesh = WETriangleMesh;
	exports.Terrain = Terrain;
	exports.SurfaceMeshBuilder = SurfaceMeshBuilder;



},{"../../internals":120,"../../math/Interpolation2D":140,"../../math/mathUtils":147,"../AABB":64,"../IsectData3D":73,"../Line3D":75,"../Matrix4x4":77,"../Quaternion":80,"../Ray3D":82,"../Sphere":85,"../Triangle3D":90,"../TriangleIntersector":91,"../Vec2D":92,"../Vec3D":93,"../vectors":118,"./Face":101,"./Vertex":110,"./WingedEdge":113,"./subdiv/MidpointSubdivision":116}],115:[function(require,module,exports){

	var EdgeLengthComparator = function(){};
	EdgeLengthComparator.prototype.compare = function( edge1, edge2 ){
		return -parseInt( edge1.getLengthSquared()-edge2.getLengthSquared(), 10);
	};
	module.exports = EdgeLengthComparator;

},{}],116:[function(require,module,exports){
var internals = require('../../../internals');
var SubdivisionStrategy = require('./SubdivisionStrategy');

	var MidpointSubdivison = function(){
		SubdivisionStrategy.call(this);
	};
	internals.extend( MidpointSubdivison, SubdivisionStrategy );
	MidpointSubdivison.prototype.computeSplitPoints = function( edge ){
		var mid = [];
		mid.push( edge.getMidPoint() );
		return mid;
	};

	module.exports = MidpointSubdivison;

},{"../../../internals":120,"./SubdivisionStrategy":117}],117:[function(require,module,exports){
var EdgeLengthComparator = require('./EdgeLengthComparator');
	
	var SubdivisionStrategy, proto;
	SubdivisionStrategy = function(){
		this._order = SubdivisionStrategy.DEFAULT_ORDERING;
	};
	SubdivisionStrategy.DEFAULT_ORDERING = new EdgeLengthComparator();
	proto = SubdivisionStrategy.prototype;

	proto.getEdgeOrdering = function(){
		return this._order.compare;
	};
	proto.setEdgeOrdering = function( order ){
		this._order = order;
	};

	module.exports = SubdivisionStrategy;


},{"./EdgeLengthComparator":115}],118:[function(require,module,exports){


	var mathUtils = require('../math/mathUtils');
	var has = require('../internals/has'),
		is = require('../internals/is');

	var hasXY = has.XY;
	var isRect = is.Rect;

	//modules defined within
	var Vec2D, Vec3D;

	/**
	@class a two-dimensional vector class
	*/
	Vec2D = function(a,b){
		if( hasXY(a) ){
			b = a.y;
			a = a.x;
		} else {
			a = a || 0;
			b = b || 0;
		}
		this.x = a;
		this.y = b;
	};

	Vec2D.Axis = {
		X: {
			getVector: function(){ return Vec2D.X_AXIS; },
			toString: function(){ return "Vec2D.Axis.X"; }
		},
		Y: {
			getVector: function(){ return Vec2D.Y_AXIS; },
			toString: function(){ return "Vec2D.Axis.Y"; }
		}
	};

	//private,
	var _getXY = (function(){
		//create a temp object to avoid creating garbage-collectable objects
		var temp = { x: 0, y: 0 };
		return function getXY(a,b) {
			if( a && typeof a.x === 'number' && typeof a.y === 'number' ){
				return a;
			} else {
				if(a !== undefined && b === undefined){
					b = a;
				}
				else if(a === undefined){ a = 0; }
				else if(b === undefined){ b = 0; }
			}
			temp.x = a;
			temp.y = b;
			return temp;
		};
	})();
	//public
	Vec2D.prototype = {

		abs: function() {
			this.x = Math.abs(this.x);
			this.y = Math.abs(this.y);
			return this;
		},

		add: function(a, b) {
			var v  = new Vec2D(a,b);
			v.x += this.x;
			v.y += this.y;
			return v;
		},

		/**
		 * Adds vector {a,b,c} and overrides coordinates with result.
		 *
		 * @param a
		 *				X coordinate
		 * @param b
		 *				Y coordinate
		 * @return itself
		 */
		addSelf: function(a,b) {
			var v = _getXY(a,b);
			this.x += v.x;
			this.y += v.y;
			return this;
		},

		angleBetween: function(v, faceNormalize) {
			if(faceNormalize === undefined){
				return Math.acos(this.dot(v));
			}
			var theta = (faceNormalize) ? this.getNormalized().dot(v.getNormalized()) : this.dot(v);
			return Math.acos(mathUtils.clipNormalized(theta));
		},

		//bisect() is in Vec2D_post.js

		/**
		 * Sets all vector components to 0.
		 *
		 * @return itself
		 */
		clear: function() {
			this.x = this.y = 0;
			return this;
		},

		compareTo: function(vec) {
			if (this.x == vec.x && this.y == vec.y) {
				return 0;
			}
			return this.magSquared() - vec.magSquared();
		},

		/**
		 * Forcefully fits the vector in the given rectangle.
		 *
		 * @param a
		 *		either a Rectangle by itself or the Vec2D min
		 * @param b
		 *		Vec2D max
		 * @return itself
		 */
		constrain: function(a,b) {
			if( hasXY( a ) && hasXY( b ) ){
				this.x = mathUtils.clip(this.x, a.x, b.x);
				this.y = mathUtils.clip(this.y, a.y, b.y);
			} else if( isRect( a ) ){
				this.x = mathUtils.clip(this.x, a.x, a.x + a.width);
				this.y = mathUtils.clip(this.y, a.y, a.y + a.height);
			}
			return this;
		},

		copy: function() {
			return new Vec2D(this);
		},

		cross: function(v) {
			return (this.x * v.y) - (this.y * v.x);
		},

		distanceTo: function(v) {
			if (v !== undefined) {
				var dx = this.x - v.x;
				var dy = this.y - v.y;
				return Math.sqrt(dx * dx + dy * dy);
			} else {
				return NaN;
			}
		},

		distanceToSquared: function(v) {
			if (v !== undefined) {
				var dx = this.x - v.x;
				var dy = this.y - v.y;
				return dx * dx + dy * dy;
			} else {
				return NaN;
			}
		},

		dot: function(v) {
			return this.x * v.x + this.y * v.y;
		},

		equals: function(obj) {
			if ( !hasXY( obj ) ) {
				return false;
			}
			return this.x == obj.x && this.y == obj.y;
		},

		equalsWithTolerance: function(v, tolerance) {
			if( !hasXY( v ) ){
				return false;
			}
			if (mathUtils.abs(this.x - v.x) < tolerance) {
				if (mathUtils.abs(this.y - v.y) < tolerance) {
					return true;
				}
			}
			return false;
		},

		floor: function() {
			this.x = mathUtils.floor(this.x);
			this.y = mathUtils.floor(this.y);
			return this;
		},

		/**
		 * Replaces the vector components with the fractional part of their current
		 * values
		 *
		 * @return itself
		 */
		frac: function() {
			this.x -= mathUtils.floor(this.x);
			this.y -= mathUtils.floor(this.y);
			return this;
		},

		getAbs: function() {
			return new Vec2D(this).abs();
		},

		getComponent: function(id) {
			if(typeof id == 'number'){
				id = (id === 0) ? Vec2D.Axis.X : Vec2D.Axis.Y;
			}
			if(id == Vec2D.Axis.X){
				return this.x;
			} else if(id == Vec2D.Axis.Y){
				return this.y;
			}
			return 0;
		},

		getConstrained: function(r) {
			return new Vec2D(this).constrain(r);
		},

		getFloored: function() {
			return new Vec2D(this).floor();
		},

		getFrac: function() {
			return new Vec2D(this).frac();
		},

		getInverted: function() {
			return new Vec2D(-this.x, -this.y);
		},

		getLimited: function(lim) {
			if (this.magSquared() > lim * lim) {
				return this.getNormalizedTo(lim);
			}
			return new Vec2D(this);
		},

		getNormalized: function() {
			return new Vec2D(this).normalize();
		},

		getNormalizedTo: function(len) {
			return new Vec2D(this).normalizeTo(len);
		},
		getPerpendicular: function() {
			return new Vec2D(this).perpendicular();
		},

		getReciprocal: function() {
			return new Vec2D(this).reciprocal();
		},

		getReflected: function(normal) {
			return new Vec2D(this).reflect(normal);
		},

		getRotated: function(theta) {
			return new Vec2D(this).rotate(theta);
		},

		getSignum: function() {
			return new Vec2D(this).signum();
		},

		heading: function() {
			return Math.atan2(this.y, this.x);
		},

		interpolateTo: function(v, f, s) {
			if(s === undefined){
				return new Vec2D(this.x + (v.x -this.x) * f, this.y + (v.y - this.y) * f);
			} else
			{
				return new Vec2D(s.interpolate(this.x,v.x,f),s.interpolate(this.y,v.y,f));
			}
		},

		/**
		 * Interpolates the vector towards the given target vector, using linear
		 * interpolation
		 *
		 * @param v
		 *				target vector
		 * @param f
		 *				interpolation factor (should be in the range 0..1)
		 * @return itself, result overrides current vector
		 */
		interpolateToSelf: function(v, f, s) {
			if(s === undefined) {
				this.x += (v.x - this.x) * f;
				this.y += (v.y - this.y) * f;
			} else {
				this.x = s.interpolate(this.x,v.x,f);
				this.y = s.interpolate(this.y,v.y,f);
			}
			return this;
		},

		invert: function() {
			this.x *= -1;
			this.y *= -1;
			return this;
		},

		isInCircle: function(sO,sR) {
			var d = this.sub(sO).magSquared();
			return (d <= sR * sR);
		},

		isInRectangle: function(rect) {
			if (this.x < rect.x || this.x > rect.x + rect.width) {
				return false;
			}
			if (this.y < rect.y || this.y > rect.y + rect.height) {
				return false;
			}
			return true;
		},

		isInTriangle: function(a,b,c) {
			var v1 = this.sub(a).normalize();
			var v2 = this.sub(b).normalize();
			var v3 = this.sub(c).normalize();

			var total_angles = Math.acos(v1.dot(v2));
			total_angles += Math.acos(v2.dot(v3));
			total_angles += Math.acos(v3.dot(v1));

			return (Math.abs(total_angles - mathUtils.TWO_PI) <= 0.005);
		},

		isMajorAxis: function(tol) {
			var ax = Math.abs(this.x);
			var ay = Math.abs(this.y);
			var itol = 1 - tol;
			if (ax > itol) {
				return (ay < tol);
			} else if (ay > itol) {
				return (ax < tol);
			}
			return false;
		},

		isZeroVector: function() {
			return Math.abs(this.x) < mathUtils.EPS && Math.abs(this.y) < mathUtils.EPS;
		},

		/**
		 * Adds random jitter to the vector in the range -j ... +j using the default
		 * {@link Random} generator of {@link MathUtils}.
		 *
		 * @param a
		 *				maximum x jitter or  Vec2D
		 * @param b
		 *				maximum y jitter or undefined
		 * @return itself
		 */
		jitter: function(a,b) {
			var v = _getXY(a,b);
			this.x += mathUtils.normalizedRandom() * v.x;
			this.y += mathUtils.normalizedRandom() * v.y;
			return this;
		},

		limit: function(lim) {
			if (this.magSquared() > lim * lim) {
				return this.normalize().scaleSelf(lim);
			}
			return this;
		},

		magnitude: function() {
			return Math.sqrt(this.x * this.x + this.y * this.y);
		},

		magSquared: function() {
			return this.x * this.x + this.y * this.y;
		},

		max: function(v) {
			return new Vec2D(mathUtils.max(this.x, v.x), mathUtils.max(this.y, v.y));
		},

		maxSelf: function(v) {
			this.x = mathUtils.max(this.x, v.x);
			this.y = mathUtils.max(this.y, v.y);
			return this;
		},

		min: function(v) {
			return new Vec2D(mathUtils.min(this.x, v.x), mathUtils.min(this.y, v.y));
		},

		minSelf: function(v) {
			this.x = mathUtils.min(this.x, v.x);
			this.y = mathUtils.min(this.y, v.y);
			return this;
		},

		/**
		 * Normalizes the vector so that its magnitude = 1
		 *
		 * @return itself
		 */
		normalize: function() {
			var mag = this.x * this.x + this.y * this.y;
			if (mag > 0) {
				mag = 1.0 / Math.sqrt(mag);
				this.x *= mag;
				this.y *= mag;
			}
			return this;
		},

		/**
		 * Normalizes the vector to the given length.
		 *
		 * @param len
		 *				desired length
		 * @return itself
		 */
		normalizeTo: function(len) {
			var mag = Math.sqrt(this.x * this.x + this.y * this.y);
			if (mag > 0) {
				mag = len / mag;
				this.x *= mag;
				this.y *= mag;
			}
			return this;
		},

		perpendicular: function() {
			var t = this.x;
			this.x = -this.y;
			this.y = t;
			return this;
		},

		positiveHeading: function() {
			var dist = Math.sqrt(this.x * this.x + this.y * this.y);
			if (this.y >= 0){
				return Math.acos(this.x / dist);
			}
			return (Math.acos(-this.x / dist) + mathUtils.PI);
		},

		reciprocal: function() {
			this.x = 1.0 / this.x;
			this.y = 1.0 / this.y;
			return this;
		},

		reflect: function(normal) {
			return this.set(normal.scale(this.dot(normal) * 2).subSelf(this));
		},

		/**
		 * Rotates the vector by the given angle around the Z axis.
		 *
		 * @param theta
		 * @return itself
		 */
		rotate: function(theta) {
			var co = Math.cos(theta);
			var si = Math.sin(theta);
			var xx = co * this.x - si * this.y;
			this.y = si * this.x + co * this.y;
			this.x = xx;
			return this;
		},

		roundToAxis: function() {
			if (Math.abs(this.x) < 0.5) {
				this.x = 0;
			} else {
				this.x = this.x < 0 ? -1 : 1;
				this.y = 0;
			}
			if (Math.abs(this.y) < 0.5) {
				this.y = 0;
			} else {
				this.y = this.y < 0 ? -1 : 1;
				this.x = 0;
			}
			return this;
		},

		scale: function(a, b) {
			var v = _getXY(a,b);
			return new Vec2D(this.x * v.x, this.y * v.y);
		},

		scaleSelf: function(a,b) {
			var v = _getXY(a,b);
			this.x *= v.x;
			this.y *= v.y;
			return this;
		},

		set: function(a,b){
			var v = _getXY(a,b);
			this.x = v.x;
			this.y = v.y;
			return this;
		},

		setComponent: function(id, val) {
			if(typeof id == 'number')
			{
				id = (id === 0) ? Vec2D.Axis.X : Vec2D.Axis.Y;
			}
			if(id === Vec2D.Axis.X){
				this.x = val;
			} else if(id === Vec2D.Axis.Y){
				this.y = val;
			}
			return this;
		},

		/**
		 * Replaces all vector components with the signum of their original values.
		 * In other words if a components value was negative its new value will be
		 * -1, if zero => 0, if positive => +1
		 *
		 * @return itself
		 */
		signum: function() {
			this.x = (this.x < 0 ? -1 : this.x === 0 ? 0 : 1);
			this.y = (this.y < 0 ? -1 : this.y === 0 ? 0 : 1);
			return this;
		},

		sub: function(a,b){
			var v = _getXY(a,b);
			return new Vec2D(this.x -v.x,this.y - v.y);
		},

		/**
		 * Subtracts vector {a,b,c} and overrides coordinates with result.
		 *
		 * @param a
		 *				X coordinate
		 * @param b
		 *				Y coordinate
		 * @return itself
		 */
		subSelf: function(a,b) {
			var v = _getXY(a,b);
			this.x -= v.x;
			this.y -= v.y;
			return this;
		},

		tangentNormalOfEllipse: function(eO,eR) {
			var p = this.sub(eO);

			var xr2 = eR.x * eR.x;
			var yr2 = eR.y * eR.y;

			return new Vec2D(p.x / xr2, p.y / yr2).normalize();
		},


		//to3D** methods are in Vec2D_post.js

		toArray: function() {
			return [this.x,this.y];
		},

		toCartesian: function() {
			var xx = (this.x * Math.cos(this.y));
			this.y = (this.x * Math.sin(this.y));
			this.x = xx;
			return this;
		},

		toPolar: function() {
			var r = Math.sqrt(this.x * this.x + this.y * this.y);
			this.y = Math.atan2(this.y, this.x);
			this.x = r;
			return this;
		},

		toString: function() {
			var s = "{x:"+this.x+", y:"+this.y+"}";
			return s;
		}

	};

	//these requires are in the functions because of a circular dependency
	Vec2D.prototype.bisect = function(b) {
		var diff = this.sub(b);
		var sum = this.add(b);
		var dot = diff.dot(sum);
		return new Vec3D(diff.x, diff.y, -dot / 2);
	};

	Vec2D.prototype.to3DXY = function() {
		return new Vec3D(this.x, this.y, 0);
	};

	Vec2D.prototype.to3DXZ = function() {
		return new Vec3D(this.x, 0, this.y);
	};

	Vec2D.prototype.to3DYZ = function() {
		return new Vec3D(0, this.x, this.y);
	};

	Vec2D.X_AXIS = new Vec2D(1,0);
	Vec2D.Y_AXIS = new Vec2D(0,1);
	Vec2D.ZERO = new Vec2D();
	Vec2D.MIN_VALUE = new Vec2D(Number.MIN_VALUE,Number.MIN_VALUE);
	Vec2D.MAX_VALUE = new Vec2D(Number.MAX_VALUE, Number.MAX_VALUE);
	Vec2D.fromTheta = function(theta){
		return new Vec2D(Math.cos(theta),Math.sin(theta));
	};
	Vec2D.max = function(a,b){
		return new Vec2D(mathUtils.max(a.x,b.x), mathUtils.max(a.y,b.y));
	};

	Vec2D.min = function(a, b) {
		return new Vec2D(mathUtils.min(a.x, b.x), mathUtils.min(a.y, b.y));
	};

	Vec2D.randomVector = function(rnd){
		var v = new Vec2D(Math.random()*2 - 1, Math.random() * 2 - 1);
		return v.normalize();
	};

	/**
	 * @member toxi
	 * @class Creates a new vector with the given coordinates. Coordinates will default to zero
	 * @param {Number} x the x
	 * @param {Number} y the y
	 * @param {Number} z the z
	 */
	Vec3D = function(x, y, z){
		if( has.XYZ( x ) ){
			this.x = x.x;
			this.y = x.y;
			this.z = x.z;
		} else if(x === undefined){ //if none or all were passed
			this.x = 0.0;
			this.y = 0.0;
			this.z = 0.0;
		} else {
			this.x = x;
			this.y = y;
			this.z = z;
		}
	};

	Vec3D.prototype = {

		abs: function(){
			this.x = Math.abs(this.x);
			this.y = Math.abs(this.y);
			this.z = Math.abs(this.z);
			return this;
		},

		add: function(a,b,c){
			if( has.XYZ( a ) ){
				return new Vec3D(this.x+a.x,this.y+a.y,this.z+a.z);
			}
			return new Vec3D(this.x+a,this.y+b,this.z+c);

		},
		/**
		 * Adds vector {a,b,c} and overrides coordinates with result.
		 *
		 * @param a
		 *				X coordinate
		 * @param b
		 *				Y coordinate
		 * @param c
		 *				Z coordinate
		 * @return itself
		 */
		addSelf: function(a,b,c){
			if(a !== undefined && b!== undefined && c !== undefined){
				this.x += a;
				this.y += b;
				this.z += c;
			} else {
				this.x += a.x;
				this.y += a.y;
				this.z += a.z;
			}
			return this;
		},

		angleBetween: function(vec, faceNormalizeBool){
			var theta;
			if(faceNormalizeBool){
				theta = this.getNormalized().dot(vec.getNormalized());
			} else {
				theta = this.dot(vec);
			}
			return Math.acos(theta);
		},


		clear: function(){
			this.x = this.y = this.z = 0;
			return this;
		},

		compareTo: function(vec){
			if(this.x == vec.x && this.y == vec.y && this.z == vec.z){
				return 0;
			}
			return (this.magSquared() - vec.magSqaured());
		},
		/**
		 * Forcefully fits the vector in the given AABB specified by the 2 given
		 * points.
		 *
		 * @param box_or_min
		 *		either the AABB box by itself, or your min Vec3D with accompanying max
		 * @param max
		 * @return itself
		 */
		constrain: function(box_or_min, max){
			var min;
			if( is.AABB( box_or_min ) ){
				max = box_or_min.getMax();
				min = box_or_min.getMin();
			} else {
				min = box_or_min;
			}
			this.x = mathUtils.clip(this.x, min.x, max.x);
			this.y = mathUtils.clip(this.y, min.y, max.y);
			this.z = mathUtils.clip(this.z, min.z, max.z);
			return this;
		},

		copy: function(){
			return new Vec3D(this);
		},

		cross: function(vec){
			return new Vec3D(this.y*vec.z - vec.y * this.z, this.z * vec.x - vec.z * this.x,this.x * vec.y - vec.x * this.y);
		},

		crossInto: function(vec, result){
			var vx = vec.x;
			var vy = vec.y;
			var vz = vec.z;
			result.x = this.y * vz - vy * this.z;
			result.y = this.z * vx-vz * this.x;
			result.z = this.x * vy - vx * this.y;
			return result;
		},
		/**
		 * Calculates cross-product with vector v. The resulting vector is
		 * perpendicular to both the current and supplied vector and overrides the
		 * current.
		 *
		 * @param v
		 *				the v
		 *
		 * @return itself
		 */
		crossSelf: function(vec){
			var cx = this.y * vec.z - vec.y * this.z;
			var cy = this.z * vec.x - vec.z * this.x;
			this.z = this.x * vec.y - vec.x * this.y;
			this.y = cy;
			this.x = cx;
			return this;
		},

		distanceTo: function(vec){
			if(vec !== undefined){
				var dx = this.x - vec.x;
				var dy = this.y - vec.y;
				var dz = this.z - vec.z;
				return Math.sqrt(dx * dx + dy * dy + dz * dz);
			}
			return NaN;
		},

		distanceToSquared: function(vec){
			if(vec !== undefined){
				var dx = this.x - vec.x;
				var dy = this.y - vec.y;
				var dz = this.z - vec.z;
				return dx * dx + dy*dy + dz*dz;
			}
			return NaN;
		},

		dot: function(vec){
			return this.x * vec.x + this.y * vec.y + this.z * vec.z;
		},

		equals: function(vec){
			if( has.XYZ( vec ) ){
				return this.x == vec.x && this.y == vec.y && this.z == vec.z;
			}
			return false;
		},

		equalsWithTolerance: function(vec,tolerance){
			if(Math.abs(this.x-vec.x) < tolerance){
				if(Math.abs(this.y - vec.y) < tolerance){
					if(Math.abs(this.z - vec.z) < tolerance){
						return true;
					}
				}
			}
			return false;
		},

		floor: function(){
			this.x = Math.floor(this.x);
			this.y = Math.floor(this.y);
			this.z = Math.floor(this.z);
			return this;
		},
		/**
		 * Replaces the vector components with the fractional part of their current
		 * values.
		 *
		 * @return itself
		 */
		frac: function(){
			this.x -= Math.floor(this.x);
			this.y -= Math.floor(this.y);
			this.z -= Math.floor(this.z);
			return this;
		},

		getAbs: function(){
			return new Vec3D(this).abs();
		},

		getComponent: function(id){
			if(typeof(id) == 'number'){
				if(id === Vec3D.Axis.X){
					id = 0;
				} else if(id === Vec3D.Axis.Y){
					id = 1;
				} else {
					id = 2;
				}
			}
			switch(id){
				case 0:
				return this.x;
				case 1:
				return this.y;
				case 2:
				return this.z;
			}
		},

		getConstrained: function(box){
			return new Vec3D(this).constrain(box);
		},

		getFloored: function(){
			return new Vec3D(this).floor();
		},

		getFrac: function(){
			return new Vec3D(this).frac();
		},

		getInverted: function(){
			return new Vec3D(-this.x,-this.y,-this.z);
		},

		getLimited: function(limit){
			if(this.magSquared() > limit * limit){
				return this.getNormalizedTo(limit);
			}
			return new Vec3D(this);
		},

		getNormalized: function(){
			return new Vec3D(this).normalize();
		},

		getNormalizedTo: function(length){
			return new Vec3D(this).normalizeTo(length);
		},

		getReciprocal: function(){
			return this.copy().reciprocal();
		},

		getReflected: function(normal){
			return this.copy().reflect(normal);
		},

		getRotatedAroundAxis: function(vec_axis,theta){
			return new Vec3D(this).rotateAroundAxis(vec_axis,theta);
		},

		getRotatedX: function(theta){
			return new Vec3D(this).rotateX(theta);
		},

		getRotatedY: function(theta){
			return new Vec3D(this).rotateY(theta);
		},

		getRotatedZ: function(theta){
			return new Vec3D(this).rotateZ(theta);
		},

		getSignum: function(){
			return new Vec3D(this).signum();
		},

		headingXY: function(){
			return Math.atan2(this.y,this.x);
		},

		headingXZ: function(){
			return Math.atan2(this.z,this.x);
		},

		headingYZ: function(){
			return Math.atan2(this.y,this.z);
		},

		immutable: function(){
			return this; //cant make read-only in javascript, implementing to avoid error
		},

		interpolateTo: function(v,f,s) {
			if(s === undefined){
				return new Vec3D(this.x + (v.x - this.x)*f, this.y + (v.y - this.y) * f, this.z + (v.z - this.z)*f);
			}
			return new Vec3D(s.interpolate(this.y,v.y,f),s.interpolate(this.y,v.y,f),s.interpolate(this.z,v.z,f));

		},

		interpolateToSelf: function(v,f,s){
			if(s === undefined){
				this.x += (v.x-this.x)*f;
				this.y += (v.y-this.y)*f;
				this.z += (v.z-this.z)*f;
			} else {
				this.x = s.interpolate(this.x,v.x,f);
				this.y = s.interpolate(this.y,v.y,f);
				this.z = s.interpolate(this.z,v.z,f);
			}
			return this;
		},

		invert: function(){
			this.x *= -1;
			this.y *= -1;
			this.z *= -1;
			return this;
		},

		isInAABB: function(box_or_origin, boxExtent){
			if(boxExtent) {
				var w = boxExtent.x;
				if(this.x < box_or_origin.x - w || this.x > box_or_origin.x + w){
					return false;
				}
				w = boxExtent.y;
				if(this.y < box_or_origin.y - w || this.y > box_or_origin.y + w){
					return false;
				}
				w = boxExtent.y;
				if(this.z < box_or_origin.z - w || this.y > box_or_origin.z + w){
					return false;
				}
			} else {
				var min = box_or_origin.getMin(),
					max = box_or_origin.getMax();
				if (this.x < min.x || this.x > max.x) {
					return false;
				}
				if (this.y < min.y || this.y > max.y) {
					return false;
				}
				if (this.z < min.z || this.z > max.z) {
					return false;
				}
			}
			return true;
		},

		isMajorAxis: function(tol){
			var ax = mathUtils.abs(this.x);
			var ay = mathUtils.abs(this.y);
			var az = mathUtils.abs(this.z);
			var itol = 1 - tol;
			if (ax > itol) {
				if (ay < tol) {
					return (az < tol);
				}
			} else if (ay > itol) {
				if (ax < tol) {
					return (az < tol);
				}
			} else if (az > itol) {
				if (ax < tol) {
					return (ay < tol);
				}
			}
			return false;
		},

		isZeroVector: function(){
			return Math.abs(this.x) < mathUtils.EPS && Math.abs(this.y) < mathUtils.EPS && mathUtils.abs(this.z) < mathUtils.EPS;
		},

		/**
		 * Add random jitter to the vector in the range -j ... +j using the default
		 * {@link Random} generator of {@link MathUtils}.
		 *
		 * @param j
		 *				the j
		 *
		 * @return the vec3 d
		 */
		jitter: function(a,b,c){
			if(b === undefined || c === undefined){
				b = c = a;
			}
			this.x += mathUtils.normalizedRandom()*a;
			this.y += mathUtils.normalizedRandom()*b;
			this.z += mathUtils.normalizedRandom()*c;
			return this;
		},

		limit: function(lim){
			if(this.magSquared() > lim * lim){
				return this.normalize().scaleSelf(lim);
			}
			return this;
		},

		magnitude: function(){
			return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);
		},

		magSquared: function(){
			return this.x*this.x+this.y*this.y+this.z*this.z;
		},

		maxSelf: function(vec){
			this.x = Math.max(this.x,vec.x);
			this.y = Math.max(this.y,vec.y);
			this.z = Math.max(this.z,vec.z);
			return this;
		},

		minSelf: function(vec){
			this.x = Math.min(this.x,vec.x);
			this.y = Math.min(this.y,vec.y);
			this.z = Math.min(this.z,vec.z);
			return this;
		},

		modSelf: function(basex,basey,basez){
			if(basey === undefined || basez === undefined){
				basey = basez = basex;
			}
			this.x %= basex;
			this.y %= basey;
			this.z %= basez;
			return this;
		},

		normalize: function(){
			var mag = Math.sqrt(this.x*this.x + this.y * this.y + this.z * this.z);
			if(mag > 0) {
				mag = 1.0 / mag;
				this.x *= mag;
				this.y *= mag;
				this.z *= mag;
			}
			return this;
		},

		normalizeTo: function(length){
			var mag = Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);
			if(mag>0){
				mag = length / mag;
				this.x *= mag;
				this.y *= mag;
				this.z *= mag;
			}
			return this;
		},

		reciprocal: function(){
			this.x = 1.0 / this.x;
			this.y = 1.0 / this.y;
			this.z = 1.0 / this.z;
			return this;
		},

		reflect: function(normal){
			return this.set(normal.scale(this.dot(normal)*2).subSelf(this));
		},
		/**
		 * Rotates the vector around the giving axis.
		 *
		 * @param axis
		 *				rotation axis vector
		 * @param theta
		 *				rotation angle (in radians)
		 *
		 * @return itself
		 */
		rotateAroundAxis: function(vec_axis,theta){
			var ax = vec_axis.x,
				ay = vec_axis.y,
				az = vec_axis.z,
				ux = ax * this.x,
				uy = ax * this.y,
				uz = ax * this.z,
				vx = ay * this.x,
				vy = ay * this.y,
				vz = ay * this.z,
				wx = az * this.x,
				wy = az * this.y,
				wz = az * this.z,
				si = Math.sin(theta),
				co = Math.cos(theta);
			var xx = (ax * (ux + vy + wz) + (this.x * (ay * ay + az * az) - ax * (vy + wz)) * co + (-wy + vz) * si);
			var yy = (ay * (ux + vy + wz) + (this.y * (ax * ax + az * az) - ay * (ux + wz)) * co + (wx - uz) * si);
			var zz = (az * (ux + vy + wz) + (this.z * (ax * ax + ay * ay) - az * (ux + vy)) * co + (-vx + uy) * si);
			this.x = xx;
			this.y = yy;
			this.z = zz;
			return this;
		},
		/**
		 * Rotates the vector by the given angle around the X axis.
		 *
		 * @param theta
		 *				the theta
		 *
		 * @return itself
		 */
		rotateX: function(theta){
			var co = Math.cos(theta);
			var si = Math.sin(theta);
			var zz = co *this.z - si * this.y;
			this.y = si * this.z + co * this.y;
			this.z = zz;
			return this;
		},
		/**
		 * Rotates the vector by the given angle around the Y axis.
		 *
		 * @param theta
		 *				the theta
		 *
		 * @return itself
		 */
		rotateY:function(theta) {
			var co = Math.cos(theta);
			var si = Math.sin(theta);
			var xx = co * this.x - si * this.z;
			this.z = si * this.x + co * this.z;
			this.x = xx;
			return this;
		},

		/**
		 * Rotates the vector by the given angle around the Z axis.
		 *
		 * @param theta
		 *				the theta
		 *
		 * @return itself
		 */
		rotateZ:function(theta) {
			var co = Math.cos(theta);
			var si = Math.sin(theta);
			var xx = co * this.x - si * this.y;
			this.y = si * this.x + co * this.y;
			this.x = xx;
			return this;
		},

		/**
		 * Rounds the vector to the closest major axis. Assumes the vector is
		 * normalized.
		 *
		 * @return itself
		 */
		roundToAxis:function() {
			if (Math.abs(this.x) < 0.5) {
				this.x = 0;
			} else {
				this.x = this.x < 0 ? -1 : 1;
				this.y = this.z = 0;
			}
			if (Math.abs(this.y) < 0.5) {
				this.y = 0;
			} else {
				this.y = this.y < 0 ? -1 : 1;
				this.x = this.z = 0;
			}
			if (Math.abs(this.z) < 0.5) {
				this.z = 0;
			} else {
				this.z = this.z < 0 ? -1 : 1;
				this.x = this.y = 0;
			}
			return this;
		},

		scale:function(a,b,c) {
			if( has.XYZ( a ) ) { //if it was a vec3d that was passed
				return new Vec3D(this.x * a.x, this.y * a.y, this.z * a.z);
			}
			else if(b === undefined || c === undefined) { //if only one float was passed
				b = c = a;
			}
			return new Vec3D(this.x * a, this.y * b, this.z * c);
		},

		scaleSelf: function(a,b,c) {
			if( has.XYZ( a ) ){
				this.x *= a.x;
				this.y *= a.y;
				this.z *= a.z;
				return this;
			} else if(b === undefined || c === undefined) {
				b = c = a;
			}
			this.x *= a;
			this.y *= b;
			this.z *= c;
			return this;
		},

		set: function(a,b,c){
			if( has.XYZ( a ) )
			{
				this.x = a.x;
				this.y = a.y;
				this.z = a.z;
				return this;
			} else if(b === undefined || c === undefined) {
				b = c = a;
			}
			this.x = a;
			this.y = b;
			this.z = c;
			return this;
		},

		setXY: function(v){
			this.x = v.x;
			this.y = v.y;
			return this;
		},

		shuffle:function(nIterations){
			var t;
			for(var i=0;i<nIterations;i++) {
				switch(Math.floor(Math.random()*3)){
					case 0:
					t = this.x;
					this.x = this.y;
					this.z = t;
					break;

					case 1:
					t = this.x;
					this.x = this.z;
					this.z = t;
					break;

					case 2:
					t = this.y;
					this.y = this.z;
					this.z = t;
					break;
				}
			}
			return this;
		},
		/**
		 * Replaces all vector components with the signum of their original values.
		 * In other words if a components value was negative its new value will be
		 * -1, if zero => 0, if positive => +1
		 *
		 * @return itself
		 */
		signum: function(){
			this.x = (this.x < 0 ? -1 : this.x === 0 ? 0 : 1);
			this.y = (this.y < 0 ? -1 : this.y === 0 ? 0 : 1);
			this.z = (this.z < 0 ? -1 : this.z === 0 ? 0 : 1);
			return this;
		},

		sub: function(a,b,c){
			if( has.XYZ( a ) ){
				return	new Vec3D(this.x - a.x, this.y - a.y, this.z - a.z);
			} else if(b === undefined || c === undefined) {
				b = c = a;
			}
			return new Vec3D(this.x - a, this.y - b, this.z - c);
		},

		subSelf: function(a,b,c){
			if( has.XYZ( a ) ){
				this.x -= a.x;
				this.y -= a.y;
				this.z -= a.z;
				return this;
			}
			else if(b === undefined || c === undefined){
				b = c= a;
			}
			this.x -= a;
			this.y -= b;
			this.z -= c;
			return this;
		},

		to2DXY: function(){
			return new Vec2D(this.x,this.y);
		},

		to2DXZ: function(){
			return new Vec2D(this.x,this.z);
		},

		to2DYZ: function(){
			return new Vec2D(this.y,this.z);
		},

		toArray: function(){
			return [this.x,this.y,this.z];
		},

		toArray4:function(w){
			var ta = this.toArray();
			ta[3] = w;
			return ta;
		},

		toCartesian: function(){
			var a = (this.x * Math.cos(this.z));
			var xx = (a * Math.cos(this.y));
			var yy = (this.x * Math.sin(this.z));
			var zz = (a * Math.sin(this.y));
			this.x = xx;
			this.y = yy;
			this.z = zz;
			return this;
		},

		toSpherical: function(){
			var xx = Math.abs(this.x) <= mathUtils.EPS ? mathUtils.EPS : this.x;
			var zz = this.z;

			var radius = Math.sqrt((xx * xx) + (this.y * this.y) + (zz * zz));
			this.z = Math.asin(this.y / radius);
			this.y = Math.atan(zz / xx) + (xx < 0.0 ? Math.PI : 0);
			this.x = radius;
			return this;
		},

		toString: function(){
			return "[ x: "+this.x+ ", y: "+this.y+ ", z: "+this.z+"]";
		}
	};
	/**
	 * Defines vector with all coords set to Float.MIN_VALUE. Useful for
	 * bounding box operations.
	*/
	Vec3D.MIN_VALUE = new Vec3D(Number.MIN_VALUE,Number.MIN_VALUE,Number.MIN_VALUE);
	/**
	 * Defines vector with all coords set to Float.MAX_VALUE. Useful for
	 * bounding box operations.
	*/
	Vec3D.MAX_VALUE = new Vec3D(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE);
	/**
	 * Creates a new vector from the given angle in the XY plane. The Z
	 * component of the vector will be zero.
	 *
	 * The resulting vector for theta=0 is equal to the positive X axis.
	 *
	 * @param theta
	 *				the theta
	 *
	 * @return new vector in the XY plane
	 */
	Vec3D.fromXYTheta = function(theta) {
		return new Vec3D(Math.cos(theta),Math.sin(theta),0);
	};
	/**
	 * Creates a new vector from the given angle in the XZ plane. The Y
	 * component of the vector will be zero.
	 *
	 * The resulting vector for theta=0 is equal to the positive X axis.
	 *
	 * @param theta
	 *				the theta
	 *
	 * @return new vector in the XZ plane
	 */
	Vec3D.fromXZTheta = function(theta) {
			return new Vec3D(Math.cos(theta), 0, Math.sin(theta));
	};

	/**
	 * Creates a new vector from the given angle in the YZ plane. The X
	 * component of the vector will be zero.
	 *
	 * The resulting vector for theta=0 is equal to the positive Y axis.
	 *
	 * @param theta
	 *				the theta
	 *
	 * @return new vector in the YZ plane
	 */
	Vec3D.fromYZTheta = function(theta) {
		return new Vec3D(0, Math.cos(theta), Math.sin(theta));
	};

	/**
	 * Constructs a new vector consisting of the largest components of both
	 * vectors.
	 *
	 * @param b
	 *				the b
	 * @param a
	 *				the a
	 *
	 * @return result as new vector
	 */
	Vec3D.max = function(a, b) {
		return new Vec3D(Math.max(a.x, b.x), Math.max(a.y,b.y), Math.max(a.z, b.z));
	};

	/**
	 * Constructs a new vector consisting of the smallest components of both
	 * vectors.
	 *
	 * @param b
	 *				comparing vector
	 * @param a
	 *				the a
	 *
	 * @return result as new vector
	 */
	Vec3D.min = function(a,b) {
		return new Vec3D(Math.min(a.x, b.x), Math.min(a.y, b.y), Math.min(a.z, b.z));
	};


	/**
	 * Static factory method. Creates a new random unit vector using the Random
	 * implementation set as default for the {@link MathUtils} class.
	 *
	 * @return a new random normalized unit vector.
	 */

	Vec3D.randomVector = function() {
		var v = new Vec3D(Math.random()*2 - 1, Math.random() * 2 -1, Math.random()* 2 - 1);
		return v.normalize();
	};
	Vec3D.ZERO = new Vec3D(0,0,0);
	Vec3D.X_AXIS = new Vec3D(1,0,0);
	Vec3D.Y_AXIS = new Vec3D(0,1,0);
	Vec3D.Z_AXIS = new Vec3D(0,0,1);
	Vec3D.Axis = {
		X: {
			getVector: function(){
				return Vec3D.X_AXIS;
			},
			toString: function(){
				return "Vec3D.Axis.X";
			}
		},
		Y: {
			getVector: function(){
				return Vec3D.Y_AXIS;
			},
			toString: function(){
				return "Vec3D.Axis.Y";
			}
		},
		Z: {
			getVector: function(){
				return Vec3D.Z_AXIS;
			},
			toString: function(){
				return "Vec3D.Axis.Z";
			}
		}
	};

	exports.Vec2D = Vec2D;
	exports.Vec3D = Vec3D;


},{"../internals/has":127,"../internals/is":128,"../math/mathUtils":147}],119:[function(require,module,exports){

		exports.color = require('./color');
		exports.geom = require('./geom');
		exports.internals = require('./internals');
		exports.math = require('./math');
		exports.physics2d = require('./physics2d');
		exports.processing = require('./processing');
		exports.THREE = require('./THREE');
		exports.util = require('./util');


},{"./THREE":24,"./color":26,"./geom":63,"./internals":120,"./math":134,"./physics2d":162,"./processing":182,"./util":184}],120:[function(require,module,exports){

/**
 * @namespace contains helper functions used internally
 * THESE MODULES ARE NOT ALLOWED TO HAVE DEPENDENCIES OUTSIDE
 * THE `internals` PACKAGE
 */

//do type-tests to detect properties on objects
exports.is = require('./internals/is');
//test if objects have properties
exports.has = require('./internals/has');
//extend the prototype of a class
exports.extend = require('./internals/extend');
exports.each = require('./internals/each');
exports.bind = require('./internals/bind');
exports.keys = require('./internals/keys');
exports.values = require('./internals/values');
exports.filter = require('./internals/filter');
//receives an object of properties to set on source object
exports.mixin = require('./internals/mixin');
//imitates java-style Iterator
exports.Iterator = require('./internals/Iterator');
//used for keeping HashMap-like collections
exports.LinkedMap = require('./internals/LinkedMap');
//simport sort comparator for numbers
exports.numberComparator = require('./internals/numberComparator');
exports.removeItemFrom = require('./internals/removeItemFrom');



},{"./internals/Iterator":121,"./internals/LinkedMap":122,"./internals/bind":123,"./internals/each":124,"./internals/extend":125,"./internals/filter":126,"./internals/has":127,"./internals/is":128,"./internals/keys":129,"./internals/mixin":130,"./internals/numberComparator":131,"./internals/removeItemFrom":132,"./internals/values":133}],121:[function(require,module,exports){
var is = require('./is');
	//imitate the basic functionality of a Java Iterator
    var ArrayIterator = function(collection){
        this.__it = collection.slice(0);
    };
    ArrayIterator.prototype = {
        hasNext: function(){
            return this.__it.length > 0;
        },
        next: function(){
            return this.__it.shift();
        }
    };
    var ObjectIterator = function(object){
        this.__obj = {};
        this.__keys = [];
        for(var prop in object){
            this.__obj[prop] = object[prop];
            this.__keys.push(prop);
        }
        this.__it = new ArrayIterator(this.__keys);
    };
    ObjectIterator.prototype = {
        hasNext: function(){
            return this.__it.hasNext();
        },
        next: function(){
            var key = this.__it.next();
            return this.__obj[key];
        }
    };

    var Iterator = function(collection){
        if(is.array(collection)){
            return new ArrayIterator(collection);
        }
        return new ObjectIterator(collection);
    };

    module.exports = Iterator;


},{"./is":128}],122:[function(require,module,exports){
var each = require('./each');
    // {Function} keyGeneratorFunction - key to use to return the identifier
    var LinkedMap = function( keyGeneratorFunction ){
        this.__list = [];
        this.__map = {};
        if( typeof keyGeneratorFunction === 'function' ){
            this.generateKey = keyGeneratorFunction;
        }
    };



    LinkedMap.prototype = {
        each: function( fn ){
            each(this.__map, fn);
        },
        get: function( id_or_val ){
            var result = this.__map[id_or_val];

            if( result === undefined ){
                id_or_val = this.generateKey( id_or_val );
                result = this.__map[id_or_val];
            }
            return result;
        },
        generateKey: function( key ){ return key.toString(); },
        getArray: function(){
            return this.__list;
        },
        has: function( id_or_val ){
            var self = this;
            var _has = function( id ){
                return ( self.__map[ id ] !== undefined );
            };
            if( _has( id_or_val ) ){
                return true;
            }

            if(this.__map[id]){
                return true;
            }

            return this.__map[this.generateKey( id_or_val )];
        },
        put: function( id, val ){
            id = this.generateKey( id );
            this.__map[id] = val;
            this.__list.push( val );
        },
        remove: function( val ){
            val = this.get( val );
            var id = this.generateKey(val);
            delete this.__map[id];
            return this.__list.splice( this.__list.indexOf(val), 1)[0];
        },
        size: function(){
            return this.__list.length;
        },
        values: function(){
            return this.__list.slice(0);
        }
    };

    module.exports = LinkedMap;


},{"./each":124}],123:[function(require,module,exports){

    //bind a function to a scope
    var ctor = {};
    module.exports = function(func, context) {
        var args, bound;
        var FP = Function.prototype;
        var slice = Array.prototype.slice;
        if (func.bind === FP.bind && FP.bind) return FP.bind.apply(func, slice.call(arguments, 1));
        args = slice.call(arguments, 2);
        return bound = function() {
            if (!(this instanceof bound)) return func.apply(context, args.concat(slice.call(arguments)));
            ctor.prototype = func.prototype;
            var self = new ctor();
            ctor.prototype = null;
            var result = func.apply(self, args.concat(slice.call(arguments)));
            if (Object(result) === result) return result;
            return self;
        };
    };


},{}],124:[function(require,module,exports){

    //from Underscore.js
    //(c) 2009-2012 Jeremy Ashkenas, DocumentCloud Inc.
    //basic forEach, use native implementation is available
    var breaker = {};
    module.exports = function(obj, iterator, context) {
        if (obj == null) return;
        if (Array.prototype.forEach && obj.forEach === Array.prototype.forEach) {
            obj.forEach(iterator, context);
        } else if (obj.length === +obj.length) {
            for (var i = 0, l = obj.length; i < l; i++) {
                if (i in obj && iterator.call(context, obj[i], i, obj) === breaker) return;
            }
        } else {
            for (var key in obj) {
                if (hasOwnProperty.call(obj, key)) {
                    if (iterator.call(context, obj[key], key, obj) === breaker) return;
                }
            }
        }
    };


},{}],125:[function(require,module,exports){

    module.exports = function(childClass,superClass){
        if(typeof childClass !== 'function'){
            throw Error("childClass was not function, possible circular: ", childClass);
        } else if( typeof superClass !== 'function'){
            throw Error("superClass was not function, possible circular: ", superClass);
        }
        childClass.prototype = Object.create( superClass.prototype );//new superClass();
        childClass.constructor = childClass;
        childClass.prototype.parent = superClass.prototype;
    };


},{}],126:[function(require,module,exports){

    module.exports = function(obj, iterator, context) {
        var results = [];
        if (obj == null) return results;
        if (Array.prototype.filter && obj.filter === Array.prototype.filter) return obj.filter(iterator, context);
        exports.each(obj, function(value, index, list) {
            if (iterator.call(context, value, index, list)) results[results.length] = value;
        });
        return results;
    };


},{}],127:[function(require,module,exports){


    var all = function(subject,properties){
        if(subject === undefined || typeof subject != 'object'){
            return false;
        }
        var i = 0,
            len = properties.length,
            prop;
        for(i = 0; i < len; i++){
            prop = properties[i];
            if(!(prop in subject)){
                return false;
            }
        }
        return true;
    };

    exports.property = function(obj, key) {
        return hasOwnProperty.call(obj, key);
    };
    exports.all = all;
    exports.typedArrays = function(){
        return typeof Int32Array !== 'undefined' && typeof Float32Array !== 'undefined' && typeof Uint8Array !== 'undefined';
    };
    exports.XY = function( a ){ return a && typeof a.x === 'number' && typeof a.y === 'number'; };
	exports.XYZ = function( a ){ return a && typeof a.x === 'number' && typeof a.y === 'number' && typeof a.z === 'number'; };
	exports.XYWidthHeight = function( a ){
        return a && typeof a.x === 'number' && typeof a.y === 'number' && typeof a.width === 'number' && typeof a.height === 'number';
    };


},{}],128:[function(require,module,exports){
var has = require('./has');

    var apply = function(properties){
        return function( o ){
            return has.all(o, properties);
        };
    };

    exports.Array = Array.isArray || function(a){
        return a.toString() == '[object Array]';
    };
    exports.Object = function(a){
        return typeof a === 'object';
    };
    exports.undef = function(a){
        return a === void 0;
    };
    //determines if a value is undefined or null
    exports.existy = function(a){
        return a != null;
    };
    exports.String = function(a){
        return typeof a === 'string';
    };
    exports.Number = function(a){
        return typeof a === 'number';
    };
    exports.Function = function(a){
        return typeof a === 'function';
    };
	exports.AABB = apply(['setExtent','getNormalForPoint']);
    exports.ColorGradient = apply(['gradient','interpolator','maxDither','addColorAt','calcGradient']);
    exports.ColorList = apply(['add','addAll','adjustBrightness','adjustSaturation']);
    exports.ColorRange = apply(['add', 'addAlphaRange','addBrightnessRange','addHueRange']);
    exports.Circle = apply(['getCircumference','getRadius','intersectsCircle']);
    exports.FloatRange = apply(['min','max','adjustCurrentBy','getMedian']);
    exports.Hue = apply(['getHue','isPrimary']);
	exports.Line2D = apply(['closestPointTo','intersectLine','getLength']);
	exports.Matrix4x4 = apply(['identity', 'invert', 'setFrustrum']);
	exports.Rect = apply(['x','y','width','height','getArea','getCentroid','getDimensions']);
	exports.Sphere = apply(['x','y','z','radius','toMesh']);
    exports.ScaleMap = apply(['mapFunction','setInputRange','setOutputRange','getMappedValueFor']);
	exports.TColor = apply(['rgb','cmyk','hsv']);
	exports.ParticleBehavior = apply(['applyBehavior','configure']);
	exports.VerletParticle2D = apply(['x','y','weight']);


},{"./has":127}],129:[function(require,module,exports){

    module.exports = Object.keys || function(obj) {
        if (obj !== Object(obj)) throw new TypeError('Invalid object');
        var keys = [];
        for (var key in obj) if (exports.has(obj, key)) keys.push(key);
        return keys;
    };


},{}],130:[function(require,module,exports){
var each = require('./each');
    //basic mixin function, copy over object properties to provided object
    module.exports = function(destination,source){
        each(source,function(val,key){
            destination[key] = val;
        });
        return destination;
    };


},{"./each":124}],131:[function(require,module,exports){

    module.exports = function(f1,f2){
        if(f1 == f2) return 0;
        if(f1 < f2) return -1;
        if(f1 > f2) return 1;
    };


},{}],132:[function(require,module,exports){

    module.exports = function(item,array){
        var index = array.indexOf(item);
        if(index > -1){
            return array.splice(index,1);
        }
        return undefined;
    };


},{}],133:[function(require,module,exports){
var has = require('./has');
    module.exports = function(obj) {
        var values = [];
        for (var key in obj) if (has.property(obj, key)) values.push(obj[key]);
        return values;
    };


},{"./has":127}],134:[function(require,module,exports){

module.exports = {
	BezierInterpolation: require('./math/BezierInterpolation'),
	CircularInterpolation: require('./math/CircularInterpolation'),
	CosineInterpolation: require('./math/CosineInterpolation'),
	DecimatedInterpolation: require('./math/DecimatedInterpolation'),
	ExponentialInterpolation: require('./math/ExponentialInterpolation'),
	Interpolation2D: require('./math/Interpolation2D'),
	LinearInterpolation: require('./math/LinearInterpolation'),
	mathUtils: require('./math/mathUtils'),
	//providing upper-cased version to be more obvious for people coming from java
	MathUtils: require('./math/mathUtils'),
	ScaleMap: require('./math/ScaleMap'),
	SigmoidInterpolation: require('./math/SigmoidInterpolation'),
	SinCosLUT: require('./math/SinCosLUT'),
	ThresholdInterpolation: require('./math/ThresholdInterpolation'),
	ZoomLensInterpolation: require('./math/ZoomLensInterpolation')
};

module.exports.noise = require('./math/noise');
module.exports.waves = require('./math/waves');


},{"./math/BezierInterpolation":135,"./math/CircularInterpolation":136,"./math/CosineInterpolation":137,"./math/DecimatedInterpolation":138,"./math/ExponentialInterpolation":139,"./math/Interpolation2D":140,"./math/LinearInterpolation":141,"./math/ScaleMap":142,"./math/SigmoidInterpolation":143,"./math/SinCosLUT":144,"./math/ThresholdInterpolation":145,"./math/ZoomLensInterpolation":146,"./math/mathUtils":147,"./math/noise":148,"./math/waves":151}],135:[function(require,module,exports){

    /**
    * @class Bezier curve interpolation with configurable coefficients. The curve
    * parameters need to be normalized offsets relative to the start and end values
    * passed to the {@link #interpolate(float, float, float)} method, but can
    * exceed the normal 0 .. 1.0 interval. Use symmetrical offsets to create a
    * symmetrical curve, e.g. this will create a curve with 2 dips reaching the
    * minimum and maximum values at 25% and 75% of the interval...
    * @member toxi
    *
    * @example
    * <p>
    * <code>BezierInterpolation b=new BezierInterpolation(3,-3);</code>
    * </p>
    *
    * The curve will be a straight line with this configuration:
    *
    * <p>
    * <code>BezierInterpolation b=new BezierInterpolation(1f/3,-1f/3);</code>
    * </p>
    */
    var BezierInterpolation = function(h1,h2) {
        this.c1 = h1;
        this.c2 = h2;
    };

    BezierInterpolation.interpolate = function( a, b, t, c1, c2 ){
        var tSquared = t * t;
        var invT = 1.0 - t;
        var invTSquared = invT * invT;
        return (a * invTSquared * invT) + (3 * (c1 * (b - a) + a) * t * invTSquared) + (3 * (c2 * (b - a) + b) * tSquared * invT) + (b * tSquared * t);
    };

    BezierInterpolation.prototype = {
        interpolate: function(a,b,t) {
            var tSquared = t * t;
            var invT = 1.0 - t;
            var invTSquared = invT * invT;
            return (a * invTSquared * invT) + (3 * (this.c1 * (b - a) + a) * t * invTSquared) + (3 * (this.c2 * (b - a) + b) * tSquared * invT) + (b * tSquared * t);
        },

        setCoefficients:function(a, b) {
            this.c1 = a;
            this.c2 = b;
        }

    };

    module.exports = BezierInterpolation;




},{}],136:[function(require,module,exports){

    /**
    * @class Implementation of the circular interpolation function.
    *
    * i = a-(b-a) * (sqrt(1 - (1 - f) * (1 - f) ))
    * @description The interpolation slope can be flipped to have its steepest ascent
    * towards the end value, rather than at the beginning in the default
    * configuration.
    * @member toxi
    *
    * @param isFlipped
    *            true, if slope is inverted
    */
    var CircularInterpolation = function(isFlipped) {
        if(isFlipped === undefined){
            this.isFlipped = false;
        }
    };

    CircularInterpolation.interpolate = function( a, b, f, isFlipped) {
        if (!!isFlipped) {
            return a - (b - a) * (Math.sqrt(1 - f * f) - 1);
        } else {
            f = 1 - f;
            return a + (b - a) * ( Math.sqrt(1 - f * f));
        }
    };

    CircularInterpolation.prototype.interpolate = function( a, b, f) {
        if (this.isFlipped) {
            return a - (b - a) * (Math.sqrt(1 - f * f) - 1);
        } else {
            f = 1 - f;
            return a + (b - a) * ( Math.sqrt(1 - f * f));
        }
    };

    CircularInterpolation.prototype.setFlipped = function(isFlipped) {
        this.isFlipped = isFlipped;
    };

    module.exports = CircularInterpolation;



},{}],137:[function(require,module,exports){

    /**
    * @class Implementation of the cosine interpolation function:
    * i = b+(a-b)*(0.5+0.5*cos(f*PI))
    * @member toxi
    */
    var	CosineInterpolation = function(){};

    CosineInterpolation.interpolate = function(a, b, f) {
        return b + (a - b) * (0.5 + 0.5 * Math.cos(f * Math.PI));
    };

    CosineInterpolation.prototype.interpolate = CosineInterpolation.interpolate;

    module.exports = CosineInterpolation;



},{}],138:[function(require,module,exports){
var LinearInterpolation = require('./LinearInterpolation');
    /**
    * @class Delivers a number of decimated/stepped values for a given interval. E.g. by
    * using 5 steps the interpolation factor is decimated to: 0, 20, 40, 60, 80 and
    * 100%. By default {@link LinearInterpolation} is used, however any other
    * {@link InterpolateStrategy} can be specified via the constructor.
    * @member toxi
    */
    var	DecimatedInterpolation = function(steps,strategy) {
        if(steps === undefined){
            throw new Error("steps was not passed to constructor");
        }
        this.numSteps = steps;
        this.strategy = strategy || new LinearInterpolation();
    };

    DecimatedInterpolation.prototype = {
        interpolate: function(a,b,f) {
            var fd = Math.floor(f * this.numSteps) /  this.numSteps;
            return this.strategy.interpolate(a, b, fd);
        }
    };

    module.exports = DecimatedInterpolation;


},{"./LinearInterpolation":141}],139:[function(require,module,exports){

    /**
    * @class Exponential curve interpolation with adjustable exponent. Use exp in the
    * following ranges to achieve these effects:
    * <ul>
    * <li>0.0 &lt; x &lt; 1.0 : ease in (steep changes towards b)</li>
    * <li>1.0 : same as {@link LinearInterpolation}</li>
    * <li>&gt; 1.0 : ease-out (steep changes from a)</li>
    * </ul>
    * @member toxi
    */
    var	ExponentialInterpolation = function(exp) {
        this.exponent = (exp === undefined) ? 2 : exp;
    };


    ExponentialInterpolation.interpolate = function(a, b, f, exponent) {
        return a + (b - a) * Math.pow(f, exponent);
    };

    ExponentialInterpolation.prototype.interpolate = function(a, b, f) {
        return a + (b - a) * Math.pow(f, this.exponent);
    };

    module.exports = ExponentialInterpolation;



},{}],140:[function(require,module,exports){
var internals = require('../internals');

    /**
    * @class Implementations of 2D interpolation functions (currently only bilinear).
    * @member toxi
    * @static
    */
    var Interpolation2D = {};
    /**
    * @param {Number} x
    *            x coord of point to filter (or Vec2D p)
    * @param {Number} y
    *            y coord of point to filter (or Vec2D p1)
    * @param {Number} x1
    *            x coord of top-left corner (or Vec2D p2)
    * @param {Number} y1
    *            y coord of top-left corner
    * @param {Number} x2
    *            x coord of bottom-right corner
    * @param {Number} y2
    *            y coord of bottom-right corner
    * @param {Number} tl
    *            top-left value
    * @param {Number} tr
    *            top-right value (do not use if first 3 are Vec2D)
    * @param {Number} bl
    *            bottom-left value (do not use if first 3 are Vec2D)
    * @param {Number} br
    *            bottom-right value (do not use if first 3 are Vec2D)
    * @return {Number} interpolated value
    */
    Interpolation2D.bilinear = function(_x, _y, _x1,_y1, _x2, _y2, _tl, _tr, _bl, _br) {
        var x,y,x1,y1,x2,y2,tl,tr,bl,br;
        if( internals.has.XY( _x ) ) //if the first 3 params are passed in as Vec2Ds
        {
            x = _x.x;
            y = _x.y;

            x1 = _y.x;
            y1 = _y.y;

            x2 = _x1.x;
            y2 = _x1.y;

            tl = _y1;
            tr = _x2;
            bl = _y2;
            br = _tl;
        } else {
            x = _x;
            y = _y;
            x1 = _x1;
            y1 = _y1;
            x2 = _x2;
            y2 = _y2;
            tl = _tl;
            tr = _tr;
            bl = _bl;
            br = _br;
        }
        var denom = 1.0 / ((x2 - x1) * (y2 - y1));
        var dx1 = (x - x1) * denom;
        var dx2 = (x2 - x) * denom;
        var dy1 = y - y1;
        var dy2 = y2 - y;
        return (tl * dx2 * dy2 + tr * dx1 * dy2 + bl * dx2 * dy1 + br* dx1 * dy1);
    };

    module.exports = Interpolation2D;


},{"../internals":120}],141:[function(require,module,exports){

    /**
    * @class Implementation of the linear interpolation function
    *
    * i = a + ( b - a ) * f
    * @member toxi
    */
    var	LinearInterpolation = function(){};
    var interpolate = function(a, b, f) {
        return a + (b - a) * f;
    };

    LinearInterpolation.interpolate = interpolate;
    LinearInterpolation.prototype.interpolate = interpolate;
    //

    module.exports = LinearInterpolation;



},{}],142:[function(require,module,exports){


var mathUtils = require('./mathUtils'),
    LinearInterpolation = require('./LinearInterpolation');


var _Range = function(min,max){
	this.min = min;
	this.max = max;
};
_Range.prototype.toString = function(){
	return "{ min: "+this.min+ ", max: "+this.max+"}";
};


/**
 * @class This class maps values from one interval into another. By default the mapping
 * is using linear projection, but can be changed by using alternative
 * {@link math.InterpolateStrategy} implementations to achieve a
 * non-regular mapping.
 *
 * @member toxi
 *
 * @description Creates a new instance to map values between the 2 number ranges
 * specified. By default linear projection is used.
 * @param {Number} minIn
 * @param {Number} maxIn
 * @param {Number} minOut
 * @param {Number} maxOut
 */ 
var ScaleMap = function(minIn, maxIn, minOut, maxOut) {
	if(arguments.length == 1 && arguments[0].input !== undefined && arguments[0].output !== undefined){ //opts object
		var arg = arguments[0];
		minOut = arg.output.min;
		maxOut = arg.output.max;
        maxIn = arg.input.max;
        minIn = arg.input.min;
	}
	this.mapFunction = new LinearInterpolation();
	this.setInputRange(minIn, maxIn);
	this.setOutputRange(minOut, maxOut);
};


ScaleMap.prototype = {
	
    /**
     * Computes mapped value in the target interval and ensures the input value
     * is clipped to source interval.
     * 
     * @param val
     * @return mapped value
     */
   getClippedValueFor: function(val) {
        var t = mathUtils.clipNormalized( ((val - this._in.min) / this._interval));
        return this.mapFunction.interpolate(0, this.mapRange, t) + this._out.min;
    },

    /**
     * @return the middle value of the input range.
     */
    getInputMedian: function() {
        return (this._in.min + this._in.max) * 0.5;
    },

    /**
     * @return the in
     */
    getInputRange: function() {
        return this._in;
    },

    /**
     * @return the mapped middle value of the output range. Depending on the
     *         mapping function used, this value might be different to the one
     *         returned by {@link #getOutputMedian()}.
     */
    getMappedMedian: function() {
        return this.getMappedValueFor(0.5);
    },

    /**
     * Computes mapped value in the target interval. Does check if input value
     * is outside the input range.
     * 
     * @param val
     * @return mapped value
     */
    getMappedValueFor: function(val) {
        var t = ((val - this._in.min) / this._interval);
        return this.mapFunction.interpolate(0,  this.mapRange, t) + this._out.min;
    },

    /**
     * @return the middle value of the output range
     */
    getOutputMedian:function() {
        return (this._out.min + this._out.max) * 0.5;
    },

    /**
     * @return the output range
     */
    getOutputRange: function() {
        return this._out;
    },

    /**
     * Sets new minimum & maximum values for the input range
     * 
     * @param min
     * @param max
     */
    setInputRange: function(min,max) {
        this._in = new _Range(min,max);
        this._interval = max - min;
    },

    /**
     * Overrides the mapping function used for the scale conversion.
     * 
     * @param func
     *            interpolate strategy implementation
     */
    setMapFunction: function(func) {
        this.mapFunction = func;
    },

    /**
     * Sets new minimum & maximum values for the output/target range
     * 
     * @param min
     *            new min output value
     * @param max
     *            new max output value
     */
    setOutputRange: function(min, max) {
        this._out = new _Range(min, max);
        this.mapRange = max - min;
    },
    
    toString: function(){
		return "ScaleMap, inputRange: "+this._in.toString() + " outputRange: "+this._out.toString();
    }
};

module.exports = ScaleMap;


},{"./LinearInterpolation":141,"./mathUtils":147}],143:[function(require,module,exports){

    /**
    * @class Initializes the s-curve with default sharpness = 2
    * @member toxi
    */
    var	SigmoidInterpolation = function(s) {
        if(s === undefined){
            s = 2.0;
        }
        this.setSharpness(s);
    };

    var interpolate = function( a, b, f, sharpness ){
        f = (f * 2 - 1) * sharpness;
        f = (1.0 / (1.0 + Math.exp(-f)));
        return a + (b - a) * f;
    };

    SigmoidInterpolation.prototype = {
        getSharpness: function() {
            return this.sharpness;
        },

        interpolate: function(a, b, f) {
            return interpolate( a, b, f, this.sharpPremult );
        },

        setSharpness: function(s) {
            this.sharpness = s;
            this.sharpPremult = 5 * s;
        }
    };

    SigmoidInterpolation.interpolate = interpolate;

    module.exports = SigmoidInterpolation;



},{}],144:[function(require,module,exports){
var mathUtils = require('./mathUtils');


    /**
    * @class Lookup table for fast sine & cosine computations. Tables with varying
    * precisions can be created to which input angles will be rounded to. The
    * sin/cos methods can be used with both positive and negative input angles as
    * with the normal Math.sin()/Math.cos() versions.
    * @member toxi
    */
    var SinCosLUT = function(precision) {
        if(!precision){
            precision = SinCosLUT.DEFAULT_PRECISION;
        }
        this.precision = precision;
        this.period = 360/this.precision;
        this.quadrant = this.period >> 2;
        this.deg2rad = (Math.PI / 180.0) * this.precision;
        this.rad2deg = (180.0 / Math.PI) / this.precision;
        this.sinLUT = [];
        for(var i=0;i< this.period;i++){
            this.sinLUT[i] = Math.sin(i*this.deg2rad);
        }
    };


    SinCosLUT.prototype = {

        /**
        * Calculate cosine for the passed in angle in radians.
        *
        * @param theta
        * @return cosine value for theta
        */
        cos: function(theta) {
            while (theta < 0) {
                theta += mathUtils.TWO_PI;
            }
            return this.sinLUT[((theta * this.rad2deg) + this.quadrant) % this.period];
        },

        getPeriod: function() {
            return this.period;
        },

        getPrecision: function() {
            return this.precision;
        },

        getSinLUT: function() {
            return this.sinLUT;
        },

        /**
        * Calculates sine for the passed angle in radians.
        *
        * @param theta
        * @return sine value for theta
        */
        sin: function(theta) {
            while (theta < 0) {
                theta += mathUtils.TWO_PI;
            }
            return this.sinLUT[(theta * this.rad2deg) % this.period];
        }
    };


    SinCosLUT.DEFAULT_PRECISION = 0.25;
    SinCosLUT.DEFAULT_INSTANCE = undefined;
    SinCosLUT.getDefaultInstance = function(){
        if(SinCosLUT.DEFAULT_INSTANCE === undefined){
            SinCosLUT.DEFAULT_INSTANCE = new SinCosLUT();
        }
        return SinCosLUT.DEFAULT_INSTANCE;
    };

    module.exports = SinCosLUT;



},{"./mathUtils":147}],145:[function(require,module,exports){

    /**
    * @class Defines a single step/threshold function which returns the min value for all
    * factors &lt; threshold and the max value for all others.
    * @member toxi
    */
    var	ThresholdInterpolation = function(threshold) {
        this.threshold = threshold;
    };

    var interpolate = function(a, b, f, threshold) {
        return f < threshold ? a : b;
    };

    ThresholdInterpolation.prototype = {
        interpolate: function(a, b, f) {
            return f < this.threshold ? a : b;
        }
    };

    ThresholdInterpolation.interpolate = interpolate;

    module.exports = ThresholdInterpolation;



},{}],146:[function(require,module,exports){
var mathUtils = require('./mathUtils');
var CircularInterpolation = require('./CircularInterpolation');


    /**
    * @class This class provides an adjustable zoom lens to either bundle or dilate values
    * around a focal point within a given interval. For a example use cases, please
    * have a look at the provided ScaleMapDataViz and ZoomLens examples.
    * @member toxi
    */
    var	ZoomLensInterpolation = function(lensPos, lensStrength) {
        this.leftImpl = new CircularInterpolation();
        this.rightImpl = new CircularInterpolation();
        this.lensPos = lensPos || 0.5;
        this.lensStrength = lensStrength || 1;
        this.absStrength = Math.abs(this.lensStrength);
        this.leftImpl.setFlipped(this.lensStrength > 0);
        this.rightImpl.setFlipped(this.lensStrength < 0);
    };

    ZoomLensInterpolation.prototype = {
        interpolate: function(min,max,t) {
            var val = min + (max - min) * t;
            if (t < this.lensPos) {
                val += (this.leftImpl.interpolate(min, min + (max - min) * this.lensPos, t/ this.lensPos) - val)* this.absStrength;
            } else {
                val += (this.rightImpl.interpolate(min + (max - min) * this.lensPos, max,(t - this.lensPos) / (1 - this.lensPos)) - val) * this.absStrength;
            }
            return val;
        },

        setLensPos: function(pos, smooth) {
            this.lensPos += (mathUtils.clipNormalized(pos) - this.lensPos) * smooth;
        },

        setLensStrength: function(str, smooth) {
            this.lensStrength += (mathUtils.clip(str, -1, 1) - this.lensStrength) * smooth;
            this.absStrength = mathUtils.abs(this.lensStrength);
            this.leftImpl.setFlipped(this.lensStrength > 0);
            this.rightImpl.setFlipped(this.lensStrength < 0);
        }
    };

    module.exports = ZoomLensInterpolation;



},{"./CircularInterpolation":136,"./mathUtils":147}],147:[function(require,module,exports){

    /**
    * @class
    * @static
    * @member toxi
    * @description math utilities
    */
    var MathUtils = {};
    MathUtils.SQRT2 = Math.sqrt(2);
    MathUtils.SQRT3 = Math.sqrt(3);
    MathUtils.LOG2 = Math.log(2);
    MathUtils.PI = 3.14159265358979323846;

    /**
    * The reciprocal of PI: (1/PI)
    */
    MathUtils.INV_PI = 1.0 / MathUtils.PI;
    MathUtils.HALF_PI = MathUtils.PI / 2;
    MathUtils.THIRD_PI = MathUtils.PI / 3;
    MathUtils.QUARTER_PI = MathUtils.PI / 4;
    MathUtils.TWO_PI = MathUtils.PI * 2;
    MathUtils.THREE_HALVES_PI = MathUtils.TWO_PI - MathUtils.HALF_PI;
    MathUtils.PI_SQUARED = MathUtils.PI * MathUtils.PI;

    /**
    * Epsilon value
    */
    MathUtils.EPS = 1.1920928955078125E-7;

    /**
    * Degrees to radians conversion factor
    */
    MathUtils.DEG2RAD = MathUtils.PI / 180;

    /**
    * Radians to degrees conversion factor
    */
    MathUtils.RAD2DEG = 180 / MathUtils.PI;
    MathUtils.SHIFT23 = 1 << 23;
    MathUtils.INV_SHIFT23 = 1.0 / MathUtils.SHIFT23;
    MathUtils.SIN_A = -4.0 / (MathUtils.PI * MathUtils.PI);
    MathUtils.SIN_B = 4.0 / MathUtils.PI;
    MathUtils.SIN_P = 9.0 / 40;
    MathUtils.abs = Math.abs;
    /**
    * Rounds up the value to the nearest higher power^2 value.
    *
    * @param x
    * @return power^2 value
    */
    MathUtils.ceilPowerOf2 = function(x) {
        var pow2 = 1;
        while (pow2 < x) {
            pow2 <<= 1;
        }
        return pow2;
    };

    MathUtils.clip = function(a, _min, _max) {
        return a < _min ? _min : (a > _max ? _max : a);
    };
    /**
    * Clips the value to the 0.0 .. 1.0 interval.
    *
    * @param a
    * @return clipped value
    * @since 0012
    */
    MathUtils.clipNormalized = function(a) {
        if (a < 0) {
            return 0;
        } else if (a > 1) {
            return 1;
        }
        return a;
    };

    MathUtils.cos = Math.cos;

    MathUtils.degrees = function(radians) {
        return radians * MathUtils.RAD2DEG;
    };

    /**
    * Fast cosine approximation.
    *
    * @param x
    *            angle in -PI/2 .. +PI/2 interval
    * @return cosine
    */
    MathUtils.fastCos = function(x) {
        return MathUtils.fastSin(x + ((x > MathUtils.HALF_PI) ? -MathUtils.THREE_HALVES_PI : MathUtils.HALF_PI));
    };

    /**
    * Fast sine approximation.
    *
    * @param x
    *            angle in -PI/2 .. +PI/2 interval
    * @return sine
    */
    MathUtils.fastSin = function(x) {
        x = MathUtils.SIN_B * x + MathUtils.SIN_A * x * Math.abs(x);
        return MathUtils.SIN_P * (x * Math.abs(x) - x) + x;
    };

    MathUtils.flipCoin = function(rnd) {
        return Math.random() < 0.5;
    };

    /**
    * This method is a *lot* faster than using (int)Math.floor(x).
    *
    * @param x
    *            value to be floored
    * @return floored value as integer
    */

    MathUtils.floor = function(x) {
        var y = ~~(x);
        if (x < 0 && x != y) {
            y--;
        }
        return y;
    };

    /**
    * Rounds down the value to the nearest lower power^2 value.
    *
    * @param x
    * @return power^2 value
    */
    MathUtils.floorPowerOf2 = function(x) {
        return ~~( Math.pow(2, parseInt((Math.log(x) / MathUtils.LOG2),10)) );
    };

    MathUtils.max =  function(a, b, c) {
        if(c===undefined){
            return Math.max(a,b);
        }
        return (a > b) ? ((a > c) ? a : c) : ((b > c) ? b : c);
    };

    MathUtils.min = function(a, b, c) {
        if(c===undefined){
            return Math.min(a,b);
        }
        return (a < b) ? ((a < c) ? a : c) : ((b < c) ? b : c);
    };

    /**
    * Returns a random number in the interval -1 .. +1.
    *
    * @return random float
    */
    MathUtils.normalizedRandom = function() {
        return Math.random() * 2 - 1;
    };

    MathUtils.radians = function(degrees) {
        return degrees * MathUtils.DEG2RAD;
    };

    MathUtils.random = function(rand,min,max) {
        //one param
        if( arguments.length === 1 ){
            return Math.random() * arguments[0];
        } else if(arguments.length == 2) {
            //min and max
            max = min;
            min = rand;
            rand = Math.random;
        }
        if(!min && !max) {
            return Math.random();
        } else if(!max){
            //if only one is provided, then thats actually the max
            max = min;
            return rand()*max;
        }
        return rand() * (max - min) + min;
    };

    MathUtils.reduceAngle = function(theta) {
        theta %= MathUtils.TWO_PI;
        if (Math.abs(theta) > MathUtils.PI) {
            theta = theta - MathUtils.TWO_PI;
        }
        if (Math.abs(theta) > MathUtils.HALF_PI) {
            theta = MathUtils.PI - theta;
        }
        return theta;
    };

    MathUtils.sign = function(x) {
        return x < 0 ? -1 : (x > 0 ? 1 : 0);
    };

    MathUtils.sin = function(theta) {
        theta = MathUtils.reduceAngle(theta);
        if (Math.abs(theta) <= MathUtils.QUARTER_PI) {
            return MathUtils.fastSin(theta);
        }
        return MathUtils.fastCos(MathUtils.HALF_PI - theta);
    };

    module.exports = MathUtils;




},{}],148:[function(require,module,exports){

/** module toxi/math/noise 
	@api public
*/
module.exports = {
	PerlinNoise: require('./noise/PerlinNoise'),
	simplexNoise: require('./noise/simplexNoise')	
};


},{"./noise/PerlinNoise":149,"./noise/simplexNoise":150}],149:[function(require,module,exports){


var SinCosLUT = require('../SinCosLUT'),
    hasTypedArrays = require('../../internals/has').typedArrays();

/*
Using David Bau's seedrandom.js for PerlinNoise#noiseSeed functionality
 seedrandom.js version 2.0.
 Author: David Bau 4/2/2011
 http://davidbau.com/encode/seedrandom-min.js

 LICENSE (BSD):

 Copyright 2010 David Bau, all rights reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions are met:

	1. Redistributions of source code must retain the above copyright
			notice, this list of conditions and the following disclaimer.

	2. Redistributions in binary form must reproduce the above copyright
			notice, this list of conditions and the following disclaimer in the
			documentation and/or other materials provided with the distribution.

	3. Neither the name of this module nor the names of its contributors may
			be used to endorse or promote products derived from this software
			without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

/**
 * All code is in an anonymous closure to keep the global namespace clean.
 *
 * @param {number=} overflow
 * @param {number=} startdenom
 * @api private
 */
 var internalMath = {};
 internalMath.pow = Math.pow; //used by seed generator
 internalMath.random = Math.random; //start with the default random generator
(function (pool, math, width, chunks, significance, overflow, startdenom) {


/*
	seedrandom()
	This is the seedrandom function described above.
*/
math['seedrandom'] = function seedrandom(seed, use_entropy) {
	var key = [];
	var arc4;

	// Flatten the seed string or build one from local entropy if needed.
	seed = mixkey(flatten(
		use_entropy ? [seed, pool] :
		arguments.length ? seed :
		[new Date().getTime(), pool, window], 3), key);

	// Use the seed to initialize an ARC4 generator.
	arc4 = new ARC4(key);

	// Mix the randomness into accumulated entropy.
	mixkey(arc4.S, pool);

	// Override Math.random

	// This function returns a random double in [0, 1) that contains
	// randomness in every bit of the mantissa of the IEEE 754 value.

	math['random'] = function random() {  // Closure to return a random double:
		var n = arc4.g(chunks);             // Start with a numerator n < 2 ^ 48
		var d = startdenom;                 //   and denominator d = 2 ^ 48.
		var x = 0;                          //   and no 'extra last byte'.
		while (n < significance) {          // Fill up all significant digits by
			n = (n + x) * width;              //   shifting numerator and
			d *= width;                       //   denominator and generating a
			x = arc4.g(1);                    //   new least-significant-byte.
		}
		while (n >= overflow) {             // To avoid rounding up, before adding
			n /= 2;                           //   last byte, shift everything
			d /= 2;                           //   right using integer math until
			x >>>= 1;                         //   we have exactly the desired bits.
		}
		return (n + x) / d;                 // Form the number within [0, 1).
	};

	// Return the seed that was used
	return seed;
};

/** @constructor */
function ARC4(key) {
	var t, u, me = this, keylen = key.length;
	var i = 0, j = me.i = me.j = me.m = 0;
	me.S = [];
	me.c = [];

	// The empty key [] is treated as [0].
	if (!keylen) { key = [keylen++]; }

	// Set up S using the standard key scheduling algorithm.
	while (i < width) { me.S[i] = i++; }
	for (i = 0; i < width; i++) {
		t = me.S[i];
		j = lowbits(j + t + key[i % keylen]);
		u = me.S[j];
		me.S[i] = u;
		me.S[j] = t;
	}

	// The "g" method returns the next (count) outputs as one number.
	me.g = function getnext(count) {
		var s = me.S;
		var i = lowbits(me.i + 1); var t = s[i];
		var j = lowbits(me.j + t); var u = s[j];
		s[i] = u;
		s[j] = t;
		var r = s[lowbits(t + u)];
		while (--count) {
			i = lowbits(i + 1); t = s[i];
			j = lowbits(j + t); u = s[j];
			s[i] = u;
			s[j] = t;
			r = r * width + s[lowbits(t + u)];
		}
		me.i = i;
		me.j = j;
		return r;
	};
	// For robust unpredictability discard an initial batch of values.
	// See http://www.rsa.com/rsalabs/node.asp?id=2009
	me.g(width);
}

//
// flatten()
// Converts an object tree to nested arrays of strings.
//
/** @param {Object=} result
	* @param {string=} prop
	* @param {string=} typ
	*/
function flatten(obj, depth, result, prop, typ) {
	result = [];
	typ = typeof(obj);
	if (depth && typ == 'object') {
		for (prop in obj) {
			if (prop.indexOf('S') < 5) {    // Avoid FF3 bug (local/sessionStorage)
				try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}
			}
		}
	}
	return (result.length ? result : obj + (typ != 'string' ? '\0' : ''));
}

//
// mixkey()
// Mixes a string seed into a key that is an array of integers, and
// returns a shortened string seed that is equivalent to the result key.
//
/** @param {number=} smear
	* @param {number=} j */
function mixkey(seed, key, smear, j) {
	seed += '';                         // Ensure the seed is a string
	smear = 0;
	for (j = 0; j < seed.length; j++) {
		key[lowbits(j)] =
			lowbits((smear ^= key[lowbits(j)] * 19) + seed.charCodeAt(j));
	}
	seed = '';
	for (j in key) { seed += String.fromCharCode(key[j]); }
	return seed;
}

//
// lowbits()
// A quick "n mod width" for width a power of 2.
//
function lowbits(n) { return n & (width - 1); }

//
// The following constants are related to IEEE 754 limits.
//
startdenom = math.pow(width, chunks);
significance = math.pow(2, significance);
overflow = significance * 2;

mixkey(math.random(), pool);

// End anonymous scope, and pass initial values.
})(
	[],   // pool: entropy pool starts empty
	internalMath, // math: package containing random, pow, and seedrandom
	256,  // width: each RC4 output is 0 <= x < 256
	6,    // chunks: at least six RC4 outputs for each double
	52    // significance: there are 52 significant digits in a double
);
//end seed


	/*
		PERLIN NOISE taken from the
		[toxi 040903]
		octaves and amplitude amount per octave are now user controlled
		via the noiseDetail() function.
		[toxi 030902]
		cleaned up code and now using bagel's cosine table to speed up
		[toxi 030901]
		implementation by the german demo group farbrausch
		as used in their demo "art": http://www.farb-rausch.de/fr010src.zip
	*/
	var PERLIN_YWRAPB = 4,
		PERLIN_YWRAP = 1 << PERLIN_YWRAPB,
		PERLIN_ZWRAPB = 8,
		PERLIN_ZWRAP = 1 << PERLIN_ZWRAPB,
		PERLIN_SIZE = 4095,
		PERLIN_MIN_AMPLITUDE = 0.001;
	/** @api private */
	var	_noise_fsc = function(self, i){
		var index = ((i + 0.5) * self._perlin_PI) % self._perlin_TWOPI;
		return 0.5 * (1.0 - self._perlin_cosTable[index]);
	};

	/**
	 * @module toxi/math/noise/PerlinNoise
	 * @api public
	 */
	var	PerlinNoise = function(){
		this._perlin_octaves = 4; // default to medium smooth
		this._perlin_amp_falloff = 0.5; // 50% reduction/octave
        this._sinCosLUT = SinCosLUT.getDefaultInstance();
	};

	PerlinNoise.prototype = {
		/**
		noise
		@api public
		@param [x=0] x is optional
		@param [y=0] y is optional
		@param [z=0] z is optional
		*/
		noise: function(x,y,z){
			var i = 0;
			x = x || 0;
			y = y || 0;
			z = z || 0;

			if(!this._perlin){
                this._perlin = hasTypedArrays ? new Float32Array( PERLIN_SIZE ) : [];
				var length = PERLIN_SIZE - 1;
				for(i = 0;i < PERLIN_SIZE + 1; i++){
					this._perlin[i] = internalMath.random();
				}
			}

			this._perlin_cosTable = this._sinCosLUT.getSinLUT();
			this._perlin_TWOPI = this._perlin_PI = this._sinCosLUT.getPeriod();
			this._perlin_PI >>= 1;

			if (x < 0) {
				x = -x;
			}
			if (y < 0) {
				y = -y;
			}
			if (z < 0) {
				z = -z;
			}

			var xi = x,
				yi = y,
				zi = z,
				xf = (x - xi),
				yf = (y - yi),
				zf = (z - zi),
				rxf,
				ryf,
				r = 0,
				ampl = 0.5,
				n1,
				n2,
				n3,
				of;
			for(i = 0; i < this._perlin_octaves; i++){
				of = xi + (yi << PERLIN_YWRAPB) + (zi << PERLIN_ZWRAPB);
				rxf = _noise_fsc(this,xf);
				ryf = _noise_fsc(this,yf);

				n1 = this._perlin[of & PERLIN_SIZE];
				n1 += rxf * (this._perlin[(of + 1) & PERLIN_SIZE] - n1);
				n2 = this._perlin[(of + PERLIN_YWRAP) & PERLIN_SIZE];
				n2 += rxf * (this._perlin[(of + PERLIN_YWRAP + 1) & PERLIN_SIZE] - n2);
				n1 += ryf * (n2 - n1);

				of += PERLIN_ZWRAP;
				n2 = this._perlin[of & PERLIN_SIZE];
				n2 += rxf * (this._perlin[(of + 1) & PERLIN_SIZE] - n2);
				n3 = this._perlin[(of + PERLIN_YWRAP) & PERLIN_SIZE];
				n3 += rxf * (this._perlin[(of + PERLIN_YWRAP + 1) & PERLIN_SIZE] - n3);
				n2 += ryf * (n3 - n2);

				n1 += _noise_fsc(this,zf) * (n2 - n1);

				r += n1 * ampl;
				ampl *= this._perlin_amp_falloff;

				// break if amp has no more impact
				if (ampl < PERLIN_MIN_AMPLITUDE) {
					break;
				}

				xi <<= 1;
				xf *= 2;
				yi <<= 1;
				yf *= 2;
				zi <<= 1;
				zf *= 2;

				if (xf >= 1.0) {
					xi++;
					xf--;
				}
				if (yf >= 1.0) {
					yi++;
					yf--;
				}
				if (zf >= 1.0) {
					zi++;
					zf--;
				}
			}
			return r;
		},
		/**
		@api public
		@param {Number} lod
		@param {Number} falloff
		*/
		noiseDetail: function(lod, falloff){
			if(lod > 0){
				this._perlin_octaves = lod;
			}
			if(falloff && falloff > 0){
				this._perlin_amp_falloff = falloff;
			}
		},
		/**
		@api public
		@param {Number} [what] the random seed
		*/
		noiseSeed: function(what){
			internalMath.seedrandom(what);
		}
	};

	module.exports = PerlinNoise;


},{"../../internals/has":127,"../SinCosLUT":144}],150:[function(require,module,exports){


var each = require('../../internals/each');
var has = require('../../internals/has');


/**
 * Simplex Noise in 2D, 3D and 4D. Based on the example code of this paper:
 * http://staffwww.itn.liu.se/~stegu/simplexnoise/simplexnoise.pdf
 * @author Stefan Gustavson, Linkping University, Sweden (stegu at itn dot liu dot se)
 * Slight optimizations & restructuring by
 * @author Karsten Schmidt (info at toxi dot co dot uk)
 * javascript by
 * @author Kyle Phillips (kyle at haptic-data dot com)
*/

var _SQRT3 = Math.sqrt(3.0),
	_SQRT5 = Math.sqrt(5.0);

/**
 * Skewing and unskewing factors for 2D, 3D and 4D, some of them
 * pre-multiplied.
 */
var	_F2 = 0.5 * (_SQRT3 - 1.0),
	_G2 = (3.0 - _SQRT3) / 6.0,
	_G22 = _G2 * 2.0 - 1,

	_F3 = 1.0 / 3.0,
	_G3 = 1.0 / 6.0,

	_F4 = (_SQRT5 - 1.0) / 4.0,
	_G4 = (5.0 - _SQRT5) / 20.0,
	_G42 = _G4 * 2.0,
	_G43 = _G4 * 3.0,
	_G44 = _G4 * 4.0 - 1.0;


/**
* Gradient vectors for 3D (pointing to mid points of all edges of a unit
* cube)
*/
var	_grad3 = [
    [1, 1, 0 ],
    [ -1, 1, 0 ],
    [ 1, -1, 0 ],
    [ -1, -1, 0 ],
    [ 1, 0, 1 ],
    [ -1, 0, 1 ],
    [ 1, 0, -1 ],
    [ -1, 0, -1 ],
    [0, 1, 1 ],
    [0, -1, 1 ],
    [ 0, 1, -1 ],
    [ 0, -1, -1 ]
];


/**
* Gradient vectors for 4D (pointing to mid points of all edges of a unit 4D
* hypercube)
*/
var	_grad4 = [
    [ 0, 1, 1, 1 ],
    [ 0, 1, 1, -1 ],
    [ 0, 1, -1, 1 ],
    [ 0, 1, -1, -1 ],
    [ 0, -1, 1, 1 ],
    [ 0, -1, 1, -1 ],
    [ 0, -1, -1, 1 ],
    [ 0, -1, -1, -1 ],
    [ 1, 0, 1, 1 ],
    [ 1, 0, 1, -1 ],
    [ 1, 0, -1, 1 ],
    [ 1, 0, -1, -1 ],
    [ -1, 0, 1, 1 ],
    [ -1, 0, 1, -1 ],
    [ -1, 0, -1, 1 ],
    [ -1, 0, -1, -1 ],
    [ 1, 1, 0, 1 ],
    [ 1, 1, 0, -1 ],
    [ 1, -1, 0, 1 ],
    [ 1, -1, 0, -1 ],
    [ -1, 1, 0, 1 ],
    [ -1, 1, 0, -1 ],
    [ -1, -1, 0, 1 ],
    [ -1, -1, 0, -1 ],
    [ 1, 1, 1, 0 ],
    [ 1, 1, -1, 0 ],
    [ 1, -1, 1, 0 ],
    [ 1, -1, -1, 0 ],
    [ -1, 1, 1, 0 ],
    [ -1, 1, -1, 0 ],
    [ -1, -1, 1, 0 ],
    [ -1, -1, -1, 0 ]
];

	/**
	 * Permutation table
	 */
var	_p = [
    151, 160, 137, 91, 90, 15, 131, 13, 201,
    95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37,
    240, 21, 10, 23, 190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62,
    94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33, 88, 237, 149, 56,
    87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139,
    48, 27, 166, 77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133,
    230, 220, 105, 92, 41, 55, 46, 245, 40, 244, 102, 143, 54, 65, 25,
    63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200,
    196, 135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3,
    64, 52, 217, 226, 250, 124, 123, 5, 202, 38, 147, 118, 126, 255,
    82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42,
    223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153,
    101, 155, 167, 43, 172, 9, 129, 22, 39, 253, 19, 98, 108, 110, 79,
    113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228, 251, 34, 242,
    193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249,
    14, 239, 107, 49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204,
    176, 115, 121, 50, 45, 127, 4, 150, 254, 138, 236, 205, 93, 222,
    114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180
];

	/**
	 * To remove the need for index wrapping, double the permutation table
	 * length
	 */
var	_perm = (function(){
		var _per = has.typedArrays() ? new Int32Array(0x200) : [];
		for (var i = 0; i < 0x200; i++) {
			_per[i] = _p[i & 0xff];
		}
		return _per;
	})();


	/**
	 * A lookup table to traverse the simplex around a given point in 4D.
	 * Details can be found where this table is used, in the 4D noise method.
	 */
var	_simplex = [
		[ 0, 1, 2, 3 ], [ 0, 1, 3, 2 ],
		[ 0, 0, 0, 0 ], [ 0, 2, 3, 1 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ],
		[ 0, 0, 0, 0 ], [ 1, 2, 3, 0 ], [ 0, 2, 1, 3 ], [ 0, 0, 0, 0 ],
		[ 0, 3, 1, 2 ], [ 0, 3, 2, 1 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ],
		[ 0, 0, 0, 0 ], [ 1, 3, 2, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ],
		[ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ],
		[ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 1, 2, 0, 3 ], [ 0, 0, 0, 0 ],
		[ 1, 3, 0, 2 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ],
		[ 2, 3, 0, 1 ], [ 2, 3, 1, 0 ], [ 1, 0, 2, 3 ], [ 1, 0, 3, 2 ],
		[ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 2, 0, 3, 1 ],
		[ 0, 0, 0, 0 ], [ 2, 1, 3, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ],
		[ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ],
		[ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 2, 0, 1, 3 ], [ 0, 0, 0, 0 ],
		[ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 3, 0, 1, 2 ], [ 3, 0, 2, 1 ],
		[ 0, 0, 0, 0 ], [ 3, 1, 2, 0 ], [ 2, 1, 0, 3 ], [ 0, 0, 0, 0 ],
		[ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 3, 1, 0, 2 ], [ 0, 0, 0, 0 ],
		[ 3, 2, 0, 1 ], [ 3, 2, 1, 0 ]
	];

//if this environment supports typed arrays
//convert our arrays over for massive perf gain!
if( has.typedArrays() ){
    var makeEachTypedArray = function(arr){
        var _g = [];
        each( arr, function(g){
            _g.push( new Int32Array(g) );
        });
        return _g;
    };
    _grad3 = makeEachTypedArray(_grad3);
    _grad4 = makeEachTypedArray(_grad4);
    _p = new Int32Array(_p);
    _simplex = makeEachTypedArray(_simplex);
    this.testObjs = {
        _grad3: _grad3,
        _grad4: _grad4,
        _p: _p,
        _simplex: _simplex
    };
}

	/**
	* Computes dot product in 2D.
	* @param g 2-vector (grid offset)
	* @param {Number} x
	* @param {Number} y
	* @param {Number} z
	* @param {Number} w
	* @return {Number} dot product
	* @api private
	*/
var	_dot = function(g, x, y, z, w) {
		var n = g[0] * x + g[1] * y;
		if(z){
			n += g[2] * z;
			if(w){
				n += g[3] * w;
			}
		}
		return n;
	};

	/**
	*This method is a *lot* faster than using (int)Math.floor(x).
	* @param {Number} x value to be floored
	* @return {Number}
	* @api private
	*/
var	_fastfloor = function(x) {
		return (x >= 0) ? Math.floor(x) : Math.floor(x - 1);
	};


	/**
	 * @module toxi/math/noise/simplexNoise
	 * @api public
	 */
var	SimplexNoise = { //SimplexNoise only consists of static methods
	/**
	* Computes 4D Simplex Noise.
	* @param {Number} [x] coordinate
	* @param {Number} [y]  coordinate
	* @param {Number} [z] coordinate
	* @param {Number} [w] coordinate
	* @return {Number} noise value in range -1 ... +1
	*/
	noise: function(x, y, z, w) {
		//Noise contributions from five corners, we may use as few as 3 of them (depending on arguments)
		var numArgs = arguments.length,
			n0 = 0,
			n1 = 0,
			n2 = 0,
			n3 = 0,
			n4 = 0;
			//skew the input space to determin which simplex cell we're in
		var	s = (function(){
				switch(numArgs){
					case 2:
					return (x + y) * _F2; //Hairy factor for 2d
					case 3:
					return (x + y + z) * _F3; //Very nice and simple skew factor for 3d
					case 4:
					return (x + y + z + w) * _F4; //factor for 4d skewing
					default:
					throw new Error("Wrong arguments supplied to SimplexNoise.noise()");
				}
			})(),
			i = _fastfloor(x + s),
			j = _fastfloor(y + s),
			k = (z !== undefined) ? _fastfloor(z + s) : undefined,
			l = (w !== undefined) ? _fastfloor(w + s) : undefined;
			//unskew
		var	t = (function(){
				switch(numArgs){
					case 2:
					return (i + j) * _G2;
					case 3:
					return (i + j + k) * _G3;
					case 4:
					return (i + j + k + l) * _G4;
				}
			})(),
			x0 = x - (i - t), //the x,y,z,w distance from the cell origin
			y0 = y - (j - t),
			z0 = (z !== undefined) ? z - (k - t) : undefined,
			w0 = (w !== undefined) ? w - (l - t) : undefined;

			//Determine which simplex we are in
			if(numArgs == 2){
				//for the 2d case, the simplex shape is an equilateral triangle.
				return (function(){
					var i1, j1, //offsets for scond (middle) corner of simplex (i,j)
						x1, y1,
						x2, y2,
						ii,
						jj,
						t0,
						gi0,
						gi1,
						gi2,
						t2;
					if(x0 > y0){ // lower triangle, XY order
						i1 = 1;
						j1 = 0;
					} else { //upper triangle, YX order
						i1 = 0;
						j1 = 1;
					}

					// A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and
					// a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where
					// c = (3-sqrt(3))/6
					x1 = x0 - i1 + _G2; // Offsets for middle corner in (x,y) unskewed
					y1 = y0 - j1 + _G2;
					x2 = x0 + _G22; // Offsets for last corner in (x,y) unskewed
					y2 = y0 + _G22;
					// Work out the hashed gradient indices of the three simplex corners
					ii = i & 0xff;
					jj = j & 0xff;
					// Calculate the contribution from the three corners
					t0 = 0.5 - x0 * x0 - y0 * y0;

					if (t0 > 0) {
						t0 *= t0;
						gi0 = _perm[ii + _perm[jj]] % 12;
						n0 = t0 * t0 * _dot(_grad3[gi0], x0, y0); // (x,y) of grad3 used for
						// 2D gradient
					}
					var t1 = 0.5 - x1 * x1 - y1 * y1;
					if (t1 > 0) {
						t1 *= t1;
						gi1 = _perm[ii + i1 + _perm[jj + j1]] % 12;
						n1 = t1 * t1 * _dot(_grad3[gi1], x1, y1);
					}
					t2 = 0.5 - x2 * x2 - y2 * y2;
					if (t2 > 0) {
						t2 *= t2;
						gi2 = _perm[ii + 1 + _perm[jj + 1]] % 12;
						n2 = t2 * t2 * _dot(_grad3[gi2], x2, y2);
					}
					// Add contributions from each corner to get the final noise value.
					// The result is scaled to return values in the interval [-1,1].
					return 70.0 * (n0 + n1 + n2);
				})();
			} else if(numArgs == 3){
				//for the 3d case, the simplex shape is a slightly irregular tetrahedron
				return (function(){
					var i1, j1, k1, // Offsets for second corner of simplex in (i,j,k)
						// coords
						i2, j2, k2, // Offsets for third corner of simplex in (i,j,k) coords
						x1,y1,z1,
						x2,y2,z2,
						x3,y3,z3,
						ii,jj,kk,
						t0,
						gi0,
						t1,
						gi1,
						t2,
						gi2,
						t3,
						gi3;
					if (x0 >= y0) {
						if (y0 >= z0) {
							i1 = 1;
							j1 = 0;
							k1 = 0;
							i2 = 1;
							j2 = 1;
							k2 = 0;
						} // X Y Z order
						else if (x0 >= z0) {
							i1 = 1;
							j1 = 0;
							k1 = 0;
							i2 = 1;
							j2 = 0;
							k2 = 1;
						} // X Z Y order
						else {
							i1 = 0;
							j1 = 0;
							k1 = 1;
							i2 = 1;
							j2 = 0;
							k2 = 1;
						} // Z X Y order
					} else { // x0<y0
						if (y0 < z0) {
							i1 = 0;
							j1 = 0;
							k1 = 1;
							i2 = 0;
							j2 = 1;
							k2 = 1;
						} // Z Y X order
						else if (x0 < z0) {
							i1 = 0;
							j1 = 1;
							k1 = 0;
							i2 = 0;
							j2 = 1;
							k2 = 1;
						} // Y Z X order
						else {
							i1 = 0;
							j1 = 1;
							k1 = 0;
							i2 = 1;
							j2 = 1;
							k2 = 0;
						} // Y X Z order
					}
					// A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),
					// a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z),
					// and
					// a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z),
					// where
					// c = 1/6.
					x1 = x0 - i1 + _G3; // Offsets for second corner in (x,y,z) coords
					y1 = y0 - j1 + _G3;
					z1 = z0 - k1 + _G3;

					x2 = x0 - i2 + _F3; // Offsets for third corner in (x,y,z)
					y2 = y0 - j2 + _F3;
					z2 = z0 - k2 + _F3;

					x3 = x0 - 0.5; // Offsets for last corner in (x,y,z)
					y3 = y0 - 0.5;
					z3 = z0 - 0.5;
					// Work out the hashed gradient indices of the four simplex corners
					ii = i & 0xff;
					jj = j & 0xff;
					kk = k & 0xff;

					// Calculate the contribution from the four corners
					t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;
					if (t0 > 0) {
						t0 *= t0;
						gi0 = _perm[ii + _perm[jj + _perm[kk]]] % 12;
						n0 = t0 * t0 * _dot(_grad3[gi0], x0, y0, z0);
					}
					t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;
					if (t1 > 0) {
						t1 *= t1;
						gi1 = _perm[ii + i1 + _perm[jj + j1 + _perm[kk + k1]]] % 12;
						n1 = t1 * t1 * _dot(_grad3[gi1], x1, y1, z1);
					}
					t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;
					if (t2 > 0) {
						t2 *= t2;
						gi2 = _perm[ii + i2 + _perm[jj + j2 + _perm[kk + k2]]] % 12;
						n2 = t2 * t2 * _dot(_grad3[gi2], x2, y2, z2);
					}
					t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;
					if (t3 > 0) {
						t3 *= t3;
						gi3 = _perm[ii + 1 + _perm[jj + 1 + _perm[kk + 1]]] % 12;
						n3 = t3 * t3 * _dot(_grad3[gi3], x3, y3, z3);
					}
					// Add contributions from each corner to get the final noise value.
					// The result is scaled to stay just inside [-1,1]
					return 32.0 * (n0 + n1 + n2 + n3);
				})();
			} else {
				// For the 4D case, the simplex is a 4D shape I won't even try to
				// describe.
				// To find out which of the 24 possible simplices we're in, we need to
				// determine the magnitude ordering of x0, y0, z0 and w0.
				// The method below is a good way of finding the ordering of x,y,z,w and
				// then find the correct traversal order for the simplex were in.
				// First, six pair-wise comparisons are performed between each possible
				// pair of the four coordinates, and the results are used to add up
				// binary bits for an integer index.
				return (function(){
					var i1,j1,k1,l1, // The integer offsets for the second simplex corner
						i2,j2,k2,l2, // The integer offsets for the third simplex corner
						i3,j3,k3,l3, // The integer offsets for the fourth simplex corner
						// simplex[c] is a 4-vector with the numbers 0, 1, 2 and 3 in some
						// order. Many values of c will never occur, since e.g. x>y>z>w makes
						// x<z, y<w and x<w impossible. Only the 24 indices which have non-zero
						// entries make any sense. We use a thresholding to set the coordinates
						// in turn from the largest magnitude. The number 3 in the "simplex"
						// array is at the position of the largest coordinate.
						sc = _simplex[
							(function(){
								var c = 0;
								if (x0 > y0) {
									c = 0x20;
								}
								if (x0 > z0) {
									c |= 0x10;
								}
								if (y0 > z0) {
									c |= 0x08;
								}
								if (x0 > w0) {
									c |= 0x04;
								}
								if (y0 > w0) {
									c |= 0x02;
								}
								if (z0 > w0) {
									c |= 0x01;
								}
								return c;
							})()
						],
						x1, y1, z1, w1,
						x2, y2, z2, w2,
						x3, y3, z3, w3,
						x4, y4, z4, w4,
						ii, jj, kk, ll,
						t0,
						gi0,
						t1,
						gi1,
						t2,
						gi2,
						t3,
						gi3,
						t4,
						gi4;


						i1 = sc[0] >= 3 ? 1 : 0;
						j1 = sc[1] >= 3 ? 1 : 0;
						k1 = sc[2] >= 3 ? 1 : 0;
						l1 = sc[3] >= 3 ? 1 : 0;
						// The number 2 in the "simplex" array is at the second largest
						// coordinate.
						i2 = sc[0] >= 2 ? 1 : 0;
						j2 = sc[1] >= 2 ? 1 : 0;
						k2 = sc[2] >= 2 ? 1 : 0;
						l2 = sc[3] >= 2 ? 1 : 0;
						// The number 1 in the "simplex" array is at the second smallest
						// coordinate.
						i3 = sc[0] >= 1 ? 1 : 0;
						j3 = sc[1] >= 1 ? 1 : 0;
						k3 = sc[2] >= 1 ? 1 : 0;
						l3 = sc[3] >= 1 ? 1 : 0;

						// The fifth corner has all coordinate offsets = 1, so no need to look
						// that up.
						x1 = x0 - i1 + _G4; // Offsets for second corner in (x,y,z,w)
						y1 = y0 - j1 + _G4;
						z1 = z0 - k1 + _G4;
						w1 = w0 - l1 + _G4;

						x2 = x0 - i2 + _G42; // Offsets for third corner in (x,y,z,w)
						y2 = y0 - j2 + _G42;
						z2 = z0 - k2 + _G42;
						w2 = w0 - l2 + _G42;

						x3 = x0 - i3 + _G43; // Offsets for fourth corner in (x,y,z,w)
						y3 = y0 - j3 + _G43;
						z3 = z0 - k3 + _G43;
						w3 = w0 - l3 + _G43;

						x4 = x0 + _G44; // Offsets for last corner in (x,y,z,w)
						y4 = y0 + _G44;
						z4 = z0 + _G44;
						w4 = w0 + _G44;

						// Work out the hashed gradient indices of the five simplex corners
						ii = i & 0xff;
						jj = j & 0xff;
						kk = k & 0xff;
						ll = l & 0xff;

						// Calculate the contribution from the five corners
						t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0 - w0 * w0;
						if (t0 > 0) {
							t0 *= t0;
							gi0 = _perm[ii + _perm[jj + _perm[kk + _perm[ll]]]] % 32;
							n0 = t0 * t0 * _dot(_grad4[gi0], x0, y0, z0, w0);
						}
						t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1 - w1 * w1;
						if (t1 > 0) {
							t1 *= t1;
							gi1 = _perm[ii + i1 + _perm[jj + j1 + _perm[kk + k1 + _perm[ll + l1]]]] % 32;
							n1 = t1 * t1 * _dot(_grad4[gi1], x1, y1, z1, w1);
						}
						t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2 - w2 * w2;
						if (t2 > 0) {
							t2 *= t2;
							gi2 = _perm[ii + i2 + _perm[jj + j2 + _perm[kk + k2 + _perm[ll + l2]]]] % 32;
							n2 = t2 * t2 * _dot(_grad4[gi2], x2, y2, z2, w2);
						}
						t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3 - w3 * w3;
						if (t3 > 0) {
							t3 *= t3;
							gi3 = _perm[ii + i3 + _perm[jj + j3 + _perm[kk + k3 + _perm[ll + l3]]]] % 32;
							n3 = t3 * t3 * _dot(_grad4[gi3], x3, y3, z3, w3);
						}
						t4 = 0.6 - x4 * x4 - y4 * y4 - z4 * z4 - w4 * w4;
						if (t4 > 0) {
							t4 *= t4;
							gi4 = _perm[ii + 1 + _perm[jj + 1 + _perm[kk + 1 + _perm[ll + 1]]]] % 32;
							n4 = t4 * t4 * _dot(_grad4[gi4], x4, y4, z4, w4);
						}

						// Sum up and scale the result to cover the range [-1,1]
						return 27.0 * (n0 + n1 + n2 + n3 + n4);
				})();

			}

	}
};

module.exports = SimplexNoise;




},{"../../internals/each":124,"../../internals/has":127}],151:[function(require,module,exports){

/** @module toxi/math/waves */
module.exports = {
	AbstractWave: require('./waves/AbstractWave'),
	AMFMSineWave: require('./waves/AMFMSineWave'),
	ConstantWave: require('./waves/ConstantWave'),
	FMHarmonicSquareWave: require('./waves/FMHarmonicSquareWave'),
	FMSawtoothWave: require('./waves/FMSawtoothWave'),
	FMSineWave: require('./waves/FMSineWave'),
	FMSquareWave: require('./waves/FMSquareWave'),
	FMTriangleWave: require('./waves/FMTriangleWave'),
	SineWave: require('./waves/SineWave'),
	WaveState: require('./waves/WaveState')
};


},{"./waves/AMFMSineWave":152,"./waves/AbstractWave":153,"./waves/ConstantWave":154,"./waves/FMHarmonicSquareWave":155,"./waves/FMSawtoothWave":156,"./waves/FMSineWave":157,"./waves/FMSquareWave":158,"./waves/FMTriangleWave":159,"./waves/SineWave":160,"./waves/WaveState":161}],152:[function(require,module,exports){


var extend = require('../../internals').extend,
	AbstractWave = require('./AbstractWave');

/**
 * @module toxi/math/waves/AMFMSineWave
 * @augments toxi/math/waves/AbstractWave
 */
var	AMFMSineWave = function(a,b,c,d,e){
	if(typeof c == "number"){
		AbstractWave.call(this,a,b,1,c);
		this.amod = d;
		this.fmod = e;
	} else{
		AbstractWave.call(this,a,b);
		this.amod = c;
		this.fmod = d;
	}
};

extend(AMFMSineWave,AbstractWave);

AMFMSineWave.prototype.getClass = function(){
	return "AMFMSineWave";
};

AMFMSineWave.prototype.pop = function(){
	this.parent.pop.call(this);
	this.amod.pop();
	this.fmod.pop();
};

AMFMSineWave.prototype.push = function() {
    this.parent.push.call(this);
    this.amod.push();
    this.fmod.push();
};

/**
 * Resets this wave and its modulating waves as well.
 *
 * @see toxi.math.waves.AbstractWave#reset()
 */
AMFMSineWave.prototype.reset = function(){
	this.parent.reset.call(this);
	this.fmod.reset();
	this.amod.reset();
};

/**
 * @class Progresses the wave and updates the result value. You must NEVER call the
 * update() method on the 2 modulating wave since this is handled
 * automatically by this method.
  * @augments AbstractWave
 * @member toxi
 * @see toxi.math.waves.AbstractWave#update()
 */
AMFMSineWave.prototype.update = function() {
    this.amp = this.amod.update();
    this.value = this.amp * Math.sin(this.phase) + this.offset;
    this.cyclePhase(this.frequency + this.fmod.update());
    return this.value;
};

module.exports = AMFMSineWave;



},{"../../internals":120,"./AbstractWave":153}],153:[function(require,module,exports){


var WaveState = require('./WaveState');
var defaultNumberTo = function( i, num ){
    return typeof i === 'number' ? i : num;
};


/**
 * @module toxi/math/waves/AbstractWave
 * @description Abstract wave oscillator type which needs to be subclassed to implement
 * different waveforms. Please note that the frequency unit is radians, but
 * conversion methods to & from Hertz ({@link #hertzToRadians(float, float)})
 * are included in this base class.
 */
var AbstractWave = function( phase, freq, amp, offset ){
    if( typeof arguments[0] === 'object' && !freq && !amp && !offset ){
        //options object
        offset = phase.offset;
        amp = typeof phase.amp === 'number' ? phase.amp : phase.amplitude;
        freq = typeof phase.freq === 'number' ? phase.freq : phase.frequency;
        phase = phase.phase;
    }
    this.setPhase( defaultNumberTo(phase, 0) );
    this.frequency = defaultNumberTo( freq, 0 );
    this.amp = defaultNumberTo( amp, 1.0 );
    this.offset = defaultNumberTo( offset, 0 );
};



AbstractWave.prototype = {
	/**
     * Ensures phase remains in the 0...TWO_PI interval.
     * @param {Number} freq
     *            normalized progress frequency
     * @return {Number} current phase
     */
	cyclePhase: function(freq){
		if(freq === undefined)freq = 0;
		this.phase = (this.phase + freq) % AbstractWave.TWO_PI;
		if(this.phase < 0){
			this.phase += AbstractWave.TWO_PI;
		}
		return this.phase;
	},

	getClass: function(){
		return "AbstractWave";
	},

	pop: function() {
        if (this.stateStack === undefined || (this.stateStack !== undefined && this.stateStack.length <= 0)) {
            //throw new Error("no wave states on stack");
			console.log(this.toString());
			console.log("no wave states on stack");
            return;
        }
        var s = this.stateStack.pop();
        this.phase = s.phase;
        this.frequency = s.frequency;
        this.amp = s.amp;
        this.offset = s.offset;
    },

	push: function() {
        if (this.stateStack === undefined) {
            this.stateStack = [];
        }
        this.stateStack.push(new WaveState(this.phase, this.frequency, this.amp, this.offset));
    },

	reset: function() {
        this.phase = this.origPhase;
    },

	setPhase: function(phase) {
        this.phase = phase;
        this.cyclePhase();
        this.origPhase = phase;
    },

	toString: function(){
		return this.getClass()+" phase:" + this.phase+ " frequency: "+this.frequency+" amp: "+this.amp+ " offset: "+this.offset;
	},

	update:function(){
		console.log(this.getClass()+ " this should be overridden");
	}

};

AbstractWave.PI = 3.14159265358979323846;
AbstractWave.TWO_PI = 2 * AbstractWave.PI;


/**
 * Converts a frequency in Hertz into radians.
 *
 * @param hz frequency to convert (in Hz)
 * @param sampleRate sampling rate in Hz (equals period length @ 1 Hz)
 * @return frequency in radians
 */
AbstractWave.hertzToRadians = function(hz,sampleRate) {
        return hz / sampleRate * AbstractWave.TWO_PI;
};

/**
 * Converts a frequency from radians to Hertz.
 *
 * @param f frequency in radians
 * @param sampleRate  sampling rate in Hz (equals period length @ 1 Hz)
 * @return freq in Hz
 */
AbstractWave.radiansToHertz = function(f,sampleRate) {
    return f / AbstractWave.TWO_PI * sampleRate;
};

module.exports = AbstractWave;



},{"./WaveState":161}],154:[function(require,module,exports){

var extend = require('../../internals').extend,
	AbstractWave = require('./AbstractWave');
/**
 * @module toxi/math/waves/ConstantWave
 * @augments toxi/math/waves/AbstractWave
 */
var	ConstantWave = function(value) {
	 AbstractWave.apply(this);
	 this.value = value;
};

extend(ConstantWave,AbstractWave);

ConstantWave.prototype.getClass = function(){
	return "ConstantWave";
};

ConstantWave.prototype.update = function() {
	return this.value;
};

module.exports = ConstantWave;


},{"../../internals":120,"./AbstractWave":153}],155:[function(require,module,exports){


var extend = require('../../internals').extend,
	AbstractWave = require('./AbstractWave');

/**
 * @module toxi/math/waves/FMHarmonicSquareWave
 * @description
 * <p>
 * Frequency modulated <strong>bandwidth-limited</strong> square wave using a
 * fourier series of harmonics. Also uses a secondary wave to modulate the
 * frequency of the main wave.
 * </p>
 *
 * <p>
 * <strong>Note:</strong> You must NEVER call the update() method on the
 * modulating wave.
 * </p>
 * @augments toxi/math/waves/AbstractWave
 */
var	FMHarmonicSquareWave = function(a,b,c,d,e) {
	this.maxHarmonics = 3;
	if(typeof c == "number"){
		if(e === undefined){
			e = new ConstantWave(0);
		}
		AbstractWave.call(this,a,b,c,d);
		this.fmod = e;
	} else{
		AbstractWave.call(this,a,b);
		this.fmod = c;
	}
};

extend(FMHarmonicSquareWave,AbstractWave);

FMHarmonicSquareWave.prototype.getClass = function(){
	return "FMHarmonicSquareWave";
};

FMHarmonicSquareWave.prototype.pop = function() {
	this.parent.pop.call(this);
    this.fmod.pop();
};

FMHarmonicSquareWave.prototype.push = function() {
    this.parent.push.call(this);
    this.fmod.push();
};

FMHarmonicSquareWave.prototype.reset = function() {
    this.parent.reset.call(this);
    this.fmod.reset();
};

/**
 * @class Progresses the wave and updates the result value. You must NEVER call the
 * update() method on the modulating wave since this is handled
 * automatically by this method.
 *
 * @see toxi.math.waves.AbstractWave#update()
 * @member toxi
 * @augments AbstractWave
 */
FMHarmonicSquareWave.prototype.update = function() {
    this.value = 0;
    for (var i = 1; i <= this.maxHarmonics; i += 2) {
        this.value += 1.0 / i *  Math.sin(i * this.phase);
    }
    this.value *= this.amp;
    this.value += this.offset;
    this.cyclePhase(this.frequency + this.fmod.update());
    return this.value;
};

module.exports = FMHarmonicSquareWave;


},{"../../internals":120,"./AbstractWave":153}],156:[function(require,module,exports){

var extend = require('../../internals').extend,
	AbstractWave = require('./AbstractWave');


/**
 * @module toxi/math/waves/FMSawtoothWave
 * @augments toxi/math/waves/AbstractWave
 */
var	FMSawtoothWave = function(a,b,c,d,e){
	if(typeof c == "number") {
		AbstractWave.call(this,a,b,c,d);
		this.fmod = e;
	} else {
		AbstractWave.call(this,a,b);
		this.fmod = c;
	}
};

extend(FMSawtoothWave,AbstractWave);

FMSawtoothWave.prototype.getClass = function(){
	return "FMSawtoothWave";
};


FMSawtoothWave.prototype.pop = function(){
	this.parent.pop.call(this);
	this.fmod.pop();
};


FMSawtoothWave.prototype.push = function(){
	this.parent.push.call(this);
	this.fmod.push();
};


FMSawtoothWave.prototype.reset = function(){
	this.parent.reset.call(this);
	this.fmod.reset();
};


FMSawtoothWave.prototype.update = function(){
	this.value = ((this.phase / AbstractWave.TWO_PI)*2 - 1) * this.amp + this.offset;
	this.cyclePhase(this.frequency + this.fmod.update());
	return this.value;
};

module.exports = FMSawtoothWave;


},{"../../internals":120,"./AbstractWave":153}],157:[function(require,module,exports){


var extend = require('../../internals').extend,
	AbstractWave = require('./AbstractWave');

/**
 * @module toxi/math/waves/FMSineWave
 * @augments toxi/math/waves/AbstractWave
 */
var	FMSineWave = function(a,b,c,d,e){
	if(typeof(c) == "number"){
		AbstractWave.call(this,a,b,c,d);
		this.fmod = e;
	}else{
		AbstractWave.call(this,a,b);
		this.fmod = c;
	}
};

extend(FMSineWave,AbstractWave);

FMSineWave.prototype.getClass = function(){
	return "FMSineWave";
};

FMSineWave.prototype.pop = function(){
	this.parent.pop.call(this);
	this.fmod.pop();
};

FMSineWave.prototype.push = function(){
	this.parent.push.call(this);
	this.fmod.push();
};

FMSineWave.prototype.reset = function(){
	this.parent.reset.call(this);
	this.fmod.reset();
};

FMSineWave.prototype.update = function(){
	this.value = (Math.sin(this.phase)*this.amp) + this.offset;
	this.cyclePhase(this.frequency + this.fmod.update());
	return this.value;
};

module.exports = FMSineWave;


},{"../../internals":120,"./AbstractWave":153}],158:[function(require,module,exports){


var extend = require('../../internals').extend,
	AbstractWave = require('./AbstractWave'),
	ConstantWave = require('./ConstantWave');

/**
 * @module toxi/math/waves/FMSquareWave
 * @augments toxi/math/waves/AbstractWave
 */
var	FMSquareWave = function(a,b,c,d,e)
{
	if(typeof c == "number"){
		if(e === undefined){
			AbstractWave.call(this,a,b,c,d, new ConstantWave(0));
		} else {
			AbstractWave.call(this,a,b,c,d);
			this.fmod = e;
		}
	} else {
		AbstractWave.call(this,a,b);
		this.fmod = c;
	}
};

extend(FMSquareWave,AbstractWave);

FMSquareWave.prototype.getClass = function(){
	return "FMSquareWave";
};

FMSquareWave.prototype.pop = function(){
	this.parent.pop.call(this);
	this.fmod.pop();
};

FMSquareWave.prototype.push = function(){
	this.parent.push.call(this);
	this.fmod.push();
};

FMSquareWave.prototype.reset = function(){
	this.parent.reset.call(this);
	this.fmod.reset();
};

FMSquareWave.prototype.update = function(){
	this.value = (this.phase / AbstractWave.TWO_PI < 0.5 ? 1 : -1)*this.amp + this.offset;
	this.cyclePhase(this.frequency + this.fmod.update());
	return this.value;
};

module.exports = FMSquareWave;


},{"../../internals":120,"./AbstractWave":153,"./ConstantWave":154}],159:[function(require,module,exports){


var extend = require('../../internals').extend,
	mathUtils = require('../mathUtils'),
	AbstractWave = require('./AbstractWave'),
	ConstantWave = require('./ConstantWave');

/**
 * @module toxi/math/waves/FMTriangleWave
 * @augments toxi/math/waves/AbstractWave
 */
var	FMTriangleWave = function(a,b,c,d,e){
	if(typeof c == "number"){
		if(e !== undefined){
			AbstractWave.call(this,a,b,c,d);
			this.fmod = e;
		} else {
			AbstractWave.call(this,a,b,c,d, new ConstantWave(0));
		}
	} else {
		AbstractWave.call(this,a,b,1,0);
	}
};

extend(FMTriangleWave,AbstractWave);

FMTriangleWave.prototype.getClass = function(){
	return "FMTriangleWave";
};

FMTriangleWave.prototype.pop = function(){
	this.parent.pop.call(this);
	this.fmod.pop();
};

FMTriangleWave.prototype.push = function(){
	this.parent.push.call(this);
	this.fmod.push();
};

FMTriangleWave.prototype.reset = function(){
	this.parent.reset.call(this);
	this.fmod.reset();
};

FMTriangleWave.prototype.update = function(){
	this.value = 2 * this.amp * (Math.abs(AbstractWave.PI - this.phase) * mathUtils.INV_PI - 0.5) + this.offset;
	this.cyclePhase(this.frequency + this.fmod.update());
	return this.value;
};

module.exports = FMTriangleWave;


},{"../../internals":120,"../mathUtils":147,"./AbstractWave":153,"./ConstantWave":154}],160:[function(require,module,exports){


var extend = require('../../internals').extend,
	AbstractWave = require('./AbstractWave');

/**
 * @module toxi/math/waves/SineWave
 * @augments toxi/math/wave/AbstractWave
 * member toxi
 * @augments AbstractWave
 * @param {Number} [phase] phase
 * @param {Number} [freq] frequency
 * @param {Number} [amp] amplitude
 * @param {Number} [offset] offset
 */
var	SineWave = function(phase,freq,amp,offset) {
    AbstractWave.call(this, phase, freq, amp, offset);
};

extend(SineWave,AbstractWave);

SineWave.prototype.getClass = function(){
	return "SineWave";
};

SineWave.prototype.update = function() {
   this.value = (Math.sin(this.phase) * this.amp) + this.offset;
   this.cyclePhase(this.frequency);
   return this.value;
};

module.exports = SineWave;


},{"../../internals":120,"./AbstractWave":153}],161:[function(require,module,exports){

/**
 * @module toxi/math/waves/WaveState
 */
var	WaveState = function(phase,frequency,amp,offset){
	this.phase = phase;
	this.frequency = frequency;
	this.amp = amp;
	this.offset = offset;
};

module.exports = WaveState;


},{}],162:[function(require,module,exports){

module.exports = {
	ParticlePath2D: require('./physics2d/ParticlePath2D'),
	ParticleString2D: require('./physics2d/ParticleString2D'),
	PullBackString2D: require('./physics2d/PullBackString2D'),
	VerletConstrainedSpring2D: require('./physics2d/VerletConstrainedSpring2D'),
	VerletMinDistanceSpring2D: require('./physics2d/VerletMinDistanceSpring2D'),
	VerletParticle2D: require('./physics2d/VerletParticle2D'),
	VerletPhysics2D: require('./physics2d/VerletPhysics2D'),
	VerletSpring2D: require('./physics2d/VerletSpring2D')
};

module.exports.behaviors = require('./physics2d/behaviors');
module.exports.constraints = require('./physics2d/constraints');


},{"./physics2d/ParticlePath2D":163,"./physics2d/ParticleString2D":164,"./physics2d/PullBackString2D":165,"./physics2d/VerletConstrainedSpring2D":166,"./physics2d/VerletMinDistanceSpring2D":167,"./physics2d/VerletParticle2D":168,"./physics2d/VerletPhysics2D":169,"./physics2d/VerletSpring2D":170,"./physics2d/behaviors":171,"./physics2d/constraints":175}],163:[function(require,module,exports){


    var internals = require('../internals'),
        Spline2D = require('../geom/Spline2D'),
        VerletParticle2D = require('./VerletParticle2D');

    var	ParticlePath2D = function(points){
        Spline2D.call(this,points);
        this.particles = [];
    };

    internals.extend(ParticlePath2D,Spline2D);

    //public
    ParticlePath2D.prototype.createParticles = function(physics,subDiv,step,mass){
        this.particles = [];
        this.computeVertices(subDiv);
        var i = 0;
        var dv = this.getDecimatedVertices(step,true);
        for(i = 0; i < dv.length; i++){
            var v = dv[i];
            var p = new VerletParticle2D(v,mass);
            this.particles.push(p);
            physics.addParticle(p);
        }
        return this.particles;
    };

    module.exports = ParticlePath2D;


},{"../geom/Spline2D":86,"../internals":120,"./VerletParticle2D":168}],164:[function(require,module,exports){


var VerletParticle2D = require('./VerletParticle2D'),
	VerletSpring2D = require('./VerletSpring2D');

/**
* Utility builder/grouping/management class to connect a set of particles into
* a physical string/thread. Custom spring types can be used by subclassing this
* class and overwriting the
* {@link #createSpring(VerletParticle2D, VerletParticle2D, float, float)}
method.
*/

 /**
  Construct a ParticleString2D,
  parameter options:
  1 - options object
  3 - VerletPhysics2D physics, Array<VerletParticle2D> plist, Number strength
  6 - VerletPhysics2D physic, Vec2D pos, Vec2D step, Number num, Number mass, Number strength
  */
  
var	ParticleString2D = function(){
	var opts = {
		physics: undefined,
		plist: undefined,
		pos: undefined,
		step: undefined,
		num: undefined,
		mass: undefined,
		strength: undefined
	},
	is6ParamConstructor = false;
	if(arguments.length === 0){
		throw new Error("Incorrect Parameters");
	} else if(arguments.length == 1){ //options object
		var arg = arguments[0];
		for(var prop in arg){
			opts[prop] = arg[prop];
		}
	} else {
		opts.physics = arguments[0];
		if(arguments.length == 6){
			opts.pos = arguments[1];
			opts.step = arguments[2];
			opts.num = arguments[3];
			opts.mass = arguments[4];
			opts.strength = arguments[5];
		} else {
			opts.plist = arguments[1];
			opts.strength = arguments[2];
		}
	}
	if(opts.num !== undefined && opts.pos !== undefined && opts.step !== undefined && opts.mass !== undefined){
		is6ParamConstructor = true;
	}
	if(!is6ParamConstructor && opts.plist === undefined){
		throw new Error("Incorrect Parameters, please supply plist or num, pos, step & mass");
	}
	
	
	this.physics = opts.physics;
	this.links = [];
	
	var prev,
		p,
		s,
		strength,
		i = 0;
	
	
	if(is6ParamConstructor){
		var pos = opts.pos.copy(),
			step = opts.step,
			mass = opts.mass,
			len = step.magnitude();
		this.particles = [];
		strength = opts.strength;
		
		for(i = 0; i < opts.num; i++){
			p = new VerletParticle2D(pos.copy(),mass);
			this.particles.push(p);
			this.physics.particles.push(p);
			if(prev !== undefined){
				s = this.createSpring(prev,p,len,strength);
				this.links.push(s);
				this.physics.addSpring(s);
			}
			prev = p;
			pos.addSelf(step);
		}
	} else {
		strength = opts.strength;
		this.particles = opts.plist || [];

		
		for(i = 0; i < this.particles.length; i++){
			p = this.particles[i];
			this.physics.addParticle(p);
			if(prev !== undefined){
				s = this.createSpring(prev,p,prev.distanceTo(p),strength);
				this.links.push(s);
				this.physics.addSpring(s);	
			}
			prev = p;
		}
	}
 }; 
ParticleString2D.prototype = {
	clear: function(){
		for(var i = 0, len = this.links.length; i < len; i++){
			this.physics.removeSpringElements(this.links[i]);
		}
		this.particles = [];
		this.links = [];
	},
	createSpring: function(a,b,len,strength){
		return new VerletSpring2D(a,b,len,strength);
	},
	
	getHead: function(){
		return this.particles[0];
	},
	
	getNumParticles: function(){
		return this.particles.length;
	},
	
	getTail: function(){
		return this.particles[this.particles.length-1];
	}
};

module.exports = ParticleString2D;


},{"./VerletParticle2D":168,"./VerletSpring2D":170}],165:[function(require,module,exports){


var internals = require('../internals'),
	VerletSpring2D = require('./VerletSpring2D');

/**
* Creates a pullback spring (default restlength=0.5) between 2 particles and
* locks the first one given at the current position. The spring is only
* enforced if the current length of the spring exceeds the rest length. This
* behaviour is the opposite to the {@link VerletMinDistanceSpring2D}.
*/
 
 var PullBackString2D = function(a,b,strength){
	VerletSpring2D.apply(this,[a,b,0,strength]);
	a.lock();
	this.setRestLength(0.5);
 };
 internals.extend(PullBackString2D,VerletSpring2D);

 PullBackString2D.prototype.update = function(applyConstraints){
	if(this.b.distanceToSquared(this.a) > this.restLengthSquared){
		this.parent.update.call(this,applyConstraints);
	}
 };

 module.exports = PullBackString2D;


},{"../internals":120,"./VerletSpring2D":170}],166:[function(require,module,exports){


var internals = require('../internals'),
    VerletSpring2D = require('./VerletSpring2D');

var VerletConstrainedSpring2D = function(particleA, particleB, len, str, limit){
	VerletSpring2D.call(this,particleA,particleB,len,str);
	this.limit = (limit === undefined) ? Number.MAX_VALUE : limit;
};

internals.extend(VerletConstrainedSpring2D,VerletSpring2D);

VerletConstrainedSpring2D.update = function(applyConstraints){
	var delta = this.b.sub(this.a);
    // add minute offset to avoid div-by-zero errors
    var dist = delta.magnitude() + VerletSpring2D.EPS;
    var normDistStrength = (dist - this.restLength) / (dist * (this.a.invWeight + this.b.invWeight))* this.strength;
    if (!this.a.isLocked && !this.isALocked) {
        this.a.addSelf(delta.scale(normDistStrength * this.a.invWeight).limit(this.limit));
        if (applyConstraints) {
            this.a.applyConstraints();
        }
    }
    if (!this.b.isLocked && !this.isBLocked) {
        this.b.subSelf(delta.scale(normDistStrength * this.b.invWeight).limit(this.limit));
        if (applyConstraints) {
            this.b.applyConstraints();
        }
    }
};

module.exports = VerletConstrainedSpring2D;


},{"../internals":120,"./VerletSpring2D":170}],167:[function(require,module,exports){


var internals = require('../internals'),
	VerletSpring2D = require('./VerletSpring2D');

var	VerletMinDistanceSpring2D = function(particleA,particleB,len,str){
	VerletSpring2D.call(this,particleA,particleB,len,str);
	this.setRestLength(len);
};

internals.extend(VerletMinDistanceSpring2D,VerletSpring2D);

VerletMinDistanceSpring2D.prototype.update = function(applyConstraints){
	if(this.b.distanceToSquared(this.a) < this.restLengthSquared){
		this.parent.update.call(this,applyConstraints);
	}
};

module.exports = VerletMinDistanceSpring2D;


},{"../internals":120,"./VerletSpring2D":170}],168:[function(require,module,exports){


var internals = require('../internals'),
	Vec2D = require('../geom/Vec2D');

var	VerletParticle2D = function(x,y,w){
	this.force = new Vec2D();
	if( internals.has.XY( x ) ){
		if( internals.is.VerletParticle2D( x ) ){

			y = x.y;
			w = x.weight;
			x = x.x;
			this.isLocked = x.isLocked;

		} else if(y === undefined){
			y = x.y;
			w = 1;
			x = x.x;
		} else {
			w = y;
			y = x.y;
			x = x.x;
		}
	}
	Vec2D.call(this, x,y);
	this.isLocked = false;
	this.prev = new Vec2D(this);
	this.temp = new Vec2D();
	w = w || 1;
	this.setWeight(w);
};

internals.extend(VerletParticle2D,Vec2D);

VerletParticle2D.prototype.addBehavior = function(behavior,timeStep){
	if(this.behaviors === undefined){
		this.behaviors = [];
	}
	if(behavior === undefined){
		throw new Error("behavior was undefined");
	}
	timeStep = (timeStep === undefined)? 1 : timeStep;
	behavior.configure(timeStep);
	this.behaviors.push(behavior);
	return this;
};

VerletParticle2D.prototype.addConstraint = function(c){
	if(this.constraints === undefined){
		this.constraints = [];
	}
	this.constraints.push(c);
	return this;
};

VerletParticle2D.prototype.addForce = function(f){
	this.force.addSelf(f);
	return this;
};

VerletParticle2D.prototype.addVelocity = function(v){
	this.prev.subSelf(v);
	return this;
};

VerletParticle2D.prototype.applyBehaviors = function(){
	if(this.behaviors !== undefined){
		var i = 0, len = this.behaviors.length;
		for(i = 0;i<len;i++){
			this.behaviors[i].applyBehavior(this);
		}
	}
};

VerletParticle2D.prototype.applyConstraints = function(){
	if(this.constraints !== undefined){
		var i = 0, len = this.constraints.length;
		for(i =0;i<len;i++){
			this.constraints[i].applyConstraint(this);
		}
	}
};


VerletParticle2D.prototype.clearForce = function(){
	this.force.clear();
	return this;
};

VerletParticle2D.prototype.clearVelocity = function(){
	this.prev.set(this);
	return this;
};

VerletParticle2D.prototype.getInvWeight = function(){
	return this.invWeight;
};

VerletParticle2D.prototype.getPreviousPosition = function(){
	return this.prev;
};

VerletParticle2D.prototype.getVelocity = function(){
	return this.sub(this.prev);
};

VerletParticle2D.prototype.getWeight = function(){
	return this.weight;
};

VerletParticle2D.prototype.lock = function(){
	this.isLocked = true;
	return this;
};

VerletParticle2D.prototype.removeAllBehaviors = function(){
	this.behaviors = [];
	return this;
};

VerletParticle2D.prototype.removeAllConstraints = function(){
	this.constraints = [];
	return this;
};

VerletParticle2D.prototype.removeBehavior = function(b){
	return internals.removeItemFrom(b,this.behaviors);
};

VerletParticle2D.prototype.removeConstraint = function(c){
	return internals.removeItemFrom(c,this.constraints);
};

VerletParticle2D.prototype.scaleVelocity = function(scl){
	this.prev.interpolateToSelf(this,1 - scl);
	return this;
};

VerletParticle2D.prototype.setPreviousPosition = function(p){
	this.prev.set(p);
	return this;
};

VerletParticle2D.prototype.setWeight = function(w){
	this.weight = w;
	this.invWeight = (w !== 0) ? 1 / w : 0; //avoid divide by zero
};

VerletParticle2D.prototype.unlock = function() {
	this.clearVelocity();
	this.isLocked = false;
	return this;
};

VerletParticle2D.prototype.update = function(){

	if(!this.isLocked){
		this.applyBehaviors();
		//applyForce() - inline
        this.temp.set(this);
        this.addSelf(this.sub(this.prev).addSelf(this.force.scale(this.weight)));
        this.prev.set(this.temp);
        this.force.clear();
        //
		this.applyConstraints();
	}
};

module.exports = VerletParticle2D;


},{"../geom/Vec2D":92,"../internals":120}],169:[function(require,module,exports){


    var internals = require('../internals'),
        GravityBehavior = require('./behaviors/GravityBehavior'),
        Rect = require('../geom/Rect'),
        Vec2D = require('../geom/Vec2D'),
        id = 0;

    var VerletPhysics2D = function(gravity, numIterations, drag, timeStep) {
        var opts = {
            numIterations: 50,
            drag: 0,
            timeStep: 1
        };
        var a;
        if( arguments.length == 1 && (arguments[0].gravity || arguments[0].numIterations || arguments[0].timeStep || arguments[0].drag) ){ //options object literal
            a = arguments[0];
            opts.gravity = a.gravity;
            opts.numIterations = a.numIterations || opts.numIterations;
            opts.drag = a.drag || opts.drag;
            opts.timeStep = a.timeStep || opts.timeStep;
        } else if( arguments.length == 1){
            opts.gravity = gravity; //might be Vec2D, will get handled below
        } else if( arguments.length == 4 ){
            opts.gravity = gravity;
            opts.numIterations = numIterations;
            opts.drag = drag;
            opts.timeStep = timeStep;
        }

        this.behaviors = [];
        this.particles = [];
        this.springs = [];
        this.numIterations = opts.numIterations;
        this.timeStep = opts.timeStep;
        this.setDrag(opts.drag);
        if( opts.gravity ){
            if( internals.has.XY( opts.gravity ) ){
                opts.gravity = new GravityBehavior( new Vec2D(opts.gravity) );
            }
            this.addBehavior( opts.gravity );
        }
        this.id = id++;
    };

    VerletPhysics2D.addConstraintToAll = function(c, list){
        for(var i=0;i<list.length;i++){
            list[i].addConstraint(c);
        }
    };

    VerletPhysics2D.removeConstraintFromAll = function(c,list){
        for(var i=0;i<list.length;i++){
            list[i].removeConstraint(c);
        }
    };

    VerletPhysics2D.prototype = {

        addBehavior: function(behavior){
            behavior.configure(this.timeStep);
            this.behaviors.push(behavior);
        },

        addParticle: function(p){
            this.particles.push(p);
            return this;
        },

        addSpring: function(s){
            if(this.getSpring(s.a,s.b) === undefined){
                this.springs.push(s);
            }
            return this;
        },

        clear: function(){
            this.particles = [];
            this.springs = [];
            return this;
        },

        constrainToBounds: function(){ //protected
            var p,
                i = 0,
                len = this.particles.length;
            for(i=0; i<len; i++){
                p = this.particles[i];
                if(p.bounds !== undefined){
                    p.constrain(p.bounds);
                }
            }
            if(this.worldBounds !== undefined){
                for(i=0; i<len; i++){
                    p = this.particles[i];
                    p.constrain(this.worldBounds);
                }
            }
        },

        getCurrentBounds: function(){
            var min = new Vec2D(Number.MAX_VALUE, Number.MAX_VALUE);
            var max = new Vec2D(Number.MIN_VALUE, Number.MIN_VALUE);
            var i = 0,
                pLen = this.particles.length,
                p;
            for(; i<pLen; i++){
                p = this.particles[i];
                min.minSelf(p);
                max.maxSelf(p);
            }
            return new Rect(min,max);
        },

        getDrag: function() {
            return 1 - this.drag;
        },

        getNumIterations: function(){
            return this.numIterations;
        },

        getSpring: function(a,b){
            var i = 0,
                sLen = this.springs.length;
            for(; i<sLen; i++){
                var s = this.springs[i];
                if((s.a === a && s.b === b) || (s.a === b && s.b === b)){
                    return s;
                }
            }
            return undefined;
        },

        getTimeStep: function(){
            return this.timeStep;
        },

        getWorldBounds: function(){
            return this.worldBounds;
        },

        removeBehavior: function(c){
            return internals.removeItemFrom(c,this.behaviors);
        },

        removeParticle: function(p){
            return internals.removeItemFrom(p,this.particles);
        },

        removeSpring: function(s) {
            return internals.removeItemFrom(s,this.springs);
        },

        removeSpringElements: function(s){
            if(this.removeSpring(s) !== undefined){
                return (this.removeParticle(s.a) && this.removeParticle(s.b));
            }
            return false;
        },

        setDrag: function(drag){
            this.drag = 1 - drag;
        },

        setNumIterations: function(numIterations){
            this.numIterations = numIterations;
        },

        setTimeStep: function(timeStep){
            this.timeStep = timeStep;
            var i =0, l = this.behaviors.length;
            for(; i<l; i++){
                this.behaviors[i].configure(timeStep);
            }
        },

        setWorldBounds: function(world){
            this.worldBounds = world;
            return this;
        },

        update: function(){
            this.updateParticles();
            this.updateSprings();
            this.constrainToBounds();
            return this;
        },

        updateParticles: function(){
            var i = 0,
                j = 0,
                bLen = this.behaviors.length,
                pLen = this.particles.length,
                b,
                p;
            for(; i<bLen; i++){
                b = this.behaviors[i];
                for(j = 0; j<pLen; j++){
                    b.applyBehavior(this.particles[j]);
                }
            }
            for(j = 0; j<pLen; j++){
                p = this.particles[j];
                p.scaleVelocity(this.drag);
                p.update();
            }
        },

        updateSprings: function(){
            var i = this.numIterations,
                sLen = this.springs.length,
                j = 0;
            for(; i > 0; i--){
                for(j = 0; j<sLen; j++){
                    this.springs[j].update(i === 1);
                }
            }
        }
    };

    module.exports = VerletPhysics2D;


},{"../geom/Rect":84,"../geom/Vec2D":92,"../internals":120,"./behaviors/GravityBehavior":174}],170:[function(require,module,exports){

var	VerletSpring2D = function(a,b,len,str){
	this.a = a;
	this.b = b;
	this.restLength = len;
	this.strength = str;
};

VerletSpring2D.EPS = 1e-6;

VerletSpring2D.prototype = {
	getRestLength: function(){
		return this.restLength;
	},
	
	getStrength: function(){
		return this.strength;
	},
	
	lockA: function(s){
		this.isALocked = s;
		return this;
	},
	
	lockB: function(s){
		this.isBLocked = s;
		return this;
	},
	
	setRestLength: function(len){
		this.restLength = len;
		this.restLengthSquared = len * len;
		return this;
	},
	
	setStrength: function(strength){
		this.strength = strength;
		return this;
	},
	
	update: function(applyConstraints){ //protected
		var delta = this.b.sub(this.a);
		//add minute offset to avoid div-by-zero errors
		var dist = delta.magnitude() + VerletSpring2D.EPS;
		var normDistStrength = (dist - this.restLength) / (dist * (this.a.invWeight + this.b.invWeight)) * this.strength;
		if(!this.a.isLocked && !this.isALocked){
			this.a.addSelf(
				delta.scale(normDistStrength * this.a.invWeight)
			);
			if(applyConstraints){
				this.a.applyConstraints();
			}
		}
		if(!this.b.isLocked && !this.isBLocked){
			this.b.addSelf(
				delta.scale(-normDistStrength * this.b.invWeight)
			);
			if(applyConstraints){
				this.b.applyConstraints();
			}
		}
	}
};

module.exports = VerletSpring2D;


},{}],171:[function(require,module,exports){
var AttractionBehavior = require('./behaviors/AttractionBehavior');
var ConstantForceBehavior = require('./behaviors/ConstantForceBehavior');
var GravityBehavior = require('./behaviors/GravityBehavior');
    exports.AttractionBehavior = AttractionBehavior;
    exports.ConstantForceBehavior = ConstantForceBehavior;
    exports.GravityBehavior = GravityBehavior;


},{"./behaviors/AttractionBehavior":172,"./behaviors/ConstantForceBehavior":173,"./behaviors/GravityBehavior":174}],172:[function(require,module,exports){

    var AttractionBehavior = function(attractor,radius,strength,jitter){
        if(arguments.length < 3){
            throw new Error("Constructor received incorrect Parameters");
        }
        this.jitter = jitter || 0;
        this.attractor = attractor;
        this.strength = strength;
        this.setRadius(radius);
    };

    AttractionBehavior.prototype = {
        applyBehavior: function(p){ //apply() is reserved, so this is now applyBehavior
            var delta = this.attractor.sub(p);
            var dist = delta.magSquared();
            if(dist < this.radiusSquared){
                var f = delta.normalizeTo((1.0 - dist / this.radiusSquared)).jitter(this.jitter).scaleSelf(this.attrStrength);
                p.addForce(f);
            }
        },

        configure: function(timeStep){
            this.timeStep = timeStep;
            this.setStrength(this.strength);
        },

        getAttractor: function(){
            return this.attractor;
        },

        getJitter: function(){
            return this.jitter;
        },

        getRadius: function(){
            return this.radius;
        },

        getStrength: function(){
            return this.strength;
        },

        setAttractor: function(attractor){
            this.attractor = attractor;
        },

        setJitter: function(jitter){
            this.jitter = jitter;
        },

        setRadius: function(r){
            this.radius = r;
            this.radiusSquared = r * r;
        },

        setStrength: function(strength){
            this.strength = strength;
            this.attrStrength = strength * this.timeStep;
        }
    };

    module.exports = AttractionBehavior;



},{}],173:[function(require,module,exports){


    var Vec2D = require('../../geom/Vec2D');

    var	ConstantForceBehavior = function(force){
        this.force = force;
        this.scaledForce = new Vec2D();
        this.timeStep = 0;
    };

    ConstantForceBehavior.prototype = {
        applyBehavior: function(p){ //apply() is reserved, so this is now applyBehavior
            p.addForce(this.scaledForce);
        },

        configure: function(timeStep){
            this.timeStep = timeStep;
            this.setForce(this.force);
        },

        getForce: function(){
            return this.force;
        },

        setForce: function(forceVec){
            this.force = forceVec;
            this.scaledForce = this.force.scale(this.timeStep);
        },

        toString: function(){
            return "behavior force: "+ this.force+ " scaledForce: "+this.scaledForce+ " timeStep: "+this.timeStep;
        }
    };

    module.exports = ConstantForceBehavior;


},{"../../geom/Vec2D":92}],174:[function(require,module,exports){


    var internals = require('../../internals'),
        ConstantForceBehavior = require('./ConstantForceBehavior');

    var	GravityBehavior = function(gravityVec){
        ConstantForceBehavior.call(this,gravityVec);
    };

    internals.extend(GravityBehavior,ConstantForceBehavior);

    GravityBehavior.prototype.configure = function(timeStep){
        this.timeStep = timeStep;
        this.scaledForce = this.force.scale(timeStep * timeStep);
    };

    module.exports = GravityBehavior;


},{"../../internals":120,"./ConstantForceBehavior":173}],175:[function(require,module,exports){
var AngularConstraint = require('./constraints/AngularConstraint');
var AxisConstraint = require('./constraints/AxisConstraint');
var CircularConstraint = require('./constraints/CircularConstraint');
var MaxConstraint = require('./constraints/MaxConstraint');
var MinConstraint = require('./constraints/MinConstraint');
var RectConstraint = require('./constraints/RectConstraint');
    /** @module toxi/physics2d/constraints */
	exports.AngularConstraint = AngularConstraint;
	exports.AxisConstraint = AxisConstraint;
	exports.CircularConstraint = CircularConstraint;
	exports.MaxConstraint = MaxConstraint;
	exports.MinConstraint = MinConstraint;
	exports.RectConstraint = RectConstraint;


},{"./constraints/AngularConstraint":176,"./constraints/AxisConstraint":177,"./constraints/CircularConstraint":178,"./constraints/MaxConstraint":179,"./constraints/MinConstraint":180,"./constraints/RectConstraint":181}],176:[function(require,module,exports){


    var Vec2D = require('../../geom/Vec2D');

    //either Vec2D + angle
    /**
     * @param {Vec2D | Number} vector | angle
     * @param {Number} [theta]
     */
    var	AngularConstraint = function(theta_p,theta){
        if(arguments.length > 1){
            this.theta = theta;
            this.rootPos = new Vec2D(theta_p);
        } else {
            this.rootPos = new Vec2D();
            this.theta = theta_p;
        }
        //due to lack-of int/float types, no support of theta in degrees
    };


    AngularConstraint.prototype.applyConstraint = function(p){
        var delta = p.sub(this.rootPos);
        var heading = Math.floor(delta.heading() / this.theta) * this.theta;
        p.set(this.rootPos.add(Vec2D.fromTheta(heading).scaleSelf(delta.magnitude())));
    };

    module.exports = AngularConstraint;


},{"../../geom/Vec2D":92}],177:[function(require,module,exports){

/**
 * Constrains a particle's movement by locking a given axis to a fixed value.
 */
var	AxisConstraint = function(axis,constraintAmount){
	this.axis = axis;
	this.constraint = constraintAmount;
};

AxisConstraint.prototype.applyConstraint = function(p){
	p.setComponent(this.axis,this.constraint);
};

module.exports = AxisConstraint;


},{}],178:[function(require,module,exports){

	var Circle = require('../../geom/Circle');
	
	var	CircularConstraint = function(a,b){
		if(arguments.length == 1){
			this.circle = a;
		} else {
			this.circle = new Circle(a,b);
		}
	};

	CircularConstraint.prototype.applyConstraint = function(p){
		if(this.circle.containsPoint(p)){
			p.set(this.circle.add(p.sub(this.circle).normalizeTo(this.circle.getRadius())));
		}
	};

	module.exports = CircularConstraint;


},{"../../geom/Circle":67}],179:[function(require,module,exports){

var	MaxConstraint = function(axis,threshold){
	this.axis = axis;
	this.threshold = threshold;	
};

MaxConstraint.prototype.applyConstraint = function(p){
	if(p.getComponent(this.axis) > this.threshold){
		p.setComponent(this.axis,this.threshold);
	}
};

module.exports = MaxConstraint;


},{}],180:[function(require,module,exports){

var	MinConstraint = function(axis,threshold){
	this.axis = axis;
	this.threshold = threshold;
};

MinConstraint.prototype.applyConstraint = function(p){
	if(p.getComponent(this.axis) < this.threshold){
		p.setComponent(this.axis, this.threshold);
	}
};

module.exports = MinConstraint;


},{}],181:[function(require,module,exports){


    var Vec2D = require('../../geom/Vec2D'),
        has = require('../../internals/has'),
        Ray2D = require('../../geom/Ray2D'),
        Rect = require('../../geom/Rect');

    var	RectConstraint = function(a,b){
        if(arguments.length == 1){
            if(typeof a.copy === 'function' ){
                //if passed in as a toxi.geom.Rect
                this.rect = a.copy();
            } else if( has.XYWidthHeight(a) ){
                //if passed in as { x: y: width: height: }
                this.rect = new Rect(a);
            }
        } else if(arguments.length > 1){
            this.rect = new Rect(a,b);
        }
        if( !this.rect ){
            throw new Error('Received Incorrect arguments');
        }
        this.intersectRay = new Ray2D(this.rect.getCentroid(), new Vec2D());
    };

    RectConstraint.prototype = {
        applyConstraint: function(p){
            if(this.rect.containsPoint(p)){
                p.set(this.rect.intersectsRay(this.intersectRay.setDirection(this.intersectRay.sub(p)),0,Number.MAX_VALUE));
            }
        },

        getBox: function(){
            return this.rect.copy();
        },

        setBox: function(rect){
            this.rect = rect.copy();
            this.intersectRay.set(this.rect.getCentroid());
        }
    };

    module.exports = RectConstraint;


},{"../../geom/Ray2D":81,"../../geom/Rect":84,"../../geom/Vec2D":92,"../../internals/has":127}],182:[function(require,module,exports){

/** @module toxi/processing */

module.exports = {
	ToxiclibsSupport: require('./processing/ToxiclibsSupport')
};


},{"./processing/ToxiclibsSupport":183}],183:[function(require,module,exports){


var Matrix4x4 = require('../geom/Matrix4x4'),
	Vec3D = require('../geom/Vec3D'),
	TriangleMesh = require('../geom/mesh/TriangleMesh');

var	ToxiclibsSupport = function(processing,optional_gfx){
	if(typeof Processing === 'undefined'){
		throw new Error("Processing.js has not been loaded");
	}
	this.sketch = processing;
	this.app = processing;
	if(optional_gfx !== undefined){
		this.gfx = processing;
	} else {
		this.gfx = this.app;
	}
	this._normalMap = new Matrix4x4().translateSelf(128,128,128).scaleSelf(127);
};



ToxiclibsSupport.prototype = {
	box: function(aabb,smooth){
		var mesh = aabb.toMesh();
		if(smooth === undefined){
			smooth = false;
		}
		if(smooth){
			mesh.computeVertexNormals();
		}
		this.mesh(mesh,smooth,0);
	},
	
	circle: function(p,radius){
		this.gfx.ellipse(p.x,p.y,radius,radius);
	},
	
	cone: function(){
		var cone = arguments[0],
			res = 6,
			thetaOffset = 0,
			topClosed = true,
			bottomClosed = true,
			smooth = false;
		if(arguments.length == 5){
			res = arguments[1];
			topClosed = arguments[2];
			bottomClosed = arguments[3];
			smooth = arguments[4];
		} else if(arguments.length == 3){
			res = arguments[1];
			smooth = arguments[2];
		}
		
		var mesh = cone.toMesh({
			mesh: new TriangleMesh(),
			steps: res,
			thetaOffset: thetaOffset,
			topClosed: topClosed,
			bottomClosed: bottomClosed
		});
		
		if(smooth){
			mesh.computeVertexNormals();
		}
		window.mesh = mesh;
		this.mesh(mesh,smooth,0);
	},
	
	cylinder: function(cyl,res,smooth){
		if(arguments.length == 1){
			this.mesh(cyl.toMesh(),false,0);
		} else {
			var mesh = cyl.toMesh(res,0);
			if(smooth === undefined){
				smooth = false;
			}
			if(smooth){
				mesh.computeVertexNormals();
			}
			this.mesh(mesh,smooth,0);
		}
	},
	
	/*
	Pjs currently doesn't provide access to PGraphics properties,
	such as ellipseMode. So I am allowing it as an optional propery
	*/
	ellipse: function(e,ellipseMode){
		var r = e.getRadii();
		if(ellipseMode === undefined){
			ellipseMode = this.app.CENTER;
		}
		if(ellipseMode === this.app.CENTER){
			this.gfx.ellipse(e.x,e.y,r.x*2,r.y*2);
		} else if(ellipseMode === this.app.RADIUS){
			this.gfx.ellipse(e.x,e.y,r.x*2,r.y*2);
		} else if(ellipseMode === this.app.CORNER || this.gfx.ellipseMode === this.app.CORNERS){
			this.gfx.ellipse(e.x-r.x,e.y-r.y,r.x*2,r.y*2);
		}
	},
	
	getGraphics: function(){
		return this.gfx;
	},
	
	line: function(){
		var a,
			b;
		if(arguments.length == 1){
			var line = arguments[0];
			a = line.a;
			b = line.b;
		} else {
			a = arguments[0],
			b = arguments[1];
		}
		if(a.z === undefined){
			this.gfx.line(a.x,a.y,b.x,b.y);
		} else {
			this.gfx.line(a.x,a.y,a.z,b.x,b.y,b.z);
		}
	},
	
	lineStrip2D: function(points){
		//var isFilled = this.fill; //TODO <-- verify how this works!
		//this.gfx.fill = false;
		this.processVertices2D(points,this.app.POLYGON,false);
		//this.gfx.fill = isFilled;
	},
	
	lineStrip3D: function(points){
		//var isFilled = this.gfx.fill;
		//this.gfx.fill = false;
		this.processVertices3D(points,this.app.POLYGON,false);
		//this.gfx.fill = isFilled;
	},
	
	mesh: function(mesh,smooth,normalLength){
		if(smooth === undefined){
			smooth = false;
		}
		if(normalLength === undefined){
			normalLength = 0;
		}
		
		this.gfx.beginShape(this.app.TRIANGLES);
		var i= 0,
			len = mesh.faces.length;
		if(smooth){
			for(i=0;i<len;i++){
				var f = mesh.faces[i];
				this.gfx.normal(f.a.normal.x,f.a.normal.y,f.a.normal.z);
				this.gfx.vertex(f.a.x,f.a.y,f.a.z);
				this.gfx.normal(f.b.normal.x,f.b.normal.y,f.b.normal.z);
				this.gfx.vertex(f.b.x,f.b.y,f.b.z);
				this.gfx.normal(f.c.normal.x,f.c.normal.y,f.c.normal.z);
				this.gfx.vertex(f.c.x,f.c.y,f.c.z);
			}
		} else {
			for(var i=0;i<len;i++){
				var f = mesh.faces[i];
				this.gfx.normal(f.normal.x,f.normal.y,f.normal.z);
				this.gfx.vertex(f.a.x,f.a.y,f.a.z);
				this.gfx.vertex(f.b.x,f.b.y,f.b.z);
				this.gfx.vertex(f.c.x,f.c.y,f.c.z);
			}
		}
		this.gfx.endShape();
		if(normalLength > 0){
			var strokeCol = 0;
			var isStroked = this.gfx.stroke;  //TODO <-- verify this works!
			if(isStroked){
				strokeCol = this.gfx.strokeColor;
			}
			len = mesh.vertices.length;
			if(smooth){
				for(i=0;i<len;i++){
					var v = mesh.vertices[i],
						w = v.add(v.normal.scale(normalLength));
						n = v.normal.scale(127);
					this.gfx.stroke(n.x + 128, n.y + 128, n.z + 128);
					this.gfx.line(v.x,v.y,v.z,w.x,w.y,w.z);
				}
			} else {
				var third = 1 / 3;
				len = mesh.faces.length;
				for(i=0;i<len;i++){
					var f = mesh.faces[i],
						c = f.a.add(f.b).addSelf(f.c).scaleSelf(third),
						d = c.add(f.normal.scale(normalLength)),
						n = f.normal.scale(127);
					this.gfx.stroke(n.x+128,n.y+128,n.z+128);
					this.gfx.line(c.x,c.y,c.z,d.x,d.y,d.z);
				}
			}
			if(isStroked){
				this.gfx.stroke(strokeCol);
			} else {
				this.gfx.noStroke();
			}
		}
	},
	
	meshNormalMapped: function(mesh,vertexNormals,normalLength){
		this.gfx.beginShape(this.app.TRIANGLES);
		var i =0,
			len = mesh.faces.length;
		if(vertexNormals){
			for(i=0;i<len;i++){
				var f = mesh.faces[i],
					n = this._normalMap.applyTo(f.a.normal);
				this.gfx.fill(n.x,n.y,n.z);
				this.gfx.normal(f.a.normal.x,f.a.normal.y,f.a.normal.z);
				this.gfx.vertex(f.a.x,f.a.y,f.a.z);
				n = this._normalMap.applyTo(f.b.normal);
				this.gfx.fill(n.x,n.y,n.z);
				this.gfx.normal(f.b.normal.x,f.b.normal.y,f.b.normal.z);
				this.gfx.vertex(f.b.x,f.b.y,f.b.z);
				n = this._normalMap.applyTo(f.c.nromal);
				this.gfx.fil(n.x,n.y,n.z);
				this.gfx.normal(f.c.normal.x,f.c.normal.y,f.c.normal.z);
				this.gfx.vertex(f.c.x,f.c.y,f.c.z);
			}
		} else {
			for(i = 0;i<len;i++){
				var f = mesh.faces[i];
				this.gfx.normal(f.normal.x,f.normal.y,f.normal.z);
				this.gfx.vertex(f.a.x,f.a.y,f.a.z);
				this.gfx.vertex(f.b.x,f.b.y,f.b.z);
				this.gfx.vertex(f.c.x,f.c.y,f.c.z);
			}
		}
		this.gfx.endShape();
		if(normalLength > 0){
			if(vertexNormals){
				len = mesh.vertices.length;
				for(i=0;i<len;i++){
					var v = mesh.vertices[i],
						w = v.add(v.normal.scale(normalLength)),
						n = v.normal.scale(127);
					this.gfx.stroke(n.x+128,n.y+128,n.z+128);
					this.gfx.line(v.x,v.y,v.z,w.x,w.y,w.z);
				}
			} else {
				len = mesh.faces.length;
				for(i=0;i<len;i++){
					var f = mesh.faces[i],
						c = f.getCentroid(),
						d = c.add(f.normal.scale(normalLength)),
						n = f.normal.scale(127);
					this.gfx.stroke(n.x+128,n.y+128,n.z+128);
					this.gfx.line(c.x,c.y,c.z,d.x,d.y,d.z);
				}
			}
		}
	},
	
	origin: function(){
		var o = undefined, len = undefined;
		if(arguments.length == 1){
			len = arguments[0];
			o = Vec3D.ZERO;
		} else {
			o = arguments[0];
			len = arguments[1];
		}
		
		this.gfx.stroke(255,0,0);
		this.gfx.line(o.x,o.y,o.z,o.x+len,o.y,o.z);
		this.gfx.stroke(0,255,0);
		this.gfx.line(o.x,o.y,o.z,o.x,o.y+len,o.z);
		this.gfx.stroke(0,0,255);
		this.gfx.line(o.x,o.y,o.z,o.x,o.y,o.z+len);
	},
	
	plane: function(plane,size){
		this.mesh(plane.toMesh(size),false,0);
	},
	
	point: function(p){
		if(p.z === undefined){
			this.gfx.point(p.x,p.y);
		} else {
			this.gfx.point(p.x,p.y,p.z);
		}
	},
	
	/**
	 * iterates and draws the provided 2D points
	 * @param {Array} or {Processing#Iterator} points to iterate
	 */
	points2D: function(points){
		this.processVertices2D(points,this.app.POINTS,false);
	},
	/**
	 * iterates and draws the provided 3D points
	 * @param {Array} or {Processing#Iterator} points to iterate
	 */
	points3D: function(points){
		this.processVertices3D(points,this.app.POINTS,false);
	},
	
	polygon2D: function(poly){
		this.processVertices2D(poly.vertices,this.app.POLYGON,false);
	},
	/**
	 * Processes the 2D vertices from a Processing.js Iterator object
	 * @params {Iterator} iterator
	 * @params {Number} shapeID
	 * @params {Boolean} closed
	 */
	processVertices2D: function(iterator, shapeID, closed){
		//if first param wasnt passed in as a pjs Iterator, make it one
		if(iterator.hasNext === undefined || iterator.next === undefined){
			iterator = new this.app.ObjectIterator( iterator );
		}
		this.gfx.beginShape(shapeID);
		for(var v  = void(0); iterator.hasNext() && ((v  = iterator.next()) || true);){
			this.gfx.vertex(v.x,v.y);
		}
		/*var i=0,
			len = points.length;
		for(i=0;i<len;i++){
			var v = points[i];
			this.gfx.vertex(v.x,v.y);
		}*/
		if(closed){
			this.gfx.endShape(this.app.CLOSE);
		} else {
			this.gfx.endShape();
		}
	},
	
	/**
	 * Processes the 3D vertices from a Processing.js Iterator object
	 * @params {Iterator} iterator
	 * @params {Number} shapeID
	 * @params {Boolean} closed
	 */
	processVertices3D: function(iterator,shapeID,closed){
		//if first param wasnt passed in as a pjs Iterator, make it one
		if(iterator.hasNext === undefined || iterator.next === undefined){
			iterator = new this.app.ObjectIterator( iterator );
		}
		this.gfx.beginShape(shapeID);
		for(var v  = void(0); iterator.hasNext() && ((v  = iterator.next()) || true);){
			this.gfx.vertex(v.x,v.y,v.z);
		}

		/*var i=0,
			len = points.length;
		for(i=0;i<len;i++){
			var v = points[i];
			this.gfx.vertex(v.x,v.y,v.z);
		}*/
		if(closed){
			this.gfx.endShape(this.app.CLOSE);
		} else {
			this.gfx.endShape();
		}
	},
	
	ray: function(ray, length){
		var e = ray.getPointAtDistance(length);
		if(ray.z === undefined){
			this.gfx.line(ray.x,ray.y,e.x,e.y);
		} else {
			this.gfx.line(ray.x,ray.y,ray.z,e.x,e.y,e.z);
		}
	},
	
	/*
	Pjs currently doesn't provide access to PGraphics properties,
	such as rectMode. So I am allowing it as an optional propery
	*/
	rect: function(r,rectMode){
		if(rectMode === undefined){
			rectMode = this.app.CORNER;
		}
		if(rectMode === this.app.CORNER){
			this.gfx.rect(r.x,r.y,r.width,r.height);
		} else if(rectMode === this.app.CORNERS){
			this.gfx.rect(r.x,r.y,r.x+r.width,r.y+r.height);
		} else if(rectMode === this.app.CENTER){
			this.gfx.rect(r.x+r.widt*0.5,r.y+r.height*0.5,r.width,r.height);
		} else if(rectMode === this.app.RADIUS){
			var rw = r.width * 0.5,
				rh = r.height *0.5;
			this.gfx.rect(r.x+rw,r.y+rh,rw,rh);
		}
	},
	
	setGraphics: function(gfx){
		this.gfx = gfx;
	},
	sphere: function(sphere, res,smooth){
		this.mesh(sphere.toMesh(res), smooth);
	},
	texturedMesh: function(mesh,tex,smooth){
		this.gfx.beginShape(this.app.TRIANGLES);
		this.gfx.texture(tex);
		var i =0,
			len = mesh.faces.length;
		if(smooth){
			for(i=0;i<len;i++){
				var f = mesh.faces[i];
				if(f.uvA !== undefined && f.uvB !== undefined && f.uvC !== undefined){
					this.gfx.normal(f.a.normal.x, f.a.normal.y, f.a.normal.z);
                	this.gfx.vertex(f.a.x, f.a.y, f.a.z, f.uvA.x, f.uvA.y);
                	this.gfx.normal(f.b.normal.x, f.b.normal.y, f.b.normal.z);
                	this.gfx.vertex(f.b.x, f.b.y, f.b.z, f.uvB.x, f.uvB.y);
                	this.gfx.normal(f.c.normal.x, f.c.normal.y, f.c.normal.z);
                	this.gfx.vertex(f.c.x, f.c.y, f.c.z, f.uvC.x, f.uvC.y);
            	} else {
                	this.gfx.vertex(f.a.x, f.a.y, f.a.z);
                	this.gfx.vertex(f.b.x, f.b.y, f.b.z);
                	this.gfx.vertex(f.c.x, f.c.y, f.c.z);
				}
			}
		} else {
			for(i=0;i<len;i++){
				var f= mesh.faces[i];
				this.gfx.normal(f.normal.x,f.normal.y,f.normal.z);
				if(f.uvA !== undefined && f.uvB !== undefined && f.uvC !== undefined){
					this.gfx.vertex(f.a.x, f.a.y, f.a.z, f.uvA.x, f.uvA.y);
                	this.gfx.vertex(f.b.x, f.b.y, f.b.z, f.uvB.x, f.uvB.y);
                	this.gfx.vertex(f.c.x, f.c.y, f.c.z, f.uvC.x, f.uvC.y);
            	} else {
                	this.gfx.vertex(f.a.x, f.a.y, f.a.z);
                	this.gfx.vertex(f.b.x, f.b.y, f.b.z);
                	this.gfx.vertex(f.c.x, f.c.y, f.c.z);
				}
			}
		}
		this.gfx.endShape();
	},
	
	//works for Triangle3D or Triangle2D
	triangle: function(tri,isFullShape){

		var isTriangle = function(){
			if(tri.a !== undefined && tri.b !== undefined && tri.c !== undefined){
				return (tri.a.x !== undefined);
			}
			return false;
		},
		isTriangle3D = function(){
			if(isTriangle()){
				return (tri.a.z !== undefined);
			}
			return false;
		};

		if(isFullShape || isFullShape === undefined){
			this.gfx.beginShape(this.app.TRIANGLES);
		}
		if(isTriangle3D()){
			var n = tri.computeNormal();
			this.gfx.normal(n.x,n.y,n.z);
			this.gfx.vertex(tri.a.x, tri.a.y, tri.a.z);
			this.gfx.vertex(tri.b.x, tri.b.y, tri.b.z);
			this.gfx.vertex(tri.c.x, tri.c.y, tri.c.z);
		} else { //should be Triangle2D
			this.gfx.vertex(tri.a.x,tri.a.y);
			this.gfx.vertex(tri.b.x,tri.b.y);
			this.gfx.vertex(tri.c.x,tri.c.y);
		}
    	if(isFullShape || isFullShape === undefined){
    		this.gfx.endShape();
    	}
	},
	
	vertex: function(v){
		if(v.z === undefined){
			this.gfx.vertex(v.x,v.y);
		} else {
			this.gfx.vertex(v.x,v.y,v.z);
		}
	}
};

module.exports = ToxiclibsSupport;


},{"../geom/Matrix4x4":77,"../geom/Vec3D":93,"../geom/mesh/TriangleMesh":109}],184:[function(require,module,exports){

    exports.datatypes = require('./util/datatypes');


},{"./util/datatypes":185}],185:[function(require,module,exports){

module.exports = {
	ArraySet: require('./datatypes/ArraySet'),
	FloatRange: require('./datatypes/FloatRange'),
	UndirectedGraph: require('./datatypes/UndirectedGraph')
};


},{"./datatypes/ArraySet":186,"./datatypes/FloatRange":187,"./datatypes/UndirectedGraph":188}],186:[function(require,module,exports){


var internals = require('../../internals');

/**
 * ArraySet
 * toxi/core/util/datatypes/ArraySet
 * implements relevant portions of the java version as well as those from java's AbstractSet
 */

/**
 * @class
 * @member toxi
 */
var ArraySet = function(collection){
	Array.apply(this);
	if(arguments.length >= 1){
		for(var i=0,len = collection.length;i<len;i++){
			var item = collection[i];
			if(this.indexOf(item) < 0){
				this.push(item);
			}
		}
	}
 };

 internals.extend(ArraySet,Array);


 internals.mixin(ArraySet.prototype,{
	add: function(item){
		if(this.contains(item)){
			return false;
		}
		this.push(item);
		return true;
	},
	addAll: function(collection){
		var self = this;
		for(var i=0,len = collection.length;i<len;i++){
			this.push(collection[i]);
		}

	},
	clear: function(){
		this.retainAll([]);
	},
	clone: function(){
		return new ArraySet(this);
	},
	contains: function(item){
		return this.indexOf(item) >= 0;
	},
	containsAll: function(collection){
		for(var i=0,len=collection.length;i<len;i++){
			var val = collection[i];
			if(!this.contains(val)){
				return false;
			}
		}
		return true;
	},
	containsAny: function(collection){
		for(var i=0,len = collection.length;i<len;i++){
			if(this.contains(collection[i])){
				return true;
			}
		}
		return false;
	},
	equals: function(object){
		return this === object;
	},
	get: function(index){
		return this[index];
	},
	iterator: function(){
		return new internals.Iterator(this);
	},
	isEmpty: function(){
		return this.length < 1;
	},
	remove: function(o){
		var i = this.indexOf(o);
		if(i >= 0){
			this.splice(i,1);
			return true;
		}
		return false;
	},
	removeAll: function(){
		this.retainAll([]);
	},
	retainAll: function(collection){
		var self = this,
			changed = false;

		for(var i=0;i<this.length;i++){
			var val = this[i];
			if(collection.indexOf(val) < 0){
				this.splice(i,1);
				changed = true;
				i--;
			}
		}
		return changed;
	},
	size: function(){
		return this.length;
	},
	toArray: function(arr){
		arr = arr || [];
		for(var i=0;i<this.length;i++){
			if(this.hasOwnProperty())
			arr[i] = this[i];
		}
		return arr;
	}
});

module.exports = ArraySet;


},{"../../internals":120}],187:[function(require,module,exports){


var mathUtils = require('../../math/mathUtils');

/**
 * construct a new `FloatRange`
 * provides utilities for dealing with a range of Numbers.
 * @param {Number} [min=0] the minimum in the range
 * @param {Number} [max=1.0] the maximum in the range
 * @constructor
 */
var FloatRange = function(min, max){
	min = min || 0.0;
	max = typeof max === 'number' ? max : 1.0;
	// swap if necessary
	if(min > max){
		var t= max;
		max = min;
		min = t;
	}
	this.min = min;
	this.max = max;
	this.currValue = min;
};

FloatRange.prototype = {
	adjustCurrentBy: function(val){
		return this.setCurrent(this.currValue + val);
	},
	copy: function(){
		var range = new FloatRange(this.min,this.max);
		range.currValue = this.currValue;
		return range;
	},
    /**
     * Returns the value at the normalized position <code>(0.0 = min ... 1.0 =
     * max-EPS)</code> within the range. Since the max value is exclusive, the
     * value returned for position 1.0 is the range max value minus
     * {@link MathUtils#EPS}. Also note the given position is not being clipped
     * to the 0.0-1.0 interval, so when passing in values outside that interval
     * will produce out-of-range values too.
     * @param {Number} perc
     * @return {Number} value within the range
     */
	getAt: function(perc){
		return this.min + (this.max - this.min - mathUtils.EPS) * perc;
	},
	getCurrent: function(){
		return this.currValue;
	},
	getMedian: function(){
		return (this.min + this.max) * 0.5;
	},
	getRange: function(){
		return this.max - this.min;
	},
	isValueInRange: function(val){
		return val >= this.min && val <= this.max;
	},
	pickRandom: function(){
		this.currValue = mathUtils.random(this.min,this.max);
		return this.currValue;
	},
    setCurrent: function( val ){
        this.currValue = mathUtils.clip( val, this.min, this.max );
        return this.currValue;
    },
	/*
	seed: function(seed){
		throw new Error("Not yet Implemented");
	},
	setRandom: function(rnd){
		
	}
	*/
	toArray: function(step){
		var range = [],
			v = this.min;
		while(v < this.max){
			range.push(v);
			v += step;
		}
		return range;
	},
	toString: function(){
		return "FloatRange: " + this.min + " -> " + this.max;
	}
};

module.exports = FloatRange;


},{"../../math/mathUtils":147}],188:[function(require,module,exports){


var ArraySet = require('./ArraySet');


//wrap connections in this before passing them out
//this way the rest of the lib can treat it like a Java Collection
/*var __NodeCollection = function(nodes){
	var self = this;
	for(var i=0,len = nodes.length;i<len;i++){
		this[i] = nodes[i];
	}
};
__NodeCollection.prototype = {
	contains: function(el){
		return this[el] !== undefined;
	},
	size: function(){
		var i = 0;
		for(var prop in this){
			if(this.hasOwnProperty(prop)){
				i++;
			}
		}
		return i;
	}
};*/


/**
 * @exports UndirectedGraph as toxi.UndirectedGraph
 */
var UndirectedGraph = function(){
	this._nodeLinks = {};
	this._nodeIDs = [];
};


UndirectedGraph.prototype = {
	add: function(node){
		if(this._nodeLinks[node] !== undefined){
			return;
		}
		this._nodeLinks[node] = new ArraySet();
		this._nodeIDs.push(node);
	},
	connect: function(nodeA,nodeB){
		if(this._nodeLinks[nodeA] === undefined){
			throw new Error("nodeA has not been added");
		}
		if(this._nodeLinks[nodeB] === undefined){
			throw new Error("nodeB has not been added");
		}
		this._nodeLinks[nodeA].push(nodeB);
		this._nodeLinks[nodeB].push(nodeA);
	},
	disconnect: function(nodeA,nodeB){
		if(this._nodeLinks[nodeA] === undefined){
			throw new Error("nodeA has not been added");
		}
		if(this._nodeLinks[nodeB] === undefined){
			throw new Error("nodeB has not been added");
		}
		this._nodeLinks[nodeA].splice(this._nodeLinks[nodeA].indexOf(nodeB),1);
		this._nodeLinks[nodeB].splice(this._nodeLinks[nodeB].indexOf(nodeA),1);
	},
	getConnectedNodesFor: function(node){
		if(this._nodeLinks[node] === undefined){
			throw new Error("node has not been added");
		}
		return this._nodeLinks[node];
	},
	getNodes: function(){
		return this._nodeIDs;
	},
	remove: function(node){
		var connections = this._nodeLinks[node];
		if(connections === undefined){
			return;
		}

		for(var i = 0,len = connections.length;i<len;i++){
			var neighbor = connections[i];
			var	nodeI = neighbor.indexOf(node);
			neighbor.splice(nodeI,1);
		}
		delete this._nodeLinks[node];
		var i = this._nodeIDs.indexOf(node);
		this._nodeIDs.splice(node,1);
	}
};

module.exports = UndirectedGraph;


},{"./ArraySet":186}],189:[function(require,module,exports){
/*! VelocityJS.org (1.5.2). (C) 2014 Julian Shapiro. MIT @license: en.wikipedia.org/wiki/MIT_License */

/*************************
 Velocity jQuery Shim
 *************************/

/*! VelocityJS.org jQuery Shim (1.0.1). (C) 2014 The jQuery Foundation. MIT @license: en.wikipedia.org/wiki/MIT_License. */

/* This file contains the jQuery functions that Velocity relies on, thereby removing Velocity's dependency on a full copy of jQuery, and allowing it to work in any environment. */
/* These shimmed functions are only used if jQuery isn't present. If both this shim and jQuery are loaded, Velocity defaults to jQuery proper. */
/* Browser support: Using this shim instead of jQuery proper removes support for IE8. */

(function(window) {
	"use strict";
	/***************
	 Setup
	 ***************/

	/* If jQuery is already loaded, there's no point in loading this shim. */
	if (window.jQuery) {
		return;
	}

	/* jQuery base. */
	var $ = function(selector, context) {
		return new $.fn.init(selector, context);
	};

	/********************
	 Private Methods
	 ********************/

	/* jQuery */
	$.isWindow = function(obj) {
		/* jshint eqeqeq: false */
		return obj && obj === obj.window;
	};

	/* jQuery */
	$.type = function(obj) {
		if (!obj) {
			return obj + "";
		}

		return typeof obj === "object" || typeof obj === "function" ?
				class2type[toString.call(obj)] || "object" :
				typeof obj;
	};

	/* jQuery */
	$.isArray = Array.isArray || function(obj) {
		return $.type(obj) === "array";
	};

	/* jQuery */
	function isArraylike(obj) {
		var length = obj.length,
				type = $.type(obj);

		if (type === "function" || $.isWindow(obj)) {
			return false;
		}

		if (obj.nodeType === 1 && length) {
			return true;
		}

		return type === "array" || length === 0 || typeof length === "number" && length > 0 && (length - 1) in obj;
	}

	/***************
	 $ Methods
	 ***************/

	/* jQuery: Support removed for IE<9. */
	$.isPlainObject = function(obj) {
		var key;

		if (!obj || $.type(obj) !== "object" || obj.nodeType || $.isWindow(obj)) {
			return false;
		}

		try {
			if (obj.constructor &&
					!hasOwn.call(obj, "constructor") &&
					!hasOwn.call(obj.constructor.prototype, "isPrototypeOf")) {
				return false;
			}
		} catch (e) {
			return false;
		}

		for (key in obj) {
		}

		return key === undefined || hasOwn.call(obj, key);
	};

	/* jQuery */
	$.each = function(obj, callback, args) {
		var value,
				i = 0,
				length = obj.length,
				isArray = isArraylike(obj);

		if (args) {
			if (isArray) {
				for (; i < length; i++) {
					value = callback.apply(obj[i], args);

					if (value === false) {
						break;
					}
				}
			} else {
				for (i in obj) {
					if (!obj.hasOwnProperty(i)) {
						continue;
					}
					value = callback.apply(obj[i], args);

					if (value === false) {
						break;
					}
				}
			}

		} else {
			if (isArray) {
				for (; i < length; i++) {
					value = callback.call(obj[i], i, obj[i]);

					if (value === false) {
						break;
					}
				}
			} else {
				for (i in obj) {
					if (!obj.hasOwnProperty(i)) {
						continue;
					}
					value = callback.call(obj[i], i, obj[i]);

					if (value === false) {
						break;
					}
				}
			}
		}

		return obj;
	};

	/* Custom */
	$.data = function(node, key, value) {
		/* $.getData() */
		if (value === undefined) {
			var getId = node[$.expando],
					store = getId && cache[getId];

			if (key === undefined) {
				return store;
			} else if (store) {
				if (key in store) {
					return store[key];
				}
			}
			/* $.setData() */
		} else if (key !== undefined) {
			var setId = node[$.expando] || (node[$.expando] = ++$.uuid);

			cache[setId] = cache[setId] || {};
			cache[setId][key] = value;

			return value;
		}
	};

	/* Custom */
	$.removeData = function(node, keys) {
		var id = node[$.expando],
				store = id && cache[id];

		if (store) {
			// Cleanup the entire store if no keys are provided.
			if (!keys) {
				delete cache[id];
			} else {
				$.each(keys, function(_, key) {
					delete store[key];
				});
			}
		}
	};

	/* jQuery */
	$.extend = function() {
		var src, copyIsArray, copy, name, options, clone,
				target = arguments[0] || {},
				i = 1,
				length = arguments.length,
				deep = false;

		if (typeof target === "boolean") {
			deep = target;

			target = arguments[i] || {};
			i++;
		}

		if (typeof target !== "object" && $.type(target) !== "function") {
			target = {};
		}

		if (i === length) {
			target = this;
			i--;
		}

		for (; i < length; i++) {
			if ((options = arguments[i])) {
				for (name in options) {
					if (!options.hasOwnProperty(name)) {
						continue;
					}
					src = target[name];
					copy = options[name];

					if (target === copy) {
						continue;
					}

					if (deep && copy && ($.isPlainObject(copy) || (copyIsArray = $.isArray(copy)))) {
						if (copyIsArray) {
							copyIsArray = false;
							clone = src && $.isArray(src) ? src : [];

						} else {
							clone = src && $.isPlainObject(src) ? src : {};
						}

						target[name] = $.extend(deep, clone, copy);

					} else if (copy !== undefined) {
						target[name] = copy;
					}
				}
			}
		}

		return target;
	};

	/* jQuery 1.4.3 */
	$.queue = function(elem, type, data) {
		function $makeArray(arr, results) {
			var ret = results || [];

			if (arr) {
				if (isArraylike(Object(arr))) {
					/* $.merge */
					(function(first, second) {
						var len = +second.length,
								j = 0,
								i = first.length;

						while (j < len) {
							first[i++] = second[j++];
						}

						if (len !== len) {
							while (second[j] !== undefined) {
								first[i++] = second[j++];
							}
						}

						first.length = i;

						return first;
					})(ret, typeof arr === "string" ? [arr] : arr);
				} else {
					[].push.call(ret, arr);
				}
			}

			return ret;
		}

		if (!elem) {
			return;
		}

		type = (type || "fx") + "queue";

		var q = $.data(elem, type);

		if (!data) {
			return q || [];
		}

		if (!q || $.isArray(data)) {
			q = $.data(elem, type, $makeArray(data));
		} else {
			q.push(data);
		}

		return q;
	};

	/* jQuery 1.4.3 */
	$.dequeue = function(elems, type) {
		/* Custom: Embed element iteration. */
		$.each(elems.nodeType ? [elems] : elems, function(i, elem) {
			type = type || "fx";

			var queue = $.queue(elem, type),
					fn = queue.shift();

			if (fn === "inprogress") {
				fn = queue.shift();
			}

			if (fn) {
				if (type === "fx") {
					queue.unshift("inprogress");
				}

				fn.call(elem, function() {
					$.dequeue(elem, type);
				});
			}
		});
	};

	/******************
	 $.fn Methods
	 ******************/

	/* jQuery */
	$.fn = $.prototype = {
		init: function(selector) {
			/* Just return the element wrapped inside an array; don't proceed with the actual jQuery node wrapping process. */
			if (selector.nodeType) {
				this[0] = selector;

				return this;
			} else {
				throw new Error("Not a DOM node.");
			}
		},
		offset: function() {
			/* jQuery altered code: Dropped disconnected DOM node checking. */
			var box = this[0].getBoundingClientRect ? this[0].getBoundingClientRect() : {top: 0, left: 0};

			return {
				top: box.top + (window.pageYOffset || document.scrollTop || 0) - (document.clientTop || 0),
				left: box.left + (window.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || 0)
			};
		},
		position: function() {
			/* jQuery */
			function offsetParentFn(elem) {
				var offsetParent = elem.offsetParent;

				while (offsetParent && (offsetParent.nodeName.toLowerCase() !== "html" && offsetParent.style && offsetParent.style.position.toLowerCase() === "static")) {
					offsetParent = offsetParent.offsetParent;
				}

				return offsetParent || document;
			}

			/* Zepto */
			var elem = this[0],
					offsetParent = offsetParentFn(elem),
					offset = this.offset(),
					parentOffset = /^(?:body|html)$/i.test(offsetParent.nodeName) ? {top: 0, left: 0} : $(offsetParent).offset();

			offset.top -= parseFloat(elem.style.marginTop) || 0;
			offset.left -= parseFloat(elem.style.marginLeft) || 0;

			if (offsetParent.style) {
				parentOffset.top += parseFloat(offsetParent.style.borderTopWidth) || 0;
				parentOffset.left += parseFloat(offsetParent.style.borderLeftWidth) || 0;
			}

			return {
				top: offset.top - parentOffset.top,
				left: offset.left - parentOffset.left
			};
		}
	};

	/**********************
	 Private Variables
	 **********************/

	/* For $.data() */
	var cache = {};
	$.expando = "velocity" + (new Date().getTime());
	$.uuid = 0;

	/* For $.queue() */
	var class2type = {},
			hasOwn = class2type.hasOwnProperty,
			toString = class2type.toString;

	var types = "Boolean Number String Function Array Date RegExp Object Error".split(" ");
	for (var i = 0; i < types.length; i++) {
		class2type["[object " + types[i] + "]"] = types[i].toLowerCase();
	}

	/* Makes $(node) possible, without having to call init. */
	$.fn.init.prototype = $.fn;

	/* Globalize Velocity onto the window, and assign its Utilities property. */
	window.Velocity = {Utilities: $};
})(window);

/******************
 Velocity.js
 ******************/

(function(factory) {
	"use strict";
	/* CommonJS module. */
	if (typeof module === "object" && typeof module.exports === "object") {
		module.exports = factory();
		/* AMD module. */
	} else if (typeof define === "function" && define.amd) {
		define(factory);
		/* Browser globals. */
	} else {
		factory();
	}
}(function() {
	"use strict";
	return function(global, window, document, undefined) {

		/***************
		 Summary
		 ***************/

		/*
		 - CSS: CSS stack that works independently from the rest of Velocity.
		 - animate(): Core animation method that iterates over the targeted elements and queues the incoming call onto each element individually.
		 - Pre-Queueing: Prepare the element for animation by instantiating its data cache and processing the call's options.
		 - Queueing: The logic that runs once the call has reached its point of execution in the element's $.queue() stack.
		 Most logic is placed here to avoid risking it becoming stale (if the element's properties have changed).
		 - Pushing: Consolidation of the tween data followed by its push onto the global in-progress calls container.
		 - tick(): The single requestAnimationFrame loop responsible for tweening all in-progress calls.
		 - completeCall(): Handles the cleanup process for each Velocity call.
		 */

		/*********************
		 Helper Functions
		 *********************/

		/* IE detection. Gist: https://gist.github.com/julianshapiro/9098609 */
		var IE = (function() {
			if (document.documentMode) {
				return document.documentMode;
			} else {
				for (var i = 7; i > 4; i--) {
					var div = document.createElement("div");

					div.innerHTML = "<!--[if IE " + i + "]><span></span><![endif]-->";

					if (div.getElementsByTagName("span").length) {
						div = null;

						return i;
					}
				}
			}

			return undefined;
		})();

		/* rAF shim. Gist: https://gist.github.com/julianshapiro/9497513 */
		var rAFShim = (function() {
			var timeLast = 0;

			return window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function(callback) {
				var timeCurrent = (new Date()).getTime(),
						timeDelta;

				/* Dynamically set delay on a per-tick basis to match 60fps. */
				/* Technique by Erik Moller. MIT license: https://gist.github.com/paulirish/1579671 */
				timeDelta = Math.max(0, 16 - (timeCurrent - timeLast));
				timeLast = timeCurrent + timeDelta;

				return setTimeout(function() {
					callback(timeCurrent + timeDelta);
				}, timeDelta);
			};
		})();

		var performance = (function() {
			var perf = window.performance || {};

			if (typeof perf.now !== "function") {
				var nowOffset = perf.timing && perf.timing.navigationStart ? perf.timing.navigationStart : (new Date()).getTime();

				perf.now = function() {
					return (new Date()).getTime() - nowOffset;
				};
			}
			return perf;
		})();

		/* Array compacting. Copyright Lo-Dash. MIT License: https://github.com/lodash/lodash/blob/master/LICENSE.txt */
		function compactSparseArray(array) {
			var index = -1,
					length = array ? array.length : 0,
					result = [];

			while (++index < length) {
				var value = array[index];

				if (value) {
					result.push(value);
				}
			}

			return result;
		}

		/**
		 * Shim for "fixing" IE's lack of support (IE < 9) for applying slice
		 * on host objects like NamedNodeMap, NodeList, and HTMLCollection
		 * (technically, since host objects have been implementation-dependent,
		 * at least before ES2015, IE hasn't needed to work this way).
		 * Also works on strings, fixes IE < 9 to allow an explicit undefined
		 * for the 2nd argument (as in Firefox), and prevents errors when
		 * called on other DOM objects.
		 */
		var _slice = (function() {
			var slice = Array.prototype.slice;

			try {
				// Can't be used with DOM elements in IE < 9
				slice.call(document.documentElement);
				return slice;
			} catch (e) { // Fails in IE < 9

				// This will work for genuine arrays, array-like objects, 
				// NamedNodeMap (attributes, entities, notations),
				// NodeList (e.g., getElementsByTagName), HTMLCollection (e.g., childNodes),
				// and will not fail on other DOM objects (as do DOM elements in IE < 9)
				return function(begin, end) {
					var len = this.length;

					if (typeof begin !== "number") {
						begin = 0;
					}
					// IE < 9 gets unhappy with an undefined end argument
					if (typeof end !== "number") {
						end = len;
					}
					// For native Array objects, we use the native slice function
					if (this.slice) {
						return slice.call(this, begin, end);
					}
					// For array like object we handle it ourselves.
					var i,
							cloned = [],
							// Handle negative value for "begin"
							start = (begin >= 0) ? begin : Math.max(0, len + begin),
							// Handle negative value for "end"
							upTo = end < 0 ? len + end : Math.min(end, len),
							// Actual expected size of the slice
							size = upTo - start;

					if (size > 0) {
						cloned = new Array(size);
						if (this.charAt) {
							for (i = 0; i < size; i++) {
								cloned[i] = this.charAt(start + i);
							}
						} else {
							for (i = 0; i < size; i++) {
								cloned[i] = this[start + i];
							}
						}
					}
					return cloned;
				};
			}
		})();

		/* .indexOf doesn't exist in IE<9 */
		var _inArray = (function() {
			if (Array.prototype.includes) {
				return function(arr, val) {
					return arr.includes(val);
				};
			}
			if (Array.prototype.indexOf) {
				return function(arr, val) {
					return arr.indexOf(val) >= 0;
				};
			}
			return function(arr, val) {
				for (var i = 0; i < arr.length; i++) {
					if (arr[i] === val) {
						return true;
					}
				}
				return false;
			};
		});

		function sanitizeElements(elements) {
			/* Unwrap jQuery/Zepto objects. */
			if (Type.isWrapped(elements)) {
				elements = _slice.call(elements);
				/* Wrap a single element in an array so that $.each() can iterate with the element instead of its node's children. */
			} else if (Type.isNode(elements)) {
				elements = [elements];
			}

			return elements;
		}

		var Type = {
			isNumber: function(variable) {
				return (typeof variable === "number");
			},
			isString: function(variable) {
				return (typeof variable === "string");
			},
			isArray: Array.isArray || function(variable) {
				return Object.prototype.toString.call(variable) === "[object Array]";
			},
			isFunction: function(variable) {
				return Object.prototype.toString.call(variable) === "[object Function]";
			},
			isNode: function(variable) {
				return variable && variable.nodeType;
			},
			/* Determine if variable is an array-like wrapped jQuery, Zepto or similar element, or even a NodeList etc. */
			/* NOTE: HTMLFormElements also have a length. */
			isWrapped: function(variable) {
				return variable
						&& variable !== window
						&& Type.isNumber(variable.length)
						&& !Type.isString(variable)
						&& !Type.isFunction(variable)
						&& !Type.isNode(variable)
						&& (variable.length === 0 || Type.isNode(variable[0]));
			},
			isSVG: function(variable) {
				return window.SVGElement && (variable instanceof window.SVGElement);
			},
			isEmptyObject: function(variable) {
				for (var name in variable) {
					if (variable.hasOwnProperty(name)) {
						return false;
					}
				}

				return true;
			}
		};

		/*****************
		 Dependencies
		 *****************/

		var $,
				isJQuery = false;

		if (global.fn && global.fn.jquery) {
			$ = global;
			isJQuery = true;
		} else {
			$ = window.Velocity.Utilities;
		}

		if (IE <= 8 && !isJQuery) {
			throw new Error("Velocity: IE8 and below require jQuery to be loaded before Velocity.");
		} else if (IE <= 7) {
			/* Revert to jQuery's $.animate(), and lose Velocity's extra features. */
			jQuery.fn.velocity = jQuery.fn.animate;

			/* Now that $.fn.velocity is aliased, abort this Velocity declaration. */
			return;
		}

		/*****************
		 Constants
		 *****************/

		var DURATION_DEFAULT = 400,
				EASING_DEFAULT = "swing";

		/*************
		 State
		 *************/

		var Velocity = {
			/* Container for page-wide Velocity state data. */
			State: {
				/* Detect mobile devices to determine if mobileHA should be turned on. */
				isMobile: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(window.navigator.userAgent),
				/* The mobileHA option's behavior changes on older Android devices (Gingerbread, versions 2.3.3-2.3.7). */
				isAndroid: /Android/i.test(window.navigator.userAgent),
				isGingerbread: /Android 2\.3\.[3-7]/i.test(window.navigator.userAgent),
				isChrome: window.chrome,
				isFirefox: /Firefox/i.test(window.navigator.userAgent),
				/* Create a cached element for re-use when checking for CSS property prefixes. */
				prefixElement: document.createElement("div"),
				/* Cache every prefix match to avoid repeating lookups. */
				prefixMatches: {},
				/* Cache the anchor used for animating window scrolling. */
				scrollAnchor: null,
				/* Cache the browser-specific property names associated with the scroll anchor. */
				scrollPropertyLeft: null,
				scrollPropertyTop: null,
				/* Keep track of whether our RAF tick is running. */
				isTicking: false,
				/* Container for every in-progress call to Velocity. */
				calls: [],
				delayedElements: {
					count: 0
				}
			},
			/* Velocity's custom CSS stack. Made global for unit testing. */
			CSS: {/* Defined below. */},
			/* A shim of the jQuery utility functions used by Velocity -- provided by Velocity's optional jQuery shim. */
			Utilities: $,
			/* Container for the user's custom animation redirects that are referenced by name in place of the properties map argument. */
			Redirects: {/* Manually registered by the user. */},
			Easings: {/* Defined below. */},
			/* Attempt to use ES6 Promises by default. Users can override this with a third-party promises library. */
			Promise: window.Promise,
			/* Velocity option defaults, which can be overriden by the user. */
			defaults: {
				queue: "",
				duration: DURATION_DEFAULT,
				easing: EASING_DEFAULT,
				begin: undefined,
				complete: undefined,
				progress: undefined,
				display: undefined,
				visibility: undefined,
				loop: false,
				delay: false,
				mobileHA: true,
				/* Advanced: Set to false to prevent property values from being cached between consecutive Velocity-initiated chain calls. */
				_cacheValues: true,
				/* Advanced: Set to false if the promise should always resolve on empty element lists. */
				promiseRejectEmpty: true
			},
			/* A design goal of Velocity is to cache data wherever possible in order to avoid DOM requerying. Accordingly, each element has a data cache. */
			init: function(element) {
				$.data(element, "velocity", {
					/* Store whether this is an SVG element, since its properties are retrieved and updated differently than standard HTML elements. */
					isSVG: Type.isSVG(element),
					/* Keep track of whether the element is currently being animated by Velocity.
					 This is used to ensure that property values are not transferred between non-consecutive (stale) calls. */
					isAnimating: false,
					/* A reference to the element's live computedStyle object. Learn more here: https://developer.mozilla.org/en/docs/Web/API/window.getComputedStyle */
					computedStyle: null,
					/* Tween data is cached for each animation on the element so that data can be passed across calls --
					 in particular, end values are used as subsequent start values in consecutive Velocity calls. */
					tweensContainer: null,
					/* The full root property values of each CSS hook being animated on this element are cached so that:
					 1) Concurrently-animating hooks sharing the same root can have their root values' merged into one while tweening.
					 2) Post-hook-injection root values can be transferred over to consecutively chained Velocity calls as starting root values. */
					rootPropertyValueCache: {},
					/* A cache for transform updates, which must be manually flushed via CSS.flushTransformCache(). */
					transformCache: {}
				});
			},
			/* A parallel to jQuery's $.css(), used for getting/setting Velocity's hooked CSS properties. */
			hook: null, /* Defined below. */
			/* Velocity-wide animation time remapping for testing purposes. */
			mock: false,
			version: {major: 1, minor: 5, patch: 2},
			/* Set to 1 or 2 (most verbose) to output debug info to console. */
			debug: false,
			/* Use rAF high resolution timestamp when available */
			timestamp: true,
			/* Pause all animations */
			pauseAll: function(queueName) {
				var currentTime = (new Date()).getTime();

				$.each(Velocity.State.calls, function(i, activeCall) {

					if (activeCall) {

						/* If we have a queueName and this call is not on that queue, skip */
						if (queueName !== undefined && ((activeCall[2].queue !== queueName) || (activeCall[2].queue === false))) {
							return true;
						}

						/* Set call to paused */
						activeCall[5] = {
							resume: false
						};
					}
				});

				/* Pause timers on any currently delayed calls */
				$.each(Velocity.State.delayedElements, function(k, element) {
					if (!element) {
						return;
					}
					pauseDelayOnElement(element, currentTime);
				});
			},
			/* Resume all animations */
			resumeAll: function(queueName) {
				var currentTime = (new Date()).getTime();

				$.each(Velocity.State.calls, function(i, activeCall) {

					if (activeCall) {

						/* If we have a queueName and this call is not on that queue, skip */
						if (queueName !== undefined && ((activeCall[2].queue !== queueName) || (activeCall[2].queue === false))) {
							return true;
						}

						/* Set call to resumed if it was paused */
						if (activeCall[5]) {
							activeCall[5].resume = true;
						}
					}
				});
				/* Resume timers on any currently delayed calls */
				$.each(Velocity.State.delayedElements, function(k, element) {
					if (!element) {
						return;
					}
					resumeDelayOnElement(element, currentTime);
				});
			}
		};

		/* Retrieve the appropriate scroll anchor and property name for the browser: https://developer.mozilla.org/en-US/docs/Web/API/Window.scrollY */
		if (window.pageYOffset !== undefined) {
			Velocity.State.scrollAnchor = window;
			Velocity.State.scrollPropertyLeft = "pageXOffset";
			Velocity.State.scrollPropertyTop = "pageYOffset";
		} else {
			Velocity.State.scrollAnchor = document.documentElement || document.body.parentNode || document.body;
			Velocity.State.scrollPropertyLeft = "scrollLeft";
			Velocity.State.scrollPropertyTop = "scrollTop";
		}

		/* Shorthand alias for jQuery's $.data() utility. */
		function Data(element) {
			/* Hardcode a reference to the plugin name. */
			var response = $.data(element, "velocity");

			/* jQuery <=1.4.2 returns null instead of undefined when no match is found. We normalize this behavior. */
			return response === null ? undefined : response;
		}

		/**************
		 Delay Timer
		 **************/

		function pauseDelayOnElement(element, currentTime) {
			/* Check for any delay timers, and pause the set timeouts (while preserving time data)
			 to be resumed when the "resume" command is issued */
			var data = Data(element);
			if (data && data.delayTimer && !data.delayPaused) {
				data.delayRemaining = data.delay - currentTime + data.delayBegin;
				data.delayPaused = true;
				clearTimeout(data.delayTimer.setTimeout);
			}
		}

		function resumeDelayOnElement(element, currentTime) {
			/* Check for any paused timers and resume */
			var data = Data(element);
			if (data && data.delayTimer && data.delayPaused) {
				/* If the element was mid-delay, re initiate the timeout with the remaining delay */
				data.delayPaused = false;
				data.delayTimer.setTimeout = setTimeout(data.delayTimer.next, data.delayRemaining);
			}
		}



		/**************
		 Easing
		 **************/

		/* Step easing generator. */
		function generateStep(steps) {
			return function(p) {
				return Math.round(p * steps) * (1 / steps);
			};
		}

		/* Bezier curve function generator. Copyright Gaetan Renaudeau. MIT License: http://en.wikipedia.org/wiki/MIT_License */
		function generateBezier(mX1, mY1, mX2, mY2) {
			var NEWTON_ITERATIONS = 4,
					NEWTON_MIN_SLOPE = 0.001,
					SUBDIVISION_PRECISION = 0.0000001,
					SUBDIVISION_MAX_ITERATIONS = 10,
					kSplineTableSize = 11,
					kSampleStepSize = 1.0 / (kSplineTableSize - 1.0),
					float32ArraySupported = "Float32Array" in window;

			/* Must contain four arguments. */
			if (arguments.length !== 4) {
				return false;
			}

			/* Arguments must be numbers. */
			for (var i = 0; i < 4; ++i) {
				if (typeof arguments[i] !== "number" || isNaN(arguments[i]) || !isFinite(arguments[i])) {
					return false;
				}
			}

			/* X values must be in the [0, 1] range. */
			mX1 = Math.min(mX1, 1);
			mX2 = Math.min(mX2, 1);
			mX1 = Math.max(mX1, 0);
			mX2 = Math.max(mX2, 0);

			var mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);

			function A(aA1, aA2) {
				return 1.0 - 3.0 * aA2 + 3.0 * aA1;
			}
			function B(aA1, aA2) {
				return 3.0 * aA2 - 6.0 * aA1;
			}
			function C(aA1) {
				return 3.0 * aA1;
			}

			function calcBezier(aT, aA1, aA2) {
				return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;
			}

			function getSlope(aT, aA1, aA2) {
				return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);
			}

			function newtonRaphsonIterate(aX, aGuessT) {
				for (var i = 0; i < NEWTON_ITERATIONS; ++i) {
					var currentSlope = getSlope(aGuessT, mX1, mX2);

					if (currentSlope === 0.0) {
						return aGuessT;
					}

					var currentX = calcBezier(aGuessT, mX1, mX2) - aX;
					aGuessT -= currentX / currentSlope;
				}

				return aGuessT;
			}

			function calcSampleValues() {
				for (var i = 0; i < kSplineTableSize; ++i) {
					mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);
				}
			}

			function binarySubdivide(aX, aA, aB) {
				var currentX, currentT, i = 0;

				do {
					currentT = aA + (aB - aA) / 2.0;
					currentX = calcBezier(currentT, mX1, mX2) - aX;
					if (currentX > 0.0) {
						aB = currentT;
					} else {
						aA = currentT;
					}
				} while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);

				return currentT;
			}

			function getTForX(aX) {
				var intervalStart = 0.0,
						currentSample = 1,
						lastSample = kSplineTableSize - 1;

				for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {
					intervalStart += kSampleStepSize;
				}

				--currentSample;

				var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample + 1] - mSampleValues[currentSample]),
						guessForT = intervalStart + dist * kSampleStepSize,
						initialSlope = getSlope(guessForT, mX1, mX2);

				if (initialSlope >= NEWTON_MIN_SLOPE) {
					return newtonRaphsonIterate(aX, guessForT);
				} else if (initialSlope === 0.0) {
					return guessForT;
				} else {
					return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize);
				}
			}

			var _precomputed = false;

			function precompute() {
				_precomputed = true;
				if (mX1 !== mY1 || mX2 !== mY2) {
					calcSampleValues();
				}
			}

			var f = function(aX) {
				if (!_precomputed) {
					precompute();
				}
				if (mX1 === mY1 && mX2 === mY2) {
					return aX;
				}
				if (aX === 0) {
					return 0;
				}
				if (aX === 1) {
					return 1;
				}

				return calcBezier(getTForX(aX), mY1, mY2);
			};

			f.getControlPoints = function() {
				return [{x: mX1, y: mY1}, {x: mX2, y: mY2}];
			};

			var str = "generateBezier(" + [mX1, mY1, mX2, mY2] + ")";
			f.toString = function() {
				return str;
			};

			return f;
		}

		/* Runge-Kutta spring physics function generator. Adapted from Framer.js, copyright Koen Bok. MIT License: http://en.wikipedia.org/wiki/MIT_License */
		/* Given a tension, friction, and duration, a simulation at 60FPS will first run without a defined duration in order to calculate the full path. A second pass
		 then adjusts the time delta -- using the relation between actual time and duration -- to calculate the path for the duration-constrained animation. */
		var generateSpringRK4 = (function() {
			function springAccelerationForState(state) {
				return (-state.tension * state.x) - (state.friction * state.v);
			}

			function springEvaluateStateWithDerivative(initialState, dt, derivative) {
				var state = {
					x: initialState.x + derivative.dx * dt,
					v: initialState.v + derivative.dv * dt,
					tension: initialState.tension,
					friction: initialState.friction
				};

				return {dx: state.v, dv: springAccelerationForState(state)};
			}

			function springIntegrateState(state, dt) {
				var a = {
					dx: state.v,
					dv: springAccelerationForState(state)
				},
						b = springEvaluateStateWithDerivative(state, dt * 0.5, a),
						c = springEvaluateStateWithDerivative(state, dt * 0.5, b),
						d = springEvaluateStateWithDerivative(state, dt, c),
						dxdt = 1.0 / 6.0 * (a.dx + 2.0 * (b.dx + c.dx) + d.dx),
						dvdt = 1.0 / 6.0 * (a.dv + 2.0 * (b.dv + c.dv) + d.dv);

				state.x = state.x + dxdt * dt;
				state.v = state.v + dvdt * dt;

				return state;
			}

			return function springRK4Factory(tension, friction, duration) {

				var initState = {
					x: -1,
					v: 0,
					tension: null,
					friction: null
				},
						path = [0],
						time_lapsed = 0,
						tolerance = 1 / 10000,
						DT = 16 / 1000,
						have_duration, dt, last_state;

				tension = parseFloat(tension) || 500;
				friction = parseFloat(friction) || 20;
				duration = duration || null;

				initState.tension = tension;
				initState.friction = friction;

				have_duration = duration !== null;

				/* Calculate the actual time it takes for this animation to complete with the provided conditions. */
				if (have_duration) {
					/* Run the simulation without a duration. */
					time_lapsed = springRK4Factory(tension, friction);
					/* Compute the adjusted time delta. */
					dt = time_lapsed / duration * DT;
				} else {
					dt = DT;
				}

				while (true) {
					/* Next/step function .*/
					last_state = springIntegrateState(last_state || initState, dt);
					/* Store the position. */
					path.push(1 + last_state.x);
					time_lapsed += 16;
					/* If the change threshold is reached, break. */
					if (!(Math.abs(last_state.x) > tolerance && Math.abs(last_state.v) > tolerance)) {
						break;
					}
				}

				/* If duration is not defined, return the actual time required for completing this animation. Otherwise, return a closure that holds the
				 computed path and returns a snapshot of the position according to a given percentComplete. */
				return !have_duration ? time_lapsed : function(percentComplete) {
					return path[ (percentComplete * (path.length - 1)) | 0 ];
				};
			};
		}());

		/* jQuery easings. */
		Velocity.Easings = {
			linear: function(p) {
				return p;
			},
			swing: function(p) {
				return 0.5 - Math.cos(p * Math.PI) / 2;
			},
			/* Bonus "spring" easing, which is a less exaggerated version of easeInOutElastic. */
			spring: function(p) {
				return 1 - (Math.cos(p * 4.5 * Math.PI) * Math.exp(-p * 6));
			}
		};

		/* CSS3 and Robert Penner easings. */
		$.each(
				[
					["ease", [0.25, 0.1, 0.25, 1.0]],
					["ease-in", [0.42, 0.0, 1.00, 1.0]],
					["ease-out", [0.00, 0.0, 0.58, 1.0]],
					["ease-in-out", [0.42, 0.0, 0.58, 1.0]],
					["easeInSine", [0.47, 0, 0.745, 0.715]],
					["easeOutSine", [0.39, 0.575, 0.565, 1]],
					["easeInOutSine", [0.445, 0.05, 0.55, 0.95]],
					["easeInQuad", [0.55, 0.085, 0.68, 0.53]],
					["easeOutQuad", [0.25, 0.46, 0.45, 0.94]],
					["easeInOutQuad", [0.455, 0.03, 0.515, 0.955]],
					["easeInCubic", [0.55, 0.055, 0.675, 0.19]],
					["easeOutCubic", [0.215, 0.61, 0.355, 1]],
					["easeInOutCubic", [0.645, 0.045, 0.355, 1]],
					["easeInQuart", [0.895, 0.03, 0.685, 0.22]],
					["easeOutQuart", [0.165, 0.84, 0.44, 1]],
					["easeInOutQuart", [0.77, 0, 0.175, 1]],
					["easeInQuint", [0.755, 0.05, 0.855, 0.06]],
					["easeOutQuint", [0.23, 1, 0.32, 1]],
					["easeInOutQuint", [0.86, 0, 0.07, 1]],
					["easeInExpo", [0.95, 0.05, 0.795, 0.035]],
					["easeOutExpo", [0.19, 1, 0.22, 1]],
					["easeInOutExpo", [1, 0, 0, 1]],
					["easeInCirc", [0.6, 0.04, 0.98, 0.335]],
					["easeOutCirc", [0.075, 0.82, 0.165, 1]],
					["easeInOutCirc", [0.785, 0.135, 0.15, 0.86]]
				], function(i, easingArray) {
			Velocity.Easings[easingArray[0]] = generateBezier.apply(null, easingArray[1]);
		});

		/* Determine the appropriate easing type given an easing input. */
		function getEasing(value, duration) {
			var easing = value;

			/* The easing option can either be a string that references a pre-registered easing,
			 or it can be a two-/four-item array of integers to be converted into a bezier/spring function. */
			if (Type.isString(value)) {
				/* Ensure that the easing has been assigned to jQuery's Velocity.Easings object. */
				if (!Velocity.Easings[value]) {
					easing = false;
				}
			} else if (Type.isArray(value) && value.length === 1) {
				easing = generateStep.apply(null, value);
			} else if (Type.isArray(value) && value.length === 2) {
				/* springRK4 must be passed the animation's duration. */
				/* Note: If the springRK4 array contains non-numbers, generateSpringRK4() returns an easing
				 function generated with default tension and friction values. */
				easing = generateSpringRK4.apply(null, value.concat([duration]));
			} else if (Type.isArray(value) && value.length === 4) {
				/* Note: If the bezier array contains non-numbers, generateBezier() returns false. */
				easing = generateBezier.apply(null, value);
			} else {
				easing = false;
			}

			/* Revert to the Velocity-wide default easing type, or fall back to "swing" (which is also jQuery's default)
			 if the Velocity-wide default has been incorrectly modified. */
			if (easing === false) {
				if (Velocity.Easings[Velocity.defaults.easing]) {
					easing = Velocity.defaults.easing;
				} else {
					easing = EASING_DEFAULT;
				}
			}

			return easing;
		}

		/*****************
		 CSS Stack
		 *****************/

		/* The CSS object is a highly condensed and performant CSS stack that fully replaces jQuery's.
		 It handles the validation, getting, and setting of both standard CSS properties and CSS property hooks. */
		/* Note: A "CSS" shorthand is aliased so that our code is easier to read. */
		var CSS = Velocity.CSS = {
			/*************
			 RegEx
			 *************/

			RegEx: {
				isHex: /^#([A-f\d]{3}){1,2}$/i,
				/* Unwrap a property value's surrounding text, e.g. "rgba(4, 3, 2, 1)" ==> "4, 3, 2, 1" and "rect(4px 3px 2px 1px)" ==> "4px 3px 2px 1px". */
				valueUnwrap: /^[A-z]+\((.*)\)$/i,
				wrappedValueAlreadyExtracted: /[0-9.]+ [0-9.]+ [0-9.]+( [0-9.]+)?/,
				/* Split a multi-value property into an array of subvalues, e.g. "rgba(4, 3, 2, 1) 4px 3px 2px 1px" ==> [ "rgba(4, 3, 2, 1)", "4px", "3px", "2px", "1px" ]. */
				valueSplit: /([A-z]+\(.+\))|(([A-z0-9#-.]+?)(?=\s|$))/ig
			},
			/************
			 Lists
			 ************/

			Lists: {
				colors: ["fill", "stroke", "stopColor", "color", "backgroundColor", "borderColor", "borderTopColor", "borderRightColor", "borderBottomColor", "borderLeftColor", "outlineColor"],
				transformsBase: ["translateX", "translateY", "scale", "scaleX", "scaleY", "skewX", "skewY", "rotateZ"],
				transforms3D: ["transformPerspective", "translateZ", "scaleZ", "rotateX", "rotateY"],
				units: [
					"%", // relative
					"em", "ex", "ch", "rem", // font relative
					"vw", "vh", "vmin", "vmax", // viewport relative
					"cm", "mm", "Q", "in", "pc", "pt", "px", // absolute lengths
					"deg", "grad", "rad", "turn", // angles
					"s", "ms" // time
				],
				colorNames: {
					"aliceblue": "240,248,255",
					"antiquewhite": "250,235,215",
					"aquamarine": "127,255,212",
					"aqua": "0,255,255",
					"azure": "240,255,255",
					"beige": "245,245,220",
					"bisque": "255,228,196",
					"black": "0,0,0",
					"blanchedalmond": "255,235,205",
					"blueviolet": "138,43,226",
					"blue": "0,0,255",
					"brown": "165,42,42",
					"burlywood": "222,184,135",
					"cadetblue": "95,158,160",
					"chartreuse": "127,255,0",
					"chocolate": "210,105,30",
					"coral": "255,127,80",
					"cornflowerblue": "100,149,237",
					"cornsilk": "255,248,220",
					"crimson": "220,20,60",
					"cyan": "0,255,255",
					"darkblue": "0,0,139",
					"darkcyan": "0,139,139",
					"darkgoldenrod": "184,134,11",
					"darkgray": "169,169,169",
					"darkgrey": "169,169,169",
					"darkgreen": "0,100,0",
					"darkkhaki": "189,183,107",
					"darkmagenta": "139,0,139",
					"darkolivegreen": "85,107,47",
					"darkorange": "255,140,0",
					"darkorchid": "153,50,204",
					"darkred": "139,0,0",
					"darksalmon": "233,150,122",
					"darkseagreen": "143,188,143",
					"darkslateblue": "72,61,139",
					"darkslategray": "47,79,79",
					"darkturquoise": "0,206,209",
					"darkviolet": "148,0,211",
					"deeppink": "255,20,147",
					"deepskyblue": "0,191,255",
					"dimgray": "105,105,105",
					"dimgrey": "105,105,105",
					"dodgerblue": "30,144,255",
					"firebrick": "178,34,34",
					"floralwhite": "255,250,240",
					"forestgreen": "34,139,34",
					"fuchsia": "255,0,255",
					"gainsboro": "220,220,220",
					"ghostwhite": "248,248,255",
					"gold": "255,215,0",
					"goldenrod": "218,165,32",
					"gray": "128,128,128",
					"grey": "128,128,128",
					"greenyellow": "173,255,47",
					"green": "0,128,0",
					"honeydew": "240,255,240",
					"hotpink": "255,105,180",
					"indianred": "205,92,92",
					"indigo": "75,0,130",
					"ivory": "255,255,240",
					"khaki": "240,230,140",
					"lavenderblush": "255,240,245",
					"lavender": "230,230,250",
					"lawngreen": "124,252,0",
					"lemonchiffon": "255,250,205",
					"lightblue": "173,216,230",
					"lightcoral": "240,128,128",
					"lightcyan": "224,255,255",
					"lightgoldenrodyellow": "250,250,210",
					"lightgray": "211,211,211",
					"lightgrey": "211,211,211",
					"lightgreen": "144,238,144",
					"lightpink": "255,182,193",
					"lightsalmon": "255,160,122",
					"lightseagreen": "32,178,170",
					"lightskyblue": "135,206,250",
					"lightslategray": "119,136,153",
					"lightsteelblue": "176,196,222",
					"lightyellow": "255,255,224",
					"limegreen": "50,205,50",
					"lime": "0,255,0",
					"linen": "250,240,230",
					"magenta": "255,0,255",
					"maroon": "128,0,0",
					"mediumaquamarine": "102,205,170",
					"mediumblue": "0,0,205",
					"mediumorchid": "186,85,211",
					"mediumpurple": "147,112,219",
					"mediumseagreen": "60,179,113",
					"mediumslateblue": "123,104,238",
					"mediumspringgreen": "0,250,154",
					"mediumturquoise": "72,209,204",
					"mediumvioletred": "199,21,133",
					"midnightblue": "25,25,112",
					"mintcream": "245,255,250",
					"mistyrose": "255,228,225",
					"moccasin": "255,228,181",
					"navajowhite": "255,222,173",
					"navy": "0,0,128",
					"oldlace": "253,245,230",
					"olivedrab": "107,142,35",
					"olive": "128,128,0",
					"orangered": "255,69,0",
					"orange": "255,165,0",
					"orchid": "218,112,214",
					"palegoldenrod": "238,232,170",
					"palegreen": "152,251,152",
					"paleturquoise": "175,238,238",
					"palevioletred": "219,112,147",
					"papayawhip": "255,239,213",
					"peachpuff": "255,218,185",
					"peru": "205,133,63",
					"pink": "255,192,203",
					"plum": "221,160,221",
					"powderblue": "176,224,230",
					"purple": "128,0,128",
					"red": "255,0,0",
					"rosybrown": "188,143,143",
					"royalblue": "65,105,225",
					"saddlebrown": "139,69,19",
					"salmon": "250,128,114",
					"sandybrown": "244,164,96",
					"seagreen": "46,139,87",
					"seashell": "255,245,238",
					"sienna": "160,82,45",
					"silver": "192,192,192",
					"skyblue": "135,206,235",
					"slateblue": "106,90,205",
					"slategray": "112,128,144",
					"snow": "255,250,250",
					"springgreen": "0,255,127",
					"steelblue": "70,130,180",
					"tan": "210,180,140",
					"teal": "0,128,128",
					"thistle": "216,191,216",
					"tomato": "255,99,71",
					"turquoise": "64,224,208",
					"violet": "238,130,238",
					"wheat": "245,222,179",
					"whitesmoke": "245,245,245",
					"white": "255,255,255",
					"yellowgreen": "154,205,50",
					"yellow": "255,255,0"
				}
			},
			/************
			 Hooks
			 ************/

			/* Hooks allow a subproperty (e.g. "boxShadowBlur") of a compound-value CSS property
			 (e.g. "boxShadow: X Y Blur Spread Color") to be animated as if it were a discrete property. */
			/* Note: Beyond enabling fine-grained property animation, hooking is necessary since Velocity only
			 tweens properties with single numeric values; unlike CSS transitions, Velocity does not interpolate compound-values. */
			Hooks: {
				/********************
				 Registration
				 ********************/

				/* Templates are a concise way of indicating which subproperties must be individually registered for each compound-value CSS property. */
				/* Each template consists of the compound-value's base name, its constituent subproperty names, and those subproperties' default values. */
				templates: {
					"textShadow": ["Color X Y Blur", "black 0px 0px 0px"],
					"boxShadow": ["Color X Y Blur Spread", "black 0px 0px 0px 0px"],
					"clip": ["Top Right Bottom Left", "0px 0px 0px 0px"],
					"backgroundPosition": ["X Y", "0% 0%"],
					"transformOrigin": ["X Y Z", "50% 50% 0px"],
					"perspectiveOrigin": ["X Y", "50% 50%"]
				},
				/* A "registered" hook is one that has been converted from its template form into a live,
				 tweenable property. It contains data to associate it with its root property. */
				registered: {
					/* Note: A registered hook looks like this ==> textShadowBlur: [ "textShadow", 3 ],
					 which consists of the subproperty's name, the associated root property's name,
					 and the subproperty's position in the root's value. */
				},
				/* Convert the templates into individual hooks then append them to the registered object above. */
				register: function() {
					/* Color hooks registration: Colors are defaulted to white -- as opposed to black -- since colors that are
					 currently set to "transparent" default to their respective template below when color-animated,
					 and white is typically a closer match to transparent than black is. An exception is made for text ("color"),
					 which is almost always set closer to black than white. */
					for (var i = 0; i < CSS.Lists.colors.length; i++) {
						var rgbComponents = (CSS.Lists.colors[i] === "color") ? "0 0 0 1" : "255 255 255 1";
						CSS.Hooks.templates[CSS.Lists.colors[i]] = ["Red Green Blue Alpha", rgbComponents];
					}

					var rootProperty,
							hookTemplate,
							hookNames;

					/* In IE, color values inside compound-value properties are positioned at the end the value instead of at the beginning.
					 Thus, we re-arrange the templates accordingly. */
					if (IE) {
						for (rootProperty in CSS.Hooks.templates) {
							if (!CSS.Hooks.templates.hasOwnProperty(rootProperty)) {
								continue;
							}
							hookTemplate = CSS.Hooks.templates[rootProperty];
							hookNames = hookTemplate[0].split(" ");

							var defaultValues = hookTemplate[1].match(CSS.RegEx.valueSplit);

							if (hookNames[0] === "Color") {
								/* Reposition both the hook's name and its default value to the end of their respective strings. */
								hookNames.push(hookNames.shift());
								defaultValues.push(defaultValues.shift());

								/* Replace the existing template for the hook's root property. */
								CSS.Hooks.templates[rootProperty] = [hookNames.join(" "), defaultValues.join(" ")];
							}
						}
					}

					/* Hook registration. */
					for (rootProperty in CSS.Hooks.templates) {
						if (!CSS.Hooks.templates.hasOwnProperty(rootProperty)) {
							continue;
						}
						hookTemplate = CSS.Hooks.templates[rootProperty];
						hookNames = hookTemplate[0].split(" ");

						for (var j in hookNames) {
							if (!hookNames.hasOwnProperty(j)) {
								continue;
							}
							var fullHookName = rootProperty + hookNames[j],
									hookPosition = j;

							/* For each hook, register its full name (e.g. textShadowBlur) with its root property (e.g. textShadow)
							 and the hook's position in its template's default value string. */
							CSS.Hooks.registered[fullHookName] = [rootProperty, hookPosition];
						}
					}
				},
				/*****************************
				 Injection and Extraction
				 *****************************/

				/* Look up the root property associated with the hook (e.g. return "textShadow" for "textShadowBlur"). */
				/* Since a hook cannot be set directly (the browser won't recognize it), style updating for hooks is routed through the hook's root property. */
				getRoot: function(property) {
					var hookData = CSS.Hooks.registered[property];

					if (hookData) {
						return hookData[0];
					} else {
						/* If there was no hook match, return the property name untouched. */
						return property;
					}
				},
				getUnit: function(str, start) {
					var unit = (str.substr(start || 0, 5).match(/^[a-z%]+/) || [])[0] || "";

					if (unit && _inArray(CSS.Lists.units, unit)) {
						return unit;
					}
					return "";
				},
				fixColors: function(str) {
					return str.replace(/(rgba?\(\s*)?(\b[a-z]+\b)/g, function($0, $1, $2) {
						if (CSS.Lists.colorNames.hasOwnProperty($2)) {
							return ($1 ? $1 : "rgba(") + CSS.Lists.colorNames[$2] + ($1 ? "" : ",1)");
						}
						return $1 + $2;
					});
				},
				/* Convert any rootPropertyValue, null or otherwise, into a space-delimited list of hook values so that
				 the targeted hook can be injected or extracted at its standard position. */
				cleanRootPropertyValue: function(rootProperty, rootPropertyValue) {
					/* If the rootPropertyValue is wrapped with "rgb()", "clip()", etc., remove the wrapping to normalize the value before manipulation. */
					if (CSS.RegEx.valueUnwrap.test(rootPropertyValue)) {
						rootPropertyValue = rootPropertyValue.match(CSS.RegEx.valueUnwrap)[1];
					}

					/* If rootPropertyValue is a CSS null-value (from which there's inherently no hook value to extract),
					 default to the root's default value as defined in CSS.Hooks.templates. */
					/* Note: CSS null-values include "none", "auto", and "transparent". They must be converted into their
					 zero-values (e.g. textShadow: "none" ==> textShadow: "0px 0px 0px black") for hook manipulation to proceed. */
					if (CSS.Values.isCSSNullValue(rootPropertyValue)) {
						rootPropertyValue = CSS.Hooks.templates[rootProperty][1];
					}

					return rootPropertyValue;
				},
				/* Extracted the hook's value from its root property's value. This is used to get the starting value of an animating hook. */
				extractValue: function(fullHookName, rootPropertyValue) {
					var hookData = CSS.Hooks.registered[fullHookName];

					if (hookData) {
						var hookRoot = hookData[0],
								hookPosition = hookData[1];

						rootPropertyValue = CSS.Hooks.cleanRootPropertyValue(hookRoot, rootPropertyValue);

						/* Split rootPropertyValue into its constituent hook values then grab the desired hook at its standard position. */
						return rootPropertyValue.toString().match(CSS.RegEx.valueSplit)[hookPosition];
					} else {
						/* If the provided fullHookName isn't a registered hook, return the rootPropertyValue that was passed in. */
						return rootPropertyValue;
					}
				},
				/* Inject the hook's value into its root property's value. This is used to piece back together the root property
				 once Velocity has updated one of its individually hooked values through tweening. */
				injectValue: function(fullHookName, hookValue, rootPropertyValue) {
					var hookData = CSS.Hooks.registered[fullHookName];

					if (hookData) {
						var hookRoot = hookData[0],
								hookPosition = hookData[1],
								rootPropertyValueParts,
								rootPropertyValueUpdated;

						rootPropertyValue = CSS.Hooks.cleanRootPropertyValue(hookRoot, rootPropertyValue);

						/* Split rootPropertyValue into its individual hook values, replace the targeted value with hookValue,
						 then reconstruct the rootPropertyValue string. */
						rootPropertyValueParts = rootPropertyValue.toString().match(CSS.RegEx.valueSplit);
						rootPropertyValueParts[hookPosition] = hookValue;
						rootPropertyValueUpdated = rootPropertyValueParts.join(" ");

						return rootPropertyValueUpdated;
					} else {
						/* If the provided fullHookName isn't a registered hook, return the rootPropertyValue that was passed in. */
						return rootPropertyValue;
					}
				}
			},
			/*******************
			 Normalizations
			 *******************/

			/* Normalizations standardize CSS property manipulation by pollyfilling browser-specific implementations (e.g. opacity)
			 and reformatting special properties (e.g. clip, rgba) to look like standard ones. */
			Normalizations: {
				/* Normalizations are passed a normalization target (either the property's name, its extracted value, or its injected value),
				 the targeted element (which may need to be queried), and the targeted property value. */
				registered: {
					clip: function(type, element, propertyValue) {
						switch (type) {
							case "name":
								return "clip";
								/* Clip needs to be unwrapped and stripped of its commas during extraction. */
							case "extract":
								var extracted;

								/* If Velocity also extracted this value, skip extraction. */
								if (CSS.RegEx.wrappedValueAlreadyExtracted.test(propertyValue)) {
									extracted = propertyValue;
								} else {
									/* Remove the "rect()" wrapper. */
									extracted = propertyValue.toString().match(CSS.RegEx.valueUnwrap);

									/* Strip off commas. */
									extracted = extracted ? extracted[1].replace(/,(\s+)?/g, " ") : propertyValue;
								}

								return extracted;
								/* Clip needs to be re-wrapped during injection. */
							case "inject":
								return "rect(" + propertyValue + ")";
						}
					},
					blur: function(type, element, propertyValue) {
						switch (type) {
							case "name":
								return Velocity.State.isFirefox ? "filter" : "-webkit-filter";
							case "extract":
								var extracted = parseFloat(propertyValue);

								/* If extracted is NaN, meaning the value isn't already extracted. */
								if (!(extracted || extracted === 0)) {
									var blurComponent = propertyValue.toString().match(/blur\(([0-9]+[A-z]+)\)/i);

									/* If the filter string had a blur component, return just the blur value and unit type. */
									if (blurComponent) {
										extracted = blurComponent[1];
										/* If the component doesn't exist, default blur to 0. */
									} else {
										extracted = 0;
									}
								}

								return extracted;
								/* Blur needs to be re-wrapped during injection. */
							case "inject":
								/* For the blur effect to be fully de-applied, it needs to be set to "none" instead of 0. */
								if (!parseFloat(propertyValue)) {
									return "none";
								} else {
									return "blur(" + propertyValue + ")";
								}
						}
					},
					/* <=IE8 do not support the standard opacity property. They use filter:alpha(opacity=INT) instead. */
					opacity: function(type, element, propertyValue) {
						if (IE <= 8) {
							switch (type) {
								case "name":
									return "filter";
								case "extract":
									/* <=IE8 return a "filter" value of "alpha(opacity=\d{1,3})".
									 Extract the value and convert it to a decimal value to match the standard CSS opacity property's formatting. */
									var extracted = propertyValue.toString().match(/alpha\(opacity=(.*)\)/i);

									if (extracted) {
										/* Convert to decimal value. */
										propertyValue = extracted[1] / 100;
									} else {
										/* When extracting opacity, default to 1 since a null value means opacity hasn't been set. */
										propertyValue = 1;
									}

									return propertyValue;
								case "inject":
									/* Opacified elements are required to have their zoom property set to a non-zero value. */
									element.style.zoom = 1;

									/* Setting the filter property on elements with certain font property combinations can result in a
									 highly unappealing ultra-bolding effect. There's no way to remedy this throughout a tween, but dropping the
									 value altogether (when opacity hits 1) at leasts ensures that the glitch is gone post-tweening. */
									if (parseFloat(propertyValue) >= 1) {
										return "";
									} else {
										/* As per the filter property's spec, convert the decimal value to a whole number and wrap the value. */
										return "alpha(opacity=" + parseInt(parseFloat(propertyValue) * 100, 10) + ")";
									}
							}
							/* With all other browsers, normalization is not required; return the same values that were passed in. */
						} else {
							switch (type) {
								case "name":
									return "opacity";
								case "extract":
									return propertyValue;
								case "inject":
									return propertyValue;
							}
						}
					}
				},
				/*****************************
				 Batched Registrations
				 *****************************/

				/* Note: Batched normalizations extend the CSS.Normalizations.registered object. */
				register: function() {

					/*****************
					 Transforms
					 *****************/

					/* Transforms are the subproperties contained by the CSS "transform" property. Transforms must undergo normalization
					 so that they can be referenced in a properties map by their individual names. */
					/* Note: When transforms are "set", they are actually assigned to a per-element transformCache. When all transform
					 setting is complete complete, CSS.flushTransformCache() must be manually called to flush the values to the DOM.
					 Transform setting is batched in this way to improve performance: the transform style only needs to be updated
					 once when multiple transform subproperties are being animated simultaneously. */
					/* Note: IE9 and Android Gingerbread have support for 2D -- but not 3D -- transforms. Since animating unsupported
					 transform properties results in the browser ignoring the *entire* transform string, we prevent these 3D values
					 from being normalized for these browsers so that tweening skips these properties altogether
					 (since it will ignore them as being unsupported by the browser.) */
					if ((!IE || IE > 9) && !Velocity.State.isGingerbread) {
						/* Note: Since the standalone CSS "perspective" property and the CSS transform "perspective" subproperty
						 share the same name, the latter is given a unique token within Velocity: "transformPerspective". */
						CSS.Lists.transformsBase = CSS.Lists.transformsBase.concat(CSS.Lists.transforms3D);
					}

					for (var i = 0; i < CSS.Lists.transformsBase.length; i++) {
						/* Wrap the dynamically generated normalization function in a new scope so that transformName's value is
						 paired with its respective function. (Otherwise, all functions would take the final for loop's transformName.) */
						(function() {
							var transformName = CSS.Lists.transformsBase[i];

							CSS.Normalizations.registered[transformName] = function(type, element, propertyValue) {
								switch (type) {
									/* The normalized property name is the parent "transform" property -- the property that is actually set in CSS. */
									case "name":
										return "transform";
										/* Transform values are cached onto a per-element transformCache object. */
									case "extract":
										/* If this transform has yet to be assigned a value, return its null value. */
										if (Data(element) === undefined || Data(element).transformCache[transformName] === undefined) {
											/* Scale CSS.Lists.transformsBase default to 1 whereas all other transform properties default to 0. */
											return /^scale/i.test(transformName) ? 1 : 0;
											/* When transform values are set, they are wrapped in parentheses as per the CSS spec.
											 Thus, when extracting their values (for tween calculations), we strip off the parentheses. */
										}
										return Data(element).transformCache[transformName].replace(/[()]/g, "");
									case "inject":
										var invalid = false;

										/* If an individual transform property contains an unsupported unit type, the browser ignores the *entire* transform property.
										 Thus, protect users from themselves by skipping setting for transform values supplied with invalid unit types. */
										/* Switch on the base transform type; ignore the axis by removing the last letter from the transform's name. */
										switch (transformName.substr(0, transformName.length - 1)) {
											/* Whitelist unit types for each transform. */
											case "translate":
												invalid = !/(%|px|em|rem|vw|vh|\d)$/i.test(propertyValue);
												break;
												/* Since an axis-free "scale" property is supported as well, a little hack is used here to detect it by chopping off its last letter. */
											case "scal":
											case "scale":
												/* Chrome on Android has a bug in which scaled elements blur if their initial scale
												 value is below 1 (which can happen with forcefeeding). Thus, we detect a yet-unset scale property
												 and ensure that its first value is always 1. More info: http://stackoverflow.com/questions/10417890/css3-animations-with-transform-causes-blurred-elements-on-webkit/10417962#10417962 */
												if (Velocity.State.isAndroid && Data(element).transformCache[transformName] === undefined && propertyValue < 1) {
													propertyValue = 1;
												}

												invalid = !/(\d)$/i.test(propertyValue);
												break;
											case "skew":
												invalid = !/(deg|\d)$/i.test(propertyValue);
												break;
											case "rotate":
												invalid = !/(deg|\d)$/i.test(propertyValue);
												break;
										}

										if (!invalid) {
											/* As per the CSS spec, wrap the value in parentheses. */
											Data(element).transformCache[transformName] = "(" + propertyValue + ")";
										}

										/* Although the value is set on the transformCache object, return the newly-updated value for the calling code to process as normal. */
										return Data(element).transformCache[transformName];
								}
							};
						})();
					}

					/*************
					 Colors
					 *************/

					/* Since Velocity only animates a single numeric value per property, color animation is achieved by hooking the individual RGBA components of CSS color properties.
					 Accordingly, color values must be normalized (e.g. "#ff0000", "red", and "rgb(255, 0, 0)" ==> "255 0 0 1") so that their components can be injected/extracted by CSS.Hooks logic. */
					for (var j = 0; j < CSS.Lists.colors.length; j++) {
						/* Wrap the dynamically generated normalization function in a new scope so that colorName's value is paired with its respective function.
						 (Otherwise, all functions would take the final for loop's colorName.) */
						(function() {
							var colorName = CSS.Lists.colors[j];

							/* Note: In IE<=8, which support rgb but not rgba, color properties are reverted to rgb by stripping off the alpha component. */
							CSS.Normalizations.registered[colorName] = function(type, element, propertyValue) {
								switch (type) {
									case "name":
										return colorName;
										/* Convert all color values into the rgb format. (Old IE can return hex values and color names instead of rgb/rgba.) */
									case "extract":
										var extracted;

										/* If the color is already in its hookable form (e.g. "255 255 255 1") due to having been previously extracted, skip extraction. */
										if (CSS.RegEx.wrappedValueAlreadyExtracted.test(propertyValue)) {
											extracted = propertyValue;
										} else {
											var converted,
													colorNames = {
														black: "rgb(0, 0, 0)",
														blue: "rgb(0, 0, 255)",
														gray: "rgb(128, 128, 128)",
														green: "rgb(0, 128, 0)",
														red: "rgb(255, 0, 0)",
														white: "rgb(255, 255, 255)"
													};

											/* Convert color names to rgb. */
											if (/^[A-z]+$/i.test(propertyValue)) {
												if (colorNames[propertyValue] !== undefined) {
													converted = colorNames[propertyValue];
												} else {
													/* If an unmatched color name is provided, default to black. */
													converted = colorNames.black;
												}
												/* Convert hex values to rgb. */
											} else if (CSS.RegEx.isHex.test(propertyValue)) {
												converted = "rgb(" + CSS.Values.hexToRgb(propertyValue).join(" ") + ")";
												/* If the provided color doesn't match any of the accepted color formats, default to black. */
											} else if (!(/^rgba?\(/i.test(propertyValue))) {
												converted = colorNames.black;
											}

											/* Remove the surrounding "rgb/rgba()" string then replace commas with spaces and strip
											 repeated spaces (in case the value included spaces to begin with). */
											extracted = (converted || propertyValue).toString().match(CSS.RegEx.valueUnwrap)[1].replace(/,(\s+)?/g, " ");
										}

										/* So long as this isn't <=IE8, add a fourth (alpha) component if it's missing and default it to 1 (visible). */
										if ((!IE || IE > 8) && extracted.split(" ").length === 3) {
											extracted += " 1";
										}

										return extracted;
									case "inject":
										/* If we have a pattern then it might already have the right values */
										if (/^rgb/.test(propertyValue)) {
											return propertyValue;
										}

										/* If this is IE<=8 and an alpha component exists, strip it off. */
										if (IE <= 8) {
											if (propertyValue.split(" ").length === 4) {
												propertyValue = propertyValue.split(/\s+/).slice(0, 3).join(" ");
											}
											/* Otherwise, add a fourth (alpha) component if it's missing and default it to 1 (visible). */
										} else if (propertyValue.split(" ").length === 3) {
											propertyValue += " 1";
										}

										/* Re-insert the browser-appropriate wrapper("rgb/rgba()"), insert commas, and strip off decimal units
										 on all values but the fourth (R, G, and B only accept whole numbers). */
										return (IE <= 8 ? "rgb" : "rgba") + "(" + propertyValue.replace(/\s+/g, ",").replace(/\.(\d)+(?=,)/g, "") + ")";
								}
							};
						})();
					}

					/**************
					 Dimensions
					 **************/
					function augmentDimension(name, element, wantInner) {
						var isBorderBox = CSS.getPropertyValue(element, "boxSizing").toString().toLowerCase() === "border-box";

						if (isBorderBox === (wantInner || false)) {
							/* in box-sizing mode, the CSS width / height accessors already give the outerWidth / outerHeight. */
							var i,
									value,
									augment = 0,
									sides = name === "width" ? ["Left", "Right"] : ["Top", "Bottom"],
									fields = ["padding" + sides[0], "padding" + sides[1], "border" + sides[0] + "Width", "border" + sides[1] + "Width"];

							for (i = 0; i < fields.length; i++) {
								value = parseFloat(CSS.getPropertyValue(element, fields[i]));
								if (!isNaN(value)) {
									augment += value;
								}
							}
							return wantInner ? -augment : augment;
						}
						return 0;
					}
					function getDimension(name, wantInner) {
						return function(type, element, propertyValue) {
							switch (type) {
								case "name":
									return name;
								case "extract":
									return parseFloat(propertyValue) + augmentDimension(name, element, wantInner);
								case "inject":
									return (parseFloat(propertyValue) - augmentDimension(name, element, wantInner)) + "px";
							}
						};
					}
					CSS.Normalizations.registered.innerWidth = getDimension("width", true);
					CSS.Normalizations.registered.innerHeight = getDimension("height", true);
					CSS.Normalizations.registered.outerWidth = getDimension("width");
					CSS.Normalizations.registered.outerHeight = getDimension("height");
				}
			},
			/************************
			 CSS Property Names
			 ************************/

			Names: {
				/* Camelcase a property name into its JavaScript notation (e.g. "background-color" ==> "backgroundColor").
				 Camelcasing is used to normalize property names between and across calls. */
				camelCase: function(property) {
					return property.replace(/-(\w)/g, function(match, subMatch) {
						return subMatch.toUpperCase();
					});
				},
				/* For SVG elements, some properties (namely, dimensional ones) are GET/SET via the element's HTML attributes (instead of via CSS styles). */
				SVGAttribute: function(property) {
					var SVGAttributes = "width|height|x|y|cx|cy|r|rx|ry|x1|x2|y1|y2";

					/* Certain browsers require an SVG transform to be applied as an attribute. (Otherwise, application via CSS is preferable due to 3D support.) */
					if (IE || (Velocity.State.isAndroid && !Velocity.State.isChrome)) {
						SVGAttributes += "|transform";
					}

					return new RegExp("^(" + SVGAttributes + ")$", "i").test(property);
				},
				/* Determine whether a property should be set with a vendor prefix. */
				/* If a prefixed version of the property exists, return it. Otherwise, return the original property name.
				 If the property is not at all supported by the browser, return a false flag. */
				prefixCheck: function(property) {
					/* If this property has already been checked, return the cached value. */
					if (Velocity.State.prefixMatches[property]) {
						return [Velocity.State.prefixMatches[property], true];
					} else {
						var vendors = ["", "Webkit", "Moz", "ms", "O"];

						for (var i = 0, vendorsLength = vendors.length; i < vendorsLength; i++) {
							var propertyPrefixed;

							if (i === 0) {
								propertyPrefixed = property;
							} else {
								/* Capitalize the first letter of the property to conform to JavaScript vendor prefix notation (e.g. webkitFilter). */
								propertyPrefixed = vendors[i] + property.replace(/^\w/, function(match) {
									return match.toUpperCase();
								});
							}

							/* Check if the browser supports this property as prefixed. */
							if (Type.isString(Velocity.State.prefixElement.style[propertyPrefixed])) {
								/* Cache the match. */
								Velocity.State.prefixMatches[property] = propertyPrefixed;

								return [propertyPrefixed, true];
							}
						}

						/* If the browser doesn't support this property in any form, include a false flag so that the caller can decide how to proceed. */
						return [property, false];
					}
				}
			},
			/************************
			 CSS Property Values
			 ************************/

			Values: {
				/* Hex to RGB conversion. Copyright Tim Down: http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb */
				hexToRgb: function(hex) {
					var shortformRegex = /^#?([a-f\d])([a-f\d])([a-f\d])$/i,
							longformRegex = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,
							rgbParts;

					hex = hex.replace(shortformRegex, function(m, r, g, b) {
						return r + r + g + g + b + b;
					});

					rgbParts = longformRegex.exec(hex);

					return rgbParts ? [parseInt(rgbParts[1], 16), parseInt(rgbParts[2], 16), parseInt(rgbParts[3], 16)] : [0, 0, 0];
				},
				isCSSNullValue: function(value) {
					/* The browser defaults CSS values that have not been set to either 0 or one of several possible null-value strings.
					 Thus, we check for both falsiness and these special strings. */
					/* Null-value checking is performed to default the special strings to 0 (for the sake of tweening) or their hook
					 templates as defined as CSS.Hooks (for the sake of hook injection/extraction). */
					/* Note: Chrome returns "rgba(0, 0, 0, 0)" for an undefined color whereas IE returns "transparent". */
					return (!value || /^(none|auto|transparent|(rgba\(0, ?0, ?0, ?0\)))$/i.test(value));
				},
				/* Retrieve a property's default unit type. Used for assigning a unit type when one is not supplied by the user. */
				getUnitType: function(property) {
					if (/^(rotate|skew)/i.test(property)) {
						return "deg";
					} else if (/(^(scale|scaleX|scaleY|scaleZ|alpha|flexGrow|flexHeight|zIndex|fontWeight)$)|((opacity|red|green|blue|alpha)$)/i.test(property)) {
						/* The above properties are unitless. */
						return "";
					} else {
						/* Default to px for all other properties. */
						return "px";
					}
				},
				/* HTML elements default to an associated display type when they're not set to display:none. */
				/* Note: This function is used for correctly setting the non-"none" display value in certain Velocity redirects, such as fadeIn/Out. */
				getDisplayType: function(element) {
					var tagName = element && element.tagName.toString().toLowerCase();

					if (/^(b|big|i|small|tt|abbr|acronym|cite|code|dfn|em|kbd|strong|samp|var|a|bdo|br|img|map|object|q|script|span|sub|sup|button|input|label|select|textarea)$/i.test(tagName)) {
						return "inline";
					} else if (/^(li)$/i.test(tagName)) {
						return "list-item";
					} else if (/^(tr)$/i.test(tagName)) {
						return "table-row";
					} else if (/^(table)$/i.test(tagName)) {
						return "table";
					} else if (/^(tbody)$/i.test(tagName)) {
						return "table-row-group";
						/* Default to "block" when no match is found. */
					} else {
						return "block";
					}
				},
				/* The class add/remove functions are used to temporarily apply a "velocity-animating" class to elements while they're animating. */
				addClass: function(element, className) {
					if (element) {
						if (element.classList) {
							element.classList.add(className);
						} else if (Type.isString(element.className)) {
							// Element.className is around 15% faster then set/getAttribute
							element.className += (element.className.length ? " " : "") + className;
						} else {
							// Work around for IE strict mode animating SVG - and anything else that doesn't behave correctly - the same way jQuery does it
							var currentClass = element.getAttribute(IE <= 7 ? "className" : "class") || "";

							element.setAttribute("class", currentClass + (currentClass ? " " : "") + className);
						}
					}
				},
				removeClass: function(element, className) {
					if (element) {
						if (element.classList) {
							element.classList.remove(className);
						} else if (Type.isString(element.className)) {
							// Element.className is around 15% faster then set/getAttribute
							// TODO: Need some jsperf tests on performance - can we get rid of the regex and maybe use split / array manipulation?
							element.className = element.className.toString().replace(new RegExp("(^|\\s)" + className.split(" ").join("|") + "(\\s|$)", "gi"), " ");
						} else {
							// Work around for IE strict mode animating SVG - and anything else that doesn't behave correctly - the same way jQuery does it
							var currentClass = element.getAttribute(IE <= 7 ? "className" : "class") || "";

							element.setAttribute("class", currentClass.replace(new RegExp("(^|\s)" + className.split(" ").join("|") + "(\s|$)", "gi"), " "));
						}
					}
				}
			},
			/****************************
			 Style Getting & Setting
			 ****************************/

			/* The singular getPropertyValue, which routes the logic for all normalizations, hooks, and standard CSS properties. */
			getPropertyValue: function(element, property, rootPropertyValue, forceStyleLookup) {
				/* Get an element's computed property value. */
				/* Note: Retrieving the value of a CSS property cannot simply be performed by checking an element's
				 style attribute (which only reflects user-defined values). Instead, the browser must be queried for a property's
				 *computed* value. You can read more about getComputedStyle here: https://developer.mozilla.org/en/docs/Web/API/window.getComputedStyle */
				function computePropertyValue(element, property) {
					/* When box-sizing isn't set to border-box, height and width style values are incorrectly computed when an
					 element's scrollbars are visible (which expands the element's dimensions). Thus, we defer to the more accurate
					 offsetHeight/Width property, which includes the total dimensions for interior, border, padding, and scrollbar.
					 We subtract border and padding to get the sum of interior + scrollbar. */
					var computedValue = 0;

					/* IE<=8 doesn't support window.getComputedStyle, thus we defer to jQuery, which has an extensive array
					 of hacks to accurately retrieve IE8 property values. Re-implementing that logic here is not worth bloating the
					 codebase for a dying browser. The performance repercussions of using jQuery here are minimal since
					 Velocity is optimized to rarely (and sometimes never) query the DOM. Further, the $.css() codepath isn't that slow. */
					if (IE <= 8) {
						computedValue = $.css(element, property); /* GET */
						/* All other browsers support getComputedStyle. The returned live object reference is cached onto its
						 associated element so that it does not need to be refetched upon every GET. */
					} else {
						/* Browsers do not return height and width values for elements that are set to display:"none". Thus, we temporarily
						 toggle display to the element type's default value. */
						var toggleDisplay = false;

						if (/^(width|height)$/.test(property) && CSS.getPropertyValue(element, "display") === 0) {
							toggleDisplay = true;
							CSS.setPropertyValue(element, "display", CSS.Values.getDisplayType(element));
						}

						var revertDisplay = function() {
							if (toggleDisplay) {
								CSS.setPropertyValue(element, "display", "none");
							}
						};

						if (!forceStyleLookup) {
							if (property === "height" && CSS.getPropertyValue(element, "boxSizing").toString().toLowerCase() !== "border-box") {
								var contentBoxHeight = element.offsetHeight - (parseFloat(CSS.getPropertyValue(element, "borderTopWidth")) || 0) - (parseFloat(CSS.getPropertyValue(element, "borderBottomWidth")) || 0) - (parseFloat(CSS.getPropertyValue(element, "paddingTop")) || 0) - (parseFloat(CSS.getPropertyValue(element, "paddingBottom")) || 0);
								revertDisplay();

								return contentBoxHeight;
							} else if (property === "width" && CSS.getPropertyValue(element, "boxSizing").toString().toLowerCase() !== "border-box") {
								var contentBoxWidth = element.offsetWidth - (parseFloat(CSS.getPropertyValue(element, "borderLeftWidth")) || 0) - (parseFloat(CSS.getPropertyValue(element, "borderRightWidth")) || 0) - (parseFloat(CSS.getPropertyValue(element, "paddingLeft")) || 0) - (parseFloat(CSS.getPropertyValue(element, "paddingRight")) || 0);
								revertDisplay();

								return contentBoxWidth;
							}
						}

						var computedStyle;

						/* For elements that Velocity hasn't been called on directly (e.g. when Velocity queries the DOM on behalf
						 of a parent of an element its animating), perform a direct getComputedStyle lookup since the object isn't cached. */
						if (Data(element) === undefined) {
							computedStyle = window.getComputedStyle(element, null); /* GET */
							/* If the computedStyle object has yet to be cached, do so now. */
						} else if (!Data(element).computedStyle) {
							computedStyle = Data(element).computedStyle = window.getComputedStyle(element, null); /* GET */
							/* If computedStyle is cached, use it. */
						} else {
							computedStyle = Data(element).computedStyle;
						}

						/* IE and Firefox do not return a value for the generic borderColor -- they only return individual values for each border side's color.
						 Also, in all browsers, when border colors aren't all the same, a compound value is returned that Velocity isn't setup to parse.
						 So, as a polyfill for querying individual border side colors, we just return the top border's color and animate all borders from that value. */
						if (property === "borderColor") {
							property = "borderTopColor";
						}

						/* IE9 has a bug in which the "filter" property must be accessed from computedStyle using the getPropertyValue method
						 instead of a direct property lookup. The getPropertyValue method is slower than a direct lookup, which is why we avoid it by default. */
						if (IE === 9 && property === "filter") {
							computedValue = computedStyle.getPropertyValue(property); /* GET */
						} else {
							computedValue = computedStyle[property];
						}

						/* Fall back to the property's style value (if defined) when computedValue returns nothing,
						 which can happen when the element hasn't been painted. */
						if (computedValue === "" || computedValue === null) {
							computedValue = element.style[property];
						}

						revertDisplay();
					}

					/* For top, right, bottom, and left (TRBL) values that are set to "auto" on elements of "fixed" or "absolute" position,
					 defer to jQuery for converting "auto" to a numeric value. (For elements with a "static" or "relative" position, "auto" has the same
					 effect as being set to 0, so no conversion is necessary.) */
					/* An example of why numeric conversion is necessary: When an element with "position:absolute" has an untouched "left"
					 property, which reverts to "auto", left's value is 0 relative to its parent element, but is often non-zero relative
					 to its *containing* (not parent) element, which is the nearest "position:relative" ancestor or the viewport (and always the viewport in the case of "position:fixed"). */
					if (computedValue === "auto" && /^(top|right|bottom|left)$/i.test(property)) {
						var position = computePropertyValue(element, "position"); /* GET */

						/* For absolute positioning, jQuery's $.position() only returns values for top and left;
						 right and bottom will have their "auto" value reverted to 0. */
						/* Note: A jQuery object must be created here since jQuery doesn't have a low-level alias for $.position().
						 Not a big deal since we're currently in a GET batch anyway. */
						if (position === "fixed" || (position === "absolute" && /top|left/i.test(property))) {
							/* Note: jQuery strips the pixel unit from its returned values; we re-add it here to conform with computePropertyValue's behavior. */
							computedValue = $(element).position()[property] + "px"; /* GET */
						}
					}

					return computedValue;
				}

				var propertyValue;

				/* If this is a hooked property (e.g. "clipLeft" instead of the root property of "clip"),
				 extract the hook's value from a normalized rootPropertyValue using CSS.Hooks.extractValue(). */
				if (CSS.Hooks.registered[property]) {
					var hook = property,
							hookRoot = CSS.Hooks.getRoot(hook);

					/* If a cached rootPropertyValue wasn't passed in (which Velocity always attempts to do in order to avoid requerying the DOM),
					 query the DOM for the root property's value. */
					if (rootPropertyValue === undefined) {
						/* Since the browser is now being directly queried, use the official post-prefixing property name for this lookup. */
						rootPropertyValue = CSS.getPropertyValue(element, CSS.Names.prefixCheck(hookRoot)[0]); /* GET */
					}

					/* If this root has a normalization registered, peform the associated normalization extraction. */
					if (CSS.Normalizations.registered[hookRoot]) {
						rootPropertyValue = CSS.Normalizations.registered[hookRoot]("extract", element, rootPropertyValue);
					}

					/* Extract the hook's value. */
					propertyValue = CSS.Hooks.extractValue(hook, rootPropertyValue);

					/* If this is a normalized property (e.g. "opacity" becomes "filter" in <=IE8) or "translateX" becomes "transform"),
					 normalize the property's name and value, and handle the special case of transforms. */
					/* Note: Normalizing a property is mutually exclusive from hooking a property since hook-extracted values are strictly
					 numerical and therefore do not require normalization extraction. */
				} else if (CSS.Normalizations.registered[property]) {
					var normalizedPropertyName,
							normalizedPropertyValue;

					normalizedPropertyName = CSS.Normalizations.registered[property]("name", element);

					/* Transform values are calculated via normalization extraction (see below), which checks against the element's transformCache.
					 At no point do transform GETs ever actually query the DOM; initial stylesheet values are never processed.
					 This is because parsing 3D transform matrices is not always accurate and would bloat our codebase;
					 thus, normalization extraction defaults initial transform values to their zero-values (e.g. 1 for scaleX and 0 for translateX). */
					if (normalizedPropertyName !== "transform") {
						normalizedPropertyValue = computePropertyValue(element, CSS.Names.prefixCheck(normalizedPropertyName)[0]); /* GET */

						/* If the value is a CSS null-value and this property has a hook template, use that zero-value template so that hooks can be extracted from it. */
						if (CSS.Values.isCSSNullValue(normalizedPropertyValue) && CSS.Hooks.templates[property]) {
							normalizedPropertyValue = CSS.Hooks.templates[property][1];
						}
					}

					propertyValue = CSS.Normalizations.registered[property]("extract", element, normalizedPropertyValue);
				}

				/* If a (numeric) value wasn't produced via hook extraction or normalization, query the DOM. */
				if (!/^[\d-]/.test(propertyValue)) {
					/* For SVG elements, dimensional properties (which SVGAttribute() detects) are tweened via
					 their HTML attribute values instead of their CSS style values. */
					var data = Data(element);

					if (data && data.isSVG && CSS.Names.SVGAttribute(property)) {
						/* Since the height/width attribute values must be set manually, they don't reflect computed values.
						 Thus, we use use getBBox() to ensure we always get values for elements with undefined height/width attributes. */
						if (/^(height|width)$/i.test(property)) {
							/* Firefox throws an error if .getBBox() is called on an SVG that isn't attached to the DOM. */
							try {
								propertyValue = element.getBBox()[property];
							} catch (error) {
								propertyValue = 0;
							}
							/* Otherwise, access the attribute value directly. */
						} else {
							propertyValue = element.getAttribute(property);
						}
					} else {
						propertyValue = computePropertyValue(element, CSS.Names.prefixCheck(property)[0]); /* GET */
					}
				}

				/* Since property lookups are for animation purposes (which entails computing the numeric delta between start and end values),
				 convert CSS null-values to an integer of value 0. */
				if (CSS.Values.isCSSNullValue(propertyValue)) {
					propertyValue = 0;
				}

				if (Velocity.debug >= 2) {
					console.log("Get " + property + ": " + propertyValue);
				}

				return propertyValue;
			},
			/* The singular setPropertyValue, which routes the logic for all normalizations, hooks, and standard CSS properties. */
			setPropertyValue: function(element, property, propertyValue, rootPropertyValue, scrollData) {
				var propertyName = property;

				/* In order to be subjected to call options and element queueing, scroll animation is routed through Velocity as if it were a standard CSS property. */
				if (property === "scroll") {
					/* If a container option is present, scroll the container instead of the browser window. */
					if (scrollData.container) {
						scrollData.container["scroll" + scrollData.direction] = propertyValue;
						/* Otherwise, Velocity defaults to scrolling the browser window. */
					} else {
						if (scrollData.direction === "Left") {
							window.scrollTo(propertyValue, scrollData.alternateValue);
						} else {
							window.scrollTo(scrollData.alternateValue, propertyValue);
						}
					}
				} else {
					/* Transforms (translateX, rotateZ, etc.) are applied to a per-element transformCache object, which is manually flushed via flushTransformCache().
					 Thus, for now, we merely cache transforms being SET. */
					if (CSS.Normalizations.registered[property] && CSS.Normalizations.registered[property]("name", element) === "transform") {
						/* Perform a normalization injection. */
						/* Note: The normalization logic handles the transformCache updating. */
						CSS.Normalizations.registered[property]("inject", element, propertyValue);

						propertyName = "transform";
						propertyValue = Data(element).transformCache[property];
					} else {
						/* Inject hooks. */
						if (CSS.Hooks.registered[property]) {
							var hookName = property,
									hookRoot = CSS.Hooks.getRoot(property);

							/* If a cached rootPropertyValue was not provided, query the DOM for the hookRoot's current value. */
							rootPropertyValue = rootPropertyValue || CSS.getPropertyValue(element, hookRoot); /* GET */

							propertyValue = CSS.Hooks.injectValue(hookName, propertyValue, rootPropertyValue);
							property = hookRoot;
						}

						/* Normalize names and values. */
						if (CSS.Normalizations.registered[property]) {
							propertyValue = CSS.Normalizations.registered[property]("inject", element, propertyValue);
							property = CSS.Normalizations.registered[property]("name", element);
						}

						/* Assign the appropriate vendor prefix before performing an official style update. */
						propertyName = CSS.Names.prefixCheck(property)[0];

						/* A try/catch is used for IE<=8, which throws an error when "invalid" CSS values are set, e.g. a negative width.
						 Try/catch is avoided for other browsers since it incurs a performance overhead. */
						if (IE <= 8) {
							try {
								element.style[propertyName] = propertyValue;
							} catch (error) {
								if (Velocity.debug) {
									console.log("Browser does not support [" + propertyValue + "] for [" + propertyName + "]");
								}
							}
							/* SVG elements have their dimensional properties (width, height, x, y, cx, etc.) applied directly as attributes instead of as styles. */
							/* Note: IE8 does not support SVG elements, so it's okay that we skip it for SVG animation. */
						} else {
							var data = Data(element);

							if (data && data.isSVG && CSS.Names.SVGAttribute(property)) {
								/* Note: For SVG attributes, vendor-prefixed property names are never used. */
								/* Note: Not all CSS properties can be animated via attributes, but the browser won't throw an error for unsupported properties. */
								element.setAttribute(property, propertyValue);
							} else {
								element.style[propertyName] = propertyValue;
							}
						}

						if (Velocity.debug >= 2) {
							console.log("Set " + property + " (" + propertyName + "): " + propertyValue);
						}
					}
				}

				/* Return the normalized property name and value in case the caller wants to know how these values were modified before being applied to the DOM. */
				return [propertyName, propertyValue];
			},
			/* To increase performance by batching transform updates into a single SET, transforms are not directly applied to an element until flushTransformCache() is called. */
			/* Note: Velocity applies transform properties in the same order that they are chronogically introduced to the element's CSS styles. */
			flushTransformCache: function(element) {
				var transformString = "",
						data = Data(element);

				/* Certain browsers require that SVG transforms be applied as an attribute. However, the SVG transform attribute takes a modified version of CSS's transform string
				 (units are dropped and, except for skewX/Y, subproperties are merged into their master property -- e.g. scaleX and scaleY are merged into scale(X Y). */
				if ((IE || (Velocity.State.isAndroid && !Velocity.State.isChrome)) && data && data.isSVG) {
					/* Since transform values are stored in their parentheses-wrapped form, we use a helper function to strip out their numeric values.
					 Further, SVG transform properties only take unitless (representing pixels) values, so it's okay that parseFloat() strips the unit suffixed to the float value. */
					var getTransformFloat = function(transformProperty) {
						return parseFloat(CSS.getPropertyValue(element, transformProperty));
					};

					/* Create an object to organize all the transforms that we'll apply to the SVG element. To keep the logic simple,
					 we process *all* transform properties -- even those that may not be explicitly applied (since they default to their zero-values anyway). */
					var SVGTransforms = {
						translate: [getTransformFloat("translateX"), getTransformFloat("translateY")],
						skewX: [getTransformFloat("skewX")], skewY: [getTransformFloat("skewY")],
						/* If the scale property is set (non-1), use that value for the scaleX and scaleY values
						 (this behavior mimics the result of animating all these properties at once on HTML elements). */
						scale: getTransformFloat("scale") !== 1 ? [getTransformFloat("scale"), getTransformFloat("scale")] : [getTransformFloat("scaleX"), getTransformFloat("scaleY")],
						/* Note: SVG's rotate transform takes three values: rotation degrees followed by the X and Y values
						 defining the rotation's origin point. We ignore the origin values (default them to 0). */
						rotate: [getTransformFloat("rotateZ"), 0, 0]
					};

					/* Iterate through the transform properties in the user-defined property map order.
					 (This mimics the behavior of non-SVG transform animation.) */
					$.each(Data(element).transformCache, function(transformName) {
						/* Except for with skewX/Y, revert the axis-specific transform subproperties to their axis-free master
						 properties so that they match up with SVG's accepted transform properties. */
						if (/^translate/i.test(transformName)) {
							transformName = "translate";
						} else if (/^scale/i.test(transformName)) {
							transformName = "scale";
						} else if (/^rotate/i.test(transformName)) {
							transformName = "rotate";
						}

						/* Check that we haven't yet deleted the property from the SVGTransforms container. */
						if (SVGTransforms[transformName]) {
							/* Append the transform property in the SVG-supported transform format. As per the spec, surround the space-delimited values in parentheses. */
							transformString += transformName + "(" + SVGTransforms[transformName].join(" ") + ")" + " ";

							/* After processing an SVG transform property, delete it from the SVGTransforms container so we don't
							 re-insert the same master property if we encounter another one of its axis-specific properties. */
							delete SVGTransforms[transformName];
						}
					});
				} else {
					var transformValue,
							perspective;

					/* Transform properties are stored as members of the transformCache object. Concatenate all the members into a string. */
					$.each(Data(element).transformCache, function(transformName) {
						transformValue = Data(element).transformCache[transformName];

						/* Transform's perspective subproperty must be set first in order to take effect. Store it temporarily. */
						if (transformName === "transformPerspective") {
							perspective = transformValue;
							return true;
						}

						/* IE9 only supports one rotation type, rotateZ, which it refers to as "rotate". */
						if (IE === 9 && transformName === "rotateZ") {
							transformName = "rotate";
						}

						transformString += transformName + transformValue + " ";
					});

					/* If present, set the perspective subproperty first. */
					if (perspective) {
						transformString = "perspective" + perspective + " " + transformString;
					}
				}

				CSS.setPropertyValue(element, "transform", transformString);
			}
		};

		/* Register hooks and normalizations. */
		CSS.Hooks.register();
		CSS.Normalizations.register();

		/* Allow hook setting in the same fashion as jQuery's $.css(). */
		Velocity.hook = function(elements, arg2, arg3) {
			var value;

			elements = sanitizeElements(elements);

			$.each(elements, function(i, element) {
				/* Initialize Velocity's per-element data cache if this element hasn't previously been animated. */
				if (Data(element) === undefined) {
					Velocity.init(element);
				}

				/* Get property value. If an element set was passed in, only return the value for the first element. */
				if (arg3 === undefined) {
					if (value === undefined) {
						value = CSS.getPropertyValue(element, arg2);
					}
					/* Set property value. */
				} else {
					/* sPV returns an array of the normalized propertyName/propertyValue pair used to update the DOM. */
					var adjustedSet = CSS.setPropertyValue(element, arg2, arg3);

					/* Transform properties don't automatically set. They have to be flushed to the DOM. */
					if (adjustedSet[0] === "transform") {
						Velocity.CSS.flushTransformCache(element);
					}

					value = adjustedSet;
				}
			});

			return value;
		};

		/*****************
		 Animation
		 *****************/

		var animate = function() {
			var opts;

			/******************
			 Call Chain
			 ******************/

			/* Logic for determining what to return to the call stack when exiting out of Velocity. */
			function getChain() {
				/* If we are using the utility function, attempt to return this call's promise. If no promise library was detected,
				 default to null instead of returning the targeted elements so that utility function's return value is standardized. */
				if (isUtility) {
					return promiseData.promise || null;
					/* Otherwise, if we're using $.fn, return the jQuery-/Zepto-wrapped element set. */
				} else {
					return elementsWrapped;
				}
			}

			/*************************
			 Arguments Assignment
			 *************************/

			/* To allow for expressive CoffeeScript code, Velocity supports an alternative syntax in which "elements" (or "e"), "properties" (or "p"), and "options" (or "o")
			 objects are defined on a container object that's passed in as Velocity's sole argument. */
			/* Note: Some browsers automatically populate arguments with a "properties" object. We detect it by checking for its default "names" property. */
			var syntacticSugar = (arguments[0] && (arguments[0].p || (($.isPlainObject(arguments[0].properties) && !arguments[0].properties.names) || Type.isString(arguments[0].properties)))),
					/* Whether Velocity was called via the utility function (as opposed to on a jQuery/Zepto object). */
					isUtility,
					/* When Velocity is called via the utility function ($.Velocity()/Velocity()), elements are explicitly
					 passed in as the first parameter. Thus, argument positioning varies. We normalize them here. */
					elementsWrapped,
					argumentIndex;

			var elements,
					propertiesMap,
					options;

			/* Detect jQuery/Zepto elements being animated via the $.fn method. */
			if (Type.isWrapped(this)) {
				isUtility = false;

				argumentIndex = 0;
				elements = this;
				elementsWrapped = this;
				/* Otherwise, raw elements are being animated via the utility function. */
			} else {
				isUtility = true;

				argumentIndex = 1;
				elements = syntacticSugar ? (arguments[0].elements || arguments[0].e) : arguments[0];
			}

			/***************
			 Promises
			 ***************/

			var promiseData = {
				promise: null,
				resolver: null,
				rejecter: null
			};

			/* If this call was made via the utility function (which is the default method of invocation when jQuery/Zepto are not being used), and if
			 promise support was detected, create a promise object for this call and store references to its resolver and rejecter methods. The resolve
			 method is used when a call completes naturally or is prematurely stopped by the user. In both cases, completeCall() handles the associated
			 call cleanup and promise resolving logic. The reject method is used when an invalid set of arguments is passed into a Velocity call. */
			/* Note: Velocity employs a call-based queueing architecture, which means that stopping an animating element actually stops the full call that
			 triggered it -- not that one element exclusively. Similarly, there is one promise per call, and all elements targeted by a Velocity call are
			 grouped together for the purposes of resolving and rejecting a promise. */
			if (isUtility && Velocity.Promise) {
				promiseData.promise = new Velocity.Promise(function(resolve, reject) {
					promiseData.resolver = resolve;
					promiseData.rejecter = reject;
				});
			}

			if (syntacticSugar) {
				propertiesMap = arguments[0].properties || arguments[0].p;
				options = arguments[0].options || arguments[0].o;
			} else {
				propertiesMap = arguments[argumentIndex];
				options = arguments[argumentIndex + 1];
			}

			elements = sanitizeElements(elements);

			if (!elements) {
				if (promiseData.promise) {
					if (!propertiesMap || !options || options.promiseRejectEmpty !== false) {
						promiseData.rejecter();
					} else {
						promiseData.resolver();
					}
				}
				return;
			}

			/* The length of the element set (in the form of a nodeList or an array of elements) is defaulted to 1 in case a
			 single raw DOM element is passed in (which doesn't contain a length property). */
			var elementsLength = elements.length,
					elementsIndex = 0;

			/***************************
			 Argument Overloading
			 ***************************/

			/* Support is included for jQuery's argument overloading: $.animate(propertyMap [, duration] [, easing] [, complete]).
			 Overloading is detected by checking for the absence of an object being passed into options. */
			/* Note: The stop/finish/pause/resume actions do not accept animation options, and are therefore excluded from this check. */
			if (!/^(stop|finish|finishAll|pause|resume)$/i.test(propertiesMap) && !$.isPlainObject(options)) {
				/* The utility function shifts all arguments one position to the right, so we adjust for that offset. */
				var startingArgumentPosition = argumentIndex + 1;

				options = {};

				/* Iterate through all options arguments */
				for (var i = startingArgumentPosition; i < arguments.length; i++) {
					/* Treat a number as a duration. Parse it out. */
					/* Note: The following RegEx will return true if passed an array with a number as its first item.
					 Thus, arrays are skipped from this check. */
					if (!Type.isArray(arguments[i]) && (/^(fast|normal|slow)$/i.test(arguments[i]) || /^\d/.test(arguments[i]))) {
						options.duration = arguments[i];
						/* Treat strings and arrays as easings. */
					} else if (Type.isString(arguments[i]) || Type.isArray(arguments[i])) {
						options.easing = arguments[i];
						/* Treat a function as a complete callback. */
					} else if (Type.isFunction(arguments[i])) {
						options.complete = arguments[i];
					}
				}
			}

			/*********************
			 Action Detection
			 *********************/

			/* Velocity's behavior is categorized into "actions": Elements can either be specially scrolled into view,
			 or they can be started, stopped, paused, resumed, or reversed . If a literal or referenced properties map is passed in as Velocity's
			 first argument, the associated action is "start". Alternatively, "scroll", "reverse", "pause", "resume" or "stop" can be passed in 
			 instead of a properties map. */
			var action;

			switch (propertiesMap) {
				case "scroll":
					action = "scroll";
					break;

				case "reverse":
					action = "reverse";
					break;

				case "pause":

					/*******************
					 Action: Pause
					 *******************/

					var currentTime = (new Date()).getTime();

					/* Handle delay timers */
					$.each(elements, function(i, element) {
						pauseDelayOnElement(element, currentTime);
					});

					/* Pause and Resume are call-wide (not on a per element basis). Thus, calling pause or resume on a 
					 single element will cause any calls that containt tweens for that element to be paused/resumed
					 as well. */

					/* Iterate through all calls and pause any that contain any of our elements */
					$.each(Velocity.State.calls, function(i, activeCall) {

						var found = false;
						/* Inactive calls are set to false by the logic inside completeCall(). Skip them. */
						if (activeCall) {
							/* Iterate through the active call's targeted elements. */
							$.each(activeCall[1], function(k, activeElement) {
								var queueName = (options === undefined) ? "" : options;

								if (queueName !== true && (activeCall[2].queue !== queueName) && !(options === undefined && activeCall[2].queue === false)) {
									return true;
								}

								/* Iterate through the calls targeted by the stop command. */
								$.each(elements, function(l, element) {
									/* Check that this call was applied to the target element. */
									if (element === activeElement) {

										/* Set call to paused */
										activeCall[5] = {
											resume: false
										};

										/* Once we match an element, we can bounce out to the next call entirely */
										found = true;
										return false;
									}
								});

								/* Proceed to check next call if we have already matched */
								if (found) {
									return false;
								}
							});
						}

					});

					/* Since pause creates no new tweens, exit out of Velocity. */
					return getChain();

				case "resume":

					/*******************
					 Action: Resume
					 *******************/

					/* Handle delay timers */
					$.each(elements, function(i, element) {
						resumeDelayOnElement(element, currentTime);
					});

					/* Pause and Resume are call-wide (not on a per elemnt basis). Thus, calling pause or resume on a 
					 single element will cause any calls that containt tweens for that element to be paused/resumed
					 as well. */

					/* Iterate through all calls and pause any that contain any of our elements */
					$.each(Velocity.State.calls, function(i, activeCall) {
						var found = false;
						/* Inactive calls are set to false by the logic inside completeCall(). Skip them. */
						if (activeCall) {
							/* Iterate through the active call's targeted elements. */
							$.each(activeCall[1], function(k, activeElement) {
								var queueName = (options === undefined) ? "" : options;

								if (queueName !== true && (activeCall[2].queue !== queueName) && !(options === undefined && activeCall[2].queue === false)) {
									return true;
								}

								/* Skip any calls that have never been paused */
								if (!activeCall[5]) {
									return true;
								}

								/* Iterate through the calls targeted by the stop command. */
								$.each(elements, function(l, element) {
									/* Check that this call was applied to the target element. */
									if (element === activeElement) {

										/* Flag a pause object to be resumed, which will occur during the next tick. In
										 addition, the pause object will at that time be deleted */
										activeCall[5].resume = true;

										/* Once we match an element, we can bounce out to the next call entirely */
										found = true;
										return false;
									}
								});

								/* Proceed to check next call if we have already matched */
								if (found) {
									return false;
								}
							});
						}

					});

					/* Since resume creates no new tweens, exit out of Velocity. */
					return getChain();

				case "finish":
				case "finishAll":
				case "stop":
					/*******************
					 Action: Stop
					 *******************/

					/* Clear the currently-active delay on each targeted element. */
					$.each(elements, function(i, element) {
						if (Data(element) && Data(element).delayTimer) {
							/* Stop the timer from triggering its cached next() function. */
							clearTimeout(Data(element).delayTimer.setTimeout);

							/* Manually call the next() function so that the subsequent queue items can progress. */
							if (Data(element).delayTimer.next) {
								Data(element).delayTimer.next();
							}

							delete Data(element).delayTimer;
						}

						/* If we want to finish everything in the queue, we have to iterate through it
						 and call each function. This will make them active calls below, which will
						 cause them to be applied via the duration setting. */
						if (propertiesMap === "finishAll" && (options === true || Type.isString(options))) {
							/* Iterate through the items in the element's queue. */
							$.each($.queue(element, Type.isString(options) ? options : ""), function(_, item) {
								/* The queue array can contain an "inprogress" string, which we skip. */
								if (Type.isFunction(item)) {
									item();
								}
							});

							/* Clearing the $.queue() array is achieved by resetting it to []. */
							$.queue(element, Type.isString(options) ? options : "", []);
						}
					});

					var callsToStop = [];

					/* When the stop action is triggered, the elements' currently active call is immediately stopped. The active call might have
					 been applied to multiple elements, in which case all of the call's elements will be stopped. When an element
					 is stopped, the next item in its animation queue is immediately triggered. */
					/* An additional argument may be passed in to clear an element's remaining queued calls. Either true (which defaults to the "fx" queue)
					 or a custom queue string can be passed in. */
					/* Note: The stop command runs prior to Velocity's Queueing phase since its behavior is intended to take effect *immediately*,
					 regardless of the element's current queue state. */

					/* Iterate through every active call. */
					$.each(Velocity.State.calls, function(i, activeCall) {
						/* Inactive calls are set to false by the logic inside completeCall(). Skip them. */
						if (activeCall) {
							/* Iterate through the active call's targeted elements. */
							$.each(activeCall[1], function(k, activeElement) {
								/* If true was passed in as a secondary argument, clear absolutely all calls on this element. Otherwise, only
								 clear calls associated with the relevant queue. */
								/* Call stopping logic works as follows:
								 - options === true --> stop current default queue calls (and queue:false calls), including remaining queued ones.
								 - options === undefined --> stop current queue:"" call and all queue:false calls.
								 - options === false --> stop only queue:false calls.
								 - options === "custom" --> stop current queue:"custom" call, including remaining queued ones (there is no functionality to only clear the currently-running queue:"custom" call). */
								var queueName = (options === undefined) ? "" : options;

								if (queueName !== true && (activeCall[2].queue !== queueName) && !(options === undefined && activeCall[2].queue === false)) {
									return true;
								}

								/* Iterate through the calls targeted by the stop command. */
								$.each(elements, function(l, element) {
									/* Check that this call was applied to the target element. */
									if (element === activeElement) {
										/* Optionally clear the remaining queued calls. If we're doing "finishAll" this won't find anything,
										 due to the queue-clearing above. */
										if (options === true || Type.isString(options)) {
											/* Iterate through the items in the element's queue. */
											$.each($.queue(element, Type.isString(options) ? options : ""), function(_, item) {
												/* The queue array can contain an "inprogress" string, which we skip. */
												if (Type.isFunction(item)) {
													/* Pass the item's callback a flag indicating that we want to abort from the queue call.
													 (Specifically, the queue will resolve the call's associated promise then abort.)  */
													item(null, true);
												}
											});

											/* Clearing the $.queue() array is achieved by resetting it to []. */
											$.queue(element, Type.isString(options) ? options : "", []);
										}

										if (propertiesMap === "stop") {
											/* Since "reverse" uses cached start values (the previous call's endValues), these values must be
											 changed to reflect the final value that the elements were actually tweened to. */
											/* Note: If only queue:false/queue:"custom" animations are currently running on an element, it won't have a tweensContainer
											 object. Also, queue:false/queue:"custom" animations can't be reversed. */
											var data = Data(element);
											if (data && data.tweensContainer && (queueName === true || queueName === "")) {
												$.each(data.tweensContainer, function(m, activeTween) {
													activeTween.endValue = activeTween.currentValue;
												});
											}

											callsToStop.push(i);
										} else if (propertiesMap === "finish" || propertiesMap === "finishAll") {
											/* To get active tweens to finish immediately, we forcefully shorten their durations to 1ms so that
											 they finish upon the next rAf tick then proceed with normal call completion logic. */
											activeCall[2].duration = 1;
										}
									}
								});
							});
						}
					});

					/* Prematurely call completeCall() on each matched active call. Pass an additional flag for "stop" to indicate
					 that the complete callback and display:none setting should be skipped since we're completing prematurely. */
					if (propertiesMap === "stop") {
						$.each(callsToStop, function(i, j) {
							completeCall(j, true);
						});

						if (promiseData.promise) {
							/* Immediately resolve the promise associated with this stop call since stop runs synchronously. */
							promiseData.resolver(elements);
						}
					}

					/* Since we're stopping, and not proceeding with queueing, exit out of Velocity. */
					return getChain();

				default:
					/* Treat a non-empty plain object as a literal properties map. */
					if ($.isPlainObject(propertiesMap) && !Type.isEmptyObject(propertiesMap)) {
						action = "start";

						/****************
						 Redirects
						 ****************/

						/* Check if a string matches a registered redirect (see Redirects above). */
					} else if (Type.isString(propertiesMap) && Velocity.Redirects[propertiesMap]) {
						opts = $.extend({}, options);

						var durationOriginal = opts.duration,
								delayOriginal = opts.delay || 0;

						/* If the backwards option was passed in, reverse the element set so that elements animate from the last to the first. */
						if (opts.backwards === true) {
							elements = $.extend(true, [], elements).reverse();
						}

						/* Individually trigger the redirect for each element in the set to prevent users from having to handle iteration logic in their redirect. */
						$.each(elements, function(elementIndex, element) {
							/* If the stagger option was passed in, successively delay each element by the stagger value (in ms). Retain the original delay value. */
							if (parseFloat(opts.stagger)) {
								opts.delay = delayOriginal + (parseFloat(opts.stagger) * elementIndex);
							} else if (Type.isFunction(opts.stagger)) {
								opts.delay = delayOriginal + opts.stagger.call(element, elementIndex, elementsLength);
							}

							/* If the drag option was passed in, successively increase/decrease (depending on the presense of opts.backwards)
							 the duration of each element's animation, using floors to prevent producing very short durations. */
							if (opts.drag) {
								/* Default the duration of UI pack effects (callouts and transitions) to 1000ms instead of the usual default duration of 400ms. */
								opts.duration = parseFloat(durationOriginal) || (/^(callout|transition)/.test(propertiesMap) ? 1000 : DURATION_DEFAULT);

								/* For each element, take the greater duration of: A) animation completion percentage relative to the original duration,
								 B) 75% of the original duration, or C) a 200ms fallback (in case duration is already set to a low value).
								 The end result is a baseline of 75% of the redirect's duration that increases/decreases as the end of the element set is approached. */
								opts.duration = Math.max(opts.duration * (opts.backwards ? 1 - elementIndex / elementsLength : (elementIndex + 1) / elementsLength), opts.duration * 0.75, 200);
							}

							/* Pass in the call's opts object so that the redirect can optionally extend it. It defaults to an empty object instead of null to
							 reduce the opts checking logic required inside the redirect. */
							Velocity.Redirects[propertiesMap].call(element, element, opts || {}, elementIndex, elementsLength, elements, promiseData.promise ? promiseData : undefined);
						});

						/* Since the animation logic resides within the redirect's own code, abort the remainder of this call.
						 (The performance overhead up to this point is virtually non-existant.) */
						/* Note: The jQuery call chain is kept intact by returning the complete element set. */
						return getChain();
					} else {
						var abortError = "Velocity: First argument (" + propertiesMap + ") was not a property map, a known action, or a registered redirect. Aborting.";

						if (promiseData.promise) {
							promiseData.rejecter(new Error(abortError));
						} else if (window.console) {
							console.log(abortError);
						}

						return getChain();
					}
			}

			/**************************
			 Call-Wide Variables
			 **************************/

			/* A container for CSS unit conversion ratios (e.g. %, rem, and em ==> px) that is used to cache ratios across all elements
			 being animated in a single Velocity call. Calculating unit ratios necessitates DOM querying and updating, and is therefore
			 avoided (via caching) wherever possible. This container is call-wide instead of page-wide to avoid the risk of using stale
			 conversion metrics across Velocity animations that are not immediately consecutively chained. */
			var callUnitConversionData = {
				lastParent: null,
				lastPosition: null,
				lastFontSize: null,
				lastPercentToPxWidth: null,
				lastPercentToPxHeight: null,
				lastEmToPx: null,
				remToPx: null,
				vwToPx: null,
				vhToPx: null
			};

			/* A container for all the ensuing tween data and metadata associated with this call. This container gets pushed to the page-wide
			 Velocity.State.calls array that is processed during animation ticking. */
			var call = [];

			/************************
			 Element Processing
			 ************************/

			/* Element processing consists of three parts -- data processing that cannot go stale and data processing that *can* go stale (i.e. third-party style modifications):
			 1) Pre-Queueing: Element-wide variables, including the element's data storage, are instantiated. Call options are prepared. If triggered, the Stop action is executed.
			 2) Queueing: The logic that runs once this call has reached its point of execution in the element's $.queue() stack. Most logic is placed here to avoid risking it becoming stale.
			 3) Pushing: Consolidation of the tween data followed by its push onto the global in-progress calls container.
			 `elementArrayIndex` allows passing index of the element in the original array to value functions.
			 If `elementsIndex` were used instead the index would be determined by the elements' per-element queue.
			 */
			function processElement(element, elementArrayIndex) {

				/*************************
				 Part I: Pre-Queueing
				 *************************/

				/***************************
				 Element-Wide Variables
				 ***************************/

				var /* The runtime opts object is the extension of the current call's options and Velocity's page-wide option defaults. */
						opts = $.extend({}, Velocity.defaults, options),
						/* A container for the processed data associated with each property in the propertyMap.
						 (Each property in the map produces its own "tween".) */
						tweensContainer = {},
						elementUnitConversionData;

				/******************
				 Element Init
				 ******************/

				if (Data(element) === undefined) {
					Velocity.init(element);
				}

				/******************
				 Option: Delay
				 ******************/

				/* Since queue:false doesn't respect the item's existing queue, we avoid injecting its delay here (it's set later on). */
				/* Note: Velocity rolls its own delay function since jQuery doesn't have a utility alias for $.fn.delay()
				 (and thus requires jQuery element creation, which we avoid since its overhead includes DOM querying). */
				if (parseFloat(opts.delay) && opts.queue !== false) {
					$.queue(element, opts.queue, function(next, clearQueue) {
						if (clearQueue === true) {
							/* Do not continue with animation queueing. */
							return true;
						}

						/* This is a flag used to indicate to the upcoming completeCall() function that this queue entry was initiated by Velocity. See completeCall() for further details. */
						Velocity.velocityQueueEntryFlag = true;

						/* The ensuing queue item (which is assigned to the "next" argument that $.queue() automatically passes in) will be triggered after a setTimeout delay.
						 The setTimeout is stored so that it can be subjected to clearTimeout() if this animation is prematurely stopped via Velocity's "stop" command, and
						 delayBegin/delayTime is used to ensure we can "pause" and "resume" a tween that is still mid-delay. */

						/* Temporarily store delayed elements to facilite access for global pause/resume */
						var callIndex = Velocity.State.delayedElements.count++;
						Velocity.State.delayedElements[callIndex] = element;

						var delayComplete = (function(index) {
							return function() {
								/* Clear the temporary element */
								Velocity.State.delayedElements[index] = false;

								/* Finally, issue the call */
								next();
							};
						})(callIndex);


						Data(element).delayBegin = (new Date()).getTime();
						Data(element).delay = parseFloat(opts.delay);
						Data(element).delayTimer = {
							setTimeout: setTimeout(next, parseFloat(opts.delay)),
							next: delayComplete
						};
					});
				}

				/*********************
				 Option: Duration
				 *********************/

				/* Support for jQuery's named durations. */
				switch (opts.duration.toString().toLowerCase()) {
					case "fast":
						opts.duration = 200;
						break;

					case "normal":
						opts.duration = DURATION_DEFAULT;
						break;

					case "slow":
						opts.duration = 600;
						break;

					default:
						/* Remove the potential "ms" suffix and default to 1 if the user is attempting to set a duration of 0 (in order to produce an immediate style change). */
						opts.duration = parseFloat(opts.duration) || 1;
				}

				/************************
				 Global Option: Mock
				 ************************/

				if (Velocity.mock !== false) {
					/* In mock mode, all animations are forced to 1ms so that they occur immediately upon the next rAF tick.
					 Alternatively, a multiplier can be passed in to time remap all delays and durations. */
					if (Velocity.mock === true) {
						opts.duration = opts.delay = 1;
					} else {
						opts.duration *= parseFloat(Velocity.mock) || 1;
						opts.delay *= parseFloat(Velocity.mock) || 1;
					}
				}

				/*******************
				 Option: Easing
				 *******************/

				opts.easing = getEasing(opts.easing, opts.duration);

				/**********************
				 Option: Callbacks
				 **********************/

				/* Callbacks must functions. Otherwise, default to null. */
				if (opts.begin && !Type.isFunction(opts.begin)) {
					opts.begin = null;
				}

				if (opts.progress && !Type.isFunction(opts.progress)) {
					opts.progress = null;
				}

				if (opts.complete && !Type.isFunction(opts.complete)) {
					opts.complete = null;
				}

				/*********************************
				 Option: Display & Visibility
				 *********************************/

				/* Refer to Velocity's documentation (VelocityJS.org/#displayAndVisibility) for a description of the display and visibility options' behavior. */
				/* Note: We strictly check for undefined instead of falsiness because display accepts an empty string value. */
				if (opts.display !== undefined && opts.display !== null) {
					opts.display = opts.display.toString().toLowerCase();

					/* Users can pass in a special "auto" value to instruct Velocity to set the element to its default display value. */
					if (opts.display === "auto") {
						opts.display = Velocity.CSS.Values.getDisplayType(element);
					}
				}

				if (opts.visibility !== undefined && opts.visibility !== null) {
					opts.visibility = opts.visibility.toString().toLowerCase();
				}

				/**********************
				 Option: mobileHA
				 **********************/

				/* When set to true, and if this is a mobile device, mobileHA automatically enables hardware acceleration (via a null transform hack)
				 on animating elements. HA is removed from the element at the completion of its animation. */
				/* Note: Android Gingerbread doesn't support HA. If a null transform hack (mobileHA) is in fact set, it will prevent other tranform subproperties from taking effect. */
				/* Note: You can read more about the use of mobileHA in Velocity's documentation: VelocityJS.org/#mobileHA. */
				opts.mobileHA = (opts.mobileHA && Velocity.State.isMobile && !Velocity.State.isGingerbread);

				/***********************
				 Part II: Queueing
				 ***********************/

				/* When a set of elements is targeted by a Velocity call, the set is broken up and each element has the current Velocity call individually queued onto it.
				 In this way, each element's existing queue is respected; some elements may already be animating and accordingly should not have this current Velocity call triggered immediately. */
				/* In each queue, tween data is processed for each animating property then pushed onto the call-wide calls array. When the last element in the set has had its tweens processed,
				 the call array is pushed to Velocity.State.calls for live processing by the requestAnimationFrame tick. */
				function buildQueue(next) {
					var data, lastTweensContainer;

					/*******************
					 Option: Begin
					 *******************/

					/* The begin callback is fired once per call -- not once per elemenet -- and is passed the full raw DOM element set as both its context and its first argument. */
					if (opts.begin && elementsIndex === 0) {
						/* We throw callbacks in a setTimeout so that thrown errors don't halt the execution of Velocity itself. */
						try {
							opts.begin.call(elements, elements);
						} catch (error) {
							setTimeout(function() {
								throw error;
							}, 1);
						}
					}

					/*****************************************
					 Tween Data Construction (for Scroll)
					 *****************************************/

					/* Note: In order to be subjected to chaining and animation options, scroll's tweening is routed through Velocity as if it were a standard CSS property animation. */
					if (action === "scroll") {
						/* The scroll action uniquely takes an optional "offset" option -- specified in pixels -- that offsets the targeted scroll position. */
						var scrollDirection = (/^x$/i.test(opts.axis) ? "Left" : "Top"),
								scrollOffset = parseFloat(opts.offset) || 0,
								scrollPositionCurrent,
								scrollPositionCurrentAlternate,
								scrollPositionEnd;

						/* Scroll also uniquely takes an optional "container" option, which indicates the parent element that should be scrolled --
						 as opposed to the browser window itself. This is useful for scrolling toward an element that's inside an overflowing parent element. */
						if (opts.container) {
							/* Ensure that either a jQuery object or a raw DOM element was passed in. */
							if (Type.isWrapped(opts.container) || Type.isNode(opts.container)) {
								/* Extract the raw DOM element from the jQuery wrapper. */
								opts.container = opts.container[0] || opts.container;
								/* Note: Unlike other properties in Velocity, the browser's scroll position is never cached since it so frequently changes
								 (due to the user's natural interaction with the page). */
								scrollPositionCurrent = opts.container["scroll" + scrollDirection]; /* GET */

								/* $.position() values are relative to the container's currently viewable area (without taking into account the container's true dimensions
								 -- say, for example, if the container was not overflowing). Thus, the scroll end value is the sum of the child element's position *and*
								 the scroll container's current scroll position. */
								scrollPositionEnd = (scrollPositionCurrent + $(element).position()[scrollDirection.toLowerCase()]) + scrollOffset; /* GET */
								/* If a value other than a jQuery object or a raw DOM element was passed in, default to null so that this option is ignored. */
							} else {
								opts.container = null;
							}
						} else {
							/* If the window itself is being scrolled -- not a containing element -- perform a live scroll position lookup using
							 the appropriate cached property names (which differ based on browser type). */
							scrollPositionCurrent = Velocity.State.scrollAnchor[Velocity.State["scrollProperty" + scrollDirection]]; /* GET */
							/* When scrolling the browser window, cache the alternate axis's current value since window.scrollTo() doesn't let us change only one value at a time. */
							scrollPositionCurrentAlternate = Velocity.State.scrollAnchor[Velocity.State["scrollProperty" + (scrollDirection === "Left" ? "Top" : "Left")]]; /* GET */

							/* Unlike $.position(), $.offset() values are relative to the browser window's true dimensions -- not merely its currently viewable area --
							 and therefore end values do not need to be compounded onto current values. */
							scrollPositionEnd = $(element).offset()[scrollDirection.toLowerCase()] + scrollOffset; /* GET */
						}

						/* Since there's only one format that scroll's associated tweensContainer can take, we create it manually. */
						tweensContainer = {
							scroll: {
								rootPropertyValue: false,
								startValue: scrollPositionCurrent,
								currentValue: scrollPositionCurrent,
								endValue: scrollPositionEnd,
								unitType: "",
								easing: opts.easing,
								scrollData: {
									container: opts.container,
									direction: scrollDirection,
									alternateValue: scrollPositionCurrentAlternate
								}
							},
							element: element
						};

						if (Velocity.debug) {
							console.log("tweensContainer (scroll): ", tweensContainer.scroll, element);
						}

						/******************************************
						 Tween Data Construction (for Reverse)
						 ******************************************/

						/* Reverse acts like a "start" action in that a property map is animated toward. The only difference is
						 that the property map used for reverse is the inverse of the map used in the previous call. Thus, we manipulate
						 the previous call to construct our new map: use the previous map's end values as our new map's start values. Copy over all other data. */
						/* Note: Reverse can be directly called via the "reverse" parameter, or it can be indirectly triggered via the loop option. (Loops are composed of multiple reverses.) */
						/* Note: Reverse calls do not need to be consecutively chained onto a currently-animating element in order to operate on cached values;
						 there is no harm to reverse being called on a potentially stale data cache since reverse's behavior is simply defined
						 as reverting to the element's values as they were prior to the previous *Velocity* call. */
					} else if (action === "reverse") {
						data = Data(element);

						/* Abort if there is no prior animation data to reverse to. */
						if (!data) {
							return;
						}

						if (!data.tweensContainer) {
							/* Dequeue the element so that this queue entry releases itself immediately, allowing subsequent queue entries to run. */
							$.dequeue(element, opts.queue);

							return;
						} else {
							/*********************
							 Options Parsing
							 *********************/

							/* If the element was hidden via the display option in the previous call,
							 revert display to "auto" prior to reversal so that the element is visible again. */
							if (data.opts.display === "none") {
								data.opts.display = "auto";
							}

							if (data.opts.visibility === "hidden") {
								data.opts.visibility = "visible";
							}

							/* If the loop option was set in the previous call, disable it so that "reverse" calls aren't recursively generated.
							 Further, remove the previous call's callback options; typically, users do not want these to be refired. */
							data.opts.loop = false;
							data.opts.begin = null;
							data.opts.complete = null;

							/* Since we're extending an opts object that has already been extended with the defaults options object,
							 we remove non-explicitly-defined properties that are auto-assigned values. */
							if (!options.easing) {
								delete opts.easing;
							}

							if (!options.duration) {
								delete opts.duration;
							}

							/* The opts object used for reversal is an extension of the options object optionally passed into this
							 reverse call plus the options used in the previous Velocity call. */
							opts = $.extend({}, data.opts, opts);

							/*************************************
							 Tweens Container Reconstruction
							 *************************************/

							/* Create a deepy copy (indicated via the true flag) of the previous call's tweensContainer. */
							lastTweensContainer = $.extend(true, {}, data ? data.tweensContainer : null);

							/* Manipulate the previous tweensContainer by replacing its end values and currentValues with its start values. */
							for (var lastTween in lastTweensContainer) {
								/* In addition to tween data, tweensContainers contain an element property that we ignore here. */
								if (lastTweensContainer.hasOwnProperty(lastTween) && lastTween !== "element") {
									var lastStartValue = lastTweensContainer[lastTween].startValue;

									lastTweensContainer[lastTween].startValue = lastTweensContainer[lastTween].currentValue = lastTweensContainer[lastTween].endValue;
									lastTweensContainer[lastTween].endValue = lastStartValue;

									/* Easing is the only option that embeds into the individual tween data (since it can be defined on a per-property basis).
									 Accordingly, every property's easing value must be updated when an options object is passed in with a reverse call.
									 The side effect of this extensibility is that all per-property easing values are forcefully reset to the new value. */
									if (!Type.isEmptyObject(options)) {
										lastTweensContainer[lastTween].easing = opts.easing;
									}

									if (Velocity.debug) {
										console.log("reverse tweensContainer (" + lastTween + "): " + JSON.stringify(lastTweensContainer[lastTween]), element);
									}
								}
							}

							tweensContainer = lastTweensContainer;
						}

						/*****************************************
						 Tween Data Construction (for Start)
						 *****************************************/

					} else if (action === "start") {

						/*************************
						 Value Transferring
						 *************************/

						/* If this queue entry follows a previous Velocity-initiated queue entry *and* if this entry was created
						 while the element was in the process of being animated by Velocity, then this current call is safe to use
						 the end values from the prior call as its start values. Velocity attempts to perform this value transfer
						 process whenever possible in order to avoid requerying the DOM. */
						/* If values aren't transferred from a prior call and start values were not forcefed by the user (more on this below),
						 then the DOM is queried for the element's current values as a last resort. */
						/* Note: Conversely, animation reversal (and looping) *always* perform inter-call value transfers; they never requery the DOM. */

						data = Data(element);

						/* The per-element isAnimating flag is used to indicate whether it's safe (i.e. the data isn't stale)
						 to transfer over end values to use as start values. If it's set to true and there is a previous
						 Velocity call to pull values from, do so. */
						if (data && data.tweensContainer && data.isAnimating === true) {
							lastTweensContainer = data.tweensContainer;
						}

						/***************************
						 Tween Data Calculation
						 ***************************/

						/* This function parses property data and defaults endValue, easing, and startValue as appropriate. */
						/* Property map values can either take the form of 1) a single value representing the end value,
						 or 2) an array in the form of [ endValue, [, easing] [, startValue] ].
						 The optional third parameter is a forcefed startValue to be used instead of querying the DOM for
						 the element's current value. Read Velocity's docmentation to learn more about forcefeeding: VelocityJS.org/#forcefeeding */
						var parsePropertyValue = function(valueData, skipResolvingEasing) {
							var endValue, easing, startValue;

							/* If we have a function as the main argument then resolve it first, in case it returns an array that needs to be split */
							if (Type.isFunction(valueData)) {
								valueData = valueData.call(element, elementArrayIndex, elementsLength);
							}

							/* Handle the array format, which can be structured as one of three potential overloads:
							 A) [ endValue, easing, startValue ], B) [ endValue, easing ], or C) [ endValue, startValue ] */
							if (Type.isArray(valueData)) {
								/* endValue is always the first item in the array. Don't bother validating endValue's value now
								 since the ensuing property cycling logic does that. */
								endValue = valueData[0];

								/* Two-item array format: If the second item is a number, function, or hex string, treat it as a
								 start value since easings can only be non-hex strings or arrays. */
								if ((!Type.isArray(valueData[1]) && /^[\d-]/.test(valueData[1])) || Type.isFunction(valueData[1]) || CSS.RegEx.isHex.test(valueData[1])) {
									startValue = valueData[1];
									/* Two or three-item array: If the second item is a non-hex string easing name or an array, treat it as an easing. */
								} else if ((Type.isString(valueData[1]) && !CSS.RegEx.isHex.test(valueData[1]) && Velocity.Easings[valueData[1]]) || Type.isArray(valueData[1])) {
									easing = skipResolvingEasing ? valueData[1] : getEasing(valueData[1], opts.duration);

									/* Don't bother validating startValue's value now since the ensuing property cycling logic inherently does that. */
									startValue = valueData[2];
								} else {
									startValue = valueData[1] || valueData[2];
								}
								/* Handle the single-value format. */
							} else {
								endValue = valueData;
							}

							/* Default to the call's easing if a per-property easing type was not defined. */
							if (!skipResolvingEasing) {
								easing = easing || opts.easing;
							}

							/* If functions were passed in as values, pass the function the current element as its context,
							 plus the element's index and the element set's size as arguments. Then, assign the returned value. */
							if (Type.isFunction(endValue)) {
								endValue = endValue.call(element, elementArrayIndex, elementsLength);
							}

							if (Type.isFunction(startValue)) {
								startValue = startValue.call(element, elementArrayIndex, elementsLength);
							}

							/* Allow startValue to be left as undefined to indicate to the ensuing code that its value was not forcefed. */
							return [endValue || 0, easing, startValue];
						};

						var fixPropertyValue = function(property, valueData) {
							/* In case this property is a hook, there are circumstances where we will intend to work on the hook's root property and not the hooked subproperty. */
							var rootProperty = CSS.Hooks.getRoot(property),
									rootPropertyValue = false,
									/* Parse out endValue, easing, and startValue from the property's data. */
									endValue = valueData[0],
									easing = valueData[1],
									startValue = valueData[2],
									pattern;

							/**************************
							 Start Value Sourcing
							 **************************/

							/* Other than for the dummy tween property, properties that are not supported by the browser (and do not have an associated normalization) will
							 inherently produce no style changes when set, so they are skipped in order to decrease animation tick overhead.
							 Property support is determined via prefixCheck(), which returns a false flag when no supported is detected. */
							/* Note: Since SVG elements have some of their properties directly applied as HTML attributes,
							 there is no way to check for their explicit browser support, and so we skip skip this check for them. */
							if ((!data || !data.isSVG) && rootProperty !== "tween" && CSS.Names.prefixCheck(rootProperty)[1] === false && CSS.Normalizations.registered[rootProperty] === undefined) {
								if (Velocity.debug) {
									console.log("Skipping [" + rootProperty + "] due to a lack of browser support.");
								}
								return;
							}

							/* If the display option is being set to a non-"none" (e.g. "block") and opacity (filter on IE<=8) is being
							 animated to an endValue of non-zero, the user's intention is to fade in from invisible, thus we forcefeed opacity
							 a startValue of 0 if its startValue hasn't already been sourced by value transferring or prior forcefeeding. */
							if (((opts.display !== undefined && opts.display !== null && opts.display !== "none") || (opts.visibility !== undefined && opts.visibility !== "hidden")) && /opacity|filter/.test(property) && !startValue && endValue !== 0) {
								startValue = 0;
							}

							/* If values have been transferred from the previous Velocity call, extract the endValue and rootPropertyValue
							 for all of the current call's properties that were *also* animated in the previous call. */
							/* Note: Value transferring can optionally be disabled by the user via the _cacheValues option. */
							if (opts._cacheValues && lastTweensContainer && lastTweensContainer[property]) {
								if (startValue === undefined) {
									startValue = lastTweensContainer[property].endValue + lastTweensContainer[property].unitType;
								}

								/* The previous call's rootPropertyValue is extracted from the element's data cache since that's the
								 instance of rootPropertyValue that gets freshly updated by the tweening process, whereas the rootPropertyValue
								 attached to the incoming lastTweensContainer is equal to the root property's value prior to any tweening. */
								rootPropertyValue = data.rootPropertyValueCache[rootProperty];
								/* If values were not transferred from a previous Velocity call, query the DOM as needed. */
							} else {
								/* Handle hooked properties. */
								if (CSS.Hooks.registered[property]) {
									if (startValue === undefined) {
										rootPropertyValue = CSS.getPropertyValue(element, rootProperty); /* GET */
										/* Note: The following getPropertyValue() call does not actually trigger a DOM query;
										 getPropertyValue() will extract the hook from rootPropertyValue. */
										startValue = CSS.getPropertyValue(element, property, rootPropertyValue);
										/* If startValue is already defined via forcefeeding, do not query the DOM for the root property's value;
										 just grab rootProperty's zero-value template from CSS.Hooks. This overwrites the element's actual
										 root property value (if one is set), but this is acceptable since the primary reason users forcefeed is
										 to avoid DOM queries, and thus we likewise avoid querying the DOM for the root property's value. */
									} else {
										/* Grab this hook's zero-value template, e.g. "0px 0px 0px black". */
										rootPropertyValue = CSS.Hooks.templates[rootProperty][1];
									}
									/* Handle non-hooked properties that haven't already been defined via forcefeeding. */
								} else if (startValue === undefined) {
									startValue = CSS.getPropertyValue(element, property); /* GET */
								}
							}

							/**************************
							 Value Data Extraction
							 **************************/

							var separatedValue,
									endValueUnitType,
									startValueUnitType,
									operator = false;

							/* Separates a property value into its numeric value and its unit type. */
							var separateValue = function(property, value) {
								var unitType,
										numericValue;

								numericValue = (value || "0")
										.toString()
										.toLowerCase()
										/* Match the unit type at the end of the value. */
										.replace(/[%A-z]+$/, function(match) {
											/* Grab the unit type. */
											unitType = match;

											/* Strip the unit type off of value. */
											return "";
										});

								/* If no unit type was supplied, assign one that is appropriate for this property (e.g. "deg" for rotateZ or "px" for width). */
								if (!unitType) {
									unitType = CSS.Values.getUnitType(property);
								}

								return [numericValue, unitType];
							};

							if (startValue !== endValue && Type.isString(startValue) && Type.isString(endValue)) {
								pattern = "";
								var iStart = 0, // index in startValue
										iEnd = 0, // index in endValue
										aStart = [], // array of startValue numbers
										aEnd = [], // array of endValue numbers
										inCalc = 0, // Keep track of being inside a "calc()" so we don't duplicate it
										inRGB = 0, // Keep track of being inside an RGB as we can't use fractional values
										inRGBA = 0; // Keep track of being inside an RGBA as we must pass fractional for the alpha channel

								startValue = CSS.Hooks.fixColors(startValue);
								endValue = CSS.Hooks.fixColors(endValue);
								while (iStart < startValue.length && iEnd < endValue.length) {
									var cStart = startValue[iStart],
											cEnd = endValue[iEnd];

									if (/[\d\.-]/.test(cStart) && /[\d\.-]/.test(cEnd)) {
										var tStart = cStart, // temporary character buffer
												tEnd = cEnd, // temporary character buffer
												dotStart = ".", // Make sure we can only ever match a single dot in a decimal
												dotEnd = "."; // Make sure we can only ever match a single dot in a decimal

										while (++iStart < startValue.length) {
											cStart = startValue[iStart];
											if (cStart === dotStart) {
												dotStart = ".."; // Can never match two characters
											} else if (!/\d/.test(cStart)) {
												break;
											}
											tStart += cStart;
										}
										while (++iEnd < endValue.length) {
											cEnd = endValue[iEnd];
											if (cEnd === dotEnd) {
												dotEnd = ".."; // Can never match two characters
											} else if (!/\d/.test(cEnd)) {
												break;
											}
											tEnd += cEnd;
										}
										var uStart = CSS.Hooks.getUnit(startValue, iStart), // temporary unit type
												uEnd = CSS.Hooks.getUnit(endValue, iEnd); // temporary unit type

										iStart += uStart.length;
										iEnd += uEnd.length;
										if (uStart === uEnd) {
											// Same units
											if (tStart === tEnd) {
												// Same numbers, so just copy over
												pattern += tStart + uStart;
											} else {
												// Different numbers, so store them
												pattern += "{" + aStart.length + (inRGB ? "!" : "") + "}" + uStart;
												aStart.push(parseFloat(tStart));
												aEnd.push(parseFloat(tEnd));
											}
										} else {
											// Different units, so put into a "calc(from + to)" and animate each side to/from zero
											var nStart = parseFloat(tStart),
													nEnd = parseFloat(tEnd);

											pattern += (inCalc < 5 ? "calc" : "") + "("
													+ (nStart ? "{" + aStart.length + (inRGB ? "!" : "") + "}" : "0") + uStart
													+ " + "
													+ (nEnd ? "{" + (aStart.length + (nStart ? 1 : 0)) + (inRGB ? "!" : "") + "}" : "0") + uEnd
													+ ")";
											if (nStart) {
												aStart.push(nStart);
												aEnd.push(0);
											}
											if (nEnd) {
												aStart.push(0);
												aEnd.push(nEnd);
											}
										}
									} else if (cStart === cEnd) {
										pattern += cStart;
										iStart++;
										iEnd++;
										// Keep track of being inside a calc()
										if (inCalc === 0 && cStart === "c"
												|| inCalc === 1 && cStart === "a"
												|| inCalc === 2 && cStart === "l"
												|| inCalc === 3 && cStart === "c"
												|| inCalc >= 4 && cStart === "("
												) {
											inCalc++;
										} else if ((inCalc && inCalc < 5)
												|| inCalc >= 4 && cStart === ")" && --inCalc < 5) {
											inCalc = 0;
										}
										// Keep track of being inside an rgb() / rgba()
										if (inRGB === 0 && cStart === "r"
												|| inRGB === 1 && cStart === "g"
												|| inRGB === 2 && cStart === "b"
												|| inRGB === 3 && cStart === "a"
												|| inRGB >= 3 && cStart === "("
												) {
											if (inRGB === 3 && cStart === "a") {
												inRGBA = 1;
											}
											inRGB++;
										} else if (inRGBA && cStart === ",") {
											if (++inRGBA > 3) {
												inRGB = inRGBA = 0;
											}
										} else if ((inRGBA && inRGB < (inRGBA ? 5 : 4))
												|| inRGB >= (inRGBA ? 4 : 3) && cStart === ")" && --inRGB < (inRGBA ? 5 : 4)) {
											inRGB = inRGBA = 0;
										}
									} else {
										inCalc = 0;
										// TODO: changing units, fixing colours
										break;
									}
								}
								if (iStart !== startValue.length || iEnd !== endValue.length) {
									if (Velocity.debug) {
										console.error("Trying to pattern match mis-matched strings [\"" + endValue + "\", \"" + startValue + "\"]");
									}
									pattern = undefined;
								}
								if (pattern) {
									if (aStart.length) {
										if (Velocity.debug) {
											console.log("Pattern found \"" + pattern + "\" -> ", aStart, aEnd, "[" + startValue + "," + endValue + "]");
										}
										startValue = aStart;
										endValue = aEnd;
										endValueUnitType = startValueUnitType = "";
									} else {
										pattern = undefined;
									}
								}
							}

							if (!pattern) {
								/* Separate startValue. */
								separatedValue = separateValue(property, startValue);
								startValue = separatedValue[0];
								startValueUnitType = separatedValue[1];

								/* Separate endValue, and extract a value operator (e.g. "+=", "-=") if one exists. */
								separatedValue = separateValue(property, endValue);
								endValue = separatedValue[0].replace(/^([+-\/*])=/, function(match, subMatch) {
									operator = subMatch;

									/* Strip the operator off of the value. */
									return "";
								});
								endValueUnitType = separatedValue[1];

								/* Parse float values from endValue and startValue. Default to 0 if NaN is returned. */
								startValue = parseFloat(startValue) || 0;
								endValue = parseFloat(endValue) || 0;

								/***************************************
								 Property-Specific Value Conversion
								 ***************************************/

								/* Custom support for properties that don't actually accept the % unit type, but where pollyfilling is trivial and relatively foolproof. */
								if (endValueUnitType === "%") {
									/* A %-value fontSize/lineHeight is relative to the parent's fontSize (as opposed to the parent's dimensions),
									 which is identical to the em unit's behavior, so we piggyback off of that. */
									if (/^(fontSize|lineHeight)$/.test(property)) {
										/* Convert % into an em decimal value. */
										endValue = endValue / 100;
										endValueUnitType = "em";
										/* For scaleX and scaleY, convert the value into its decimal format and strip off the unit type. */
									} else if (/^scale/.test(property)) {
										endValue = endValue / 100;
										endValueUnitType = "";
										/* For RGB components, take the defined percentage of 255 and strip off the unit type. */
									} else if (/(Red|Green|Blue)$/i.test(property)) {
										endValue = (endValue / 100) * 255;
										endValueUnitType = "";
									}
								}
							}

							/***************************
							 Unit Ratio Calculation
							 ***************************/

							/* When queried, the browser returns (most) CSS property values in pixels. Therefore, if an endValue with a unit type of
							 %, em, or rem is animated toward, startValue must be converted from pixels into the same unit type as endValue in order
							 for value manipulation logic (increment/decrement) to proceed. Further, if the startValue was forcefed or transferred
							 from a previous call, startValue may also not be in pixels. Unit conversion logic therefore consists of two steps:
							 1) Calculating the ratio of %/em/rem/vh/vw relative to pixels
							 2) Converting startValue into the same unit of measurement as endValue based on these ratios. */
							/* Unit conversion ratios are calculated by inserting a sibling node next to the target node, copying over its position property,
							 setting values with the target unit type then comparing the returned pixel value. */
							/* Note: Even if only one of these unit types is being animated, all unit ratios are calculated at once since the overhead
							 of batching the SETs and GETs together upfront outweights the potential overhead
							 of layout thrashing caused by re-querying for uncalculated ratios for subsequently-processed properties. */
							/* Todo: Shift this logic into the calls' first tick instance so that it's synced with RAF. */
							var calculateUnitRatios = function() {

								/************************
								 Same Ratio Checks
								 ************************/

								/* The properties below are used to determine whether the element differs sufficiently from this call's
								 previously iterated element to also differ in its unit conversion ratios. If the properties match up with those
								 of the prior element, the prior element's conversion ratios are used. Like most optimizations in Velocity,
								 this is done to minimize DOM querying. */
								var sameRatioIndicators = {
									myParent: element.parentNode || document.body, /* GET */
									position: CSS.getPropertyValue(element, "position"), /* GET */
									fontSize: CSS.getPropertyValue(element, "fontSize") /* GET */
								},
										/* Determine if the same % ratio can be used. % is based on the element's position value and its parent's width and height dimensions. */
										samePercentRatio = ((sameRatioIndicators.position === callUnitConversionData.lastPosition) && (sameRatioIndicators.myParent === callUnitConversionData.lastParent)),
										/* Determine if the same em ratio can be used. em is relative to the element's fontSize. */
										sameEmRatio = (sameRatioIndicators.fontSize === callUnitConversionData.lastFontSize);

								/* Store these ratio indicators call-wide for the next element to compare against. */
								callUnitConversionData.lastParent = sameRatioIndicators.myParent;
								callUnitConversionData.lastPosition = sameRatioIndicators.position;
								callUnitConversionData.lastFontSize = sameRatioIndicators.fontSize;

								/***************************
								 Element-Specific Units
								 ***************************/

								/* Note: IE8 rounds to the nearest pixel when returning CSS values, thus we perform conversions using a measurement
								 of 100 (instead of 1) to give our ratios a precision of at least 2 decimal values. */
								var measurement = 100,
										unitRatios = {};

								if (!sameEmRatio || !samePercentRatio) {
									var dummy = data && data.isSVG ? document.createElementNS("http://www.w3.org/2000/svg", "rect") : document.createElement("div");

									Velocity.init(dummy);
									sameRatioIndicators.myParent.appendChild(dummy);

									/* To accurately and consistently calculate conversion ratios, the element's cascaded overflow and box-sizing are stripped.
									 Similarly, since width/height can be artificially constrained by their min-/max- equivalents, these are controlled for as well. */
									/* Note: Overflow must be also be controlled for per-axis since the overflow property overwrites its per-axis values. */
									$.each(["overflow", "overflowX", "overflowY"], function(i, property) {
										Velocity.CSS.setPropertyValue(dummy, property, "hidden");
									});
									Velocity.CSS.setPropertyValue(dummy, "position", sameRatioIndicators.position);
									Velocity.CSS.setPropertyValue(dummy, "fontSize", sameRatioIndicators.fontSize);
									Velocity.CSS.setPropertyValue(dummy, "boxSizing", "content-box");

									/* width and height act as our proxy properties for measuring the horizontal and vertical % ratios. */
									$.each(["minWidth", "maxWidth", "width", "minHeight", "maxHeight", "height"], function(i, property) {
										Velocity.CSS.setPropertyValue(dummy, property, measurement + "%");
									});
									/* paddingLeft arbitrarily acts as our proxy property for the em ratio. */
									Velocity.CSS.setPropertyValue(dummy, "paddingLeft", measurement + "em");

									/* Divide the returned value by the measurement to get the ratio between 1% and 1px. Default to 1 since working with 0 can produce Infinite. */
									unitRatios.percentToPxWidth = callUnitConversionData.lastPercentToPxWidth = (parseFloat(CSS.getPropertyValue(dummy, "width", null, true)) || 1) / measurement; /* GET */
									unitRatios.percentToPxHeight = callUnitConversionData.lastPercentToPxHeight = (parseFloat(CSS.getPropertyValue(dummy, "height", null, true)) || 1) / measurement; /* GET */
									unitRatios.emToPx = callUnitConversionData.lastEmToPx = (parseFloat(CSS.getPropertyValue(dummy, "paddingLeft")) || 1) / measurement; /* GET */

									sameRatioIndicators.myParent.removeChild(dummy);
								} else {
									unitRatios.emToPx = callUnitConversionData.lastEmToPx;
									unitRatios.percentToPxWidth = callUnitConversionData.lastPercentToPxWidth;
									unitRatios.percentToPxHeight = callUnitConversionData.lastPercentToPxHeight;
								}

								/***************************
								 Element-Agnostic Units
								 ***************************/

								/* Whereas % and em ratios are determined on a per-element basis, the rem unit only needs to be checked
								 once per call since it's exclusively dependant upon document.body's fontSize. If this is the first time
								 that calculateUnitRatios() is being run during this call, remToPx will still be set to its default value of null,
								 so we calculate it now. */
								if (callUnitConversionData.remToPx === null) {
									/* Default to browsers' default fontSize of 16px in the case of 0. */
									callUnitConversionData.remToPx = parseFloat(CSS.getPropertyValue(document.body, "fontSize")) || 16; /* GET */
								}

								/* Similarly, viewport units are %-relative to the window's inner dimensions. */
								if (callUnitConversionData.vwToPx === null) {
									callUnitConversionData.vwToPx = parseFloat(window.innerWidth) / 100; /* GET */
									callUnitConversionData.vhToPx = parseFloat(window.innerHeight) / 100; /* GET */
								}

								unitRatios.remToPx = callUnitConversionData.remToPx;
								unitRatios.vwToPx = callUnitConversionData.vwToPx;
								unitRatios.vhToPx = callUnitConversionData.vhToPx;

								if (Velocity.debug >= 1) {
									console.log("Unit ratios: " + JSON.stringify(unitRatios), element);
								}
								return unitRatios;
							};

							/********************
							 Unit Conversion
							 ********************/

							/* The * and / operators, which are not passed in with an associated unit, inherently use startValue's unit. Skip value and unit conversion. */
							if (/[\/*]/.test(operator)) {
								endValueUnitType = startValueUnitType;
								/* If startValue and endValue differ in unit type, convert startValue into the same unit type as endValue so that if endValueUnitType
								 is a relative unit (%, em, rem), the values set during tweening will continue to be accurately relative even if the metrics they depend
								 on are dynamically changing during the course of the animation. Conversely, if we always normalized into px and used px for setting values, the px ratio
								 would become stale if the original unit being animated toward was relative and the underlying metrics change during the animation. */
								/* Since 0 is 0 in any unit type, no conversion is necessary when startValue is 0 -- we just start at 0 with endValueUnitType. */
							} else if ((startValueUnitType !== endValueUnitType) && startValue !== 0) {
								/* Unit conversion is also skipped when endValue is 0, but *startValueUnitType* must be used for tween values to remain accurate. */
								/* Note: Skipping unit conversion here means that if endValueUnitType was originally a relative unit, the animation won't relatively
								 match the underlying metrics if they change, but this is acceptable since we're animating toward invisibility instead of toward visibility,
								 which remains past the point of the animation's completion. */
								if (endValue === 0) {
									endValueUnitType = startValueUnitType;
								} else {
									/* By this point, we cannot avoid unit conversion (it's undesirable since it causes layout thrashing).
									 If we haven't already, we trigger calculateUnitRatios(), which runs once per element per call. */
									elementUnitConversionData = elementUnitConversionData || calculateUnitRatios();

									/* The following RegEx matches CSS properties that have their % values measured relative to the x-axis. */
									/* Note: W3C spec mandates that all of margin and padding's properties (even top and bottom) are %-relative to the *width* of the parent element. */
									var axis = (/margin|padding|left|right|width|text|word|letter/i.test(property) || /X$/.test(property) || property === "x") ? "x" : "y";

									/* In order to avoid generating n^2 bespoke conversion functions, unit conversion is a two-step process:
									 1) Convert startValue into pixels. 2) Convert this new pixel value into endValue's unit type. */
									switch (startValueUnitType) {
										case "%":
											/* Note: translateX and translateY are the only properties that are %-relative to an element's own dimensions -- not its parent's dimensions.
											 Velocity does not include a special conversion process to account for this behavior. Therefore, animating translateX/Y from a % value
											 to a non-% value will produce an incorrect start value. Fortunately, this sort of cross-unit conversion is rarely done by users in practice. */
											startValue *= (axis === "x" ? elementUnitConversionData.percentToPxWidth : elementUnitConversionData.percentToPxHeight);
											break;

										case "px":
											/* px acts as our midpoint in the unit conversion process; do nothing. */
											break;

										default:
											startValue *= elementUnitConversionData[startValueUnitType + "ToPx"];
									}

									/* Invert the px ratios to convert into to the target unit. */
									switch (endValueUnitType) {
										case "%":
											startValue *= 1 / (axis === "x" ? elementUnitConversionData.percentToPxWidth : elementUnitConversionData.percentToPxHeight);
											break;

										case "px":
											/* startValue is already in px, do nothing; we're done. */
											break;

										default:
											startValue *= 1 / elementUnitConversionData[endValueUnitType + "ToPx"];
									}
								}
							}

							/*********************
							 Relative Values
							 *********************/

							/* Operator logic must be performed last since it requires unit-normalized start and end values. */
							/* Note: Relative *percent values* do not behave how most people think; while one would expect "+=50%"
							 to increase the property 1.5x its current value, it in fact increases the percent units in absolute terms:
							 50 points is added on top of the current % value. */
							switch (operator) {
								case "+":
									endValue = startValue + endValue;
									break;

								case "-":
									endValue = startValue - endValue;
									break;

								case "*":
									endValue = startValue * endValue;
									break;

								case "/":
									endValue = startValue / endValue;
									break;
							}

							/**************************
							 tweensContainer Push
							 **************************/

							/* Construct the per-property tween object, and push it to the element's tweensContainer. */
							tweensContainer[property] = {
								rootPropertyValue: rootPropertyValue,
								startValue: startValue,
								currentValue: startValue,
								endValue: endValue,
								unitType: endValueUnitType,
								easing: easing
							};
							if (pattern) {
								tweensContainer[property].pattern = pattern;
							}

							if (Velocity.debug) {
								console.log("tweensContainer (" + property + "): " + JSON.stringify(tweensContainer[property]), element);
							}
						};

						/* Create a tween out of each property, and append its associated data to tweensContainer. */
						for (var property in propertiesMap) {

							if (!propertiesMap.hasOwnProperty(property)) {
								continue;
							}
							/* The original property name's format must be used for the parsePropertyValue() lookup,
							 but we then use its camelCase styling to normalize it for manipulation. */
							var propertyName = CSS.Names.camelCase(property),
									valueData = parsePropertyValue(propertiesMap[property]);

							/* Find shorthand color properties that have been passed a hex string. */
							/* Would be quicker to use CSS.Lists.colors.includes() if possible */
							if (_inArray(CSS.Lists.colors, propertyName)) {
								/* Parse the value data for each shorthand. */
								var endValue = valueData[0],
										easing = valueData[1],
										startValue = valueData[2];

								if (CSS.RegEx.isHex.test(endValue)) {
									/* Convert the hex strings into their RGB component arrays. */
									var colorComponents = ["Red", "Green", "Blue"],
											endValueRGB = CSS.Values.hexToRgb(endValue),
											startValueRGB = startValue ? CSS.Values.hexToRgb(startValue) : undefined;

									/* Inject the RGB component tweens into propertiesMap. */
									for (var i = 0; i < colorComponents.length; i++) {
										var dataArray = [endValueRGB[i]];

										if (easing) {
											dataArray.push(easing);
										}

										if (startValueRGB !== undefined) {
											dataArray.push(startValueRGB[i]);
										}

										fixPropertyValue(propertyName + colorComponents[i], dataArray);
									}
									/* If we have replaced a shortcut color value then don't update the standard property name */
									continue;
								}
							}
							fixPropertyValue(propertyName, valueData);
						}

						/* Along with its property data, store a reference to the element itself onto tweensContainer. */
						tweensContainer.element = element;
					}

					/*****************
					 Call Push
					 *****************/

					/* Note: tweensContainer can be empty if all of the properties in this call's property map were skipped due to not
					 being supported by the browser. The element property is used for checking that the tweensContainer has been appended to. */
					if (tweensContainer.element) {
						/* Apply the "velocity-animating" indicator class. */
						CSS.Values.addClass(element, "velocity-animating");

						/* The call array houses the tweensContainers for each element being animated in the current call. */
						call.push(tweensContainer);

						data = Data(element);

						if (data) {
							/* Store the tweensContainer and options if we're working on the default effects queue, so that they can be used by the reverse command. */
							if (opts.queue === "") {

								data.tweensContainer = tweensContainer;
								data.opts = opts;
							}

							/* Switch on the element's animating flag. */
							data.isAnimating = true;
						}

						/* Once the final element in this call's element set has been processed, push the call array onto
						 Velocity.State.calls for the animation tick to immediately begin processing. */
						if (elementsIndex === elementsLength - 1) {
							/* Add the current call plus its associated metadata (the element set and the call's options) onto the global call container.
							 Anything on this call container is subjected to tick() processing. */
							Velocity.State.calls.push([call, elements, opts, null, promiseData.resolver, null, 0]);

							/* If the animation tick isn't running, start it. (Velocity shuts it off when there are no active calls to process.) */
							if (Velocity.State.isTicking === false) {
								Velocity.State.isTicking = true;

								/* Start the tick loop. */
								tick();
							}
						} else {
							elementsIndex++;
						}
					}
				}

				/* When the queue option is set to false, the call skips the element's queue and fires immediately. */
				if (opts.queue === false) {
					/* Since this buildQueue call doesn't respect the element's existing queue (which is where a delay option would have been appended),
					 we manually inject the delay property here with an explicit setTimeout. */
					if (opts.delay) {

						/* Temporarily store delayed elements to facilitate access for global pause/resume */
						var callIndex = Velocity.State.delayedElements.count++;
						Velocity.State.delayedElements[callIndex] = element;

						var delayComplete = (function(index) {
							return function() {
								/* Clear the temporary element */
								Velocity.State.delayedElements[index] = false;

								/* Finally, issue the call */
								buildQueue();
							};
						})(callIndex);

						Data(element).delayBegin = (new Date()).getTime();
						Data(element).delay = parseFloat(opts.delay);
						Data(element).delayTimer = {
							setTimeout: setTimeout(buildQueue, parseFloat(opts.delay)),
							next: delayComplete
						};
					} else {
						buildQueue();
					}
					/* Otherwise, the call undergoes element queueing as normal. */
					/* Note: To interoperate with jQuery, Velocity uses jQuery's own $.queue() stack for queuing logic. */
				} else {
					$.queue(element, opts.queue, function(next, clearQueue) {
						/* If the clearQueue flag was passed in by the stop command, resolve this call's promise. (Promises can only be resolved once,
						 so it's fine if this is repeatedly triggered for each element in the associated call.) */
						if (clearQueue === true) {
							if (promiseData.promise) {
								promiseData.resolver(elements);
							}

							/* Do not continue with animation queueing. */
							return true;
						}

						/* This flag indicates to the upcoming completeCall() function that this queue entry was initiated by Velocity.
						 See completeCall() for further details. */
						Velocity.velocityQueueEntryFlag = true;

						buildQueue(next);
					});
				}

				/*********************
				 Auto-Dequeuing
				 *********************/

				/* As per jQuery's $.queue() behavior, to fire the first non-custom-queue entry on an element, the element
				 must be dequeued if its queue stack consists *solely* of the current call. (This can be determined by checking
				 for the "inprogress" item that jQuery prepends to active queue stack arrays.) Regardless, whenever the element's
				 queue is further appended with additional items -- including $.delay()'s or even $.animate() calls, the queue's
				 first entry is automatically fired. This behavior contrasts that of custom queues, which never auto-fire. */
				/* Note: When an element set is being subjected to a non-parallel Velocity call, the animation will not begin until
				 each one of the elements in the set has reached the end of its individually pre-existing queue chain. */
				/* Note: Unfortunately, most people don't fully grasp jQuery's powerful, yet quirky, $.queue() function.
				 Lean more here: http://stackoverflow.com/questions/1058158/can-somebody-explain-jquery-queue-to-me */
				if ((opts.queue === "" || opts.queue === "fx") && $.queue(element)[0] !== "inprogress") {
					$.dequeue(element);
				}
			}

			/**************************
			 Element Set Iteration
			 **************************/

			/* If the "nodeType" property exists on the elements variable, we're animating a single element.
			 Place it in an array so that $.each() can iterate over it. */
			$.each(elements, function(i, element) {
				/* Ensure each element in a set has a nodeType (is a real element) to avoid throwing errors. */
				if (Type.isNode(element)) {
					processElement(element, i);
				}
			});

			/******************
			 Option: Loop
			 ******************/

			/* The loop option accepts an integer indicating how many times the element should loop between the values in the
			 current call's properties map and the element's property values prior to this call. */
			/* Note: The loop option's logic is performed here -- after element processing -- because the current call needs
			 to undergo its queue insertion prior to the loop option generating its series of constituent "reverse" calls,
			 which chain after the current call. Two reverse calls (two "alternations") constitute one loop. */
			opts = $.extend({}, Velocity.defaults, options);
			opts.loop = parseInt(opts.loop, 10);
			var reverseCallsCount = (opts.loop * 2) - 1;

			if (opts.loop) {
				/* Double the loop count to convert it into its appropriate number of "reverse" calls.
				 Subtract 1 from the resulting value since the current call is included in the total alternation count. */
				for (var x = 0; x < reverseCallsCount; x++) {
					/* Since the logic for the reverse action occurs inside Queueing and therefore this call's options object
					 isn't parsed until then as well, the current call's delay option must be explicitly passed into the reverse
					 call so that the delay logic that occurs inside *Pre-Queueing* can process it. */
					var reverseOptions = {
						delay: opts.delay,
						progress: opts.progress
					};

					/* If a complete callback was passed into this call, transfer it to the loop redirect's final "reverse" call
					 so that it's triggered when the entire redirect is complete (and not when the very first animation is complete). */
					if (x === reverseCallsCount - 1) {
						reverseOptions.display = opts.display;
						reverseOptions.visibility = opts.visibility;
						reverseOptions.complete = opts.complete;
					}

					animate(elements, "reverse", reverseOptions);
				}
			}

			/***************
			 Chaining
			 ***************/

			/* Return the elements back to the call chain, with wrapped elements taking precedence in case Velocity was called via the $.fn. extension. */
			return getChain();
		};

		/* Turn Velocity into the animation function, extended with the pre-existing Velocity object. */
		Velocity = $.extend(animate, Velocity);
		/* For legacy support, also expose the literal animate method. */
		Velocity.animate = animate;

		/**************
		 Timing
		 **************/

		/* Ticker function. */
		var ticker = window.requestAnimationFrame || rAFShim;

		/* Inactive browser tabs pause rAF, which results in all active animations immediately sprinting to their completion states when the tab refocuses.
		 To get around this, we dynamically switch rAF to setTimeout (which the browser *doesn't* pause) when the tab loses focus. We skip this for mobile
		 devices to avoid wasting battery power on inactive tabs. */
		/* Note: Tab focus detection doesn't work on older versions of IE, but that's okay since they don't support rAF to begin with. */
		if (!Velocity.State.isMobile && document.hidden !== undefined) {
			var updateTicker = function() {
				/* Reassign the rAF function (which the global tick() function uses) based on the tab's focus state. */
				if (document.hidden) {
					ticker = function(callback) {
						/* The tick function needs a truthy first argument in order to pass its internal timestamp check. */
						return setTimeout(function() {
							callback(true);
						}, 16);
					};

					/* The rAF loop has been paused by the browser, so we manually restart the tick. */
					tick();
				} else {
					ticker = window.requestAnimationFrame || rAFShim;
				}
			};

			/* Page could be sitting in the background at this time (i.e. opened as new tab) so making sure we use correct ticker from the start */
			updateTicker();

			/* And then run check again every time visibility changes */
			document.addEventListener("visibilitychange", updateTicker);
		}

		/************
		 Tick
		 ************/

		/* Note: All calls to Velocity are pushed to the Velocity.State.calls array, which is fully iterated through upon each tick. */
		function tick(timestamp) {
			/* An empty timestamp argument indicates that this is the first tick occurence since ticking was turned on.
			 We leverage this metadata to fully ignore the first tick pass since RAF's initial pass is fired whenever
			 the browser's next tick sync time occurs, which results in the first elements subjected to Velocity
			 calls being animated out of sync with any elements animated immediately thereafter. In short, we ignore
			 the first RAF tick pass so that elements being immediately consecutively animated -- instead of simultaneously animated
			 by the same Velocity call -- are properly batched into the same initial RAF tick and consequently remain in sync thereafter. */
			if (timestamp) {
				/* We normally use RAF's high resolution timestamp but as it can be significantly offset when the browser is
				 under high stress we give the option for choppiness over allowing the browser to drop huge chunks of frames.
				 We use performance.now() and shim it if it doesn't exist for when the tab is hidden. */
				var timeCurrent = Velocity.timestamp && timestamp !== true ? timestamp : performance.now();

				/********************
				 Call Iteration
				 ********************/

				var callsLength = Velocity.State.calls.length;

				/* To speed up iterating over this array, it is compacted (falsey items -- calls that have completed -- are removed)
				 when its length has ballooned to a point that can impact tick performance. This only becomes necessary when animation
				 has been continuous with many elements over a long period of time; whenever all active calls are completed, completeCall() clears Velocity.State.calls. */
				if (callsLength > 10000) {
					Velocity.State.calls = compactSparseArray(Velocity.State.calls);
					callsLength = Velocity.State.calls.length;
				}

				/* Iterate through each active call. */
				for (var i = 0; i < callsLength; i++) {
					/* When a Velocity call is completed, its Velocity.State.calls entry is set to false. Continue on to the next call. */
					if (!Velocity.State.calls[i]) {
						continue;
					}

					/************************
					 Call-Wide Variables
					 ************************/

					var callContainer = Velocity.State.calls[i],
							call = callContainer[0],
							opts = callContainer[2],
							timeStart = callContainer[3],
							firstTick = !timeStart,
							tweenDummyValue = null,
							pauseObject = callContainer[5],
							millisecondsEllapsed = callContainer[6];



					/* If timeStart is undefined, then this is the first time that this call has been processed by tick().
					 We assign timeStart now so that its value is as close to the real animation start time as possible.
					 (Conversely, had timeStart been defined when this call was added to Velocity.State.calls, the delay
					 between that time and now would cause the first few frames of the tween to be skipped since
					 percentComplete is calculated relative to timeStart.) */
					/* Further, subtract 16ms (the approximate resolution of RAF) from the current time value so that the
					 first tick iteration isn't wasted by animating at 0% tween completion, which would produce the
					 same style value as the element's current value. */
					if (!timeStart) {
						timeStart = Velocity.State.calls[i][3] = timeCurrent - 16;
					}

					/* If a pause object is present, skip processing unless it has been set to resume */
					if (pauseObject) {
						if (pauseObject.resume === true) {
							/* Update the time start to accomodate the paused completion amount */
							timeStart = callContainer[3] = Math.round(timeCurrent - millisecondsEllapsed - 16);

							/* Remove pause object after processing */
							callContainer[5] = null;
						} else {
							continue;
						}
					}

					millisecondsEllapsed = callContainer[6] = timeCurrent - timeStart;

					/* The tween's completion percentage is relative to the tween's start time, not the tween's start value
					 (which would result in unpredictable tween durations since JavaScript's timers are not particularly accurate).
					 Accordingly, we ensure that percentComplete does not exceed 1. */
					var percentComplete = Math.min((millisecondsEllapsed) / opts.duration, 1);

					/**********************
					 Element Iteration
					 **********************/

					/* For every call, iterate through each of the elements in its set. */
					for (var j = 0, callLength = call.length; j < callLength; j++) {
						var tweensContainer = call[j],
								element = tweensContainer.element;

						/* Check to see if this element has been deleted midway through the animation by checking for the
						 continued existence of its data cache. If it's gone, or the element is currently paused, skip animating this element. */
						if (!Data(element)) {
							continue;
						}

						var transformPropertyExists = false;

						/**********************************
						 Display & Visibility Toggling
						 **********************************/

						/* If the display option is set to non-"none", set it upfront so that the element can become visible before tweening begins.
						 (Otherwise, display's "none" value is set in completeCall() once the animation has completed.) */
						if (opts.display !== undefined && opts.display !== null && opts.display !== "none") {
							if (opts.display === "flex") {
								var flexValues = ["-webkit-box", "-moz-box", "-ms-flexbox", "-webkit-flex"];

								$.each(flexValues, function(i, flexValue) {
									CSS.setPropertyValue(element, "display", flexValue);
								});
							}

							CSS.setPropertyValue(element, "display", opts.display);
						}

						/* Same goes with the visibility option, but its "none" equivalent is "hidden". */
						if (opts.visibility !== undefined && opts.visibility !== "hidden") {
							CSS.setPropertyValue(element, "visibility", opts.visibility);
						}

						/************************
						 Property Iteration
						 ************************/

						/* For every element, iterate through each property. */
						for (var property in tweensContainer) {
							/* Note: In addition to property tween data, tweensContainer contains a reference to its associated element. */
							if (tweensContainer.hasOwnProperty(property) && property !== "element") {
								var tween = tweensContainer[property],
										currentValue,
										/* Easing can either be a pre-genereated function or a string that references a pre-registered easing
										 on the Velocity.Easings object. In either case, return the appropriate easing *function*. */
										easing = Type.isString(tween.easing) ? Velocity.Easings[tween.easing] : tween.easing;

								/******************************
								 Current Value Calculation
								 ******************************/

								if (Type.isString(tween.pattern)) {
									var patternReplace = percentComplete === 1 ?
											function($0, index, round) {
												var result = tween.endValue[index];

												return round ? Math.round(result) : result;
											} :
											function($0, index, round) {
												var startValue = tween.startValue[index],
														tweenDelta = tween.endValue[index] - startValue,
														result = startValue + (tweenDelta * easing(percentComplete, opts, tweenDelta));

												return round ? Math.round(result) : result;
											};

									currentValue = tween.pattern.replace(/{(\d+)(!)?}/g, patternReplace);
								} else if (percentComplete === 1) {
									/* If this is the last tick pass (if we've reached 100% completion for this tween),
									 ensure that currentValue is explicitly set to its target endValue so that it's not subjected to any rounding. */
									currentValue = tween.endValue;
								} else {
									/* Otherwise, calculate currentValue based on the current delta from startValue. */
									var tweenDelta = tween.endValue - tween.startValue;

									currentValue = tween.startValue + (tweenDelta * easing(percentComplete, opts, tweenDelta));
									/* If no value change is occurring, don't proceed with DOM updating. */
								}
								if (!firstTick && (currentValue === tween.currentValue)) {
									continue;
								}

								tween.currentValue = currentValue;

								/* If we're tweening a fake 'tween' property in order to log transition values, update the one-per-call variable so that
								 it can be passed into the progress callback. */
								if (property === "tween") {
									tweenDummyValue = currentValue;
								} else {
									/******************
									 Hooks: Part I
									 ******************/
									var hookRoot;

									/* For hooked properties, the newly-updated rootPropertyValueCache is cached onto the element so that it can be used
									 for subsequent hooks in this call that are associated with the same root property. If we didn't cache the updated
									 rootPropertyValue, each subsequent update to the root property in this tick pass would reset the previous hook's
									 updates to rootPropertyValue prior to injection. A nice performance byproduct of rootPropertyValue caching is that
									 subsequently chained animations using the same hookRoot but a different hook can use this cached rootPropertyValue. */
									if (CSS.Hooks.registered[property]) {
										hookRoot = CSS.Hooks.getRoot(property);

										var rootPropertyValueCache = Data(element).rootPropertyValueCache[hookRoot];

										if (rootPropertyValueCache) {
											tween.rootPropertyValue = rootPropertyValueCache;
										}
									}

									/*****************
									 DOM Update
									 *****************/

									/* setPropertyValue() returns an array of the property name and property value post any normalization that may have been performed. */
									/* Note: To solve an IE<=8 positioning bug, the unit type is dropped when setting a property value of 0. */
									var adjustedSetData = CSS.setPropertyValue(element, /* SET */
											property,
											tween.currentValue + (IE < 9 && parseFloat(currentValue) === 0 ? "" : tween.unitType),
											tween.rootPropertyValue,
											tween.scrollData);

									/*******************
									 Hooks: Part II
									 *******************/

									/* Now that we have the hook's updated rootPropertyValue (the post-processed value provided by adjustedSetData), cache it onto the element. */
									if (CSS.Hooks.registered[property]) {
										/* Since adjustedSetData contains normalized data ready for DOM updating, the rootPropertyValue needs to be re-extracted from its normalized form. ?? */
										if (CSS.Normalizations.registered[hookRoot]) {
											Data(element).rootPropertyValueCache[hookRoot] = CSS.Normalizations.registered[hookRoot]("extract", null, adjustedSetData[1]);
										} else {
											Data(element).rootPropertyValueCache[hookRoot] = adjustedSetData[1];
										}
									}

									/***************
									 Transforms
									 ***************/

									/* Flag whether a transform property is being animated so that flushTransformCache() can be triggered once this tick pass is complete. */
									if (adjustedSetData[0] === "transform") {
										transformPropertyExists = true;
									}

								}
							}
						}

						/****************
						 mobileHA
						 ****************/

						/* If mobileHA is enabled, set the translate3d transform to null to force hardware acceleration.
						 It's safe to override this property since Velocity doesn't actually support its animation (hooks are used in its place). */
						if (opts.mobileHA) {
							/* Don't set the null transform hack if we've already done so. */
							if (Data(element).transformCache.translate3d === undefined) {
								/* All entries on the transformCache object are later concatenated into a single transform string via flushTransformCache(). */
								Data(element).transformCache.translate3d = "(0px, 0px, 0px)";

								transformPropertyExists = true;
							}
						}

						if (transformPropertyExists) {
							CSS.flushTransformCache(element);
						}
					}

					/* The non-"none" display value is only applied to an element once -- when its associated call is first ticked through.
					 Accordingly, it's set to false so that it isn't re-processed by this call in the next tick. */
					if (opts.display !== undefined && opts.display !== "none") {
						Velocity.State.calls[i][2].display = false;
					}
					if (opts.visibility !== undefined && opts.visibility !== "hidden") {
						Velocity.State.calls[i][2].visibility = false;
					}

					/* Pass the elements and the timing data (percentComplete, msRemaining, timeStart, tweenDummyValue) into the progress callback. */
					if (opts.progress) {
						opts.progress.call(callContainer[1],
								callContainer[1],
								percentComplete,
								Math.max(0, (timeStart + opts.duration) - timeCurrent),
								timeStart,
								tweenDummyValue);
					}

					/* If this call has finished tweening, pass its index to completeCall() to handle call cleanup. */
					if (percentComplete === 1) {
						completeCall(i);
					}
				}
			}

			/* Note: completeCall() sets the isTicking flag to false when the last call on Velocity.State.calls has completed. */
			if (Velocity.State.isTicking) {
				ticker(tick);
			}
		}

		/**********************
		 Call Completion
		 **********************/

		/* Note: Unlike tick(), which processes all active calls at once, call completion is handled on a per-call basis. */
		function completeCall(callIndex, isStopped) {
			/* Ensure the call exists. */
			if (!Velocity.State.calls[callIndex]) {
				return false;
			}

			/* Pull the metadata from the call. */
			var call = Velocity.State.calls[callIndex][0],
					elements = Velocity.State.calls[callIndex][1],
					opts = Velocity.State.calls[callIndex][2],
					resolver = Velocity.State.calls[callIndex][4];

			var remainingCallsExist = false;

			/*************************
			 Element Finalization
			 *************************/

			for (var i = 0, callLength = call.length; i < callLength; i++) {
				var element = call[i].element;

				/* If the user set display to "none" (intending to hide the element), set it now that the animation has completed. */
				/* Note: display:none isn't set when calls are manually stopped (via Velocity("stop"). */
				/* Note: Display gets ignored with "reverse" calls and infinite loops, since this behavior would be undesirable. */
				if (!isStopped && !opts.loop) {
					if (opts.display === "none") {
						CSS.setPropertyValue(element, "display", opts.display);
					}

					if (opts.visibility === "hidden") {
						CSS.setPropertyValue(element, "visibility", opts.visibility);
					}
				}

				/* If the element's queue is empty (if only the "inprogress" item is left at position 0) or if its queue is about to run
				 a non-Velocity-initiated entry, turn off the isAnimating flag. A non-Velocity-initiatied queue entry's logic might alter
				 an element's CSS values and thereby cause Velocity's cached value data to go stale. To detect if a queue entry was initiated by Velocity,
				 we check for the existence of our special Velocity.queueEntryFlag declaration, which minifiers won't rename since the flag
				 is assigned to jQuery's global $ object and thus exists out of Velocity's own scope. */
				var data = Data(element);

				if (opts.loop !== true && ($.queue(element)[1] === undefined || !/\.velocityQueueEntryFlag/i.test($.queue(element)[1]))) {
					/* The element may have been deleted. Ensure that its data cache still exists before acting on it. */
					if (data) {
						data.isAnimating = false;
						/* Clear the element's rootPropertyValueCache, which will become stale. */
						data.rootPropertyValueCache = {};

						var transformHAPropertyExists = false;
						/* If any 3D transform subproperty is at its default value (regardless of unit type), remove it. */
						$.each(CSS.Lists.transforms3D, function(i, transformName) {
							var defaultValue = /^scale/.test(transformName) ? 1 : 0,
									currentValue = data.transformCache[transformName];

							if (data.transformCache[transformName] !== undefined && new RegExp("^\\(" + defaultValue + "[^.]").test(currentValue)) {
								transformHAPropertyExists = true;

								delete data.transformCache[transformName];
							}
						});

						/* Mobile devices have hardware acceleration removed at the end of the animation in order to avoid hogging the GPU's memory. */
						if (opts.mobileHA) {
							transformHAPropertyExists = true;
							delete data.transformCache.translate3d;
						}

						/* Flush the subproperty removals to the DOM. */
						if (transformHAPropertyExists) {
							CSS.flushTransformCache(element);
						}

						/* Remove the "velocity-animating" indicator class. */
						CSS.Values.removeClass(element, "velocity-animating");
					}
				}

				/*********************
				 Option: Complete
				 *********************/

				/* Complete is fired once per call (not once per element) and is passed the full raw DOM element set as both its context and its first argument. */
				/* Note: Callbacks aren't fired when calls are manually stopped (via Velocity("stop"). */
				if (!isStopped && opts.complete && !opts.loop && (i === callLength - 1)) {
					/* We throw callbacks in a setTimeout so that thrown errors don't halt the execution of Velocity itself. */
					try {
						opts.complete.call(elements, elements);
					} catch (error) {
						setTimeout(function() {
							throw error;
						}, 1);
					}
				}

				/**********************
				 Promise Resolving
				 **********************/

				/* Note: Infinite loops don't return promises. */
				if (resolver && opts.loop !== true) {
					resolver(elements);
				}

				/****************************
				 Option: Loop (Infinite)
				 ****************************/

				if (data && opts.loop === true && !isStopped) {
					/* If a rotateX/Y/Z property is being animated by 360 deg with loop:true, swap tween start/end values to enable
					 continuous iterative rotation looping. (Otherise, the element would just rotate back and forth.) */
					$.each(data.tweensContainer, function(propertyName, tweenContainer) {
						if (/^rotate/.test(propertyName) && ((parseFloat(tweenContainer.startValue) - parseFloat(tweenContainer.endValue)) % 360 === 0)) {
							var oldStartValue = tweenContainer.startValue;

							tweenContainer.startValue = tweenContainer.endValue;
							tweenContainer.endValue = oldStartValue;
						}

						if (/^backgroundPosition/.test(propertyName) && parseFloat(tweenContainer.endValue) === 100 && tweenContainer.unitType === "%") {
							tweenContainer.endValue = 0;
							tweenContainer.startValue = 100;
						}
					});

					Velocity(element, "reverse", {loop: true, delay: opts.delay});
				}

				/***************
				 Dequeueing
				 ***************/

				/* Fire the next call in the queue so long as this call's queue wasn't set to false (to trigger a parallel animation),
				 which would have already caused the next call to fire. Note: Even if the end of the animation queue has been reached,
				 $.dequeue() must still be called in order to completely clear jQuery's animation queue. */
				if (opts.queue !== false) {
					$.dequeue(element, opts.queue);
				}
			}

			/************************
			 Calls Array Cleanup
			 ************************/

			/* Since this call is complete, set it to false so that the rAF tick skips it. This array is later compacted via compactSparseArray().
			 (For performance reasons, the call is set to false instead of being deleted from the array: http://www.html5rocks.com/en/tutorials/speed/v8/) */
			Velocity.State.calls[callIndex] = false;

			/* Iterate through the calls array to determine if this was the final in-progress animation.
			 If so, set a flag to end ticking and clear the calls array. */
			for (var j = 0, callsLength = Velocity.State.calls.length; j < callsLength; j++) {
				if (Velocity.State.calls[j] !== false) {
					remainingCallsExist = true;

					break;
				}
			}

			if (remainingCallsExist === false) {
				/* tick() will detect this flag upon its next iteration and subsequently turn itself off. */
				Velocity.State.isTicking = false;

				/* Clear the calls array so that its length is reset. */
				delete Velocity.State.calls;
				Velocity.State.calls = [];
			}
		}

		/******************
		 Frameworks
		 ******************/

		/* Both jQuery and Zepto allow their $.fn object to be extended to allow wrapped elements to be subjected to plugin calls.
		 If either framework is loaded, register a "velocity" extension pointing to Velocity's core animate() method.  Velocity
		 also registers itself onto a global container (window.jQuery || window.Zepto || window) so that certain features are
		 accessible beyond just a per-element scope. This master object contains an .animate() method, which is later assigned to $.fn
		 (if jQuery or Zepto are present). Accordingly, Velocity can both act on wrapped DOM elements and stand alone for targeting raw DOM elements. */
		global.Velocity = Velocity;

		if (global !== window) {
			/* Assign the element function to Velocity's core animate() method. */
			global.fn.velocity = animate;
			/* Assign the object function's defaults to Velocity's global defaults object. */
			global.fn.velocity.defaults = Velocity.defaults;
		}

		/***********************
		 Packaged Redirects
		 ***********************/

		/* slideUp, slideDown */
		$.each(["Down", "Up"], function(i, direction) {
			Velocity.Redirects["slide" + direction] = function(element, options, elementsIndex, elementsSize, elements, promiseData) {
				var opts = $.extend({}, options),
						begin = opts.begin,
						complete = opts.complete,
						inlineValues = {},
						computedValues = {height: "", marginTop: "", marginBottom: "", paddingTop: "", paddingBottom: ""};

				if (opts.display === undefined) {
					/* Show the element before slideDown begins and hide the element after slideUp completes. */
					/* Note: Inline elements cannot have dimensions animated, so they're reverted to inline-block. */
					opts.display = (direction === "Down" ? (Velocity.CSS.Values.getDisplayType(element) === "inline" ? "inline-block" : "block") : "none");
				}

				opts.begin = function() {
					/* If the user passed in a begin callback, fire it now. */
					if (elementsIndex === 0 && begin) {
						begin.call(elements, elements);
					}

					/* Cache the elements' original vertical dimensional property values so that we can animate back to them. */
					for (var property in computedValues) {
						if (!computedValues.hasOwnProperty(property)) {
							continue;
						}
						inlineValues[property] = element.style[property];

						/* For slideDown, use forcefeeding to animate all vertical properties from 0. For slideUp,
						 use forcefeeding to start from computed values and animate down to 0. */
						var propertyValue = CSS.getPropertyValue(element, property);
						computedValues[property] = (direction === "Down") ? [propertyValue, 0] : [0, propertyValue];
					}

					/* Force vertical overflow content to clip so that sliding works as expected. */
					inlineValues.overflow = element.style.overflow;
					element.style.overflow = "hidden";
				};

				opts.complete = function() {
					/* Reset element to its pre-slide inline values once its slide animation is complete. */
					for (var property in inlineValues) {
						if (inlineValues.hasOwnProperty(property)) {
							element.style[property] = inlineValues[property];
						}
					}

					/* If the user passed in a complete callback, fire it now. */
					if (elementsIndex === elementsSize - 1) {
						if (complete) {
							complete.call(elements, elements);
						}
						if (promiseData) {
							promiseData.resolver(elements);
						}
					}
				};

				Velocity(element, computedValues, opts);
			};
		});

		/* fadeIn, fadeOut */
		$.each(["In", "Out"], function(i, direction) {
			Velocity.Redirects["fade" + direction] = function(element, options, elementsIndex, elementsSize, elements, promiseData) {
				var opts = $.extend({}, options),
						complete = opts.complete,
						propertiesMap = {opacity: (direction === "In") ? 1 : 0};

				/* Since redirects are triggered individually for each element in the animated set, avoid repeatedly triggering
				 callbacks by firing them only when the final element has been reached. */
				if (elementsIndex !== 0) {
					opts.begin = null;
				}
				if (elementsIndex !== elementsSize - 1) {
					opts.complete = null;
				} else {
					opts.complete = function() {
						if (complete) {
							complete.call(elements, elements);
						}
						if (promiseData) {
							promiseData.resolver(elements);
						}
					};
				}

				/* If a display was passed in, use it. Otherwise, default to "none" for fadeOut or the element-specific default for fadeIn. */
				/* Note: We allow users to pass in "null" to skip display setting altogether. */
				if (opts.display === undefined) {
					opts.display = (direction === "In" ? "auto" : "none");
				}

				Velocity(this, propertiesMap, opts);
			};
		});

		return Velocity;
	}((window.jQuery || window.Zepto || window), window, (window ? window.document : undefined));
}));

/******************
 Known Issues
 ******************/

/* The CSS spec mandates that the translateX/Y/Z transforms are %-relative to the element itself -- not its parent.
 Velocity, however, doesn't make this distinction. Thus, converting to or from the % unit with these subproperties
 will produce an inaccurate conversion value. The same issue exists with the cx/cy attributes of SVG circles and ellipses. */

},{}],190:[function(require,module,exports){
/**********************
   Velocity UI Pack
**********************/

/* VelocityJS.org UI Pack (5.0.4). (C) 2014 Julian Shapiro. MIT @license: en.wikipedia.org/wiki/MIT_License. Portions copyright Daniel Eden, Christian Pucci. */

;(function (factory) {
    /* CommonJS module. */
    if (typeof require === "function" && typeof exports === "object" ) {
        module.exports = factory();
    /* AMD module. */
    } else if (typeof define === "function" && define.amd) {
        define([ "velocity" ], factory);
    /* Browser globals. */
    } else {
        factory();
    }
}(function() {
return function (global, window, document, undefined) {

    /*************
        Checks
    *************/

    if (!global.Velocity || !global.Velocity.Utilities) {
        window.console && console.log("Velocity UI Pack: Velocity must be loaded first. Aborting.");
        return;
    } else {
        var Velocity = global.Velocity,
            $ = Velocity.Utilities;
    }

    var velocityVersion = Velocity.version,
        requiredVersion = { major: 1, minor: 1, patch: 0 };

    function greaterSemver (primary, secondary) {
        var versionInts = [];

        if (!primary || !secondary) { return false; }

        $.each([ primary, secondary ], function(i, versionObject) {
            var versionIntsComponents = [];

            $.each(versionObject, function(component, value) {
                while (value.toString().length < 5) {
                    value = "0" + value;
                }
                versionIntsComponents.push(value);
            });

            versionInts.push(versionIntsComponents.join(""))
        });

        return (parseFloat(versionInts[0]) > parseFloat(versionInts[1]));
    }

    if (greaterSemver(requiredVersion, velocityVersion)){
        var abortError = "Velocity UI Pack: You need to update Velocity (jquery.velocity.js) to a newer version. Visit http://github.com/julianshapiro/velocity.";
        alert(abortError);
        throw new Error(abortError);
    }

    /************************
       Effect Registration
    ************************/

    /* Note: RegisterUI is a legacy name. */
    Velocity.RegisterEffect = Velocity.RegisterUI = function (effectName, properties) {
        /* Animate the expansion/contraction of the elements' parent's height for In/Out effects. */
        function animateParentHeight (elements, direction, totalDuration, stagger) {
            var totalHeightDelta = 0,
                parentNode;

            /* Sum the total height (including padding and margin) of all targeted elements. */
            $.each(elements.nodeType ? [ elements ] : elements, function(i, element) {
                if (stagger) {
                    /* Increase the totalDuration by the successive delay amounts produced by the stagger option. */
                    totalDuration += i * stagger;
                }

                parentNode = element.parentNode;

                $.each([ "height", "paddingTop", "paddingBottom", "marginTop", "marginBottom"], function(i, property) {
                    totalHeightDelta += parseFloat(Velocity.CSS.getPropertyValue(element, property));
                });
            });

            /* Animate the parent element's height adjustment (with a varying duration multiplier for aesthetic benefits). */
            Velocity.animate(
                parentNode,
                { height: (direction === "In" ? "+" : "-") + "=" + totalHeightDelta },
                { queue: false, easing: "ease-in-out", duration: totalDuration * (direction === "In" ? 0.6 : 1) }
            );
        }

        /* Register a custom redirect for each effect. */
        Velocity.Redirects[effectName] = function (element, redirectOptions, elementsIndex, elementsSize, elements, promiseData) {
            var finalElement = (elementsIndex === elementsSize - 1);

            if (typeof properties.defaultDuration === "function") {
                properties.defaultDuration = properties.defaultDuration.call(elements, elements);
            } else {
                properties.defaultDuration = parseFloat(properties.defaultDuration);
            }

            /* Iterate through each effect's call array. */
            for (var callIndex = 0; callIndex < properties.calls.length; callIndex++) {
                var call = properties.calls[callIndex],
                    propertyMap = call[0],
                    redirectDuration = (redirectOptions.duration || properties.defaultDuration || 1000),
                    durationPercentage = call[1],
                    callOptions = call[2] || {},
                    opts = {};

                /* Assign the whitelisted per-call options. */
                opts.duration = redirectDuration * (durationPercentage || 1);
                opts.queue = redirectOptions.queue || "";
                opts.easing = callOptions.easing || "ease";
                opts.delay = parseFloat(callOptions.delay) || 0;
                opts._cacheValues = callOptions._cacheValues || true;

                /* Special processing for the first effect call. */
                if (callIndex === 0) {
                    /* If a delay was passed into the redirect, combine it with the first call's delay. */
                    opts.delay += (parseFloat(redirectOptions.delay) || 0);

                    if (elementsIndex === 0) {
                        opts.begin = function() {
                            /* Only trigger a begin callback on the first effect call with the first element in the set. */
                            redirectOptions.begin && redirectOptions.begin.call(elements, elements);

                            var direction = effectName.match(/(In|Out)$/);

                            /* Make "in" transitioning elements invisible immediately so that there's no FOUC between now
                               and the first RAF tick. */
                            if ((direction && direction[0] === "In") && propertyMap.opacity !== undefined) {
                                $.each(elements.nodeType ? [ elements ] : elements, function(i, element) {
                                    Velocity.CSS.setPropertyValue(element, "opacity", 0);
                                });
                            }

                            /* Only trigger animateParentHeight() if we're using an In/Out transition. */
                            if (redirectOptions.animateParentHeight && direction) {
                                animateParentHeight(elements, direction[0], redirectDuration + opts.delay, redirectOptions.stagger);
                            }
                        }
                    }

                    /* If the user isn't overriding the display option, default to "auto" for "In"-suffixed transitions. */
                    if (redirectOptions.display !== null) {
                        if (redirectOptions.display !== undefined && redirectOptions.display !== "none") {
                            opts.display = redirectOptions.display;
                        } else if (/In$/.test(effectName)) {
                            /* Inline elements cannot be subjected to transforms, so we switch them to inline-block. */
                            var defaultDisplay = Velocity.CSS.Values.getDisplayType(element);
                            opts.display = (defaultDisplay === "inline") ? "inline-block" : defaultDisplay;
                        }
                    }

                    if (redirectOptions.visibility && redirectOptions.visibility !== "hidden") {
                        opts.visibility = redirectOptions.visibility;
                    }
                }

                /* Special processing for the last effect call. */
                if (callIndex === properties.calls.length - 1) {
                    /* Append promise resolving onto the user's redirect callback. */
                    function injectFinalCallbacks () {
                        if ((redirectOptions.display === undefined || redirectOptions.display === "none") && /Out$/.test(effectName)) {
                            $.each(elements.nodeType ? [ elements ] : elements, function(i, element) {
                                Velocity.CSS.setPropertyValue(element, "display", "none");
                            });
                        }

                        redirectOptions.complete && redirectOptions.complete.call(elements, elements);

                        if (promiseData) {
                            promiseData.resolver(elements || element);
                        }
                    }

                    opts.complete = function() {
                        if (properties.reset) {
                            for (var resetProperty in properties.reset) {
                                var resetValue = properties.reset[resetProperty];

                                /* Format each non-array value in the reset property map to [ value, value ] so that changes apply
                                   immediately and DOM querying is avoided (via forcefeeding). */
                                /* Note: Don't forcefeed hooks, otherwise their hook roots will be defaulted to their null values. */
                                if (Velocity.CSS.Hooks.registered[resetProperty] === undefined && (typeof resetValue === "string" || typeof resetValue === "number")) {
                                    properties.reset[resetProperty] = [ properties.reset[resetProperty], properties.reset[resetProperty] ];
                                }
                            }

                            /* So that the reset values are applied instantly upon the next rAF tick, use a zero duration and parallel queueing. */
                            var resetOptions = { duration: 0, queue: false };

                            /* Since the reset option uses up the complete callback, we trigger the user's complete callback at the end of ours. */
                            if (finalElement) {
                                resetOptions.complete = injectFinalCallbacks;
                            }

                            Velocity.animate(element, properties.reset, resetOptions);
                        /* Only trigger the user's complete callback on the last effect call with the last element in the set. */
                        } else if (finalElement) {
                            injectFinalCallbacks();
                        }
                    };

                    if (redirectOptions.visibility === "hidden") {
                        opts.visibility = redirectOptions.visibility;
                    }
                }

                Velocity.animate(element, propertyMap, opts);
            }
        };

        /* Return the Velocity object so that RegisterUI calls can be chained. */
        return Velocity;
    };

    /*********************
       Packaged Effects
    *********************/

    /* Externalize the packagedEffects data so that they can optionally be modified and re-registered. */
    /* Support: <=IE8: Callouts will have no effect, and transitions will simply fade in/out. IE9/Android 2.3: Most effects are fully supported, the rest fade in/out. All other browsers: full support. */
    Velocity.RegisterEffect.packagedEffects =
        {
            /* Animate.css */
            "callout.bounce": {
                defaultDuration: 550,
                calls: [
                    [ { translateY: -30 }, 0.25 ],
                    [ { translateY: 0 }, 0.125 ],
                    [ { translateY: -15 }, 0.125 ],
                    [ { translateY: 0 }, 0.25 ]
                ]
            },
            /* Animate.css */
            "callout.shake": {
                defaultDuration: 800,
                calls: [
                    [ { translateX: -11 }, 0.125 ],
                    [ { translateX: 11 }, 0.125 ],
                    [ { translateX: -11 }, 0.125 ],
                    [ { translateX: 11 }, 0.125 ],
                    [ { translateX: -11 }, 0.125 ],
                    [ { translateX: 11 }, 0.125 ],
                    [ { translateX: -11 }, 0.125 ],
                    [ { translateX: 0 }, 0.125 ]
                ]
            },
            /* Animate.css */
            "callout.flash": {
                defaultDuration: 1100,
                calls: [
                    [ { opacity: [ 0, "easeInOutQuad", 1 ] }, 0.25 ],
                    [ { opacity: [ 1, "easeInOutQuad" ] }, 0.25 ],
                    [ { opacity: [ 0, "easeInOutQuad" ] }, 0.25 ],
                    [ { opacity: [ 1, "easeInOutQuad" ] }, 0.25 ]
                ]
            },
            /* Animate.css */
            "callout.pulse": {
                defaultDuration: 825,
                calls: [
                    [ { scaleX: 1.1, scaleY: 1.1 }, 0.50, { easing: "easeInExpo" } ],
                    [ { scaleX: 1, scaleY: 1 }, 0.50 ]
                ]
            },
            /* Animate.css */
            "callout.swing": {
                defaultDuration: 950,
                calls: [
                    [ { rotateZ: 15 }, 0.20 ],
                    [ { rotateZ: -10 }, 0.20 ],
                    [ { rotateZ: 5 }, 0.20 ],
                    [ { rotateZ: -5 }, 0.20 ],
                    [ { rotateZ: 0 }, 0.20 ]
                ]
            },
            /* Animate.css */
            "callout.tada": {
                defaultDuration: 1000,
                calls: [
                    [ { scaleX: 0.9, scaleY: 0.9, rotateZ: -3 }, 0.10 ],
                    [ { scaleX: 1.1, scaleY: 1.1, rotateZ: 3 }, 0.10 ],
                    [ { scaleX: 1.1, scaleY: 1.1, rotateZ: -3 }, 0.10 ],
                    [ "reverse", 0.125 ],
                    [ "reverse", 0.125 ],
                    [ "reverse", 0.125 ],
                    [ "reverse", 0.125 ],
                    [ "reverse", 0.125 ],
                    [ { scaleX: 1, scaleY: 1, rotateZ: 0 }, 0.20 ]
                ]
            },
            "transition.fadeIn": {
                defaultDuration: 500,
                calls: [
                    [ { opacity: [ 1, 0 ] } ]
                ]
            },
            "transition.fadeOut": {
                defaultDuration: 500,
                calls: [
                    [ { opacity: [ 0, 1 ] } ]
                ]
            },
            /* Support: Loses rotation in IE9/Android 2.3 (fades only). */
            "transition.flipXIn": {
                defaultDuration: 700,
                calls: [
                    [ { opacity: [ 1, 0 ], transformPerspective: [ 800, 800 ], rotateY: [ 0, -55 ] } ]
                ],
                reset: { transformPerspective: 0 }
            },
            /* Support: Loses rotation in IE9/Android 2.3 (fades only). */
            "transition.flipXOut": {
                defaultDuration: 700,
                calls: [
                    [ { opacity: [ 0, 1 ], transformPerspective: [ 800, 800 ], rotateY: 55 } ]
                ],
                reset: { transformPerspective: 0, rotateY: 0 }
            },
            /* Support: Loses rotation in IE9/Android 2.3 (fades only). */
            "transition.flipYIn": {
                defaultDuration: 800,
                calls: [
                    [ { opacity: [ 1, 0 ], transformPerspective: [ 800, 800 ], rotateX: [ 0, -45 ] } ]
                ],
                reset: { transformPerspective: 0 }
            },
            /* Support: Loses rotation in IE9/Android 2.3 (fades only). */
            "transition.flipYOut": {
                defaultDuration: 800,
                calls: [
                    [ { opacity: [ 0, 1 ], transformPerspective: [ 800, 800 ], rotateX: 25 } ]
                ],
                reset: { transformPerspective: 0, rotateX: 0 }
            },
            /* Animate.css */
            /* Support: Loses rotation in IE9/Android 2.3 (fades only). */
            "transition.flipBounceXIn": {
                defaultDuration: 900,
                calls: [
                    [ { opacity: [ 0.725, 0 ], transformPerspective: [ 400, 400 ], rotateY: [ -10, 90 ] }, 0.50 ],
                    [ { opacity: 0.80, rotateY: 10 }, 0.25 ],
                    [ { opacity: 1, rotateY: 0 }, 0.25 ]
                ],
                reset: { transformPerspective: 0 }
            },
            /* Animate.css */
            /* Support: Loses rotation in IE9/Android 2.3 (fades only). */
            "transition.flipBounceXOut": {
                defaultDuration: 800,
                calls: [
                    [ { opacity: [ 0.9, 1 ], transformPerspective: [ 400, 400 ], rotateY: -10 }, 0.50 ],
                    [ { opacity: 0, rotateY: 90 }, 0.50 ]
                ],
                reset: { transformPerspective: 0, rotateY: 0 }
            },
            /* Animate.css */
            /* Support: Loses rotation in IE9/Android 2.3 (fades only). */
            "transition.flipBounceYIn": {
                defaultDuration: 850,
                calls: [
                    [ { opacity: [ 0.725, 0 ], transformPerspective: [ 400, 400 ], rotateX: [ -10, 90 ] }, 0.50 ],
                    [ { opacity: 0.80, rotateX: 10 }, 0.25 ],
                    [ { opacity: 1, rotateX: 0 }, 0.25 ]
                ],
                reset: { transformPerspective: 0 }
            },
            /* Animate.css */
            /* Support: Loses rotation in IE9/Android 2.3 (fades only). */
            "transition.flipBounceYOut": {
                defaultDuration: 800,
                calls: [
                    [ { opacity: [ 0.9, 1 ], transformPerspective: [ 400, 400 ], rotateX: -15 }, 0.50 ],
                    [ { opacity: 0, rotateX: 90 }, 0.50 ]
                ],
                reset: { transformPerspective: 0, rotateX: 0 }
            },
            /* Magic.css */
            "transition.swoopIn": {
                defaultDuration: 850,
                calls: [
                    [ { opacity: [ 1, 0 ], transformOriginX: [ "100%", "50%" ], transformOriginY: [ "100%", "100%" ], scaleX: [ 1, 0 ], scaleY: [ 1, 0 ], translateX: [ 0, -700 ], translateZ: 0 } ]
                ],
                reset: { transformOriginX: "50%", transformOriginY: "50%" }
            },
            /* Magic.css */
            "transition.swoopOut": {
                defaultDuration: 850,
                calls: [
                    [ { opacity: [ 0, 1 ], transformOriginX: [ "50%", "100%" ], transformOriginY: [ "100%", "100%" ], scaleX: 0, scaleY: 0, translateX: -700, translateZ: 0 } ]
                ],
                reset: { transformOriginX: "50%", transformOriginY: "50%", scaleX: 1, scaleY: 1, translateX: 0 }
            },
            /* Magic.css */
            /* Support: Loses rotation in IE9/Android 2.3. (Fades and scales only.) */
            "transition.whirlIn": {
                defaultDuration: 850,
                calls: [
                    [ { opacity: [ 1, 0 ], transformOriginX: [ "50%", "50%" ], transformOriginY: [ "50%", "50%" ], scaleX: [ 1, 0 ], scaleY: [ 1, 0 ], rotateY: [ 0, 160 ] }, 1, { easing: "easeInOutSine" } ]
                ]
            },
            /* Magic.css */
            /* Support: Loses rotation in IE9/Android 2.3. (Fades and scales only.) */
            "transition.whirlOut": {
                defaultDuration: 750,
                calls: [
                    [ { opacity: [ 0, "easeInOutQuint", 1 ], transformOriginX: [ "50%", "50%" ], transformOriginY: [ "50%", "50%" ], scaleX: 0, scaleY: 0, rotateY: 160 }, 1, { easing: "swing" } ]
                ],
                reset: { scaleX: 1, scaleY: 1, rotateY: 0 }
            },
            "transition.shrinkIn": {
                defaultDuration: 750,
                calls: [
                    [ { opacity: [ 1, 0 ], transformOriginX: [ "50%", "50%" ], transformOriginY: [ "50%", "50%" ], scaleX: [ 1, 1.5 ], scaleY: [ 1, 1.5 ], translateZ: 0 } ]
                ]
            },
            "transition.shrinkOut": {
                defaultDuration: 600,
                calls: [
                    [ { opacity: [ 0, 1 ], transformOriginX: [ "50%", "50%" ], transformOriginY: [ "50%", "50%" ], scaleX: 1.3, scaleY: 1.3, translateZ: 0 } ]
                ],
                reset: { scaleX: 1, scaleY: 1 }
            },
            "transition.expandIn": {
                defaultDuration: 700,
                calls: [
                    [ { opacity: [ 1, 0 ], transformOriginX: [ "50%", "50%" ], transformOriginY: [ "50%", "50%" ], scaleX: [ 1, 0.625 ], scaleY: [ 1, 0.625 ], translateZ: 0 } ]
                ]
            },
            "transition.expandOut": {
                defaultDuration: 700,
                calls: [
                    [ { opacity: [ 0, 1 ], transformOriginX: [ "50%", "50%" ], transformOriginY: [ "50%", "50%" ], scaleX: 0.5, scaleY: 0.5, translateZ: 0 } ]
                ],
                reset: { scaleX: 1, scaleY: 1 }
            },
            /* Animate.css */
            "transition.bounceIn": {
                defaultDuration: 800,
                calls: [
                    [ { opacity: [ 1, 0 ], scaleX: [ 1.05, 0.3 ], scaleY: [ 1.05, 0.3 ] }, 0.40 ],
                    [ { scaleX: 0.9, scaleY: 0.9, translateZ: 0 }, 0.20 ],
                    [ { scaleX: 1, scaleY: 1 }, 0.50 ]
                ]
            },
            /* Animate.css */
            "transition.bounceOut": {
                defaultDuration: 800,
                calls: [
                    [ { scaleX: 0.95, scaleY: 0.95 }, 0.35 ],
                    [ { scaleX: 1.1, scaleY: 1.1, translateZ: 0 }, 0.35 ],
                    [ { opacity: [ 0, 1 ], scaleX: 0.3, scaleY: 0.3 }, 0.30 ]
                ],
                reset: { scaleX: 1, scaleY: 1 }
            },
            /* Animate.css */
            "transition.bounceUpIn": {
                defaultDuration: 800,
                calls: [
                    [ { opacity: [ 1, 0 ], translateY: [ -30, 1000 ] }, 0.60, { easing: "easeOutCirc" } ],
                    [ { translateY: 10 }, 0.20 ],
                    [ { translateY: 0 }, 0.20 ]
                ]
            },
            /* Animate.css */
            "transition.bounceUpOut": {
                defaultDuration: 1000,
                calls: [
                    [ { translateY: 20 }, 0.20 ],
                    [ { opacity: [ 0, "easeInCirc", 1 ], translateY: -1000 }, 0.80 ]
                ],
                reset: { translateY: 0 }
            },
            /* Animate.css */
            "transition.bounceDownIn": {
                defaultDuration: 800,
                calls: [
                    [ { opacity: [ 1, 0 ], translateY: [ 30, -1000 ] }, 0.60, { easing: "easeOutCirc" } ],
                    [ { translateY: -10 }, 0.20 ],
                    [ { translateY: 0 }, 0.20 ]
                ]
            },
            /* Animate.css */
            "transition.bounceDownOut": {
                defaultDuration: 1000,
                calls: [
                    [ { translateY: -20 }, 0.20 ],
                    [ { opacity: [ 0, "easeInCirc", 1 ], translateY: 1000 }, 0.80 ]
                ],
                reset: { translateY: 0 }
            },
            /* Animate.css */
            "transition.bounceLeftIn": {
                defaultDuration: 750,
                calls: [
                    [ { opacity: [ 1, 0 ], translateX: [ 30, -1250 ] }, 0.60, { easing: "easeOutCirc" } ],
                    [ { translateX: -10 }, 0.20 ],
                    [ { translateX: 0 }, 0.20 ]
                ]
            },
            /* Animate.css */
            "transition.bounceLeftOut": {
                defaultDuration: 750,
                calls: [
                    [ { translateX: 30 }, 0.20 ],
                    [ { opacity: [ 0, "easeInCirc", 1 ], translateX: -1250 }, 0.80 ]
                ],
                reset: { translateX: 0 }
            },
            /* Animate.css */
            "transition.bounceRightIn": {
                defaultDuration: 750,
                calls: [
                    [ { opacity: [ 1, 0 ], translateX: [ -30, 1250 ] }, 0.60, { easing: "easeOutCirc" } ],
                    [ { translateX: 10 }, 0.20 ],
                    [ { translateX: 0 }, 0.20 ]
                ]
            },
            /* Animate.css */
            "transition.bounceRightOut": {
                defaultDuration: 750,
                calls: [
                    [ { translateX: -30 }, 0.20 ],
                    [ { opacity: [ 0, "easeInCirc", 1 ], translateX: 1250 }, 0.80 ]
                ],
                reset: { translateX: 0 }
            },
            "transition.slideUpIn": {
                defaultDuration: 900,
                calls: [
                    [ { opacity: [ 1, 0 ], translateY: [ 0, 20 ], translateZ: 0 } ]
                ]
            },
            "transition.slideUpOut": {
                defaultDuration: 900,
                calls: [
                    [ { opacity: [ 0, 1 ], translateY: -20, translateZ: 0 } ]
                ],
                reset: { translateY: 0 }
            },
            "transition.slideDownIn": {
                defaultDuration: 900,
                calls: [
                    [ { opacity: [ 1, 0 ], translateY: [ 0, -20 ], translateZ: 0 } ]
                ]
            },
            "transition.slideDownOut": {
                defaultDuration: 900,
                calls: [
                    [ { opacity: [ 0, 1 ], translateY: 20, translateZ: 0 } ]
                ],
                reset: { translateY: 0 }
            },
            "transition.slideLeftIn": {
                defaultDuration: 1000,
                calls: [
                    [ { opacity: [ 1, 0 ], translateX: [ 0, -20 ], translateZ: 0 } ]
                ]
            },
            "transition.slideLeftOut": {
                defaultDuration: 1050,
                calls: [
                    [ { opacity: [ 0, 1 ], translateX: -20, translateZ: 0 } ]
                ],
                reset: { translateX: 0 }
            },
            "transition.slideRightIn": {
                defaultDuration: 1000,
                calls: [
                    [ { opacity: [ 1, 0 ], translateX: [ 0, 20 ], translateZ: 0 } ]
                ]
            },
            "transition.slideRightOut": {
                defaultDuration: 1050,
                calls: [
                    [ { opacity: [ 0, 1 ], translateX: 20, translateZ: 0 } ]
                ],
                reset: { translateX: 0 }
            },
            "transition.slideUpBigIn": {
                defaultDuration: 850,
                calls: [
                    [ { opacity: [ 1, 0 ], translateY: [ 0, 75 ], translateZ: 0 } ]
                ]
            },
            "transition.slideUpBigOut": {
                defaultDuration: 800,
                calls: [
                    [ { opacity: [ 0, 1 ], translateY: -75, translateZ: 0 } ]
                ],
                reset: { translateY: 0 }
            },
            "transition.slideDownBigIn": {
                defaultDuration: 850,
                calls: [
                    [ { opacity: [ 1, 0 ], translateY: [ 0, -75 ], translateZ: 0 } ]
                ]
            },
            "transition.slideDownBigOut": {
                defaultDuration: 800,
                calls: [
                    [ { opacity: [ 0, 1 ], translateY: 75, translateZ: 0 } ]
                ],
                reset: { translateY: 0 }
            },
            "transition.slideLeftBigIn": {
                defaultDuration: 800,
                calls: [
                    [ { opacity: [ 1, 0 ], translateX: [ 0, -75 ], translateZ: 0 } ]
                ]
            },
            "transition.slideLeftBigOut": {
                defaultDuration: 750,
                calls: [
                    [ { opacity: [ 0, 1 ], translateX: -75, translateZ: 0 } ]
                ],
                reset: { translateX: 0 }
            },
            "transition.slideRightBigIn": {
                defaultDuration: 800,
                calls: [
                    [ { opacity: [ 1, 0 ], translateX: [ 0, 75 ], translateZ: 0 } ]
                ]
            },
            "transition.slideRightBigOut": {
                defaultDuration: 750,
                calls: [
                    [ { opacity: [ 0, 1 ], translateX: 75, translateZ: 0 } ]
                ],
                reset: { translateX: 0 }
            },
            /* Magic.css */
            "transition.perspectiveUpIn": {
                defaultDuration: 800,
                calls: [
                    [ { opacity: [ 1, 0 ], transformPerspective: [ 800, 800 ], transformOriginX: [ 0, 0 ], transformOriginY: [ "100%", "100%" ], rotateX: [ 0, -180 ] } ]
                ],
                reset: { transformPerspective: 0, transformOriginX: "50%", transformOriginY: "50%" }
            },
            /* Magic.css */
            /* Support: Loses rotation in IE9/Android 2.3 (fades only). */
            "transition.perspectiveUpOut": {
                defaultDuration: 850,
                calls: [
                    [ { opacity: [ 0, 1 ], transformPerspective: [ 800, 800 ], transformOriginX: [ 0, 0 ], transformOriginY: [ "100%", "100%" ], rotateX: -180 } ]
                ],
                reset: { transformPerspective: 0, transformOriginX: "50%", transformOriginY: "50%", rotateX: 0 }
            },
            /* Magic.css */
            /* Support: Loses rotation in IE9/Android 2.3 (fades only). */
            "transition.perspectiveDownIn": {
                defaultDuration: 800,
                calls: [
                    [ { opacity: [ 1, 0 ], transformPerspective: [ 800, 800 ], transformOriginX: [ 0, 0 ], transformOriginY: [ 0, 0 ], rotateX: [ 0, 180 ] } ]
                ],
                reset: { transformPerspective: 0, transformOriginX: "50%", transformOriginY: "50%" }
            },
            /* Magic.css */
            /* Support: Loses rotation in IE9/Android 2.3 (fades only). */
            "transition.perspectiveDownOut": {
                defaultDuration: 850,
                calls: [
                    [ { opacity: [ 0, 1 ], transformPerspective: [ 800, 800 ], transformOriginX: [ 0, 0 ], transformOriginY: [ 0, 0 ], rotateX: 180 } ]
                ],
                reset: { transformPerspective: 0, transformOriginX: "50%", transformOriginY: "50%", rotateX: 0 }
            },
            /* Magic.css */
            /* Support: Loses rotation in IE9/Android 2.3 (fades only). */
            "transition.perspectiveLeftIn": {
                defaultDuration: 950,
                calls: [
                    [ { opacity: [ 1, 0 ], transformPerspective: [ 2000, 2000 ], transformOriginX: [ 0, 0 ], transformOriginY: [ 0, 0 ], rotateY: [ 0, -180 ] } ]
                ],
                reset: { transformPerspective: 0, transformOriginX: "50%", transformOriginY: "50%" }
            },
            /* Magic.css */
            /* Support: Loses rotation in IE9/Android 2.3 (fades only). */
            "transition.perspectiveLeftOut": {
                defaultDuration: 950,
                calls: [
                    [ { opacity: [ 0, 1 ], transformPerspective: [ 2000, 2000 ], transformOriginX: [ 0, 0 ], transformOriginY: [ 0, 0 ], rotateY: -180 } ]
                ],
                reset: { transformPerspective: 0, transformOriginX: "50%", transformOriginY: "50%", rotateY: 0 }
            },
            /* Magic.css */
            /* Support: Loses rotation in IE9/Android 2.3 (fades only). */
            "transition.perspectiveRightIn": {
                defaultDuration: 950,
                calls: [
                    [ { opacity: [ 1, 0 ], transformPerspective: [ 2000, 2000 ], transformOriginX: [ "100%", "100%" ], transformOriginY: [ 0, 0 ], rotateY: [ 0, 180 ] } ]
                ],
                reset: { transformPerspective: 0, transformOriginX: "50%", transformOriginY: "50%" }
            },
            /* Magic.css */
            /* Support: Loses rotation in IE9/Android 2.3 (fades only). */
            "transition.perspectiveRightOut": {
                defaultDuration: 950,
                calls: [
                    [ { opacity: [ 0, 1 ], transformPerspective: [ 2000, 2000 ], transformOriginX: [ "100%", "100%" ], transformOriginY: [ 0, 0 ], rotateY: 180 } ]
                ],
                reset: { transformPerspective: 0, transformOriginX: "50%", transformOriginY: "50%", rotateY: 0 }
            }
        };

    /* Register the packaged effects. */
    for (var effectName in Velocity.RegisterEffect.packagedEffects) {
        Velocity.RegisterEffect(effectName, Velocity.RegisterEffect.packagedEffects[effectName]);
    }

    /*********************
       Sequence Running
    **********************/

    /* Note: Sequence calls must use Velocity's single-object arguments syntax. */
    Velocity.RunSequence = function (originalSequence) {
        var sequence = $.extend(true, [], originalSequence);

        if (sequence.length > 1) {
            $.each(sequence.reverse(), function(i, currentCall) {
                var nextCall = sequence[i + 1];

                if (nextCall) {
                    /* Parallel sequence calls (indicated via sequenceQueue:false) are triggered
                       in the previous call's begin callback. Otherwise, chained calls are normally triggered
                       in the previous call's complete callback. */
                    var currentCallOptions = currentCall.o || currentCall.options,
                        nextCallOptions = nextCall.o || nextCall.options;

                    var timing = (currentCallOptions && currentCallOptions.sequenceQueue === false) ? "begin" : "complete",
                        callbackOriginal = nextCallOptions && nextCallOptions[timing],
                        options = {};

                    options[timing] = function() {
                        var nextCallElements = nextCall.e || nextCall.elements;
                        var elements = nextCallElements.nodeType ? [ nextCallElements ] : nextCallElements;

                        callbackOriginal && callbackOriginal.call(elements, elements);
                        Velocity(currentCall);
                    }

                    if (nextCall.o) {
                        nextCall.o = $.extend({}, nextCallOptions, options);
                    } else {
                        nextCall.options = $.extend({}, nextCallOptions, options);
                    }
                }
            });

            sequence.reverse();
        }

        Velocity(sequence[0]);
    };
}((window.jQuery || window.Zepto || window), window, document);
}));
},{}]},{},[4]);
